 uri "http://sadl.org/Exploratory.sadl" alias explore.
 
// BBN is a type of ^Equation.
 DBN is a class.
 
 External testMrveq(int x, float y) returns string, float: "http://sadl.org/mrveq".
 External unitResolver(string u, ...) returns string: "http://sadl.org/unitSelector". 
 External derivative(ScientificConcept numerator, ScientificConcept denominator, int n) returns decimal: "http://sadl.org/derivative".
 
 testMrveq is a DBN.
 
 DefaultRule is a type of ^Rule.
 
 Rule testRule: if x is a DBN then print(x).

 Mass is a type of UnittedQuantity.
 Velocity is a type of UnittedQuantity.
 Momentum is a type of UnittedQuantity.
 Acceleration is a type of UnittedQuantity.
 Force is a type of UnittedQuantity.
 Time is a type of UnittedQuantity.
 
 Equation newtons2ndLaw 
 	(note "Force is equal to the derivative of momentum with respect to time.") 
 	(Mass m, Velocity v) returns Force: 
 	a Force f with ^value (derivative(mv, Time, 1)), with unit unitResolver("/", unit of mv, Time)
 	
 	return f
 	
 	where mv is a Momentum with ^value (^value of m * ^value of v), with unit unitResolver("*", unit of m, unit of v).
 
 Equation newtons2ndLawConstantMass 
 	(note "For constant mass, force equals mass times acceleration") 
 	(Mass m, Acceleration ^a) returns Force: 
 	a Force f with ^value (^value of m * ^value of ^a), with unit unitResolver("*", unit of m, unit of ^a)
 	
 	return f
 	 
 	where 
 		derivative(m, Time, 1) = 0.
 
 External newtons2ndLawML
 	(Mass m, Acceleration ^a) returns Force:
 	"http://research.ge.com/answer/newtons2ndlawml" 
 	where derivative(m, Time, 1) = 0.