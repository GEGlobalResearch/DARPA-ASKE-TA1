 uri "http://sadl.org/test.sadl" alias tst.
 
 External unitResolver(string u, ...) returns string: "http://sadl.org/unitSelector". 
 External derivative(ScientificConcept numerator, ScientificConcept denominator, int n) returns decimal, string: 
 	"http://sadl.org/derivative".
 
 Mass is a type of UnittedQuantity.
 Velocity is a type of UnittedQuantity.
 Momentum is a type of UnittedQuantity.
 Force is a type of UnittedQuantity.
 Time is a type of UnittedQuantity.
 
 Equation newtons2ndLaw 
 	(note "Force is equal to the derivative of momentum with respect to time.") 
 	(Mass m, Velocity v) returns Force: 
 	a Force f with ^value fv, with unit fu
 	
 	return f
 	
 	where mv is a Momentum with ^value (^value of m * ^value of v), with unit unitResolver("*", unit of m, unit of v) and
 		[fv,fu] = derivative(mv, Time, 1).
 		
 External binaryAdd (UnittedQuantity arg1, UnittedQuantity arg2) returns UnittedQuantity:
 	"http://darpa.aske.answer/binarryAdd". 		
 		
 argument is a property with values of type ScientificConcept. 		
 input is a type of argument with values of type ScientificConcept.
 output is a type of argument with values of type ScientificConcept.
 
 ^Equation is a class.	// temp fix
 inputs describes ^Equation with a single value of type ScientificConcept List.	// temp fix
 outputs describes ^Equation with a single value of type ScientificConcept List. // temp fix
 Argument is a type of UnittedQuantity, described by seqNumber with values of type int.
 input describes ^Equation with values of type Argument.	// temp fix
 output describes ^Equation with values of type Argument. // temp fix
 
 // will be automatic:
 binaryAdd is an ^Equation, with input (a UnittedQuantity with seqNumber 1), 
 	with input (a UnittedQuantity with seqNumber 2), with output (a UnittedQuantity with seqNumber 1).
 
// newtons2ndLaw is an ^Equation.	// temp fix
// newtons2ndLaw has input Mass, has input Velocity, has output Force.
 
 Ask: select m where m is an ^Equation and m has argument Mass and m has argument Velocity.
 
// parent is a property.
// model is a property.
// Force has parent Mass, has parent Velocity, has model newtons2ndLaw.
// 
// Force has parent Momentum.		
Test: x is {["v1","v2"],[1,2],[3,4]}.
