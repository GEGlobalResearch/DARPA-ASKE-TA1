/********************************************************************** 
 * Note: This license has also been called the "New BSD License" or 
 * "Modified BSD License". See also the 2-clause BSD License.
 *
 * Copyright Â© 2018-2019 - General Electric Company, All Rights Reserved
 * 
 * Project: ANSWER, developed with the support of the Defense Advanced 
 * Research Projects Agency (DARPA) under Agreement  No.  HR00111990006. 
 *
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright notice, 
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice, 
 *    this list of conditions and the following disclaimer in the documentation 
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its 
 *    contributors may be used to endorse or promote products derived 
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE 
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
 * THE POSSIBILITY OF SUCH DAMAGE.
 *
 ***********************************************************************/
uri "http:///Dn".

import "http://sadl.org/Temperature.sadl".

External init() returns None: "/Dn/init".
External insets() returns Insets: "/Dn/insets".
External setDefaults() returns None: "/Dn/setDefaults".
External TQTT(double M, double G) returns double: "/Dn/TQTT".
External CAL_GAM(double T, double G, double Q) returns double: "/Dn/CAL_GAM".
External CAL_TT(double T, double M, double G, double Q) returns double: "/Dn/CAL_TT".
External CAL_T(double TT, double M, double G, double Q) returns double: "/Dn/CAL_T".
External CAL_PQPT(double TT, double M, double G, double Q) returns double: "/Dn/CAL_PQPT".
External CAL_DQDT(double TT, double M, double G, double Q) returns double: "/Dn/CAL_DQDT".
External CAL_ASQA(double TT, double M, double G, double Q) returns double: "/Dn/CAL_ASQA".
External CAL_GNU(double TT, double M, double G, double Q) returns double: "/Dn/CAL_GNU".
External CAL_SOS(double T, double G, double R, double Q) returns double: "/Dn/CAL_SOS".
External CAL_QQP(double TT, double M, double G, double Q) returns double: "/Dn/CAL_QQP".
External CAL_WCOR(double TT, double M, double G, double Q) returns double: "/Dn/CAL_WCOR".
External CAL_PQPT_LOOP(double TT, double prattp, double G, double Q) returns double: "/Dn/CAL_PQPT_LOOP".
External CAL_TQTT_LOOP(double T, double trattp, double G, double Q) returns double: "/Dn/CAL_TQTT_LOOP".
External CAL_DQDT_LOOP(double TT, double rhorattp, double G, double Q) returns double: "/Dn/CAL_DQDT_LOOP".
External CAL_AQAS_LOOP(double TT, double arattp, double G, double Q) returns double: "/Dn/CAL_AQAS_LOOP".
External CAL_QQP_LOOP(double TT, double qrattp, double G, double Q) returns double: "/Dn/CAL_QQP_LOOP".
External CAL_WCOR_LOOP(double TT, double wcortp, double G, double Q) returns double: "/Dn/CAL_WCOR_LOOP".
External CAL_MFGNU(double TT, double NU, double G, double Q) returns double: "/Dn/CAL_MFGNU".
External comPute() returns None: "/Dn/comPute".
External getIsen() returns None: "/Dn/getIsen".
External getAir(double mach) returns double: "/Dn/getAir".
External getMach(int sub, double corair) returns double: "/Dn/getMach".
External getMachArat() returns None: "/Dn/getMachArat".
External getMachpm() returns None: "/Dn/getMachpm".
External loadOut() returns None: "/Dn/loadOut".
External filter3(double inumbr) returns float: "/Dn/filter3".
External filter7(double inumbr) returns float: "/Dn/filter7".
External handleEvent(Event evt) returns boolean: "/Dn/handleEvent".
