<rdf:RDF
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns="http://baseUri#"
    xmlns:sadlbasemodel="http://sadl.org/sadlbasemodel"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns:sadlimplicitmodel="http://sadl.org/sadlimplicitmodel"
    xmlns:sos="http://sadl.org/SpeedOfSound.sadl"
    xmlns:builtinfunctions="http://sadl.org/builtinfunctions"
    xmlns:j.0="http://sadl.org/sadlimplicitmodel#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
  xml:base="http://baseUri">
  <owl:Ontology rdf:about="">
    <owl:imports rdf:resource="http://sadl.org/SpeedOfSound.sadl"/>
    <owl:imports rdf:resource="http://sadl.org/builtinfunctions"/>
    <owl:imports rdf:resource="http://sadl.org/sadlimplicitmodel"/>
    <owl:imports rdf:resource="http://sadl.org/sadlbasemodel"/>
    <rdfs:comment xml:lang="en">This ontology was created from a DIALOG file 'test.dialog' and should not be directly edited.</rdfs:comment>
  </owl:Ontology>
  <j.0:ExternalEquation rdf:ID="Mach.CAL_SOS">
    <j.0:expression>
      <j.0:Script>
        <j.0:script rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >#!/usr/bin/env python
""" generated source for module inputfile """
class Mach(object):
    """ generated source for class Mach """
    def CAL_SOS(self, T, G, R, Q):
        """ generated source for method CAL_SOS """
        WOW = 1 + (G - 1) / (1 + (G - 1) * Math.pow((Q / T), 2) * Math.exp(Q / T) / Math.pow((Math.exp(Q / T) - 1), 2))
        return (Math.sqrt(32.174 * T * R * WOW))

</j.0:script>
        <j.0:language rdf:resource="http://sadl.org/sadlimplicitmodel#Python"/>
      </j.0:Script>
    </j.0:expression>
    <j.0:expression>
      <j.0:Script>
        <j.0:script rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >public double CAL_SOS(double T, double G, double R, double Q) {&#xD;
    double WOW = 1 + (G - 1) / (1 + (G - 1) * Math.pow((Q / T), 2) * Math.exp(Q / T) / Math.pow((Math.exp(Q / T) - 1), 2));&#xD;
    return (Math.sqrt(32.174 * T * R * WOW));&#xD;
}</j.0:script>
        <j.0:language rdf:resource="http://sadl.org/sadlimplicitmodel#Java"/>
      </j.0:Script>
    </j.0:expression>
    <j.0:externalURI rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >http://com.ge.research.sadl.darpa.aske.answer/Mach_java#Mach.CAL_SOS</j.0:externalURI>
    <j.0:returnTypes rdf:parseType="Collection">
      <j.0:DataDescriptor>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
      </j.0:DataDescriptor>
    </j.0:returnTypes>
    <j.0:arguments rdf:parseType="Collection">
      <j.0:DataDescriptor>
        <j.0:specifiedUnits rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
        <j.0:descriptorVariable>
          <j.0:GPVariable rdf:ID="Mach.CAL_SOS_T"/>
        </j.0:descriptorVariable>
        <j.0:localDescriptorName>T</j.0:localDescriptorName>
      </j.0:DataDescriptor>
      <j.0:DataDescriptor>
        <j.0:specifiedUnits rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
        <j.0:descriptorVariable>
          <j.0:GPVariable rdf:ID="Mach.CAL_SOS_G"/>
        </j.0:descriptorVariable>
        <j.0:localDescriptorName>G</j.0:localDescriptorName>
      </j.0:DataDescriptor>
      <j.0:DataDescriptor>
        <j.0:specifiedUnits rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
        <j.0:descriptorVariable>
          <j.0:GPVariable rdf:ID="Mach.CAL_SOS_R"/>
        </j.0:descriptorVariable>
        <j.0:localDescriptorName>R</j.0:localDescriptorName>
      </j.0:DataDescriptor>
      <j.0:DataDescriptor>
        <j.0:specifiedUnits rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
        <j.0:descriptorVariable>
          <j.0:GPVariable rdf:ID="Mach.CAL_SOS_Q"/>
        </j.0:descriptorVariable>
        <j.0:localDescriptorName>Q</j.0:localDescriptorName>
      </j.0:DataDescriptor>
    </j.0:arguments>
    <j.0:expression>
      <j.0:Script>
        <j.0:language rdf:resource="http://sadl.org/sadlimplicitmodel#Text"/>
        <j.0:script rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >double Mach.CAL_SOS(double T,double G,double R,double Q): uri("http://com.ge.research.sadl.darpa.aske.answer/Mach_java#Mach.CAL_SOS")</j.0:script>
      </j.0:Script>
    </j.0:expression>
  </j.0:ExternalEquation>
  <j.0:ExternalEquation rdf:ID="Mach.TQTT">
    <j.0:expression>
      <j.0:Script>
        <j.0:script rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >#!/usr/bin/env python
""" generated source for module inputfile """
class Mach(object):
    """ generated source for class Mach """
    def TQTT(self, M, G):
        """ generated source for method TQTT """
        return Math.pow((1 + (G - 1) / 2 * Math.pow(M, 2)), -1)

</j.0:script>
        <j.0:language rdf:resource="http://sadl.org/sadlimplicitmodel#Python"/>
      </j.0:Script>
    </j.0:expression>
    <j.0:expression>
      <j.0:Script>
        <j.0:script rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >public double TQTT(double M, double G) {&#xD;
    return Math.pow((1 + (G - 1) / 2 * Math.pow(M, 2)), -1);&#xD;
}</j.0:script>
        <j.0:language rdf:resource="http://sadl.org/sadlimplicitmodel#Java"/>
      </j.0:Script>
    </j.0:expression>
    <j.0:externalURI rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >http://com.ge.research.sadl.darpa.aske.answer/Mach_java#Mach.TQTT</j.0:externalURI>
    <j.0:returnTypes rdf:parseType="Collection">
      <j.0:DataDescriptor>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
      </j.0:DataDescriptor>
    </j.0:returnTypes>
    <j.0:arguments rdf:parseType="Collection">
      <j.0:DataDescriptor>
        <j.0:specifiedUnits rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
        <j.0:descriptorVariable>
          <j.0:GPVariable rdf:ID="Mach.TQTT_M"/>
        </j.0:descriptorVariable>
        <j.0:localDescriptorName>M</j.0:localDescriptorName>
      </j.0:DataDescriptor>
      <j.0:DataDescriptor>
        <j.0:specifiedUnits rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
        <j.0:descriptorVariable>
          <j.0:GPVariable rdf:ID="Mach.TQTT_G"/>
        </j.0:descriptorVariable>
        <j.0:localDescriptorName>G</j.0:localDescriptorName>
      </j.0:DataDescriptor>
    </j.0:arguments>
    <j.0:expression>
      <j.0:Script>
        <j.0:language rdf:resource="http://sadl.org/sadlimplicitmodel#Text"/>
        <j.0:script rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >double Mach.TQTT(double M,double G): uri("http://com.ge.research.sadl.darpa.aske.answer/Mach_java#Mach.TQTT")</j.0:script>
      </j.0:Script>
    </j.0:expression>
  </j.0:ExternalEquation>
  <j.0:ExternalEquation rdf:ID="Mach.CAL_TT">
    <j.0:expression>
      <j.0:Script>
        <j.0:script rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >#!/usr/bin/env python
""" generated source for module inputfile """
class Mach(object):
    """ generated source for class Mach """
    def CAL_TT(self, T, M, G, Q):
        """ generated source for method CAL_TT """
        TT = T / TQTT(M, G)
        EPS = 0.00001
        Z = 1
        Z2 = 0
        TT2 = 0
        TT1 = float()
        Z1 = float()
        i = 1
        while Math.abs(Z) &gt; EPS:
            Z = Math.pow(M, 2) - 2 * TT / CAL_GAM(T, G, Q) / T * (G / (G - 1) * (1 - T / TT) + Q / TT * (1 / (Math.exp(Q / TT) - 1) - 1 / (Math.exp(Q / T) - 1)))
            if i == 1:
                Z2 = Z
                TT2 = TT
                TT = TT2 + 100
                i = 2
            else:
                TT1 = TT2
                Z1 = Z2
                TT2 = TT
                Z2 = Z
                TT = TT2 - Z2 * (TT2 - TT1) / (Z2 - Z1)
        if M &lt;= 0.1:
            TT = T / TQTT(M, G)
        return TT

</j.0:script>
        <j.0:language rdf:resource="http://sadl.org/sadlimplicitmodel#Python"/>
      </j.0:Script>
    </j.0:expression>
    <j.0:expression>
      <j.0:Script>
        <j.0:script rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >public double CAL_TT(double T, double M, double G, double Q) {&#xD;
    double TT = T / TQTT(M, G);&#xD;
    double EPS = 0.00001;&#xD;
    double Z = 1;&#xD;
    double Z2 = 0;&#xD;
    double TT2 = 0;&#xD;
    double TT1;&#xD;
    double Z1;&#xD;
    double i = 1;&#xD;
    while (Math.abs(Z) &gt; EPS) {&#xD;
        Z = Math.pow(M, 2) - 2 * TT / CAL_GAM(T, G, Q) / T * (G / (G - 1) * (1 - T / TT) + Q / TT * (1 / (Math.exp(Q / TT) - 1) - 1 / (Math.exp(Q / T) - 1)));&#xD;
        if (i == 1) {&#xD;
            Z2 = Z;&#xD;
            TT2 = TT;&#xD;
            TT = TT2 + 100;&#xD;
            i = 2;&#xD;
        } else {&#xD;
            TT1 = TT2;&#xD;
            Z1 = Z2;&#xD;
            TT2 = TT;&#xD;
            Z2 = Z;&#xD;
            TT = TT2 - Z2 * (TT2 - TT1) / (Z2 - Z1);&#xD;
        }&#xD;
    }&#xD;
    if (M &lt;= .1)&#xD;
        TT = T / TQTT(M, G);&#xD;
    return TT;&#xD;
}</j.0:script>
        <j.0:language rdf:resource="http://sadl.org/sadlimplicitmodel#Java"/>
      </j.0:Script>
    </j.0:expression>
    <j.0:externalURI rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >http://com.ge.research.sadl.darpa.aske.answer/Mach_java#Mach.CAL_TT</j.0:externalURI>
    <j.0:returnTypes rdf:parseType="Collection">
      <j.0:DataDescriptor>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
      </j.0:DataDescriptor>
    </j.0:returnTypes>
    <j.0:arguments rdf:parseType="Collection">
      <j.0:DataDescriptor>
        <j.0:specifiedUnits rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
        <j.0:descriptorVariable>
          <j.0:GPVariable rdf:ID="Mach.CAL_TT_T"/>
        </j.0:descriptorVariable>
        <j.0:localDescriptorName>T</j.0:localDescriptorName>
      </j.0:DataDescriptor>
      <j.0:DataDescriptor>
        <j.0:specifiedUnits rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
        <j.0:descriptorVariable>
          <j.0:GPVariable rdf:ID="Mach.CAL_TT_M"/>
        </j.0:descriptorVariable>
        <j.0:localDescriptorName>M</j.0:localDescriptorName>
      </j.0:DataDescriptor>
      <j.0:DataDescriptor>
        <j.0:specifiedUnits rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
        <j.0:descriptorVariable>
          <j.0:GPVariable rdf:ID="Mach.CAL_TT_G"/>
        </j.0:descriptorVariable>
        <j.0:localDescriptorName>G</j.0:localDescriptorName>
      </j.0:DataDescriptor>
      <j.0:DataDescriptor>
        <j.0:specifiedUnits rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
        <j.0:descriptorVariable>
          <j.0:GPVariable rdf:ID="Mach.CAL_TT_Q"/>
        </j.0:descriptorVariable>
        <j.0:localDescriptorName>Q</j.0:localDescriptorName>
      </j.0:DataDescriptor>
    </j.0:arguments>
    <j.0:expression>
      <j.0:Script>
        <j.0:language rdf:resource="http://sadl.org/sadlimplicitmodel#Text"/>
        <j.0:script rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >double Mach.CAL_TT(double T,double M,double G,double Q): uri("http://com.ge.research.sadl.darpa.aske.answer/Mach_java#Mach.CAL_TT")</j.0:script>
      </j.0:Script>
    </j.0:expression>
  </j.0:ExternalEquation>
  <j.0:ExternalEquation rdf:ID="Mach.CAL_GAM">
    <j.0:expression>
      <j.0:Script>
        <j.0:script rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >#!/usr/bin/env python
""" generated source for module inputfile """
class Mach(object):
    """ generated source for class Mach """
    def CAL_GAM(self, T, G, Q):
        """ generated source for method CAL_GAM """
        return (1 + (G - 1) / (1 + (G - 1) * (Math.pow((Q / T), 2) * Math.exp(Q / T) / Math.pow((Math.exp(Q / T) - 1), 2))))

</j.0:script>
        <j.0:language rdf:resource="http://sadl.org/sadlimplicitmodel#Python"/>
      </j.0:Script>
    </j.0:expression>
    <j.0:expression>
      <j.0:Script>
        <j.0:script rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >public double CAL_GAM(double T, double G, double Q) {&#xD;
    return (1 + (G - 1) / (1 + (G - 1) * (Math.pow((Q / T), 2) * Math.exp(Q / T) / Math.pow((Math.exp(Q / T) - 1), 2))));&#xD;
}</j.0:script>
        <j.0:language rdf:resource="http://sadl.org/sadlimplicitmodel#Java"/>
      </j.0:Script>
    </j.0:expression>
    <j.0:externalURI rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >http://com.ge.research.sadl.darpa.aske.answer/Mach_java#Mach.CAL_GAM</j.0:externalURI>
    <j.0:returnTypes rdf:parseType="Collection">
      <j.0:DataDescriptor>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
      </j.0:DataDescriptor>
    </j.0:returnTypes>
    <j.0:arguments rdf:parseType="Collection">
      <j.0:DataDescriptor>
        <j.0:specifiedUnits rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
        <j.0:descriptorVariable>
          <j.0:GPVariable rdf:ID="Mach.CAL_GAM_T"/>
        </j.0:descriptorVariable>
        <j.0:localDescriptorName>T</j.0:localDescriptorName>
      </j.0:DataDescriptor>
      <j.0:DataDescriptor>
        <j.0:specifiedUnits rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
        <j.0:descriptorVariable>
          <j.0:GPVariable rdf:ID="Mach.CAL_GAM_G"/>
        </j.0:descriptorVariable>
        <j.0:localDescriptorName>G</j.0:localDescriptorName>
      </j.0:DataDescriptor>
      <j.0:DataDescriptor>
        <j.0:specifiedUnits rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
        <j.0:descriptorVariable>
          <j.0:GPVariable rdf:ID="Mach.CAL_GAM_Q"/>
        </j.0:descriptorVariable>
        <j.0:localDescriptorName>Q</j.0:localDescriptorName>
      </j.0:DataDescriptor>
    </j.0:arguments>
    <j.0:expression>
      <j.0:Script>
        <j.0:language rdf:resource="http://sadl.org/sadlimplicitmodel#Text"/>
        <j.0:script rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >double Mach.CAL_GAM(double T,double G,double Q): uri("http://com.ge.research.sadl.darpa.aske.answer/Mach_java#Mach.CAL_GAM")</j.0:script>
      </j.0:Script>
    </j.0:expression>
  </j.0:ExternalEquation>
  <j.0:ExternalEquation rdf:ID="Mach.CAL_T">
    <j.0:expression>
      <j.0:Script>
        <j.0:script rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >#!/usr/bin/env python
""" generated source for module inputfile """
class Mach(object):
    """ generated source for class Mach """
    def CAL_T(self, TT, M, G, Q):
        """ generated source for method CAL_T """
        T = TT * TQTT(M, G)
        EPS = 0.00001
        Z = 1
        Z2 = 0
        T2 = 0
        T1 = float()
        Z1 = float()
        i = 1
        while Math.abs(Z) &gt; EPS:
            Z = Math.pow(M, 2) - 2 * TT / CAL_GAM(T, G, Q) / T * (G / (G - 1) * (1 - T / TT) + Q / TT * (1 / (Math.exp(Q / TT) - 1) - 1 / (Math.exp(Q / T) - 1)))
            if i == 1:
                Z2 = Z
                T2 = T
                T = T2 + 100
                i = 2
            else:
                T1 = T2
                Z1 = Z2
                T2 = T
                Z2 = Z
                T = T2 - Z2 * (T2 - T1) / (Z2 - Z1)
        if M &lt;= 0.1:
            T = TT * TQTT(M, G)
        return T

</j.0:script>
        <j.0:language rdf:resource="http://sadl.org/sadlimplicitmodel#Python"/>
      </j.0:Script>
    </j.0:expression>
    <j.0:expression>
      <j.0:Script>
        <j.0:script rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >double CAL_T(double TT, double M, double G, double Q) {&#xD;
    double T = TT * TQTT(M, G);&#xD;
    double EPS = 0.00001;&#xD;
    double Z = 1;&#xD;
    double Z2 = 0;&#xD;
    double T2 = 0;&#xD;
    double T1;&#xD;
    double Z1;&#xD;
    double i = 1;&#xD;
    while (Math.abs(Z) &gt; EPS) {&#xD;
        Z = Math.pow(M, 2) - 2 * TT / CAL_GAM(T, G, Q) / T * (G / (G - 1) * (1 - T / TT) + Q / TT * (1 / (Math.exp(Q / TT) - 1) - 1 / (Math.exp(Q / T) - 1)));&#xD;
        if (i == 1) {&#xD;
            Z2 = Z;&#xD;
            T2 = T;&#xD;
            T = T2 + 100;&#xD;
            i = 2;&#xD;
        } else {&#xD;
            T1 = T2;&#xD;
            Z1 = Z2;&#xD;
            T2 = T;&#xD;
            Z2 = Z;&#xD;
            T = T2 - Z2 * (T2 - T1) / (Z2 - Z1);&#xD;
        }&#xD;
    }&#xD;
    if (M &lt;= .1)&#xD;
        T = TT * TQTT(M, G);&#xD;
    return T;&#xD;
}</j.0:script>
        <j.0:language rdf:resource="http://sadl.org/sadlimplicitmodel#Java"/>
      </j.0:Script>
    </j.0:expression>
    <j.0:externalURI rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >http://com.ge.research.sadl.darpa.aske.answer/Mach_java#Mach.CAL_T</j.0:externalURI>
    <j.0:returnTypes rdf:parseType="Collection">
      <j.0:DataDescriptor>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
      </j.0:DataDescriptor>
    </j.0:returnTypes>
    <j.0:arguments rdf:parseType="Collection">
      <j.0:DataDescriptor>
        <j.0:specifiedUnits rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
        <j.0:descriptorVariable>
          <j.0:GPVariable rdf:ID="Mach.CAL_T_TT"/>
        </j.0:descriptorVariable>
        <j.0:localDescriptorName>TT</j.0:localDescriptorName>
      </j.0:DataDescriptor>
      <j.0:DataDescriptor>
        <j.0:specifiedUnits rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
        <j.0:descriptorVariable>
          <j.0:GPVariable rdf:ID="Mach.CAL_T_M"/>
        </j.0:descriptorVariable>
        <j.0:localDescriptorName>M</j.0:localDescriptorName>
      </j.0:DataDescriptor>
      <j.0:DataDescriptor>
        <j.0:specifiedUnits rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
        <j.0:descriptorVariable>
          <j.0:GPVariable rdf:ID="Mach.CAL_T_G"/>
        </j.0:descriptorVariable>
        <j.0:localDescriptorName>G</j.0:localDescriptorName>
      </j.0:DataDescriptor>
      <j.0:DataDescriptor>
        <j.0:specifiedUnits rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
        <j.0:dataType>http://www.w3.org/2001/XMLSchema#double</j.0:dataType>
        <j.0:descriptorVariable>
          <j.0:GPVariable rdf:ID="Mach.CAL_T_Q"/>
        </j.0:descriptorVariable>
        <j.0:localDescriptorName>Q</j.0:localDescriptorName>
      </j.0:DataDescriptor>
    </j.0:arguments>
    <j.0:expression>
      <j.0:Script>
        <j.0:language rdf:resource="http://sadl.org/sadlimplicitmodel#Text"/>
        <j.0:script rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
        >double Mach.CAL_T(double TT,double M,double G,double Q): uri("http://com.ge.research.sadl.darpa.aske.answer/Mach_java#Mach.CAL_T")</j.0:script>
      </j.0:Script>
    </j.0:expression>
  </j.0:ExternalEquation>
</rdf:RDF>
