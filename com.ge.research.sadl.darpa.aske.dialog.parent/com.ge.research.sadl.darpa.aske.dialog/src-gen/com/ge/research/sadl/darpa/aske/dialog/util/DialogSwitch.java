/**
 * generated by Xtext 2.14.0.RC1
 */
package com.ge.research.sadl.darpa.aske.dialog.util;

import com.ge.research.sadl.darpa.aske.dialog.*;

import com.ge.research.sadl.sADL.ExpressionScope;
import com.ge.research.sadl.sADL.SadlModelElement;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see com.ge.research.sadl.darpa.aske.dialog.DialogPackage
 * @generated
 */
public class DialogSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static DialogPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DialogSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = DialogPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case DialogPackage.STRING_RESPONSE:
      {
        StringResponse stringResponse = (StringResponse)theEObject;
        T result = caseStringResponse(stringResponse);
        if (result == null) result = caseSadlModelElement(stringResponse);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DialogPackage.WHAT_STATEMENT:
      {
        WhatStatement whatStatement = (WhatStatement)theEObject;
        T result = caseWhatStatement(whatStatement);
        if (result == null) result = caseSadlModelElement(whatStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DialogPackage.WHAT_IS_STATEMENT:
      {
        WhatIsStatement whatIsStatement = (WhatIsStatement)theEObject;
        T result = caseWhatIsStatement(whatIsStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DialogPackage.WHAT_VALUES_STATEMENT:
      {
        WhatValuesStatement whatValuesStatement = (WhatValuesStatement)theEObject;
        T result = caseWhatValuesStatement(whatValuesStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DialogPackage.HOW_MANY_VALUES_STATEMENT:
      {
        HowManyValuesStatement howManyValuesStatement = (HowManyValuesStatement)theEObject;
        T result = caseHowManyValuesStatement(howManyValuesStatement);
        if (result == null) result = caseSadlModelElement(howManyValuesStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case DialogPackage.MODIFIED_ASK_STATEMENT:
      {
        ModifiedAskStatement modifiedAskStatement = (ModifiedAskStatement)theEObject;
        T result = caseModifiedAskStatement(modifiedAskStatement);
        if (result == null) result = caseExpressionScope(modifiedAskStatement);
        if (result == null) result = caseSadlModelElement(modifiedAskStatement);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>String Response</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>String Response</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStringResponse(StringResponse object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>What Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>What Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWhatStatement(WhatStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>What Is Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>What Is Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWhatIsStatement(WhatIsStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>What Values Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>What Values Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWhatValuesStatement(WhatValuesStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>How Many Values Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>How Many Values Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseHowManyValuesStatement(HowManyValuesStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Modified Ask Statement</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Modified Ask Statement</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseModifiedAskStatement(ModifiedAskStatement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Sadl Model Element</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Sadl Model Element</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSadlModelElement(SadlModelElement object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Expression Scope</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Expression Scope</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseExpressionScope(ExpressionScope object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //DialogSwitch
