/*
 * generated by Xtext 2.14.0.RC1
 */
parser grammar InternalDialogParser;

options {
	tokenVocab=InternalDialogLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package com.ge.research.sadl.darpa.aske.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.ge.research.sadl.darpa.aske.services.DialogGrammarAccess;

}

@members {

 	private DialogGrammarAccess grammarAccess;

    public InternalDialogParser(TokenStream input, DialogGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "DialogModel";
   	}

   	@Override
   	protected DialogGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDialogModel
entryRuleDialogModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDialogModelRule()); }
	iv_ruleDialogModel=ruleDialogModel
	{ $current=$iv_ruleDialogModel.current; }
	EOF;

// Rule DialogModel
ruleDialogModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getDialogModelAccess().getSadlModelParserRuleCall());
	}
	this_SadlModel_0=ruleSadlModel
	{
		$current = $this_SadlModel_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleSadlModelElement
entryRuleSadlModelElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlModelElementRule()); }
	iv_ruleSadlModelElement=ruleSadlModelElement
	{ $current=$iv_ruleSadlModelElement.current; }
	EOF;

// Rule SadlModelElement
ruleSadlModelElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getSadlModelElementAccess().getDialogStatementParserRuleCall());
	}
	this_DialogStatement_0=ruleDialogStatement
	{
		$current = $this_DialogStatement_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleDialogStatement
entryRuleDialogStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDialogStatementRule()); }
	iv_ruleDialogStatement=ruleDialogStatement
	{ $current=$iv_ruleDialogStatement.current; }
	EOF;

// Rule DialogStatement
ruleDialogStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDialogStatementAccess().getDialogQuestionParserRuleCall_0());
		}
		this_DialogQuestion_0=ruleDialogQuestion
		{
			$current = $this_DialogQuestion_0.current;
			afterParserOrEnumRuleCall();
		}
		{
			newCompositeNode(grammarAccess.getDialogStatementAccess().getEOSParserRuleCall_1());
		}
		ruleEOS
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDialogQuestion
entryRuleDialogQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDialogQuestionRule()); }
	iv_ruleDialogQuestion=ruleDialogQuestion
	{ $current=$iv_ruleDialogQuestion.current; }
	EOF;

// Rule DialogQuestion
ruleDialogQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=What
		{
			newLeafNode(otherlv_0, grammarAccess.getDialogQuestionAccess().getWhatKeyword_0());
		}
		otherlv_1=Is
		{
			newLeafNode(otherlv_1, grammarAccess.getDialogQuestionAccess().getIsKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDialogQuestionAccess().getArticleAnArticleParserRuleCall_2_0());
				}
				lv_article_2_0=ruleAnArticle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDialogQuestionRule());
					}
					set(
						$current,
						"article",
						lv_article_2_0,
						"com.ge.research.sadl.SADL.AnArticle");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDialogQuestionAccess().getTargetSadlTypeReferenceParserRuleCall_3_0());
				}
				lv_target_3_0=ruleSadlTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDialogQuestionRule());
					}
					set(
						$current,
						"target",
						lv_target_3_0,
						"com.ge.research.sadl.SADL.SadlTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=QuestionMark
		{
			newLeafNode(otherlv_4, grammarAccess.getDialogQuestionAccess().getQuestionMarkKeyword_4());
		}
	)
;

// Entry rule entryRuleSadlModel
entryRuleSadlModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlModelRule()); }
	iv_ruleSadlModel=ruleSadlModel
	{ $current=$iv_ruleSadlModel.current; }
	EOF;

// Rule SadlModel
ruleSadlModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Uri
		{
			newLeafNode(otherlv_0, grammarAccess.getSadlModelAccess().getUriKeyword_0());
		}
		(
			(
				lv_baseUri_1_0=RULE_STRING
				{
					newLeafNode(lv_baseUri_1_0, grammarAccess.getSadlModelAccess().getBaseUriSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSadlModelRule());
					}
					setWithLastConsumed(
						$current,
						"baseUri",
						lv_baseUri_1_0,
						"com.ge.research.sadl.SADL.STRING");
				}
			)
		)
		(
			otherlv_2=Alias
			{
				newLeafNode(otherlv_2, grammarAccess.getSadlModelAccess().getAliasKeyword_2_0());
			}
			(
				(
					lv_alias_3_0=RULE_ID
					{
						newLeafNode(lv_alias_3_0, grammarAccess.getSadlModelAccess().getAliasIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSadlModelRule());
						}
						setWithLastConsumed(
							$current,
							"alias",
							lv_alias_3_0,
							"com.ge.research.sadl.SADL.ID");
					}
				)
			)
		)?
		(
			otherlv_4=Version
			{
				newLeafNode(otherlv_4, grammarAccess.getSadlModelAccess().getVersionKeyword_3_0());
			}
			(
				(
					lv_version_5_0=RULE_STRING
					{
						newLeafNode(lv_version_5_0, grammarAccess.getSadlModelAccess().getVersionSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSadlModelRule());
						}
						setWithLastConsumed(
							$current,
							"version",
							lv_version_5_0,
							"com.ge.research.sadl.SADL.STRING");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSadlModelAccess().getAnnotationsSadlAnnotationParserRuleCall_4_0());
				}
				lv_annotations_6_0=ruleSadlAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSadlModelRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_6_0,
						"com.ge.research.sadl.SADL.SadlAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		{
			newCompositeNode(grammarAccess.getSadlModelAccess().getEOSParserRuleCall_5());
		}
		ruleEOS
		{
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSadlModelAccess().getImportsSadlImportParserRuleCall_6_0());
				}
				lv_imports_8_0=ruleSadlImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSadlModelRule());
					}
					add(
						$current,
						"imports",
						lv_imports_8_0,
						"com.ge.research.sadl.SADL.SadlImport");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSadlModelAccess().getElementsSadlModelElementParserRuleCall_7_0());
				}
				lv_elements_9_0=ruleSadlModelElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSadlModelRule());
					}
					add(
						$current,
						"elements",
						lv_elements_9_0,
						"com.ge.research.sadl.darpa.aske.Dialog.SadlModelElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleSadlAnnotation
entryRuleSadlAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlAnnotationRule()); }
	iv_ruleSadlAnnotation=ruleSadlAnnotation
	{ $current=$iv_ruleSadlAnnotation.current; }
	EOF;

// Rule SadlAnnotation
ruleSadlAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=Comma
			{
				newLeafNode(otherlv_0, grammarAccess.getSadlAnnotationAccess().getCommaKeyword_0());
			}
		)?
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getSadlAnnotationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					lv_type_2_1=Alias
					{
						newLeafNode(lv_type_2_1, grammarAccess.getSadlAnnotationAccess().getTypeAliasKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSadlAnnotationRule());
						}
						setWithLastConsumed($current, "type", lv_type_2_1, null);
					}
					    |
					lv_type_2_2=Note
					{
						newLeafNode(lv_type_2_2, grammarAccess.getSadlAnnotationAccess().getTypeNoteKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSadlAnnotationRule());
						}
						setWithLastConsumed($current, "type", lv_type_2_2, null);
					}
				)
			)
		)
		(
			(
				lv_contents_3_0=RULE_STRING
				{
					newLeafNode(lv_contents_3_0, grammarAccess.getSadlAnnotationAccess().getContentsSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSadlAnnotationRule());
					}
					addWithLastConsumed(
						$current,
						"contents",
						lv_contents_3_0,
						"com.ge.research.sadl.SADL.STRING");
				}
			)
		)
		(
			otherlv_4=Comma
			{
				newLeafNode(otherlv_4, grammarAccess.getSadlAnnotationAccess().getCommaKeyword_4_0());
			}
			(
				(
					lv_contents_5_0=RULE_STRING
					{
						newLeafNode(lv_contents_5_0, grammarAccess.getSadlAnnotationAccess().getContentsSTRINGTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSadlAnnotationRule());
						}
						addWithLastConsumed(
							$current,
							"contents",
							lv_contents_5_0,
							"com.ge.research.sadl.SADL.STRING");
					}
				)
			)
		)*
		otherlv_6=RightParenthesis
		{
			newLeafNode(otherlv_6, grammarAccess.getSadlAnnotationAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleSadlImport
entryRuleSadlImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlImportRule()); }
	iv_ruleSadlImport=ruleSadlImport
	{ $current=$iv_ruleSadlImport.current; }
	EOF;

// Rule SadlImport
ruleSadlImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Import
		{
			newLeafNode(otherlv_0, grammarAccess.getSadlImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSadlImportRule());
					}
				}
				otherlv_1=RULE_STRING
				{
					newLeafNode(otherlv_1, grammarAccess.getSadlImportAccess().getImportedResourceSadlModelCrossReference_1_0());
				}
			)
		)
		(
			otherlv_2=As
			{
				newLeafNode(otherlv_2, grammarAccess.getSadlImportAccess().getAsKeyword_2_0());
			}
			(
				(
					lv_alias_3_0=RULE_ID
					{
						newLeafNode(lv_alias_3_0, grammarAccess.getSadlImportAccess().getAliasIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSadlImportRule());
						}
						setWithLastConsumed(
							$current,
							"alias",
							lv_alias_3_0,
							"com.ge.research.sadl.SADL.ID");
					}
				)
			)
		)?
		{
			newCompositeNode(grammarAccess.getSadlImportAccess().getEOSParserRuleCall_3());
		}
		ruleEOS
		{
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule EquationSignature
ruleEquationSignature[EObject in_current]  returns [EObject current=in_current]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEquationSignatureAccess().getNameSadlResourceParserRuleCall_0_0());
				}
				lv_name_0_0=ruleSadlResource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"com.ge.research.sadl.SADL.SadlResource");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getEquationSignatureAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEquationSignatureAccess().getParameterSadlParameterDeclarationParserRuleCall_2_0_0());
					}
					lv_parameter_2_0=ruleSadlParameterDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
						}
						add(
							$current,
							"parameter",
							lv_parameter_2_0,
							"com.ge.research.sadl.SADL.SadlParameterDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=Comma
				{
					newLeafNode(otherlv_3, grammarAccess.getEquationSignatureAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEquationSignatureAccess().getParameterSadlParameterDeclarationParserRuleCall_2_1_1_0());
						}
						lv_parameter_4_0=ruleSadlParameterDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
							}
							add(
								$current,
								"parameter",
								lv_parameter_4_0,
								"com.ge.research.sadl.SADL.SadlParameterDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=RightParenthesis
		{
			newLeafNode(otherlv_5, grammarAccess.getEquationSignatureAccess().getRightParenthesisKeyword_3());
		}
		otherlv_6=Returns
		{
			newLeafNode(otherlv_6, grammarAccess.getEquationSignatureAccess().getReturnsKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEquationSignatureAccess().getReturnTypeSadlReturnDeclarationParserRuleCall_5_0_0());
					}
					lv_returnType_7_0=ruleSadlReturnDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
						}
						add(
							$current,
							"returnType",
							lv_returnType_7_0,
							"com.ge.research.sadl.SADL.SadlReturnDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=Comma
				{
					newLeafNode(otherlv_8, grammarAccess.getEquationSignatureAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEquationSignatureAccess().getReturnTypeSadlReturnDeclarationParserRuleCall_5_1_1_0());
						}
						lv_returnType_9_0=ruleSadlReturnDeclaration
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
							}
							add(
								$current,
								"returnType",
								lv_returnType_9_0,
								"com.ge.research.sadl.SADL.SadlReturnDeclaration");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_10=Colon
		{
			newLeafNode(otherlv_10, grammarAccess.getEquationSignatureAccess().getColonKeyword_6());
		}
	)
;

// Entry rule entryRuleSadlParameterDeclaration
entryRuleSadlParameterDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlParameterDeclarationRule()); }
	iv_ruleSadlParameterDeclaration=ruleSadlParameterDeclaration
	{ $current=$iv_ruleSadlParameterDeclaration.current; }
	EOF;

// Rule SadlParameterDeclaration
ruleSadlParameterDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSadlParameterDeclarationAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_0_0_0());
					}
					lv_type_0_0=ruleSadlPrimaryTypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSadlParameterDeclarationRule());
						}
						set(
							$current,
							"type",
							lv_type_0_0,
							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSadlParameterDeclarationAccess().getNameSadlResourceParserRuleCall_0_1_0());
					}
					lv_name_1_0=ruleSadlResource
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSadlParameterDeclarationRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"com.ge.research.sadl.SADL.SadlResource");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				lv_unknown_2_0=HyphenMinusHyphenMinus
				{
					newLeafNode(lv_unknown_2_0, grammarAccess.getSadlParameterDeclarationAccess().getUnknownHyphenMinusHyphenMinusKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSadlParameterDeclarationRule());
					}
					setWithLastConsumed($current, "unknown", lv_unknown_2_0, "--");
				}
			)
		)
		    |
		(
			(
				lv_ellipsis_3_0=FullStopFullStopFullStop
				{
					newLeafNode(lv_ellipsis_3_0, grammarAccess.getSadlParameterDeclarationAccess().getEllipsisFullStopFullStopFullStopKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSadlParameterDeclarationRule());
					}
					setWithLastConsumed($current, "ellipsis", lv_ellipsis_3_0, "...");
				}
			)
		)
	)
;

// Entry rule entryRuleSadlReturnDeclaration
entryRuleSadlReturnDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlReturnDeclarationRule()); }
	iv_ruleSadlReturnDeclaration=ruleSadlReturnDeclaration
	{ $current=$iv_ruleSadlReturnDeclaration.current; }
	EOF;

// Rule SadlReturnDeclaration
ruleSadlReturnDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSadlReturnDeclarationAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_0_0());
				}
				lv_type_0_0=ruleSadlPrimaryTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSadlReturnDeclarationRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_none_1_0=None
				{
					newLeafNode(lv_none_1_0, grammarAccess.getSadlReturnDeclarationAccess().getNoneNoneKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSadlReturnDeclarationRule());
					}
					setWithLastConsumed($current, "none", lv_none_1_0, "None");
				}
			)
		)
		    |
		(
			(
				lv_unknown_2_0=HyphenMinusHyphenMinus
				{
					newLeafNode(lv_unknown_2_0, grammarAccess.getSadlReturnDeclarationAccess().getUnknownHyphenMinusHyphenMinusKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSadlReturnDeclarationRule());
					}
					setWithLastConsumed($current, "unknown", lv_unknown_2_0, "--");
				}
			)
		)
	)
;

// Entry rule entryRuleSadlPropertyCondition
entryRuleSadlPropertyCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlPropertyConditionRule()); }
	iv_ruleSadlPropertyCondition=ruleSadlPropertyCondition
	{ $current=$iv_ruleSadlPropertyCondition.current; }
	EOF;

// Rule SadlPropertyCondition
ruleSadlPropertyCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSadlPropertyConditionRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSadlPropertyConditionAccess().getPropertySadlResourceCrossReference_0_0());
				}
				ruleQNAME
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSadlPropertyConditionAccess().getCondSadlConditionParserRuleCall_1_0());
				}
				lv_cond_1_0=ruleSadlCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSadlPropertyConditionRule());
					}
					add(
						$current,
						"cond",
						lv_cond_1_0,
						"com.ge.research.sadl.SADL.SadlCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSadlPropertyInitializer
entryRuleSadlPropertyInitializer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlPropertyInitializerRule()); }
	iv_ruleSadlPropertyInitializer=ruleSadlPropertyInitializer
	{ $current=$iv_ruleSadlPropertyInitializer.current; }
	EOF;

// Rule SadlPropertyInitializer
ruleSadlPropertyInitializer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0=Comma
				{
					newLeafNode(otherlv_0, grammarAccess.getSadlPropertyInitializerAccess().getCommaKeyword_0_0());
				}
			)?
			(
				otherlv_1=With
				{
					newLeafNode(otherlv_1, grammarAccess.getSadlPropertyInitializerAccess().getWithKeyword_0_1_0());
				}
				    |
				otherlv_2=Has
				{
					newLeafNode(otherlv_2, grammarAccess.getSadlPropertyInitializerAccess().getHasKeyword_0_1_1());
				}
			)?
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getPropertySadlResourceCrossReference_0_2_0());
					}
					ruleQNAME
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlExplicitValueParserRuleCall_0_3_0_0());
						}
						lv_value_4_0=ruleSadlExplicitValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
							}
							set(
								$current,
								"value",
								lv_value_4_0,
								"com.ge.research.sadl.SADL.SadlExplicitValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_5=LeftParenthesis
					{
						newLeafNode(otherlv_5, grammarAccess.getSadlPropertyInitializerAccess().getLeftParenthesisKeyword_0_3_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlNestedInstanceParserRuleCall_0_3_1_1_0());
							}
							lv_value_6_0=ruleSadlNestedInstance
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
								}
								set(
									$current,
									"value",
									lv_value_6_0,
									"com.ge.research.sadl.SADL.SadlNestedInstance");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_7=RightParenthesis
					{
						newLeafNode(otherlv_7, grammarAccess.getSadlPropertyInitializerAccess().getRightParenthesisKeyword_0_3_1_2());
					}
				)
			)
		)
		    |
		(
			(
				otherlv_8=Comma
				{
					newLeafNode(otherlv_8, grammarAccess.getSadlPropertyInitializerAccess().getCommaKeyword_1_0());
				}
			)?
			otherlv_9=Is
			{
				newLeafNode(otherlv_9, grammarAccess.getSadlPropertyInitializerAccess().getIsKeyword_1_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getPropertySadlResourceCrossReference_1_2_0());
					}
					ruleQNAME
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11=Of
			{
				newLeafNode(otherlv_11, grammarAccess.getSadlPropertyInitializerAccess().getOfKeyword_1_3());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getTypeSadlResourceCrossReference_1_4_0());
					}
					ruleQNAME
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				otherlv_13=Comma
				{
					newLeafNode(otherlv_13, grammarAccess.getSadlPropertyInitializerAccess().getCommaKeyword_2_0());
				}
			)?
			otherlv_14=Of
			{
				newLeafNode(otherlv_14, grammarAccess.getSadlPropertyInitializerAccess().getOfKeyword_2_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getPropertySadlResourceCrossReference_2_2_0());
					}
					ruleQNAME
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_16=Is
			{
				newLeafNode(otherlv_16, grammarAccess.getSadlPropertyInitializerAccess().getIsKeyword_2_3());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlExplicitValueParserRuleCall_2_4_0_0());
						}
						lv_value_17_0=ruleSadlExplicitValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
							}
							set(
								$current,
								"value",
								lv_value_17_0,
								"com.ge.research.sadl.SADL.SadlExplicitValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					otherlv_18=LeftParenthesis
					{
						newLeafNode(otherlv_18, grammarAccess.getSadlPropertyInitializerAccess().getLeftParenthesisKeyword_2_4_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlNestedInstanceParserRuleCall_2_4_1_1_0());
							}
							lv_value_19_0=ruleSadlNestedInstance
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
								}
								set(
									$current,
									"value",
									lv_value_19_0,
									"com.ge.research.sadl.SADL.SadlNestedInstance");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_20=RightParenthesis
					{
						newLeafNode(otherlv_20, grammarAccess.getSadlPropertyInitializerAccess().getRightParenthesisKeyword_2_4_1_2());
					}
				)
			)
		)
	)
;

// Entry rule entryRuleSadlNestedInstance
entryRuleSadlNestedInstance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlNestedInstanceRule()); }
	iv_ruleSadlNestedInstance=ruleSadlNestedInstance
	{ $current=$iv_ruleSadlNestedInstance.current; }
	EOF;

// Rule SadlNestedInstance
ruleSadlNestedInstance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSadlNestedInstanceAccess().getSadlNestedInstanceAction_0(),
					$current);
			}
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getInstanceSadlResourceParserRuleCall_1_0_0_0());
						}
						lv_instance_1_0=ruleSadlResource
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
							}
							set(
								$current,
								"instance",
								lv_instance_1_0,
								"com.ge.research.sadl.SADL.SadlResource");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_2=Is
				{
					newLeafNode(otherlv_2, grammarAccess.getSadlNestedInstanceAccess().getIsKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getArticleAnArticleParserRuleCall_1_0_2_0());
						}
						lv_article_3_0=ruleAnArticle
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
							}
							set(
								$current,
								"article",
								lv_article_3_0,
								"com.ge.research.sadl.SADL.AnArticle");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getTypeSadlTypeReferenceParserRuleCall_1_0_3_0());
						}
						lv_type_4_0=ruleSadlTypeReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
							}
							set(
								$current,
								"type",
								lv_type_4_0,
								"com.ge.research.sadl.SADL.SadlTypeReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getPropertyInitializersSadlPropertyInitializerParserRuleCall_1_0_4_0());
						}
						lv_propertyInitializers_5_0=ruleSadlPropertyInitializer
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
							}
							add(
								$current,
								"propertyInitializers",
								lv_propertyInitializers_5_0,
								"com.ge.research.sadl.SADL.SadlPropertyInitializer");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getArticleAnArticleParserRuleCall_1_1_0_0());
						}
						lv_article_6_0=ruleAnArticle
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
							}
							set(
								$current,
								"article",
								lv_article_6_0,
								"com.ge.research.sadl.SADL.AnArticle");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getTypeSadlTypeReferenceParserRuleCall_1_1_1_0());
						}
						lv_type_7_0=ruleSadlTypeReference
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
							}
							set(
								$current,
								"type",
								lv_type_7_0,
								"com.ge.research.sadl.SADL.SadlTypeReference");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getInstanceSadlResourceParserRuleCall_1_1_2_0());
						}
						lv_instance_8_0=ruleSadlResource
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
							}
							set(
								$current,
								"instance",
								lv_instance_8_0,
								"com.ge.research.sadl.SADL.SadlResource");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getPropertyInitializersSadlPropertyInitializerParserRuleCall_1_1_3_0());
						}
						lv_propertyInitializers_9_0=ruleSadlPropertyInitializer
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
							}
							add(
								$current,
								"propertyInitializers",
								lv_propertyInitializers_9_0,
								"com.ge.research.sadl.SADL.SadlPropertyInitializer");
							afterParserOrEnumRuleCall();
						}
					)
				)*
			)
		)
	)
;

// Entry rule entryRuleSadlResource
entryRuleSadlResource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlResourceRule()); }
	iv_ruleSadlResource=ruleSadlResource
	{ $current=$iv_ruleSadlResource.current; }
	EOF;

// Rule SadlResource
ruleSadlResource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSadlResourceRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSadlResourceAccess().getNameSadlResourceCrossReference_0_0());
				}
				ruleQNAME
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSadlResourceAccess().getAnnotationsSadlAnnotationParserRuleCall_1_0());
				}
				lv_annotations_1_0=ruleSadlAnnotation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSadlResourceRule());
					}
					add(
						$current,
						"annotations",
						lv_annotations_1_0,
						"com.ge.research.sadl.SADL.SadlAnnotation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleSadlDataTypeFacet
entryRuleSadlDataTypeFacet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlDataTypeFacetRule()); }
	iv_ruleSadlDataTypeFacet=ruleSadlDataTypeFacet
	{ $current=$iv_ruleSadlDataTypeFacet.current; }
	EOF;

// Rule SadlDataTypeFacet
ruleSadlDataTypeFacet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSadlDataTypeFacetAccess().getSadlDataTypeFacetAction_0_0(),
						$current);
				}
			)
			(
				otherlv_1=LeftParenthesis
				{
					newLeafNode(otherlv_1, grammarAccess.getSadlDataTypeFacetAccess().getLeftParenthesisKeyword_0_1_0());
				}
				    |
				(
					(
						lv_minInclusive_2_0=LeftSquareBracket
						{
							newLeafNode(lv_minInclusive_2_0, grammarAccess.getSadlDataTypeFacetAccess().getMinInclusiveLeftSquareBracketKeyword_0_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
							}
							setWithLastConsumed($current, "minInclusive", true, "[");
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMinFacetNumberParserRuleCall_0_2_0());
					}
					lv_min_3_0=ruleFacetNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
						}
						set(
							$current,
							"min",
							lv_min_3_0,
							"com.ge.research.sadl.SADL.FacetNumber");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_4=Comma
			{
				newLeafNode(otherlv_4, grammarAccess.getSadlDataTypeFacetAccess().getCommaKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMaxFacetNumberParserRuleCall_0_4_0());
					}
					lv_max_5_0=ruleFacetNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
						}
						set(
							$current,
							"max",
							lv_max_5_0,
							"com.ge.research.sadl.SADL.FacetNumber");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					(
						lv_maxInclusive_6_0=RightSquareBracket
						{
							newLeafNode(lv_maxInclusive_6_0, grammarAccess.getSadlDataTypeFacetAccess().getMaxInclusiveRightSquareBracketKeyword_0_5_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
							}
							setWithLastConsumed($current, "maxInclusive", true, "]");
						}
					)
				)
				    |
				otherlv_7=RightParenthesis
				{
					newLeafNode(otherlv_7, grammarAccess.getSadlDataTypeFacetAccess().getRightParenthesisKeyword_0_5_1());
				}
			)
		)
		    |
		(
			(
				lv_regex_8_0=RULE_STRING
				{
					newLeafNode(lv_regex_8_0, grammarAccess.getSadlDataTypeFacetAccess().getRegexSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
					}
					setWithLastConsumed(
						$current,
						"regex",
						lv_regex_8_0,
						"com.ge.research.sadl.SADL.STRING");
				}
			)
		)
		    |
		(
			otherlv_9=Length
			{
				newLeafNode(otherlv_9, grammarAccess.getSadlDataTypeFacetAccess().getLengthKeyword_2_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getLenFacetNumberParserRuleCall_2_1_0_0());
						}
						lv_len_10_0=ruleFacetNumber
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
							}
							set(
								$current,
								"len",
								lv_len_10_0,
								"com.ge.research.sadl.SADL.FacetNumber");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMinlenFacetNumberParserRuleCall_2_1_1_0_0());
							}
							lv_minlen_11_0=ruleFacetNumber
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
								}
								set(
									$current,
									"minlen",
									lv_minlen_11_0,
									"com.ge.research.sadl.SADL.FacetNumber");
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_12=HyphenMinus
					{
						newLeafNode(otherlv_12, grammarAccess.getSadlDataTypeFacetAccess().getHyphenMinusKeyword_2_1_1_1());
					}
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMaxlenFacetNumberParserRuleCall_2_1_1_2_0_0());
								}
								lv_maxlen_13_1=ruleFacetNumber
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
									}
									set(
										$current,
										"maxlen",
										lv_maxlen_13_1,
										"com.ge.research.sadl.SADL.FacetNumber");
									afterParserOrEnumRuleCall();
								}
								    |
								lv_maxlen_13_2=Asterisk
								{
									newLeafNode(lv_maxlen_13_2, grammarAccess.getSadlDataTypeFacetAccess().getMaxlenAsteriskKeyword_2_1_1_2_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
									}
									setWithLastConsumed($current, "maxlen", lv_maxlen_13_2, null);
								}
							)
						)
					)
				)
			)
		)
		    |
		(
			otherlv_14=LeftCurlyBracket
			{
				newLeafNode(otherlv_14, grammarAccess.getSadlDataTypeFacetAccess().getLeftCurlyBracketKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getValuesFacetValueParserRuleCall_3_1_0());
					}
					lv_values_15_0=ruleFacetValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
						}
						add(
							$current,
							"values",
							lv_values_15_0,
							"com.ge.research.sadl.SADL.FacetValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					otherlv_16=Comma
					{
						newLeafNode(otherlv_16, grammarAccess.getSadlDataTypeFacetAccess().getCommaKeyword_3_2_0());
					}
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getValuesFacetValueParserRuleCall_3_2_1_0());
						}
						lv_values_17_0=ruleFacetValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
							}
							add(
								$current,
								"values",
								lv_values_17_0,
								"com.ge.research.sadl.SADL.FacetValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_18=RightCurlyBracket
			{
				newLeafNode(otherlv_18, grammarAccess.getSadlDataTypeFacetAccess().getRightCurlyBracketKeyword_3_3());
			}
		)
	)
;

// Entry rule entryRuleFacetNumber
entryRuleFacetNumber returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFacetNumberRule()); }
	iv_ruleFacetNumber=ruleFacetNumber
	{ $current=$iv_ruleFacetNumber.current.getText(); }
	EOF;

// Rule FacetNumber
ruleFacetNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw=HyphenMinus
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getFacetNumberAccess().getHyphenMinusKeyword_0());
			}
		)?
		{
			newCompositeNode(grammarAccess.getFacetNumberAccess().getAnyNumberParserRuleCall_1());
		}
		this_AnyNumber_1=ruleAnyNumber
		{
			$current.merge(this_AnyNumber_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFacetValue
entryRuleFacetValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFacetValueRule()); }
	iv_ruleFacetValue=ruleFacetValue
	{ $current=$iv_ruleFacetValue.current.getText(); }
	EOF;

// Rule FacetValue
ruleFacetValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getFacetValueAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		{
			newCompositeNode(grammarAccess.getFacetValueAccess().getFacetNumberParserRuleCall_1());
		}
		this_FacetNumber_1=ruleFacetNumber
		{
			$current.merge(this_FacetNumber_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSadlTypeReference
entryRuleSadlTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlTypeReferenceRule()); }
	iv_ruleSadlTypeReference=ruleSadlTypeReference
	{ $current=$iv_ruleSadlTypeReference.current; }
	EOF;

// Rule SadlTypeReference
ruleSadlTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getSadlTypeReferenceAccess().getSadlUnionTypeParserRuleCall());
	}
	this_SadlUnionType_0=ruleSadlUnionType
	{
		$current = $this_SadlUnionType_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleSadlUnionType
entryRuleSadlUnionType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlUnionTypeRule()); }
	iv_ruleSadlUnionType=ruleSadlUnionType
	{ $current=$iv_ruleSadlUnionType.current; }
	EOF;

// Rule SadlUnionType
ruleSadlUnionType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSadlUnionTypeAccess().getSadlIntersectionTypeParserRuleCall_0());
		}
		this_SadlIntersectionType_0=ruleSadlIntersectionType
		{
			$current = $this_SadlIntersectionType_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getSadlUnionTypeAccess().getSadlUnionTypeLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2=Or
			{
				newLeafNode(otherlv_2, grammarAccess.getSadlUnionTypeAccess().getOrKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSadlUnionTypeAccess().getRightSadlIntersectionTypeParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleSadlIntersectionType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSadlUnionTypeRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.SadlIntersectionType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSadlIntersectionType
entryRuleSadlIntersectionType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlIntersectionTypeRule()); }
	iv_ruleSadlIntersectionType=ruleSadlIntersectionType
	{ $current=$iv_ruleSadlIntersectionType.current; }
	EOF;

// Rule SadlIntersectionType
ruleSadlIntersectionType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSadlIntersectionTypeAccess().getSadlPrimaryTypeReferenceParserRuleCall_0());
		}
		this_SadlPrimaryTypeReference_0=ruleSadlPrimaryTypeReference
		{
			$current = $this_SadlPrimaryTypeReference_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getSadlIntersectionTypeAccess().getSadlIntersectionTypeLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2=And
			{
				newLeafNode(otherlv_2, grammarAccess.getSadlIntersectionTypeAccess().getAndKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSadlIntersectionTypeAccess().getRightSadlPrimaryTypeReferenceParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleSadlPrimaryTypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSadlIntersectionTypeRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSadlPrimaryTypeReference
entryRuleSadlPrimaryTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceRule()); }
	iv_ruleSadlPrimaryTypeReference=ruleSadlPrimaryTypeReference
	{ $current=$iv_ruleSadlPrimaryTypeReference.current; }
	EOF;

// Rule SadlPrimaryTypeReference
ruleSadlPrimaryTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlSimpleTypeReferenceAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSadlPrimaryTypeReferenceRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getTypeSadlResourceCrossReference_0_1_0());
					}
					ruleQNAME
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_list_2_0=List
					{
						newLeafNode(lv_list_2_0, grammarAccess.getSadlPrimaryTypeReferenceAccess().getListListKeyword_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSadlPrimaryTypeReferenceRule());
						}
						setWithLastConsumed($current, "list", true, "List");
					}
				)
			)?
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlPrimitiveDataTypeAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getPrimitiveTypeSadlDataTypeEnumRuleCall_1_1_0());
					}
					lv_primitiveType_4_0=ruleSadlDataType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSadlPrimaryTypeReferenceRule());
						}
						set(
							$current,
							"primitiveType",
							lv_primitiveType_4_0,
							"com.ge.research.sadl.SADL.SadlDataType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_list_5_0=List
					{
						newLeafNode(lv_list_5_0, grammarAccess.getSadlPrimaryTypeReferenceAccess().getListListKeyword_1_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSadlPrimaryTypeReferenceRule());
						}
						setWithLastConsumed($current, "list", true, "List");
					}
				)
			)?
		)
		    |
		(
			otherlv_6=LeftParenthesis
			{
				newLeafNode(otherlv_6, grammarAccess.getSadlPrimaryTypeReferenceAccess().getLeftParenthesisKeyword_2_0());
			}
			{
				newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlPropertyConditionParserRuleCall_2_1());
			}
			this_SadlPropertyCondition_7=ruleSadlPropertyCondition
			{
				$current = $this_SadlPropertyCondition_7.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_8=RightParenthesis
			{
				newLeafNode(otherlv_8, grammarAccess.getSadlPrimaryTypeReferenceAccess().getRightParenthesisKeyword_2_2());
			}
		)
		    |
		(
			otherlv_9=LeftCurlyBracket
			{
				newLeafNode(otherlv_9, grammarAccess.getSadlPrimaryTypeReferenceAccess().getLeftCurlyBracketKeyword_3_0());
			}
			{
				newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlTypeReferenceParserRuleCall_3_1());
			}
			this_SadlTypeReference_10=ruleSadlTypeReference
			{
				$current = $this_SadlTypeReference_10.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_11=RightCurlyBracket
			{
				newLeafNode(otherlv_11, grammarAccess.getSadlPrimaryTypeReferenceAccess().getRightCurlyBracketKeyword_3_2());
			}
		)
	)
;

// Entry rule entryRuleSadlPropertyDeclarationInClass
entryRuleSadlPropertyDeclarationInClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlPropertyDeclarationInClassRule()); }
	iv_ruleSadlPropertyDeclarationInClass=ruleSadlPropertyDeclarationInClass
	{ $current=$iv_ruleSadlPropertyDeclarationInClass.current; }
	EOF;

// Rule SadlPropertyDeclarationInClass
ruleSadlPropertyDeclarationInClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=Comma
			{
				newLeafNode(otherlv_0, grammarAccess.getSadlPropertyDeclarationInClassAccess().getCommaKeyword_0());
			}
		)?
		otherlv_1=Described
		{
			newLeafNode(otherlv_1, grammarAccess.getSadlPropertyDeclarationInClassAccess().getDescribedKeyword_1());
		}
		otherlv_2=By
		{
			newLeafNode(otherlv_2, grammarAccess.getSadlPropertyDeclarationInClassAccess().getByKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSadlPropertyDeclarationInClassAccess().getNameDeclarationsSadlResourceParserRuleCall_3_0());
				}
				lv_nameDeclarations_3_0=ruleSadlResource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSadlPropertyDeclarationInClassRule());
					}
					add(
						$current,
						"nameDeclarations",
						lv_nameDeclarations_3_0,
						"com.ge.research.sadl.SADL.SadlResource");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSadlPropertyDeclarationInClassAccess().getRestrictionsSadlPropertyRestrictionParserRuleCall_4_0());
				}
				lv_restrictions_4_0=ruleSadlPropertyRestriction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSadlPropertyDeclarationInClassRule());
					}
					add(
						$current,
						"restrictions",
						lv_restrictions_4_0,
						"com.ge.research.sadl.SADL.SadlPropertyRestriction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleSadlPropertyRestriction
entryRuleSadlPropertyRestriction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlPropertyRestrictionRule()); }
	iv_ruleSadlPropertyRestriction=ruleSadlPropertyRestriction
	{ $current=$iv_ruleSadlPropertyRestriction.current; }
	EOF;

// Rule SadlPropertyRestriction
ruleSadlPropertyRestriction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getSadlConditionParserRuleCall_0());
		}
		this_SadlCondition_0=ruleSadlCondition
		{
			$current = $this_SadlCondition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSadlPropertyRestrictionAccess().getSadlTypeAssociationAction_1_0(),
						$current);
				}
			)
			(
				otherlv_2=Describes
				{
					newLeafNode(otherlv_2, grammarAccess.getSadlPropertyRestrictionAccess().getDescribesKeyword_1_1_0());
				}
				    |
				otherlv_3=Of
				{
					newLeafNode(otherlv_3, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_1_1_1());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getDomainSadlTypeReferenceParserRuleCall_1_2_0());
					}
					lv_domain_4_0=ruleSadlTypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
						}
						set(
							$current,
							"domain",
							lv_domain_4_0,
							"com.ge.research.sadl.SADL.SadlTypeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSadlPropertyRestrictionAccess().getSadlRangeRestrictionAction_2_0(),
						$current);
				}
			)
			(
				otherlv_6=Has
				{
					newLeafNode(otherlv_6, grammarAccess.getSadlPropertyRestrictionAccess().getHasKeyword_2_1_0());
				}
				    |
				otherlv_7=With
				{
					newLeafNode(otherlv_7, grammarAccess.getSadlPropertyRestrictionAccess().getWithKeyword_2_1_1());
				}
			)
			(
				(
					otherlv_8=A_1
					{
						newLeafNode(otherlv_8, grammarAccess.getSadlPropertyRestrictionAccess().getAKeyword_2_2_0_0());
					}
					(
						(
							lv_singleValued_9_0=Single
							{
								newLeafNode(lv_singleValued_9_0, grammarAccess.getSadlPropertyRestrictionAccess().getSingleValuedSingleKeyword_2_2_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
								}
								setWithLastConsumed($current, "singleValued", true, "single");
							}
						)
					)
					otherlv_10=Value
					{
						newLeafNode(otherlv_10, grammarAccess.getSadlPropertyRestrictionAccess().getValueKeyword_2_2_0_2());
					}
				)
				    |
				otherlv_11=Values
				{
					newLeafNode(otherlv_11, grammarAccess.getSadlPropertyRestrictionAccess().getValuesKeyword_2_2_1());
				}
			)
			otherlv_12=Of
			{
				newLeafNode(otherlv_12, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_2_3());
			}
			otherlv_13=Type
			{
				newLeafNode(otherlv_13, grammarAccess.getSadlPropertyRestrictionAccess().getTypeKeyword_2_4());
			}
			(
				(
					(
						(
							lv_typeonly_14_1=Class
							{
								newLeafNode(lv_typeonly_14_1, grammarAccess.getSadlPropertyRestrictionAccess().getTypeonlyClassKeyword_2_5_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
								}
								setWithLastConsumed($current, "typeonly", lv_typeonly_14_1, null);
							}
							    |
							lv_typeonly_14_2=Data
							{
								newLeafNode(lv_typeonly_14_2, grammarAccess.getSadlPropertyRestrictionAccess().getTypeonlyDataKeyword_2_5_0_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
								}
								setWithLastConsumed($current, "typeonly", lv_typeonly_14_2, null);
							}
						)
					)
				)
				    |
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getRangeSadlPrimaryTypeReferenceParserRuleCall_2_5_1_0_0());
							}
							lv_range_15_0=ruleSadlPrimaryTypeReference
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
								}
								set(
									$current,
									"range",
									lv_range_15_0,
									"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getFacetSadlDataTypeFacetParserRuleCall_2_5_1_1_0());
							}
							lv_facet_16_0=ruleSadlDataTypeFacet
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
								}
								set(
									$current,
									"facet",
									lv_facet_16_0,
									"com.ge.research.sadl.SADL.SadlDataTypeFacet");
								afterParserOrEnumRuleCall();
							}
						)
					)?
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsInverseOfAction_3_0(),
						$current);
				}
			)
			otherlv_18=Is
			{
				newLeafNode(otherlv_18, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_3_1());
			}
			otherlv_19=The_1
			{
				newLeafNode(otherlv_19, grammarAccess.getSadlPropertyRestrictionAccess().getTheKeyword_3_2());
			}
			otherlv_20=Inverse
			{
				newLeafNode(otherlv_20, grammarAccess.getSadlPropertyRestrictionAccess().getInverseKeyword_3_3());
			}
			otherlv_21=Of
			{
				newLeafNode(otherlv_21, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_3_4());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getOtherPropertySadlResourceCrossReference_3_5_0());
					}
					ruleQNAME
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsTransitiveAction_4_0(),
						$current);
				}
			)
			otherlv_24=Is
			{
				newLeafNode(otherlv_24, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_4_1());
			}
			otherlv_25=Transitive
			{
				newLeafNode(otherlv_25, grammarAccess.getSadlPropertyRestrictionAccess().getTransitiveKeyword_4_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsSymmetricalAction_5_0(),
						$current);
				}
			)
			otherlv_27=Is
			{
				newLeafNode(otherlv_27, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_5_1());
			}
			otherlv_28=Symmetrical
			{
				newLeafNode(otherlv_28, grammarAccess.getSadlPropertyRestrictionAccess().getSymmetricalKeyword_5_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsAnnotationAction_6_0(),
						$current);
				}
			)
			otherlv_30=Is
			{
				newLeafNode(otherlv_30, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_6_1());
			}
			otherlv_31=A_1
			{
				newLeafNode(otherlv_31, grammarAccess.getSadlPropertyRestrictionAccess().getAKeyword_6_2());
			}
			otherlv_32=Type
			{
				newLeafNode(otherlv_32, grammarAccess.getSadlPropertyRestrictionAccess().getTypeKeyword_6_3());
			}
			otherlv_33=Of
			{
				newLeafNode(otherlv_33, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_6_4());
			}
			otherlv_34=Annotation
			{
				newLeafNode(otherlv_34, grammarAccess.getSadlPropertyRestrictionAccess().getAnnotationKeyword_6_5());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSadlPropertyRestrictionAccess().getSadlDefaultValueAction_7_0(),
						$current);
				}
			)
			otherlv_36=Has
			{
				newLeafNode(otherlv_36, grammarAccess.getSadlPropertyRestrictionAccess().getHasKeyword_7_1());
			}
			(
				otherlv_37=Level
				{
					newLeafNode(otherlv_37, grammarAccess.getSadlPropertyRestrictionAccess().getLevelKeyword_7_2_0());
				}
				(
					(
						lv_level_38_0=RULE_NUMBER
						{
							newLeafNode(lv_level_38_0, grammarAccess.getSadlPropertyRestrictionAccess().getLevelNUMBERTerminalRuleCall_7_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
							}
							setWithLastConsumed(
								$current,
								"level",
								lv_level_38_0,
								"com.ge.research.sadl.SADL.NUMBER");
						}
					)
				)
			)?
			otherlv_39=Default
			{
				newLeafNode(otherlv_39, grammarAccess.getSadlPropertyRestrictionAccess().getDefaultKeyword_7_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getDefValueSadlExplicitValueParserRuleCall_7_4_0());
					}
					lv_defValue_40_0=ruleSadlExplicitValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
						}
						set(
							$current,
							"defValue",
							lv_defValue_40_0,
							"com.ge.research.sadl.SADL.SadlExplicitValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsFunctionalAction_8_0(),
						$current);
				}
			)
			otherlv_42=Has
			{
				newLeafNode(otherlv_42, grammarAccess.getSadlPropertyRestrictionAccess().getHasKeyword_8_1());
			}
			otherlv_43=A_1
			{
				newLeafNode(otherlv_43, grammarAccess.getSadlPropertyRestrictionAccess().getAKeyword_8_2());
			}
			otherlv_44=Single
			{
				newLeafNode(otherlv_44, grammarAccess.getSadlPropertyRestrictionAccess().getSingleKeyword_8_3());
			}
			(
				(
					(
						lv_inverse_45_0=Subject
						{
							newLeafNode(lv_inverse_45_0, grammarAccess.getSadlPropertyRestrictionAccess().getInverseSubjectKeyword_8_4_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
							}
							setWithLastConsumed($current, "inverse", true, "subject");
						}
					)
				)
				    |
				otherlv_46=Value
				{
					newLeafNode(otherlv_46, grammarAccess.getSadlPropertyRestrictionAccess().getValueKeyword_8_4_1());
				}
			)?
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSadlPropertyRestrictionAccess().getSadlMustBeOneOfAction_9_0(),
						$current);
				}
			)
			otherlv_48=Must
			{
				newLeafNode(otherlv_48, grammarAccess.getSadlPropertyRestrictionAccess().getMustKeyword_9_1());
			}
			otherlv_49=Be
			{
				newLeafNode(otherlv_49, grammarAccess.getSadlPropertyRestrictionAccess().getBeKeyword_9_2());
			}
			otherlv_50=One
			{
				newLeafNode(otherlv_50, grammarAccess.getSadlPropertyRestrictionAccess().getOneKeyword_9_3());
			}
			otherlv_51=Of
			{
				newLeafNode(otherlv_51, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_9_4());
			}
			otherlv_52=LeftCurlyBracket
			{
				newLeafNode(otherlv_52, grammarAccess.getSadlPropertyRestrictionAccess().getLeftCurlyBracketKeyword_9_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_9_6_0());
					}
					lv_values_53_0=ruleSadlExplicitValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
						}
						add(
							$current,
							"values",
							lv_values_53_0,
							"com.ge.research.sadl.SADL.SadlExplicitValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_54=Comma
				{
					newLeafNode(otherlv_54, grammarAccess.getSadlPropertyRestrictionAccess().getCommaKeyword_9_7_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_9_7_1_0());
						}
						lv_values_55_0=ruleSadlExplicitValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
							}
							add(
								$current,
								"values",
								lv_values_55_0,
								"com.ge.research.sadl.SADL.SadlExplicitValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_56=RightCurlyBracket
			{
				newLeafNode(otherlv_56, grammarAccess.getSadlPropertyRestrictionAccess().getRightCurlyBracketKeyword_9_8());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSadlPropertyRestrictionAccess().getSadlCanOnlyBeOneOfAction_10_0(),
						$current);
				}
			)
			otherlv_58=Can
			{
				newLeafNode(otherlv_58, grammarAccess.getSadlPropertyRestrictionAccess().getCanKeyword_10_1());
			}
			otherlv_59=Only
			{
				newLeafNode(otherlv_59, grammarAccess.getSadlPropertyRestrictionAccess().getOnlyKeyword_10_2());
			}
			otherlv_60=Be
			{
				newLeafNode(otherlv_60, grammarAccess.getSadlPropertyRestrictionAccess().getBeKeyword_10_3());
			}
			otherlv_61=One
			{
				newLeafNode(otherlv_61, grammarAccess.getSadlPropertyRestrictionAccess().getOneKeyword_10_4());
			}
			otherlv_62=Of
			{
				newLeafNode(otherlv_62, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_10_5());
			}
			otherlv_63=LeftCurlyBracket
			{
				newLeafNode(otherlv_63, grammarAccess.getSadlPropertyRestrictionAccess().getLeftCurlyBracketKeyword_10_6());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_10_7_0());
					}
					lv_values_64_0=ruleSadlExplicitValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
						}
						add(
							$current,
							"values",
							lv_values_64_0,
							"com.ge.research.sadl.SADL.SadlExplicitValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_65=Comma
				{
					newLeafNode(otherlv_65, grammarAccess.getSadlPropertyRestrictionAccess().getCommaKeyword_10_8_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_10_8_1_0());
						}
						lv_values_66_0=ruleSadlExplicitValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
							}
							add(
								$current,
								"values",
								lv_values_66_0,
								"com.ge.research.sadl.SADL.SadlExplicitValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_67=RightCurlyBracket
			{
				newLeafNode(otherlv_67, grammarAccess.getSadlPropertyRestrictionAccess().getRightCurlyBracketKeyword_10_9());
			}
		)
	)
;

// Entry rule entryRuleSadlCondition
entryRuleSadlCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlConditionRule()); }
	iv_ruleSadlCondition=ruleSadlCondition
	{ $current=$iv_ruleSadlCondition.current; }
	EOF;

// Rule SadlCondition
ruleSadlCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSadlConditionAccess().getSadlAllValuesConditionParserRuleCall_0());
		}
		this_SadlAllValuesCondition_0=ruleSadlAllValuesCondition
		{
			$current = $this_SadlAllValuesCondition_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSadlConditionAccess().getSadlHasValueConditionParserRuleCall_1());
		}
		this_SadlHasValueCondition_1=ruleSadlHasValueCondition
		{
			$current = $this_SadlHasValueCondition_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSadlConditionAccess().getSadlCardinalityConditionParserRuleCall_2());
		}
		this_SadlCardinalityCondition_2=ruleSadlCardinalityCondition
		{
			$current = $this_SadlCardinalityCondition_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSadlAllValuesCondition
entryRuleSadlAllValuesCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlAllValuesConditionRule()); }
	iv_ruleSadlAllValuesCondition=ruleSadlAllValuesCondition
	{ $current=$iv_ruleSadlAllValuesCondition.current; }
	EOF;

// Rule SadlAllValuesCondition
ruleSadlAllValuesCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Only
		{
			newLeafNode(otherlv_0, grammarAccess.getSadlAllValuesConditionAccess().getOnlyKeyword_0());
		}
		(
			otherlv_1=Has
			{
				newLeafNode(otherlv_1, grammarAccess.getSadlAllValuesConditionAccess().getHasKeyword_1_0());
			}
			    |
			otherlv_2=With
			{
				newLeafNode(otherlv_2, grammarAccess.getSadlAllValuesConditionAccess().getWithKeyword_1_1());
			}
		)
		otherlv_3=Values
		{
			newLeafNode(otherlv_3, grammarAccess.getSadlAllValuesConditionAccess().getValuesKeyword_2());
		}
		otherlv_4=Of
		{
			newLeafNode(otherlv_4, grammarAccess.getSadlAllValuesConditionAccess().getOfKeyword_3());
		}
		otherlv_5=Type
		{
			newLeafNode(otherlv_5, grammarAccess.getSadlAllValuesConditionAccess().getTypeKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSadlAllValuesConditionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_5_0());
				}
				lv_type_6_0=ruleSadlPrimaryTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSadlAllValuesConditionRule());
					}
					set(
						$current,
						"type",
						lv_type_6_0,
						"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSadlAllValuesConditionAccess().getFacetSadlDataTypeFacetParserRuleCall_6_0());
				}
				lv_facet_7_0=ruleSadlDataTypeFacet
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSadlAllValuesConditionRule());
					}
					set(
						$current,
						"facet",
						lv_facet_7_0,
						"com.ge.research.sadl.SADL.SadlDataTypeFacet");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSadlHasValueCondition
entryRuleSadlHasValueCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlHasValueConditionRule()); }
	iv_ruleSadlHasValueCondition=ruleSadlHasValueCondition
	{ $current=$iv_ruleSadlHasValueCondition.current; }
	EOF;

// Rule SadlHasValueCondition
ruleSadlHasValueCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Always
		{
			newLeafNode(otherlv_0, grammarAccess.getSadlHasValueConditionAccess().getAlwaysKeyword_0());
		}
		(
			otherlv_1=Has
			{
				newLeafNode(otherlv_1, grammarAccess.getSadlHasValueConditionAccess().getHasKeyword_1_0());
			}
			    |
			otherlv_2=With
			{
				newLeafNode(otherlv_2, grammarAccess.getSadlHasValueConditionAccess().getWithKeyword_1_1());
			}
		)
		otherlv_3=Value
		{
			newLeafNode(otherlv_3, grammarAccess.getSadlHasValueConditionAccess().getValueKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSadlHasValueConditionAccess().getRestrictionSadlExplicitValueParserRuleCall_3_0_0());
					}
					lv_restriction_4_0=ruleSadlExplicitValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSadlHasValueConditionRule());
						}
						set(
							$current,
							"restriction",
							lv_restriction_4_0,
							"com.ge.research.sadl.SADL.SadlExplicitValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_5=LeftParenthesis
				{
					newLeafNode(otherlv_5, grammarAccess.getSadlHasValueConditionAccess().getLeftParenthesisKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSadlHasValueConditionAccess().getRestrictionSadlNestedInstanceParserRuleCall_3_1_1_0());
						}
						lv_restriction_6_0=ruleSadlNestedInstance
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSadlHasValueConditionRule());
							}
							set(
								$current,
								"restriction",
								lv_restriction_6_0,
								"com.ge.research.sadl.SADL.SadlNestedInstance");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_7=RightParenthesis
				{
					newLeafNode(otherlv_7, grammarAccess.getSadlHasValueConditionAccess().getRightParenthesisKeyword_3_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleSadlCardinalityCondition
entryRuleSadlCardinalityCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlCardinalityConditionRule()); }
	iv_ruleSadlCardinalityCondition=ruleSadlCardinalityCondition
	{ $current=$iv_ruleSadlCardinalityCondition.current; }
	EOF;

// Rule SadlCardinalityCondition
ruleSadlCardinalityCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=Has
			{
				newLeafNode(otherlv_0, grammarAccess.getSadlCardinalityConditionAccess().getHasKeyword_0_0());
			}
			    |
			otherlv_1=With
			{
				newLeafNode(otherlv_1, grammarAccess.getSadlCardinalityConditionAccess().getWithKeyword_0_1());
			}
		)
		(
			(
				otherlv_2=At
				{
					newLeafNode(otherlv_2, grammarAccess.getSadlCardinalityConditionAccess().getAtKeyword_1_0_0());
				}
				(
					(
						(
							lv_operator_3_1=Least
							{
								newLeafNode(lv_operator_3_1, grammarAccess.getSadlCardinalityConditionAccess().getOperatorLeastKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSadlCardinalityConditionRule());
								}
								setWithLastConsumed($current, "operator", lv_operator_3_1, null);
							}
							    |
							lv_operator_3_2=Most
							{
								newLeafNode(lv_operator_3_2, grammarAccess.getSadlCardinalityConditionAccess().getOperatorMostKeyword_1_0_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSadlCardinalityConditionRule());
								}
								setWithLastConsumed($current, "operator", lv_operator_3_2, null);
							}
						)
					)
				)
			)
			    |
			otherlv_4=Exactly
			{
				newLeafNode(otherlv_4, grammarAccess.getSadlCardinalityConditionAccess().getExactlyKeyword_1_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSadlCardinalityConditionAccess().getCardinalityCardinalityValueParserRuleCall_2_0());
				}
				lv_cardinality_5_0=ruleCardinalityValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSadlCardinalityConditionRule());
					}
					set(
						$current,
						"cardinality",
						lv_cardinality_5_0,
						"com.ge.research.sadl.SADL.CardinalityValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=Value
			{
				newLeafNode(otherlv_6, grammarAccess.getSadlCardinalityConditionAccess().getValueKeyword_3_0());
			}
			    |
			otherlv_7=Values
			{
				newLeafNode(otherlv_7, grammarAccess.getSadlCardinalityConditionAccess().getValuesKeyword_3_1());
			}
		)
		(
			otherlv_8=Of
			{
				newLeafNode(otherlv_8, grammarAccess.getSadlCardinalityConditionAccess().getOfKeyword_4_0());
			}
			otherlv_9=Type
			{
				newLeafNode(otherlv_9, grammarAccess.getSadlCardinalityConditionAccess().getTypeKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSadlCardinalityConditionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_4_2_0());
					}
					lv_type_10_0=ruleSadlPrimaryTypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSadlCardinalityConditionRule());
						}
						set(
							$current,
							"type",
							lv_type_10_0,
							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSadlCardinalityConditionAccess().getFacetSadlDataTypeFacetParserRuleCall_4_3_0());
					}
					lv_facet_11_0=ruleSadlDataTypeFacet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSadlCardinalityConditionRule());
						}
						set(
							$current,
							"facet",
							lv_facet_11_0,
							"com.ge.research.sadl.SADL.SadlDataTypeFacet");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)?
	)
;

// Entry rule entryRuleCardinalityValue
entryRuleCardinalityValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCardinalityValueRule()); }
	iv_ruleCardinalityValue=ruleCardinalityValue
	{ $current=$iv_ruleCardinalityValue.current.getText(); }
	EOF;

// Rule CardinalityValue
ruleCardinalityValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_NUMBER_0=RULE_NUMBER
		{
			$current.merge(this_NUMBER_0);
		}
		{
			newLeafNode(this_NUMBER_0, grammarAccess.getCardinalityValueAccess().getNUMBERTerminalRuleCall_0());
		}
		    |
		kw=One
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCardinalityValueAccess().getOneKeyword_1());
		}
	)
;

// Entry rule entryRuleSadlExplicitValue
entryRuleSadlExplicitValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlExplicitValueRule()); }
	iv_ruleSadlExplicitValue=ruleSadlExplicitValue
	{ $current=$iv_ruleSadlExplicitValue.current; }
	EOF;

// Rule SadlExplicitValue
ruleSadlExplicitValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSadlExplicitValueAccess().getSadlExplicitValueLiteralParserRuleCall_0());
		}
		this_SadlExplicitValueLiteral_0=ruleSadlExplicitValueLiteral
		{
			$current = $this_SadlExplicitValueLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			((
				(
				)
				(
					(
						(
							HyphenMinus
							    |
							Not
						)
					)
				)
				(
					(
						ruleSadlExplicitValueLiteral
					)
				)
			)
			)=>
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getSadlExplicitValueAccess().getSadlUnaryExpressionAction_1_0_0(),
							$current);
					}
				)
				(
					(
						(
							lv_operator_2_1=HyphenMinus
							{
								newLeafNode(lv_operator_2_1, grammarAccess.getSadlExplicitValueAccess().getOperatorHyphenMinusKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSadlExplicitValueRule());
								}
								setWithLastConsumed($current, "operator", lv_operator_2_1, null);
							}
							    |
							lv_operator_2_2=Not
							{
								newLeafNode(lv_operator_2_2, grammarAccess.getSadlExplicitValueAccess().getOperatorNotKeyword_1_0_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSadlExplicitValueRule());
								}
								setWithLastConsumed($current, "operator", lv_operator_2_2, null);
							}
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSadlExplicitValueAccess().getValueSadlExplicitValueLiteralParserRuleCall_1_0_2_0());
						}
						lv_value_3_0=ruleSadlExplicitValueLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSadlExplicitValueRule());
							}
							set(
								$current,
								"value",
								lv_value_3_0,
								"com.ge.research.sadl.SADL.SadlExplicitValueLiteral");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleSadlExplicitValueLiteral
entryRuleSadlExplicitValueLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlExplicitValueLiteralRule()); }
	iv_ruleSadlExplicitValueLiteral=ruleSadlExplicitValueLiteral
	{ $current=$iv_ruleSadlExplicitValueLiteral.current; }
	EOF;

// Rule SadlExplicitValueLiteral
ruleSadlExplicitValueLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getSadlResourceParserRuleCall_0());
		}
		this_SadlResource_0=ruleSadlResource
		{
			$current = $this_SadlResource_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlNumberLiteralAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getLiteralNumberAnyNumberParserRuleCall_1_1_0());
					}
					lv_literalNumber_2_0=ruleAnyNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSadlExplicitValueLiteralRule());
						}
						set(
							$current,
							"literalNumber",
							lv_literalNumber_2_0,
							"com.ge.research.sadl.SADL.AnyNumber");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(RULE_STRING | RULE_ID)=>
				(
					{
						newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getUnitUNITParserRuleCall_1_2_0());
					}
					lv_unit_3_0=ruleUNIT
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSadlExplicitValueLiteralRule());
						}
						set(
							$current,
							"unit",
							lv_unit_3_0,
							"com.ge.research.sadl.SADL.UNIT");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlStringLiteralAction_2_0(),
						$current);
				}
			)
			(
				(
					lv_literalString_5_0=RULE_STRING
					{
						newLeafNode(lv_literalString_5_0, grammarAccess.getSadlExplicitValueLiteralAccess().getLiteralStringSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
						}
						setWithLastConsumed(
							$current,
							"literalString",
							lv_literalString_5_0,
							"com.ge.research.sadl.SADL.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlBooleanLiteralAction_3_0(),
						$current);
				}
			)
			(
				(
					(
						lv_truethy_7_0=True
						{
							newLeafNode(lv_truethy_7_0, grammarAccess.getSadlExplicitValueLiteralAccess().getTruethyTrueKeyword_3_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
							}
							setWithLastConsumed($current, "truethy", true, "true");
						}
					)
				)
				    |
				otherlv_8=False
				{
					newLeafNode(otherlv_8, grammarAccess.getSadlExplicitValueLiteralAccess().getFalseKeyword_3_1_1());
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getSadlValueListParserRuleCall_4());
		}
		this_SadlValueList_9=ruleSadlValueList
		{
			$current = $this_SadlValueList_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlConstantLiteralAction_5_0(),
						$current);
				}
			)
			(
				(
					(
						lv_term_11_1=PI
						{
							newLeafNode(lv_term_11_1, grammarAccess.getSadlExplicitValueLiteralAccess().getTermPIKeyword_5_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
							}
							setWithLastConsumed($current, "term", lv_term_11_1, null);
						}
						    |
						lv_term_11_2=E_1
						{
							newLeafNode(lv_term_11_2, grammarAccess.getSadlExplicitValueLiteralAccess().getTermEKeyword_5_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
							}
							setWithLastConsumed($current, "term", lv_term_11_2, null);
						}
						    |
						lv_term_11_3=Known
						{
							newLeafNode(lv_term_11_3, grammarAccess.getSadlExplicitValueLiteralAccess().getTermKnownKeyword_5_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
							}
							setWithLastConsumed($current, "term", lv_term_11_3, null);
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleUNIT
entryRuleUNIT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getUNITRule()); }
	iv_ruleUNIT=ruleUNIT
	{ $current=$iv_ruleUNIT.current.getText(); }
	EOF;

// Rule UNIT
ruleUNIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getUNITAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getUNITAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleSadlValueList
entryRuleSadlValueList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSadlValueListRule()); }
	iv_ruleSadlValueList=ruleSadlValueList
	{ $current=$iv_ruleSadlValueList.current; }
	EOF;

// Rule SadlValueList
ruleSadlValueList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSadlValueListAccess().getSadlValueListAction_0(),
					$current);
			}
		)
		otherlv_1=LeftSquareBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getSadlValueListAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getSadlValueListAccess().getExplicitValuesSadlExplicitValueParserRuleCall_2_0_0());
					}
					lv_explicitValues_2_0=ruleSadlExplicitValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSadlValueListRule());
						}
						add(
							$current,
							"explicitValues",
							lv_explicitValues_2_0,
							"com.ge.research.sadl.SADL.SadlExplicitValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=Comma
				{
					newLeafNode(otherlv_3, grammarAccess.getSadlValueListAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSadlValueListAccess().getExplicitValuesSadlExplicitValueParserRuleCall_2_1_1_0());
						}
						lv_explicitValues_4_0=ruleSadlExplicitValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSadlValueListRule());
							}
							add(
								$current,
								"explicitValues",
								lv_explicitValues_4_0,
								"com.ge.research.sadl.SADL.SadlExplicitValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=RightSquareBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getSadlValueListAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleAnArticle
entryRuleAnArticle returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAnArticleRule()); }
	iv_ruleAnArticle=ruleAnArticle
	{ $current=$iv_ruleAnArticle.current.getText(); }
	EOF;

// Rule AnArticle
ruleAnArticle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAnArticleAccess().getIndefiniteArticleParserRuleCall_0());
		}
		this_IndefiniteArticle_0=ruleIndefiniteArticle
		{
			$current.merge(this_IndefiniteArticle_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAnArticleAccess().getDefiniteArticleParserRuleCall_1());
		}
		this_DefiniteArticle_1=ruleDefiniteArticle
		{
			$current.merge(this_DefiniteArticle_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIndefiniteArticle
entryRuleIndefiniteArticle returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIndefiniteArticleRule()); }
	iv_ruleIndefiniteArticle=ruleIndefiniteArticle
	{ $current=$iv_ruleIndefiniteArticle.current.getText(); }
	EOF;

// Rule IndefiniteArticle
ruleIndefiniteArticle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=A
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAKeyword_0());
		}
		    |
		kw=A_1
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAKeyword_1());
		}
		    |
		kw=An
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnKeyword_2());
		}
		    |
		kw=An_1
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnKeyword_3());
		}
		    |
		kw=Any
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnyKeyword_4());
		}
		    |
		kw=Some
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getSomeKeyword_5());
		}
		    |
		kw=Another
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnotherKeyword_6());
		}
	)
;

// Entry rule entryRuleDefiniteArticle
entryRuleDefiniteArticle returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDefiniteArticleRule()); }
	iv_ruleDefiniteArticle=ruleDefiniteArticle
	{ $current=$iv_ruleDefiniteArticle.current.getText(); }
	EOF;

// Rule DefiniteArticle
ruleDefiniteArticle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=The
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDefiniteArticleAccess().getTheKeyword_0());
		}
		    |
		kw=The_1
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getDefiniteArticleAccess().getTheKeyword_1());
		}
	)
;

// Entry rule entryRuleOrdinal
entryRuleOrdinal returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOrdinalRule()); }
	iv_ruleOrdinal=ruleOrdinal
	{ $current=$iv_ruleOrdinal.current.getText(); }
	EOF;

// Rule Ordinal
ruleOrdinal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=First
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOrdinalAccess().getFirstKeyword_0());
		}
		    |
		kw=Second
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOrdinalAccess().getSecondKeyword_1());
		}
		    |
		kw=Other
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOrdinalAccess().getOtherKeyword_2());
		}
		    |
		kw=Third
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOrdinalAccess().getThirdKeyword_3());
		}
		    |
		kw=Fourth
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOrdinalAccess().getFourthKeyword_4());
		}
		    |
		kw=Fifth
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOrdinalAccess().getFifthKeyword_5());
		}
		    |
		kw=Sixth
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOrdinalAccess().getSixthKeyword_6());
		}
		    |
		kw=Seventh
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOrdinalAccess().getSeventhKeyword_7());
		}
		    |
		kw=Eighth
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOrdinalAccess().getEighthKeyword_8());
		}
		    |
		kw=Ninth
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOrdinalAccess().getNinthKeyword_9());
		}
		    |
		kw=Tenth
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOrdinalAccess().getTenthKeyword_10());
		}
	)
;

// Entry rule entryRuleNamedStructureAnnotation
entryRuleNamedStructureAnnotation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamedStructureAnnotationRule()); }
	iv_ruleNamedStructureAnnotation=ruleNamedStructureAnnotation
	{ $current=$iv_ruleNamedStructureAnnotation.current; }
	EOF;

// Rule NamedStructureAnnotation
ruleNamedStructureAnnotation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=Comma
			{
				newLeafNode(otherlv_0, grammarAccess.getNamedStructureAnnotationAccess().getCommaKeyword_0());
			}
		)?
		otherlv_1=LeftParenthesis
		{
			newLeafNode(otherlv_1, grammarAccess.getNamedStructureAnnotationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNamedStructureAnnotationAccess().getTypeSadlResourceParserRuleCall_2_0());
				}
				lv_type_2_0=ruleSadlResource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamedStructureAnnotationRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"com.ge.research.sadl.SADL.SadlResource");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNamedStructureAnnotationAccess().getContentsSadlExplicitValueParserRuleCall_3_0());
				}
				lv_contents_3_0=ruleSadlExplicitValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamedStructureAnnotationRule());
					}
					add(
						$current,
						"contents",
						lv_contents_3_0,
						"com.ge.research.sadl.SADL.SadlExplicitValue");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=Comma
			{
				newLeafNode(otherlv_4, grammarAccess.getNamedStructureAnnotationAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNamedStructureAnnotationAccess().getContentsSadlExplicitValueParserRuleCall_4_1_0());
					}
					lv_contents_5_0=ruleSadlExplicitValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNamedStructureAnnotationRule());
						}
						add(
							$current,
							"contents",
							lv_contents_5_0,
							"com.ge.research.sadl.SADL.SadlExplicitValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=RightParenthesis
		{
			newLeafNode(otherlv_6, grammarAccess.getNamedStructureAnnotationAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleConstructExpression
entryRuleConstructExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstructExpressionRule()); }
	iv_ruleConstructExpression=ruleConstructExpression
	{ $current=$iv_ruleConstructExpression.current; }
	EOF;

// Rule ConstructExpression
ruleConstructExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConstructExpressionAccess().getConstructExpressionAction_0(),
					$current);
			}
		)
		otherlv_1=Construct
		{
			newLeafNode(otherlv_1, grammarAccess.getConstructExpressionAccess().getConstructKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructExpressionAccess().getSubjSadlResourceParserRuleCall_2_0());
				}
				lv_subj_2_0=ruleSadlResource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
					}
					set(
						$current,
						"subj",
						lv_subj_2_0,
						"com.ge.research.sadl.SADL.SadlResource");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=Comma
			{
				newLeafNode(otherlv_3, grammarAccess.getConstructExpressionAccess().getCommaKeyword_3());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructExpressionAccess().getPredSadlResourceParserRuleCall_4_0());
				}
				lv_pred_4_0=ruleSadlResource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
					}
					set(
						$current,
						"pred",
						lv_pred_4_0,
						"com.ge.research.sadl.SADL.SadlResource");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=Comma
			{
				newLeafNode(otherlv_5, grammarAccess.getConstructExpressionAccess().getCommaKeyword_5());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructExpressionAccess().getObjSadlResourceParserRuleCall_6_0());
				}
				lv_obj_6_0=ruleSadlResource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
					}
					set(
						$current,
						"obj",
						lv_obj_6_0,
						"com.ge.research.sadl.SADL.SadlResource");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=Where
		{
			newLeafNode(otherlv_7, grammarAccess.getConstructExpressionAccess().getWhereKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructExpressionAccess().getWhereExpressionExpressionParserRuleCall_8_0());
				}
				lv_whereExpression_8_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
					}
					set(
						$current,
						"whereExpression",
						lv_whereExpression_8_0,
						"com.ge.research.sadl.SADL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAskExpression
entryRuleAskExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAskExpressionRule()); }
	iv_ruleAskExpression=ruleAskExpression
	{ $current=$iv_ruleAskExpression.current; }
	EOF;

// Rule AskExpression
ruleAskExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAskExpressionAccess().getAskExpressionAction_0(),
					$current);
			}
		)
		otherlv_1=Ask_1
		{
			newLeafNode(otherlv_1, grammarAccess.getAskExpressionAccess().getAskKeyword_1());
		}
		otherlv_2=Where
		{
			newLeafNode(otherlv_2, grammarAccess.getAskExpressionAccess().getWhereKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAskExpressionAccess().getWhereExpressionExpressionParserRuleCall_3_0());
				}
				lv_whereExpression_3_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAskExpressionRule());
					}
					set(
						$current,
						"whereExpression",
						lv_whereExpression_3_0,
						"com.ge.research.sadl.SADL.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleUpdateExpression
entryRuleUpdateExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdateExpressionRule()); }
	iv_ruleUpdateExpression=ruleUpdateExpression
	{ $current=$iv_ruleUpdateExpression.current; }
	EOF;

// Rule UpdateExpression
ruleUpdateExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUpdateExpressionAccess().getUpdateExpressionAction_0(),
					$current);
			}
		)
		(
			otherlv_1=Delete
			{
				newLeafNode(otherlv_1, grammarAccess.getUpdateExpressionAccess().getDeleteKeyword_1_0());
			}
			(
				(
					lv_dData_2_0=Data
					{
						newLeafNode(lv_dData_2_0, grammarAccess.getUpdateExpressionAccess().getDDataDataKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUpdateExpressionRule());
						}
						setWithLastConsumed($current, "dData", lv_dData_2_0, "data");
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateExpressionAccess().getDeleteExpressionExpressionParserRuleCall_1_2_0());
					}
					lv_deleteExpression_3_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateExpressionRule());
						}
						set(
							$current,
							"deleteExpression",
							lv_deleteExpression_3_0,
							"com.ge.research.sadl.SADL.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4=Insert
			{
				newLeafNode(otherlv_4, grammarAccess.getUpdateExpressionAccess().getInsertKeyword_2_0());
			}
			(
				(
					lv_iData_5_0=Data
					{
						newLeafNode(lv_iData_5_0, grammarAccess.getUpdateExpressionAccess().getIDataDataKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUpdateExpressionRule());
						}
						setWithLastConsumed($current, "iData", lv_iData_5_0, "data");
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateExpressionAccess().getInsertExpressionExpressionParserRuleCall_2_2_0());
					}
					lv_insertExpression_6_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateExpressionRule());
						}
						set(
							$current,
							"insertExpression",
							lv_insertExpression_6_0,
							"com.ge.research.sadl.SADL.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7=Where
			{
				newLeafNode(otherlv_7, grammarAccess.getUpdateExpressionAccess().getWhereKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateExpressionAccess().getWhereExpressionExpressionParserRuleCall_3_1_0());
					}
					lv_whereExpression_8_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateExpressionRule());
						}
						set(
							$current,
							"whereExpression",
							lv_whereExpression_8_0,
							"com.ge.research.sadl.SADL.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getSelectExpressionParserRuleCall());
	}
	this_SelectExpression_0=norm3_SelectExpression
	{
		$current = $this_SelectExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleNestedExpression
entryRuleNestedExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNestedExpressionRule()); }
	iv_ruleNestedExpression=ruleNestedExpression
	{ $current=$iv_ruleNestedExpression.current; }
	EOF;

// Rule NestedExpression
ruleNestedExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getNestedExpressionAccess().getSelectExpressionParserRuleCall());
	}
	this_SelectExpression_0=norm1_SelectExpression
	{
		$current = $this_SelectExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleSelectExpression
entryRuleSelectExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectExpressionRule()); }
	iv_ruleSelectExpression=ruleSelectExpression
	{ $current=$iv_ruleSelectExpression.current; }
	EOF;

// Rule SelectExpression
ruleSelectExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(Select)=>
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
							$current);
					}
				)
				otherlv_1=Select
				{
					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
				}
				(
					(
						lv_distinct_2_0=Distinct
						{
							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSelectExpressionRule());
							}
							setWithLastConsumed($current, "distinct", true, "distinct");
						}
					)
				)?
				(
					otherlv_3=Asterisk
					{
						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
					}
					    |
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
								}
								lv_selectFrom_4_0=ruleSadlResource
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
									}
									add(
										$current,
										"selectFrom",
										lv_selectFrom_4_0,
										"com.ge.research.sadl.SADL.SadlResource");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							(
								otherlv_5=Comma
								{
									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
								}
							)?
							(
								(
									{
										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
									}
									lv_selectFrom_6_0=ruleSadlResource
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
										}
										add(
											$current,
											"selectFrom",
											lv_selectFrom_6_0,
											"com.ge.research.sadl.SADL.SadlResource");
										afterParserOrEnumRuleCall();
									}
								)
							)
						)*
					)
				)
				otherlv_7=Where
				{
					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
						}
						lv_whereExpression_8_0=ruleExpressionParameterized
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
							}
							set(
								$current,
								"whereExpression",
								lv_whereExpression_8_0,
								"com.ge.research.sadl.SADL.ExpressionParameterized");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							lv_orderby_9_0=Order
							{
								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSelectExpressionRule());
								}
								setWithLastConsumed($current, "orderby", lv_orderby_9_0, "order");
							}
						)
					)
					otherlv_10=By
					{
						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
							}
							lv_orderList_11_0=ruleOrderElement
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
								}
								add(
									$current,
									"orderList",
									lv_orderList_11_0,
									"com.ge.research.sadl.SADL.OrderElement");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID)=>
						(
							(
								otherlv_12=Comma
								{
									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
								}
							)?
							(
								(
									{
										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
									}
									lv_orderList_13_0=ruleOrderElement
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
										}
										add(
											$current,
											"orderList",
											lv_orderList_13_0,
											"com.ge.research.sadl.SADL.OrderElement");
										afterParserOrEnumRuleCall();
									}
								)
							)
						)
					)*
				)?
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
		}
		this_ExpressionParameterized_14=ruleExpressionParameterized
		{
			$current = $this_ExpressionParameterized_14.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule SelectExpression
norm1_SelectExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(Select)=>
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
							$current);
					}
				)
				otherlv_1=Select
				{
					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
				}
				(
					(
						lv_distinct_2_0=Distinct
						{
							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSelectExpressionRule());
							}
							setWithLastConsumed($current, "distinct", true, "distinct");
						}
					)
				)?
				(
					otherlv_3=Asterisk
					{
						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
					}
					    |
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
								}
								lv_selectFrom_4_0=ruleSadlResource
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
									}
									add(
										$current,
										"selectFrom",
										lv_selectFrom_4_0,
										"com.ge.research.sadl.SADL.SadlResource");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							(
								otherlv_5=Comma
								{
									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
								}
							)?
							(
								(
									{
										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
									}
									lv_selectFrom_6_0=ruleSadlResource
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
										}
										add(
											$current,
											"selectFrom",
											lv_selectFrom_6_0,
											"com.ge.research.sadl.SADL.SadlResource");
										afterParserOrEnumRuleCall();
									}
								)
							)
						)*
					)
				)
				otherlv_7=Where
				{
					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
						}
						lv_whereExpression_8_0=norm1_ExpressionParameterized
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
							}
							set(
								$current,
								"whereExpression",
								lv_whereExpression_8_0,
								"com.ge.research.sadl.SADL.ExpressionParameterized");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							lv_orderby_9_0=Order
							{
								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSelectExpressionRule());
								}
								setWithLastConsumed($current, "orderby", lv_orderby_9_0, "order");
							}
						)
					)
					otherlv_10=By
					{
						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
							}
							lv_orderList_11_0=ruleOrderElement
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
								}
								add(
									$current,
									"orderList",
									lv_orderList_11_0,
									"com.ge.research.sadl.SADL.OrderElement");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID)=>
						(
							(
								otherlv_12=Comma
								{
									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
								}
							)?
							(
								(
									{
										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
									}
									lv_orderList_13_0=ruleOrderElement
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
										}
										add(
											$current,
											"orderList",
											lv_orderList_13_0,
											"com.ge.research.sadl.SADL.OrderElement");
										afterParserOrEnumRuleCall();
									}
								)
							)
						)
					)*
				)?
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
		}
		this_ExpressionParameterized_14=norm1_ExpressionParameterized
		{
			$current = $this_ExpressionParameterized_14.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule SelectExpression
norm2_SelectExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(Select)=>
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
							$current);
					}
				)
				otherlv_1=Select
				{
					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
				}
				(
					(
						lv_distinct_2_0=Distinct
						{
							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSelectExpressionRule());
							}
							setWithLastConsumed($current, "distinct", true, "distinct");
						}
					)
				)?
				(
					otherlv_3=Asterisk
					{
						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
					}
					    |
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
								}
								lv_selectFrom_4_0=ruleSadlResource
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
									}
									add(
										$current,
										"selectFrom",
										lv_selectFrom_4_0,
										"com.ge.research.sadl.SADL.SadlResource");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							(
								otherlv_5=Comma
								{
									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
								}
							)?
							(
								(
									{
										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
									}
									lv_selectFrom_6_0=ruleSadlResource
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
										}
										add(
											$current,
											"selectFrom",
											lv_selectFrom_6_0,
											"com.ge.research.sadl.SADL.SadlResource");
										afterParserOrEnumRuleCall();
									}
								)
							)
						)*
					)
				)
				otherlv_7=Where
				{
					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
						}
						lv_whereExpression_8_0=norm2_ExpressionParameterized
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
							}
							set(
								$current,
								"whereExpression",
								lv_whereExpression_8_0,
								"com.ge.research.sadl.SADL.ExpressionParameterized");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							lv_orderby_9_0=Order
							{
								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSelectExpressionRule());
								}
								setWithLastConsumed($current, "orderby", lv_orderby_9_0, "order");
							}
						)
					)
					otherlv_10=By
					{
						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
							}
							lv_orderList_11_0=ruleOrderElement
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
								}
								add(
									$current,
									"orderList",
									lv_orderList_11_0,
									"com.ge.research.sadl.SADL.OrderElement");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID)=>
						(
							(
								otherlv_12=Comma
								{
									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
								}
							)?
							(
								(
									{
										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
									}
									lv_orderList_13_0=ruleOrderElement
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
										}
										add(
											$current,
											"orderList",
											lv_orderList_13_0,
											"com.ge.research.sadl.SADL.OrderElement");
										afterParserOrEnumRuleCall();
									}
								)
							)
						)
					)*
				)?
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
		}
		this_ExpressionParameterized_14=norm2_ExpressionParameterized
		{
			$current = $this_ExpressionParameterized_14.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule SelectExpression
norm3_SelectExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(Select)=>
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
							$current);
					}
				)
				otherlv_1=Select
				{
					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
				}
				(
					(
						lv_distinct_2_0=Distinct
						{
							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getSelectExpressionRule());
							}
							setWithLastConsumed($current, "distinct", true, "distinct");
						}
					)
				)?
				(
					otherlv_3=Asterisk
					{
						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
					}
					    |
					(
						(
							(
								{
									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
								}
								lv_selectFrom_4_0=ruleSadlResource
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
									}
									add(
										$current,
										"selectFrom",
										lv_selectFrom_4_0,
										"com.ge.research.sadl.SADL.SadlResource");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							(
								otherlv_5=Comma
								{
									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
								}
							)?
							(
								(
									{
										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
									}
									lv_selectFrom_6_0=ruleSadlResource
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
										}
										add(
											$current,
											"selectFrom",
											lv_selectFrom_6_0,
											"com.ge.research.sadl.SADL.SadlResource");
										afterParserOrEnumRuleCall();
									}
								)
							)
						)*
					)
				)
				otherlv_7=Where
				{
					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
						}
						lv_whereExpression_8_0=norm3_ExpressionParameterized
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
							}
							set(
								$current,
								"whereExpression",
								lv_whereExpression_8_0,
								"com.ge.research.sadl.SADL.ExpressionParameterized");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						(
							lv_orderby_9_0=Order
							{
								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getSelectExpressionRule());
								}
								setWithLastConsumed($current, "orderby", lv_orderby_9_0, "order");
							}
						)
					)
					otherlv_10=By
					{
						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
							}
							lv_orderList_11_0=ruleOrderElement
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
								}
								add(
									$current,
									"orderList",
									lv_orderList_11_0,
									"com.ge.research.sadl.SADL.OrderElement");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID)=>
						(
							(
								otherlv_12=Comma
								{
									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
								}
							)?
							(
								(
									{
										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
									}
									lv_orderList_13_0=ruleOrderElement
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
										}
										add(
											$current,
											"orderList",
											lv_orderList_13_0,
											"com.ge.research.sadl.SADL.OrderElement");
										afterParserOrEnumRuleCall();
									}
								)
							)
						)
					)*
				)?
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
		}
		this_ExpressionParameterized_14=norm3_ExpressionParameterized
		{
			$current = $this_ExpressionParameterized_14.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOrderElement
entryRuleOrderElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrderElementRule()); }
	iv_ruleOrderElement=ruleOrderElement
	{ $current=$iv_ruleOrderElement.current; }
	EOF;

// Rule OrderElement
ruleOrderElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=Asc
			{
				newLeafNode(otherlv_0, grammarAccess.getOrderElementAccess().getAscKeyword_0_0());
			}
			    |
			(
				(
					lv_desc_1_0=Desc
					{
						newLeafNode(lv_desc_1_0, grammarAccess.getOrderElementAccess().getDescDescKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOrderElementRule());
						}
						setWithLastConsumed($current, "desc", true, "desc");
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getOrderElementAccess().getOrderBySadlResourceParserRuleCall_1_0());
				}
				lv_orderBy_2_0=ruleSadlResource
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrderElementRule());
					}
					set(
						$current,
						"orderBy",
						lv_orderBy_2_0,
						"com.ge.research.sadl.SADL.SadlResource");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExpressionParameterized
entryRuleExpressionParameterized returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionParameterizedRule()); }
	iv_ruleExpressionParameterized=ruleExpressionParameterized
	{ $current=$iv_ruleExpressionParameterized.current; }
	EOF;

// Rule ExpressionParameterized
ruleExpressionParameterized returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
						$current);
				}
			)
			(
				{
					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
				}
				ruleAnArticle
				{
					afterParserOrEnumRuleCall();
				}
			)?
			otherlv_2=Sublist
			{
				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
			}
			otherlv_3=Of
			{
				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
					}
					lv_list_4_0=ruleOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
						}
						set(
							$current,
							"list",
							lv_list_4_0,
							"com.ge.research.sadl.SADL.OrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=Matching
			{
				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
					}
					lv_where_6_0=ruleOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
						}
						set(
							$current,
							"where",
							lv_where_6_0,
							"com.ge.research.sadl.SADL.OrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
		}
		this_OrExpression_7=ruleOrExpression
		{
			$current = $this_OrExpression_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule ExpressionParameterized
norm1_ExpressionParameterized returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
						$current);
				}
			)
			(
				{
					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
				}
				ruleAnArticle
				{
					afterParserOrEnumRuleCall();
				}
			)?
			otherlv_2=Sublist
			{
				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
			}
			otherlv_3=Of
			{
				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
					}
					lv_list_4_0=norm1_OrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
						}
						set(
							$current,
							"list",
							lv_list_4_0,
							"com.ge.research.sadl.SADL.OrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=Matching
			{
				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
					}
					lv_where_6_0=norm1_OrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
						}
						set(
							$current,
							"where",
							lv_where_6_0,
							"com.ge.research.sadl.SADL.OrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
		}
		this_OrExpression_7=norm1_OrExpression
		{
			$current = $this_OrExpression_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule ExpressionParameterized
norm2_ExpressionParameterized returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
						$current);
				}
			)
			(
				{
					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
				}
				ruleAnArticle
				{
					afterParserOrEnumRuleCall();
				}
			)?
			otherlv_2=Sublist
			{
				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
			}
			otherlv_3=Of
			{
				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
					}
					lv_list_4_0=norm2_OrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
						}
						set(
							$current,
							"list",
							lv_list_4_0,
							"com.ge.research.sadl.SADL.OrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=Matching
			{
				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
					}
					lv_where_6_0=norm2_OrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
						}
						set(
							$current,
							"where",
							lv_where_6_0,
							"com.ge.research.sadl.SADL.OrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
		}
		this_OrExpression_7=norm2_OrExpression
		{
			$current = $this_OrExpression_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;


// Rule ExpressionParameterized
norm3_ExpressionParameterized returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
						$current);
				}
			)
			(
				{
					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
				}
				ruleAnArticle
				{
					afterParserOrEnumRuleCall();
				}
			)?
			otherlv_2=Sublist
			{
				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
			}
			otherlv_3=Of
			{
				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
					}
					lv_list_4_0=norm3_OrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
						}
						set(
							$current,
							"list",
							lv_list_4_0,
							"com.ge.research.sadl.SADL.OrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=Matching
			{
				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
					}
					lv_where_6_0=norm3_OrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
						}
						set(
							$current,
							"where",
							lv_where_6_0,
							"com.ge.research.sadl.SADL.OrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
		}
		this_OrExpression_7=norm3_OrExpression
		{
			$current = $this_OrExpression_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOrExpression
entryRuleOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrExpressionRule()); }
	iv_ruleOrExpression=ruleOrExpression
	{ $current=$iv_ruleOrExpression.current; }
	EOF;

// Rule OrExpression
ruleOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
		}
		this_AndExpression_0=ruleAndExpression
		{
			$current = $this_AndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleOpOr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.OpOr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.AndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule OrExpression
norm1_OrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
		}
		this_AndExpression_0=norm1_AndExpression
		{
			$current = $this_AndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleOpOr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.OpOr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=norm1_AndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.AndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule OrExpression
norm2_OrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
		}
		this_AndExpression_0=norm2_AndExpression
		{
			$current = $this_AndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleOpOr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.OpOr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=norm2_AndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.AndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule OrExpression
norm3_OrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
		}
		this_AndExpression_0=norm3_AndExpression
		{
			$current = $this_AndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleOpOr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.OpOr");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=norm3_AndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.AndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpOr
entryRuleOpOr returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpOrRule()); }
	iv_ruleOpOr=ruleOpOr
	{ $current=$iv_ruleOpOr.current.getText(); }
	EOF;

// Rule OpOr
ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=Or
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpOrAccess().getOrKeyword_0());
		}
		    |
		kw=VerticalLineVerticalLine
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword_1());
		}
	)
;

// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	iv_ruleAndExpression=ruleAndExpression
	{ $current=$iv_ruleAndExpression.current; }
	EOF;

// Rule AndExpression
ruleAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
		}
		this_EqualityExpression_0=ruleEqualityExpression
		{
			$current = $this_EqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleOpAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.OpAnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleEqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.EqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule AndExpression
norm1_AndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
		}
		this_EqualityExpression_0=norm1_EqualityExpression
		{
			$current = $this_EqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleOpAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.OpAnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=norm1_EqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.EqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule AndExpression
norm2_AndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
		}
		this_EqualityExpression_0=norm2_EqualityExpression
		{
			$current = $this_EqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleOpAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.OpAnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=norm2_EqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.EqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule AndExpression
norm3_AndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
		}
		this_EqualityExpression_0=norm3_EqualityExpression
		{
			$current = $this_EqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleOpAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.OpAnd");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=norm3_EqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.EqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleOpAnd
entryRuleOpAnd returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpAndRule()); }
	iv_ruleOpAnd=ruleOpAnd
	{ $current=$iv_ruleOpAnd.current.getText(); }
	EOF;

// Rule OpAnd
ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=And
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAndAccess().getAndKeyword_0());
		}
		    |
		kw=AmpersandAmpersand
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword_1());
		}
	)
;

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityExpressionRule()); }
	iv_ruleEqualityExpression=ruleEqualityExpression
	{ $current=$iv_ruleEqualityExpression.current; }
	EOF;

// Rule EqualityExpression
ruleEqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
		}
		this_RelationalExpression_0=ruleRelationalExpression
		{
			$current = $this_RelationalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleInfixOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.InfixOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleRelationalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.RelationalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule EqualityExpression
norm1_EqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
		}
		this_RelationalExpression_0=norm1_RelationalExpression
		{
			$current = $this_RelationalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleInfixOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.InfixOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=norm1_RelationalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.RelationalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule EqualityExpression
norm2_EqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
		}
		this_RelationalExpression_0=norm2_RelationalExpression
		{
			$current = $this_RelationalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleInfixOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.InfixOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=norm2_RelationalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.RelationalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule EqualityExpression
norm3_EqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
		}
		this_RelationalExpression_0=norm3_RelationalExpression
		{
			$current = $this_RelationalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleInfixOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.InfixOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
					}
					lv_right_3_0=norm3_RelationalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.RelationalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleInfixOperator
entryRuleInfixOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getInfixOperatorRule()); }
	iv_ruleInfixOperator=ruleInfixOperator
	{ $current=$iv_ruleInfixOperator.current.getText(); }
	EOF;

// Rule InfixOperator
ruleInfixOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=EqualsSignEqualsSign
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getEqualsSignEqualsSignKeyword_0());
		}
		    |
		kw=ExclamationMarkEqualsSign
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getExclamationMarkEqualsSignKeyword_1());
		}
		    |
		kw=EqualsSign
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getEqualsSignKeyword_2());
		}
		    |
		(
			kw=Is
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getIsKeyword_3_0());
			}
			(
				(
					kw=Not
					{
						$current.merge(kw);
						newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getNotKeyword_3_1_0());
					}
				)?
				kw=Unique
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getUniqueKeyword_3_1_1());
				}
				kw=In
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getInKeyword_3_1_2());
				}
			)?
		)
		    |
		kw=Contains
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getContainsKeyword_4());
		}
		    |
		(
			kw=Does
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getDoesKeyword_5_0());
			}
			kw=Not
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getNotKeyword_5_1());
			}
			kw=Contain
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getContainKeyword_5_2());
			}
		)
	)
;

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationalExpressionRule()); }
	iv_ruleRelationalExpression=ruleRelationalExpression
	{ $current=$iv_ruleRelationalExpression.current; }
	EOF;

// Rule RelationalExpression
ruleRelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
		}
		this_Addition_0=ruleAddition
		{
			$current = $this_Addition_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign)=>
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
							$current);
					}
				)
				(
					((
						ruleOpCompare
					)
					)=>
					(
						{
							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
						}
						lv_op_2_0=ruleOpCompare
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
							}
							set(
								$current,
								"op",
								lv_op_2_0,
								"com.ge.research.sadl.SADL.OpCompare");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=ruleAddition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"com.ge.research.sadl.SADL.Addition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;


// Rule RelationalExpression
norm1_RelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
		}
		this_Addition_0=norm1_Addition
		{
			$current = $this_Addition_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign)=>
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
							$current);
					}
				)
				(
					((
						ruleOpCompare
					)
					)=>
					(
						{
							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
						}
						lv_op_2_0=ruleOpCompare
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
							}
							set(
								$current,
								"op",
								lv_op_2_0,
								"com.ge.research.sadl.SADL.OpCompare");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=norm1_Addition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"com.ge.research.sadl.SADL.Addition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;


// Rule RelationalExpression
norm2_RelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
		}
		this_Addition_0=norm2_Addition
		{
			$current = $this_Addition_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign)=>
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
							$current);
					}
				)
				(
					((
						ruleOpCompare
					)
					)=>
					(
						{
							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
						}
						lv_op_2_0=ruleOpCompare
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
							}
							set(
								$current,
								"op",
								lv_op_2_0,
								"com.ge.research.sadl.SADL.OpCompare");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=norm2_Addition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"com.ge.research.sadl.SADL.Addition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;


// Rule RelationalExpression
norm3_RelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
		}
		this_Addition_0=norm3_Addition
		{
			$current = $this_Addition_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign)=>
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
							$current);
					}
				)
				(
					((
						ruleOpCompare
					)
					)=>
					(
						{
							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
						}
						lv_op_2_0=ruleOpCompare
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
							}
							set(
								$current,
								"op",
								lv_op_2_0,
								"com.ge.research.sadl.SADL.OpCompare");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
						}
						lv_right_3_0=norm3_Addition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_3_0,
								"com.ge.research.sadl.SADL.Addition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleOpCompare
entryRuleOpCompare returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOpCompareRule()); }
	iv_ruleOpCompare=ruleOpCompare
	{ $current=$iv_ruleOpCompare.current.getText(); }
	EOF;

// Rule OpCompare
ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=GreaterThanSignEqualsSign
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
		}
		    |
		kw=LessThanSignEqualsSign
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1());
		}
		    |
		kw=GreaterThanSign
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
		}
		    |
		kw=LessThanSign
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleAddition
entryRuleAddition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditionRule()); }
	iv_ruleAddition=ruleAddition
	{ $current=$iv_ruleAddition.current; }
	EOF;

// Rule Addition
ruleAddition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
		}
		this_Multiplication_0=ruleMultiplication
		{
			$current = $this_Multiplication_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleAddOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.AddOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleMultiplication
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.Multiplication");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule Addition
norm1_Addition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
		}
		this_Multiplication_0=norm1_Multiplication
		{
			$current = $this_Multiplication_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleAddOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.AddOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
					}
					lv_right_3_0=norm1_Multiplication
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.Multiplication");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule Addition
norm2_Addition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
		}
		this_Multiplication_0=norm2_Multiplication
		{
			$current = $this_Multiplication_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleAddOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.AddOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
					}
					lv_right_3_0=norm2_Multiplication
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.Multiplication");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule Addition
norm3_Addition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
		}
		this_Multiplication_0=norm3_Multiplication
		{
			$current = $this_Multiplication_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleAddOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditionRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.AddOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
					}
					lv_right_3_0=norm3_Multiplication
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.Multiplication");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAddOp
entryRuleAddOp returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAddOpRule()); }
	iv_ruleAddOp=ruleAddOp
	{ $current=$iv_ruleAddOp.current.getText(); }
	EOF;

// Rule AddOp
ruleAddOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=PlusSign
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAddOpAccess().getPlusSignKeyword_0());
		}
		    |
		kw=HyphenMinus
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAddOpAccess().getHyphenMinusKeyword_1());
		}
	)
;

// Entry rule entryRuleMultiplication
entryRuleMultiplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicationRule()); }
	iv_ruleMultiplication=ruleMultiplication
	{ $current=$iv_ruleMultiplication.current; }
	EOF;

// Rule Multiplication
ruleMultiplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
		}
		this_Power_0=rulePower
		{
			$current = $this_Power_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleMultiOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicationRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.MultiOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePower
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicationRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.Power");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule Multiplication
norm1_Multiplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
		}
		this_Power_0=norm1_Power
		{
			$current = $this_Power_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleMultiOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicationRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.MultiOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
					}
					lv_right_3_0=norm1_Power
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicationRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.Power");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule Multiplication
norm2_Multiplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
		}
		this_Power_0=norm2_Power
		{
			$current = $this_Power_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleMultiOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicationRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.MultiOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
					}
					lv_right_3_0=norm2_Power
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicationRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.Power");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule Multiplication
norm3_Multiplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
		}
		this_Power_0=norm3_Power
		{
			$current = $this_Power_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleMultiOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicationRule());
						}
						set(
							$current,
							"op",
							lv_op_2_0,
							"com.ge.research.sadl.SADL.MultiOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
					}
					lv_right_3_0=norm3_Power
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicationRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.Power");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiOp
entryRuleMultiOp returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMultiOpRule()); }
	iv_ruleMultiOp=ruleMultiOp
	{ $current=$iv_ruleMultiOp.current.getText(); }
	EOF;

// Rule MultiOp
ruleMultiOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=Asterisk
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMultiOpAccess().getAsteriskKeyword_0());
		}
		    |
		kw=Solidus
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMultiOpAccess().getSolidusKeyword_1());
		}
		    |
		kw=PercentSign
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getMultiOpAccess().getPercentSignKeyword_2());
		}
	)
;

// Entry rule entryRulePower
entryRulePower returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPowerRule()); }
	iv_rulePower=rulePower
	{ $current=$iv_rulePower.current; }
	EOF;

// Rule Power
rulePower returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
		}
		this_PropOfSubject_0=rulePropOfSubject
		{
			$current = $this_PropOfSubject_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0=CircumflexAccent
					{
						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPowerRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "^");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePropOfSubject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPowerRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.PropOfSubject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule Power
norm1_Power returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
		}
		this_PropOfSubject_0=norm1_PropOfSubject
		{
			$current = $this_PropOfSubject_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0=CircumflexAccent
					{
						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPowerRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "^");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
					}
					lv_right_3_0=norm1_PropOfSubject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPowerRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.PropOfSubject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule Power
norm2_Power returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
		}
		this_PropOfSubject_0=norm2_PropOfSubject
		{
			$current = $this_PropOfSubject_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0=CircumflexAccent
					{
						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPowerRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "^");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
					}
					lv_right_3_0=norm2_PropOfSubject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPowerRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.PropOfSubject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;


// Rule Power
norm3_Power returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
		}
		this_PropOfSubject_0=norm3_PropOfSubject
		{
			$current = $this_PropOfSubject_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_op_2_0=CircumflexAccent
					{
						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPowerRule());
						}
						setWithLastConsumed($current, "op", lv_op_2_0, "^");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
					}
					lv_right_3_0=norm3_PropOfSubject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPowerRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"com.ge.research.sadl.SADL.PropOfSubject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePropOfSubject
entryRulePropOfSubject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropOfSubjectRule()); }
	iv_rulePropOfSubject=rulePropOfSubject
	{ $current=$iv_rulePropOfSubject.current; }
	EOF;

// Rule PropOfSubject
rulePropOfSubject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
		}
		this_ElementInList_0=ruleElementInList
		{
			$current = $this_ElementInList_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID)=>
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							(
								lv_of_2_1=Of
								{
									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropOfSubjectRule());
									}
									setWithLastConsumed($current, "of", lv_of_2_1, null);
								}
								    |
								lv_of_2_2=For
								{
									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropOfSubjectRule());
									}
									setWithLastConsumed($current, "of", lv_of_2_2, null);
								}
								    |
								lv_of_2_3=In
								{
									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropOfSubjectRule());
									}
									setWithLastConsumed($current, "of", lv_of_2_3, null);
								}
							)
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
							}
							lv_right_3_0=rulePropOfSubject
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
								}
								set(
									$current,
									"right",
									lv_right_3_0,
									"com.ge.research.sadl.SADL.PropOfSubject");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					(Has | RULE_QNAME_TERMINAL | RULE_ID)=>
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
									$current);
							}
						)
						(
							otherlv_5=Has
							{
								newLeafNode(otherlv_5, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
							}
						)?
						(
							(
								{
									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
								}
								lv_prop_6_0=ruleSadlResource
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
									}
									set(
										$current,
										"prop",
										lv_prop_6_0,
										"com.ge.research.sadl.SADL.SadlResource");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							(LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER)=>
							(
								{
									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
								}
								lv_right_7_0=ruleElementInList
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
									}
									set(
										$current,
										"right",
										lv_right_7_0,
										"com.ge.research.sadl.SADL.ElementInList");
									afterParserOrEnumRuleCall();
								}
							)
						)?
					)
				)+
			)
		)?
	)
;


// Rule PropOfSubject
norm1_PropOfSubject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
		}
		this_ElementInList_0=norm1_ElementInList
		{
			$current = $this_ElementInList_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID)=>
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							(
								lv_of_2_1=Of
								{
									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropOfSubjectRule());
									}
									setWithLastConsumed($current, "of", lv_of_2_1, null);
								}
								    |
								lv_of_2_2=For
								{
									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropOfSubjectRule());
									}
									setWithLastConsumed($current, "of", lv_of_2_2, null);
								}
								    |
								lv_of_2_3=In
								{
									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropOfSubjectRule());
									}
									setWithLastConsumed($current, "of", lv_of_2_3, null);
								}
							)
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
							}
							lv_right_3_0=norm1_PropOfSubject
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
								}
								set(
									$current,
									"right",
									lv_right_3_0,
									"com.ge.research.sadl.SADL.PropOfSubject");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					(With | Has | RULE_QNAME_TERMINAL | RULE_ID)=>
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
									$current);
							}
						)
						(
							otherlv_5=With
							{
								newLeafNode(otherlv_5, grammarAccess.getPropOfSubjectAccess().getWithKeyword_1_0_1_0_2_0_0());
							}
							    |
							otherlv_6=Has
							{
								newLeafNode(otherlv_6, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
							}
						)?
						(
							(
								{
									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
								}
								lv_prop_7_0=ruleSadlResource
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
									}
									set(
										$current,
										"prop",
										lv_prop_7_0,
										"com.ge.research.sadl.SADL.SadlResource");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							(LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER)=>
							(
								{
									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
								}
								lv_right_8_0=norm1_ElementInList
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
									}
									set(
										$current,
										"right",
										lv_right_8_0,
										"com.ge.research.sadl.SADL.ElementInList");
									afterParserOrEnumRuleCall();
								}
							)
						)?
					)
				)+
			)
		)?
	)
;


// Rule PropOfSubject
norm2_PropOfSubject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
		}
		this_ElementInList_0=norm2_ElementInList
		{
			$current = $this_ElementInList_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID)=>
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							(
								lv_of_2_1=Of
								{
									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropOfSubjectRule());
									}
									setWithLastConsumed($current, "of", lv_of_2_1, null);
								}
								    |
								lv_of_2_2=For
								{
									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropOfSubjectRule());
									}
									setWithLastConsumed($current, "of", lv_of_2_2, null);
								}
								    |
								lv_of_2_3=In
								{
									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropOfSubjectRule());
									}
									setWithLastConsumed($current, "of", lv_of_2_3, null);
								}
							)
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
							}
							lv_right_3_0=norm2_PropOfSubject
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
								}
								set(
									$current,
									"right",
									lv_right_3_0,
									"com.ge.research.sadl.SADL.PropOfSubject");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					(Comma | Has | RULE_QNAME_TERMINAL | RULE_ID)=>
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
									$current);
							}
						)
						(
							(
								lv_comma_5_0=Comma
								{
									newLeafNode(lv_comma_5_0, grammarAccess.getPropOfSubjectAccess().getCommaCommaKeyword_1_0_1_0_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropOfSubjectRule());
									}
									setWithLastConsumed($current, "comma", true, ",");
								}
							)
						)?
						(
							otherlv_6=Has
							{
								newLeafNode(otherlv_6, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
							}
						)?
						(
							(
								{
									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
								}
								lv_prop_7_0=ruleSadlResource
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
									}
									set(
										$current,
										"prop",
										lv_prop_7_0,
										"com.ge.research.sadl.SADL.SadlResource");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							(LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER)=>
							(
								{
									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
								}
								lv_right_8_0=norm2_ElementInList
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
									}
									set(
										$current,
										"right",
										lv_right_8_0,
										"com.ge.research.sadl.SADL.ElementInList");
									afterParserOrEnumRuleCall();
								}
							)
						)?
					)
				)+
			)
		)?
	)
;


// Rule PropOfSubject
norm3_PropOfSubject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
		}
		this_ElementInList_0=norm3_ElementInList
		{
			$current = $this_ElementInList_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID)=>
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							(
								lv_of_2_1=Of
								{
									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropOfSubjectRule());
									}
									setWithLastConsumed($current, "of", lv_of_2_1, null);
								}
								    |
								lv_of_2_2=For
								{
									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropOfSubjectRule());
									}
									setWithLastConsumed($current, "of", lv_of_2_2, null);
								}
								    |
								lv_of_2_3=In
								{
									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropOfSubjectRule());
									}
									setWithLastConsumed($current, "of", lv_of_2_3, null);
								}
							)
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
							}
							lv_right_3_0=norm3_PropOfSubject
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
								}
								set(
									$current,
									"right",
									lv_right_3_0,
									"com.ge.research.sadl.SADL.PropOfSubject");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
				    |
				(
					(Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID)=>
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
									$current);
							}
						)
						(
							(
								lv_comma_5_0=Comma
								{
									newLeafNode(lv_comma_5_0, grammarAccess.getPropOfSubjectAccess().getCommaCommaKeyword_1_0_1_0_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getPropOfSubjectRule());
									}
									setWithLastConsumed($current, "comma", true, ",");
								}
							)
						)?
						(
							otherlv_6=With
							{
								newLeafNode(otherlv_6, grammarAccess.getPropOfSubjectAccess().getWithKeyword_1_0_1_0_2_0_0());
							}
							    |
							otherlv_7=Has
							{
								newLeafNode(otherlv_7, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
							}
						)?
						(
							(
								{
									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
								}
								lv_prop_8_0=ruleSadlResource
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
									}
									set(
										$current,
										"prop",
										lv_prop_8_0,
										"com.ge.research.sadl.SADL.SadlResource");
									afterParserOrEnumRuleCall();
								}
							)
						)
						(
							(LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER)=>
							(
								{
									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
								}
								lv_right_9_0=norm3_ElementInList
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
									}
									set(
										$current,
										"right",
										lv_right_9_0,
										"com.ge.research.sadl.SADL.ElementInList");
									afterParserOrEnumRuleCall();
								}
							)
						)?
					)
				)+
			)
		)?
	)
;

// Entry rule entryRuleElementInList
entryRuleElementInList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementInListRule()); }
	iv_ruleElementInList=ruleElementInList
	{ $current=$iv_ruleElementInList.current; }
	EOF;

// Rule ElementInList
ruleElementInList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
		}
		this_UnitExpression_0=ruleUnitExpression
		{
			$current = $this_UnitExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
						$current);
				}
			)
			otherlv_2=Element
			{
				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
			}
			(
				(
					(
						lv_before_3_0=Before
						{
							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getElementInListRule());
							}
							setWithLastConsumed($current, "before", true, "before");
						}
					)
				)
				    |
				(
					(
						lv_after_4_0=After
						{
							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getElementInListRule());
							}
							setWithLastConsumed($current, "after", true, "after");
						}
					)
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
					}
					lv_element_5_0=ruleUnitExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementInListRule());
						}
						set(
							$current,
							"element",
							lv_element_5_0,
							"com.ge.research.sadl.SADL.UnitExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;


// Rule ElementInList
norm1_ElementInList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
		}
		this_UnitExpression_0=norm1_UnitExpression
		{
			$current = $this_UnitExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
						$current);
				}
			)
			otherlv_2=Element
			{
				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
			}
			(
				(
					(
						lv_before_3_0=Before
						{
							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getElementInListRule());
							}
							setWithLastConsumed($current, "before", true, "before");
						}
					)
				)
				    |
				(
					(
						lv_after_4_0=After
						{
							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getElementInListRule());
							}
							setWithLastConsumed($current, "after", true, "after");
						}
					)
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
					}
					lv_element_5_0=norm1_UnitExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementInListRule());
						}
						set(
							$current,
							"element",
							lv_element_5_0,
							"com.ge.research.sadl.SADL.UnitExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;


// Rule ElementInList
norm2_ElementInList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
		}
		this_UnitExpression_0=norm2_UnitExpression
		{
			$current = $this_UnitExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
						$current);
				}
			)
			otherlv_2=Element
			{
				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
			}
			(
				(
					(
						lv_before_3_0=Before
						{
							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getElementInListRule());
							}
							setWithLastConsumed($current, "before", true, "before");
						}
					)
				)
				    |
				(
					(
						lv_after_4_0=After
						{
							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getElementInListRule());
							}
							setWithLastConsumed($current, "after", true, "after");
						}
					)
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
					}
					lv_element_5_0=norm2_UnitExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementInListRule());
						}
						set(
							$current,
							"element",
							lv_element_5_0,
							"com.ge.research.sadl.SADL.UnitExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;


// Rule ElementInList
norm3_ElementInList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
		}
		this_UnitExpression_0=norm3_UnitExpression
		{
			$current = $this_UnitExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
						$current);
				}
			)
			otherlv_2=Element
			{
				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
			}
			(
				(
					(
						lv_before_3_0=Before
						{
							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getElementInListRule());
							}
							setWithLastConsumed($current, "before", true, "before");
						}
					)
				)
				    |
				(
					(
						lv_after_4_0=After
						{
							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getElementInListRule());
							}
							setWithLastConsumed($current, "after", true, "after");
						}
					)
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
					}
					lv_element_5_0=norm3_UnitExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementInListRule());
						}
						set(
							$current,
							"element",
							lv_element_5_0,
							"com.ge.research.sadl.SADL.UnitExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleUnitExpression
entryRuleUnitExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnitExpressionRule()); }
	iv_ruleUnitExpression=ruleUnitExpression
	{ $current=$iv_ruleUnitExpression.current; }
	EOF;

// Rule UnitExpression
ruleUnitExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
		}
		this_UnaryExpression_0=ruleUnaryExpression
		{
			$current = $this_UnaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_unit_2_0=RULE_STRING
					{
						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"unit",
							lv_unit_2_0,
							"com.ge.research.sadl.SADL.STRING");
					}
				)
			)
		)?
	)
;


// Rule UnitExpression
norm1_UnitExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
		}
		this_UnaryExpression_0=norm1_UnaryExpression
		{
			$current = $this_UnaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_unit_2_0=RULE_STRING
					{
						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"unit",
							lv_unit_2_0,
							"com.ge.research.sadl.SADL.STRING");
					}
				)
			)
		)?
	)
;


// Rule UnitExpression
norm2_UnitExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
		}
		this_UnaryExpression_0=norm2_UnaryExpression
		{
			$current = $this_UnaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_unit_2_0=RULE_STRING
					{
						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"unit",
							lv_unit_2_0,
							"com.ge.research.sadl.SADL.STRING");
					}
				)
			)
		)?
	)
;


// Rule UnitExpression
norm3_UnitExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
		}
		this_UnaryExpression_0=norm3_UnaryExpression
		{
			$current = $this_UnaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_unit_2_0=RULE_STRING
					{
						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getUnitExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"unit",
							lv_unit_2_0,
							"com.ge.research.sadl.SADL.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	iv_ruleUnaryExpression=ruleUnaryExpression
	{ $current=$iv_ruleUnaryExpression.current; }
	EOF;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
		}
		this_PrimaryExpression_0=rulePrimaryExpression
		{
			$current = $this_PrimaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1=Not
						{
							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2=ExclamationMark
						{
							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
						    |
						lv_op_2_3=Only
						{
							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_3, null);
						}
						    |
						lv_op_2_4=HyphenMinus
						{
							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_4, null);
						}
						    |
						{
							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
						}
						lv_op_2_5=ruleThereExists
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
							}
							set(
								$current,
								"op",
								lv_op_2_5,
								"com.ge.research.sadl.SADL.ThereExists");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
					}
					lv_expr_3_0=rulePrimaryExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
						}
						set(
							$current,
							"expr",
							lv_expr_3_0,
							"com.ge.research.sadl.SADL.PrimaryExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;


// Rule UnaryExpression
norm1_UnaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
		}
		this_PrimaryExpression_0=norm1_PrimaryExpression
		{
			$current = $this_PrimaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1=Not
						{
							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2=ExclamationMark
						{
							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
						    |
						lv_op_2_3=Only
						{
							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_3, null);
						}
						    |
						lv_op_2_4=HyphenMinus
						{
							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_4, null);
						}
						    |
						{
							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
						}
						lv_op_2_5=ruleThereExists
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
							}
							set(
								$current,
								"op",
								lv_op_2_5,
								"com.ge.research.sadl.SADL.ThereExists");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
					}
					lv_expr_3_0=norm1_PrimaryExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
						}
						set(
							$current,
							"expr",
							lv_expr_3_0,
							"com.ge.research.sadl.SADL.PrimaryExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;


// Rule UnaryExpression
norm2_UnaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
		}
		this_PrimaryExpression_0=norm2_PrimaryExpression
		{
			$current = $this_PrimaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1=Not
						{
							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2=ExclamationMark
						{
							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
						    |
						lv_op_2_3=Only
						{
							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_3, null);
						}
						    |
						lv_op_2_4=HyphenMinus
						{
							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_4, null);
						}
						    |
						{
							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
						}
						lv_op_2_5=ruleThereExists
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
							}
							set(
								$current,
								"op",
								lv_op_2_5,
								"com.ge.research.sadl.SADL.ThereExists");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
					}
					lv_expr_3_0=norm2_PrimaryExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
						}
						set(
							$current,
							"expr",
							lv_expr_3_0,
							"com.ge.research.sadl.SADL.PrimaryExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;


// Rule UnaryExpression
norm3_UnaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
		}
		this_PrimaryExpression_0=norm3_PrimaryExpression
		{
			$current = $this_PrimaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1=Not
						{
							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2=ExclamationMark
						{
							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
						    |
						lv_op_2_3=Only
						{
							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_3, null);
						}
						    |
						lv_op_2_4=HyphenMinus
						{
							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryExpressionRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_4, null);
						}
						    |
						{
							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
						}
						lv_op_2_5=ruleThereExists
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
							}
							set(
								$current,
								"op",
								lv_op_2_5,
								"com.ge.research.sadl.SADL.ThereExists");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
					}
					lv_expr_3_0=norm3_PrimaryExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
						}
						set(
							$current,
							"expr",
							lv_expr_3_0,
							"com.ge.research.sadl.SADL.PrimaryExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleThereExists
entryRuleThereExists returns [String current=null]:
	{ newCompositeNode(grammarAccess.getThereExistsRule()); }
	iv_ruleThereExists=ruleThereExists
	{ $current=$iv_ruleThereExists.current.getText(); }
	EOF;

// Rule ThereExists
ruleThereExists returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=There
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getThereExistsAccess().getThereKeyword_0());
		}
		kw=Exists
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getThereExistsAccess().getExistsKeyword_1());
		}
	)
;

// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	iv_rulePrimaryExpression=rulePrimaryExpression
	{ $current=$iv_rulePrimaryExpression.current; }
	EOF;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=LeftParenthesis
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
			}
			this_SelectExpression_1=ruleSelectExpression
			{
				$current = $this_SelectExpression_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=RightParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
		}
		this_Name_3=ruleName
		{
			$current = $this_Name_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
					}
					lv_article_5_0=ruleAnArticle
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"article",
							lv_article_5_0,
							"com.ge.research.sadl.SADL.AnArticle");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
					}
					lv_ordinal_6_0=ruleOrdinal
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"ordinal",
							lv_ordinal_6_0,
							"com.ge.research.sadl.SADL.Ordinal");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
					}
					lv_type_7_0=ruleSadlPrimaryTypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"type",
							lv_type_7_0,
							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					otherlv_8=LeftSquareBracket
					{
						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
							}
							lv_arglist_9_0=ruleNestedExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
								}
								add(
									$current,
									"arglist",
									lv_arglist_9_0,
									"com.ge.research.sadl.SADL.NestedExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)?
					(
						otherlv_10=Comma
						{
							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
								}
								lv_arglist_11_0=ruleNestedExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
									}
									add(
										$current,
										"arglist",
										lv_arglist_11_0,
										"com.ge.research.sadl.SADL.NestedExpression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
					otherlv_12=RightSquareBracket
					{
						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
					}
				)
				    |
				(
					otherlv_13=Length
					{
						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
							}
							lv_len_14_0=ruleFacetNumber
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
								}
								set(
									$current,
									"len",
									lv_len_14_0,
									"com.ge.research.sadl.SADL.FacetNumber");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(HyphenMinus)=>
						(
							otherlv_15=HyphenMinus
							{
								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
							}
							(
								(
									(
										{
											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
										}
										lv_maxlen_16_1=ruleFacetNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
											}
											set(
												$current,
												"maxlen",
												lv_maxlen_16_1,
												"com.ge.research.sadl.SADL.FacetNumber");
											afterParserOrEnumRuleCall();
										}
										    |
										lv_maxlen_16_2=Asterisk
										{
											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getPrimaryExpressionRule());
											}
											setWithLastConsumed($current, "maxlen", lv_maxlen_16_2, null);
										}
									)
								)
							)
						)
					)?
				)
			)?
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
						$current);
				}
			)
			(
				(
					lv_value_18_0=RULE_STRING
					{
						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_18_0,
							"com.ge.research.sadl.SADL.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
					}
					lv_value_20_0=ruleAnyNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"value",
							lv_value_20_0,
							"com.ge.research.sadl.SADL.AnyNumber");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
					}
					lv_value_22_0=ruleBooleanValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"value",
							lv_value_22_0,
							"com.ge.research.sadl.SADL.BooleanValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
					}
					lv_constant_24_0=ruleConstants
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"constant",
							lv_constant_24_0,
							"com.ge.research.sadl.SADL.Constants");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
					}
					lv_valueTable_26_0=ruleValueTable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"valueTable",
							lv_valueTable_26_0,
							"com.ge.research.sadl.SADL.ValueTable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;


// Rule PrimaryExpression
norm1_PrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=LeftParenthesis
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
			}
			this_SelectExpression_1=norm1_SelectExpression
			{
				$current = $this_SelectExpression_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=RightParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
		}
		this_Name_3=ruleName
		{
			$current = $this_Name_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
					}
					lv_article_5_0=ruleAnArticle
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"article",
							lv_article_5_0,
							"com.ge.research.sadl.SADL.AnArticle");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
					}
					lv_ordinal_6_0=ruleOrdinal
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"ordinal",
							lv_ordinal_6_0,
							"com.ge.research.sadl.SADL.Ordinal");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
					}
					lv_type_7_0=ruleSadlPrimaryTypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"type",
							lv_type_7_0,
							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					otherlv_8=LeftSquareBracket
					{
						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
							}
							lv_arglist_9_0=ruleNestedExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
								}
								add(
									$current,
									"arglist",
									lv_arglist_9_0,
									"com.ge.research.sadl.SADL.NestedExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)?
					(
						otherlv_10=Comma
						{
							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
								}
								lv_arglist_11_0=ruleNestedExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
									}
									add(
										$current,
										"arglist",
										lv_arglist_11_0,
										"com.ge.research.sadl.SADL.NestedExpression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
					otherlv_12=RightSquareBracket
					{
						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
					}
				)
				    |
				(
					otherlv_13=Length
					{
						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
							}
							lv_len_14_0=ruleFacetNumber
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
								}
								set(
									$current,
									"len",
									lv_len_14_0,
									"com.ge.research.sadl.SADL.FacetNumber");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(HyphenMinus)=>
						(
							otherlv_15=HyphenMinus
							{
								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
							}
							(
								(
									(
										{
											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
										}
										lv_maxlen_16_1=ruleFacetNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
											}
											set(
												$current,
												"maxlen",
												lv_maxlen_16_1,
												"com.ge.research.sadl.SADL.FacetNumber");
											afterParserOrEnumRuleCall();
										}
										    |
										lv_maxlen_16_2=Asterisk
										{
											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getPrimaryExpressionRule());
											}
											setWithLastConsumed($current, "maxlen", lv_maxlen_16_2, null);
										}
									)
								)
							)
						)
					)?
				)
			)?
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
						$current);
				}
			)
			(
				(
					lv_value_18_0=RULE_STRING
					{
						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_18_0,
							"com.ge.research.sadl.SADL.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
					}
					lv_value_20_0=ruleAnyNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"value",
							lv_value_20_0,
							"com.ge.research.sadl.SADL.AnyNumber");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
					}
					lv_value_22_0=ruleBooleanValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"value",
							lv_value_22_0,
							"com.ge.research.sadl.SADL.BooleanValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
					}
					lv_constant_24_0=ruleConstants
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"constant",
							lv_constant_24_0,
							"com.ge.research.sadl.SADL.Constants");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
					}
					lv_valueTable_26_0=ruleValueTable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"valueTable",
							lv_valueTable_26_0,
							"com.ge.research.sadl.SADL.ValueTable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;


// Rule PrimaryExpression
norm2_PrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=LeftParenthesis
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
			}
			this_SelectExpression_1=norm2_SelectExpression
			{
				$current = $this_SelectExpression_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=RightParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
		}
		this_Name_3=ruleName
		{
			$current = $this_Name_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
					}
					lv_article_5_0=ruleAnArticle
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"article",
							lv_article_5_0,
							"com.ge.research.sadl.SADL.AnArticle");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
					}
					lv_ordinal_6_0=ruleOrdinal
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"ordinal",
							lv_ordinal_6_0,
							"com.ge.research.sadl.SADL.Ordinal");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
					}
					lv_type_7_0=ruleSadlPrimaryTypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"type",
							lv_type_7_0,
							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					otherlv_8=LeftSquareBracket
					{
						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
							}
							lv_arglist_9_0=ruleNestedExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
								}
								add(
									$current,
									"arglist",
									lv_arglist_9_0,
									"com.ge.research.sadl.SADL.NestedExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)?
					(
						otherlv_10=Comma
						{
							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
								}
								lv_arglist_11_0=ruleNestedExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
									}
									add(
										$current,
										"arglist",
										lv_arglist_11_0,
										"com.ge.research.sadl.SADL.NestedExpression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
					otherlv_12=RightSquareBracket
					{
						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
					}
				)
				    |
				(
					otherlv_13=Length
					{
						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
							}
							lv_len_14_0=ruleFacetNumber
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
								}
								set(
									$current,
									"len",
									lv_len_14_0,
									"com.ge.research.sadl.SADL.FacetNumber");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(HyphenMinus)=>
						(
							otherlv_15=HyphenMinus
							{
								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
							}
							(
								(
									(
										{
											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
										}
										lv_maxlen_16_1=ruleFacetNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
											}
											set(
												$current,
												"maxlen",
												lv_maxlen_16_1,
												"com.ge.research.sadl.SADL.FacetNumber");
											afterParserOrEnumRuleCall();
										}
										    |
										lv_maxlen_16_2=Asterisk
										{
											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getPrimaryExpressionRule());
											}
											setWithLastConsumed($current, "maxlen", lv_maxlen_16_2, null);
										}
									)
								)
							)
						)
					)?
				)
			)?
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
						$current);
				}
			)
			(
				(
					lv_value_18_0=RULE_STRING
					{
						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_18_0,
							"com.ge.research.sadl.SADL.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
					}
					lv_value_20_0=ruleAnyNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"value",
							lv_value_20_0,
							"com.ge.research.sadl.SADL.AnyNumber");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
					}
					lv_value_22_0=ruleBooleanValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"value",
							lv_value_22_0,
							"com.ge.research.sadl.SADL.BooleanValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
					}
					lv_constant_24_0=ruleConstants
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"constant",
							lv_constant_24_0,
							"com.ge.research.sadl.SADL.Constants");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
					}
					lv_valueTable_26_0=ruleValueTable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"valueTable",
							lv_valueTable_26_0,
							"com.ge.research.sadl.SADL.ValueTable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;


// Rule PrimaryExpression
norm3_PrimaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=LeftParenthesis
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
			}
			this_SelectExpression_1=norm3_SelectExpression
			{
				$current = $this_SelectExpression_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=RightParenthesis
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
		}
		this_Name_3=ruleName
		{
			$current = $this_Name_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
					}
					lv_article_5_0=ruleAnArticle
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"article",
							lv_article_5_0,
							"com.ge.research.sadl.SADL.AnArticle");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
					}
					lv_ordinal_6_0=ruleOrdinal
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"ordinal",
							lv_ordinal_6_0,
							"com.ge.research.sadl.SADL.Ordinal");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
					}
					lv_type_7_0=ruleSadlPrimaryTypeReference
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"type",
							lv_type_7_0,
							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					otherlv_8=LeftSquareBracket
					{
						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
							}
							lv_arglist_9_0=ruleNestedExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
								}
								add(
									$current,
									"arglist",
									lv_arglist_9_0,
									"com.ge.research.sadl.SADL.NestedExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)?
					(
						otherlv_10=Comma
						{
							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
								}
								lv_arglist_11_0=ruleNestedExpression
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
									}
									add(
										$current,
										"arglist",
										lv_arglist_11_0,
										"com.ge.research.sadl.SADL.NestedExpression");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
					otherlv_12=RightSquareBracket
					{
						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
					}
				)
				    |
				(
					otherlv_13=Length
					{
						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
							}
							lv_len_14_0=ruleFacetNumber
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
								}
								set(
									$current,
									"len",
									lv_len_14_0,
									"com.ge.research.sadl.SADL.FacetNumber");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						(HyphenMinus)=>
						(
							otherlv_15=HyphenMinus
							{
								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
							}
							(
								(
									(
										{
											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
										}
										lv_maxlen_16_1=ruleFacetNumber
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
											}
											set(
												$current,
												"maxlen",
												lv_maxlen_16_1,
												"com.ge.research.sadl.SADL.FacetNumber");
											afterParserOrEnumRuleCall();
										}
										    |
										lv_maxlen_16_2=Asterisk
										{
											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getPrimaryExpressionRule());
											}
											setWithLastConsumed($current, "maxlen", lv_maxlen_16_2, null);
										}
									)
								)
							)
						)
					)?
				)
			)?
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
						$current);
				}
			)
			(
				(
					lv_value_18_0=RULE_STRING
					{
						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_18_0,
							"com.ge.research.sadl.SADL.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
					}
					lv_value_20_0=ruleAnyNumber
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"value",
							lv_value_20_0,
							"com.ge.research.sadl.SADL.AnyNumber");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
					}
					lv_value_22_0=ruleBooleanValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"value",
							lv_value_22_0,
							"com.ge.research.sadl.SADL.BooleanValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
					}
					lv_constant_24_0=ruleConstants
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"constant",
							lv_constant_24_0,
							"com.ge.research.sadl.SADL.Constants");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
					}
					lv_valueTable_26_0=ruleValueTable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
						}
						set(
							$current,
							"valueTable",
							lv_valueTable_26_0,
							"com.ge.research.sadl.SADL.ValueTable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleName
entryRuleName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNameRule()); }
	iv_ruleName=ruleName
	{ $current=$iv_ruleName.current; }
	EOF;

// Rule Name
ruleName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNameAccess().getNameAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNameRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getNameAccess().getNameSadlResourceCrossReference_1_0());
				}
				ruleQNAME
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(LeftParenthesis)=>
			(
				(
					(
						lv_function_2_0=LeftParenthesis
						{
							newLeafNode(lv_function_2_0, grammarAccess.getNameAccess().getFunctionLeftParenthesisKeyword_2_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNameRule());
							}
							setWithLastConsumed($current, "function", true, "(");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getNameAccess().getArglistNestedExpressionParserRuleCall_2_0_1_0());
						}
						lv_arglist_3_0=ruleNestedExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNameRule());
							}
							add(
								$current,
								"arglist",
								lv_arglist_3_0,
								"com.ge.research.sadl.SADL.NestedExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				(
					otherlv_4=Comma
					{
						newLeafNode(otherlv_4, grammarAccess.getNameAccess().getCommaKeyword_2_0_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getNameAccess().getArglistNestedExpressionParserRuleCall_2_0_2_1_0());
							}
							lv_arglist_5_0=ruleNestedExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getNameRule());
								}
								add(
									$current,
									"arglist",
									lv_arglist_5_0,
									"com.ge.research.sadl.SADL.NestedExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
				otherlv_6=RightParenthesis
				{
					newLeafNode(otherlv_6, grammarAccess.getNameAccess().getRightParenthesisKeyword_2_0_3());
				}
			)
		)?
	)
;

// Entry rule entryRuleValueTable
entryRuleValueTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueTableRule()); }
	iv_ruleValueTable=ruleValueTable
	{ $current=$iv_ruleValueTable.current; }
	EOF;

// Rule ValueTable
ruleValueTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=LeftSquareBracket
			{
				newLeafNode(otherlv_0, grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_0_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValueTableAccess().getRowValueRowParserRuleCall_0_1_0());
					}
					lv_row_1_0=ruleValueRow
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueTableRule());
						}
						set(
							$current,
							"row",
							lv_row_1_0,
							"com.ge.research.sadl.SADL.ValueRow");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=RightSquareBracket
			{
				newLeafNode(otherlv_2, grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_0_2());
			}
		)
		    |
		(
			otherlv_3=LeftCurlyBracket
			{
				newLeafNode(otherlv_3, grammarAccess.getValueTableAccess().getLeftCurlyBracketKeyword_1_0());
			}
			otherlv_4=LeftSquareBracket
			{
				newLeafNode(otherlv_4, grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValueTableAccess().getRowsValueRowParserRuleCall_1_2_0());
					}
					lv_rows_5_0=ruleValueRow
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueTableRule());
						}
						add(
							$current,
							"rows",
							lv_rows_5_0,
							"com.ge.research.sadl.SADL.ValueRow");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=RightSquareBracket
			{
				newLeafNode(otherlv_6, grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_1_3());
			}
			(
				(
					otherlv_7=Comma
					{
						newLeafNode(otherlv_7, grammarAccess.getValueTableAccess().getCommaKeyword_1_4_0());
					}
				)?
				otherlv_8=LeftSquareBracket
				{
					newLeafNode(otherlv_8, grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_1_4_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getValueTableAccess().getRowsValueRowParserRuleCall_1_4_2_0());
						}
						lv_rows_9_0=ruleValueRow
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueTableRule());
							}
							add(
								$current,
								"rows",
								lv_rows_9_0,
								"com.ge.research.sadl.SADL.ValueRow");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_10=RightSquareBracket
				{
					newLeafNode(otherlv_10, grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_1_4_3());
				}
			)*
			otherlv_11=RightCurlyBracket
			{
				newLeafNode(otherlv_11, grammarAccess.getValueTableAccess().getRightCurlyBracketKeyword_1_5());
			}
		)
	)
;

// Entry rule entryRuleBooleanValue
entryRuleBooleanValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBooleanValueRule()); }
	iv_ruleBooleanValue=ruleBooleanValue
	{ $current=$iv_ruleBooleanValue.current.getText(); }
	EOF;

// Rule BooleanValue
ruleBooleanValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=True
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getTrueKeyword_0());
		}
		    |
		kw=False
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleConstants
entryRuleConstants returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConstantsRule()); }
	iv_ruleConstants=ruleConstants
	{ $current=$iv_ruleConstants.current.getText(); }
	EOF;

// Rule Constants
ruleConstants returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=PI
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConstantsAccess().getPIKeyword_0());
		}
		    |
		kw=Known
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConstantsAccess().getKnownKeyword_1());
		}
		    |
		kw=E_1
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConstantsAccess().getEKeyword_2());
		}
		    |
		kw=HyphenMinusHyphenMinus
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConstantsAccess().getHyphenMinusHyphenMinusKeyword_3());
		}
		    |
		kw=None
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConstantsAccess().getNoneKeyword_4());
		}
		    |
		(
			(
				kw=A_1
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getConstantsAccess().getAKeyword_5_0());
				}
			)?
			kw=Type
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getConstantsAccess().getTypeKeyword_5_1());
			}
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getConstantsAccess().getDefiniteArticleParserRuleCall_6_0());
				}
				this_DefiniteArticle_7=ruleDefiniteArticle
				{
					$current.merge(this_DefiniteArticle_7);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)?
			kw=Length
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getConstantsAccess().getLengthKeyword_6_1());
			}
		)
		    |
		kw=Count
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConstantsAccess().getCountKeyword_7());
		}
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getConstantsAccess().getDefiniteArticleParserRuleCall_8_0());
				}
				this_DefiniteArticle_10=ruleDefiniteArticle
				{
					$current.merge(this_DefiniteArticle_10);
				}
				{
					afterParserOrEnumRuleCall();
				}
			)?
			kw=Index
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getConstantsAccess().getIndexKeyword_8_1());
			}
		)
		    |
		(
			(
				kw=First
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getConstantsAccess().getFirstKeyword_9_0_0());
				}
				    |
				kw=Last
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getConstantsAccess().getLastKeyword_9_0_1());
				}
				    |
				(
					{
						newCompositeNode(grammarAccess.getConstantsAccess().getAnArticleParserRuleCall_9_0_2_0());
					}
					this_AnArticle_14=ruleAnArticle
					{
						$current.merge(this_AnArticle_14);
					}
					{
						afterParserOrEnumRuleCall();
					}
					(
						{
							newCompositeNode(grammarAccess.getConstantsAccess().getOrdinalParserRuleCall_9_0_2_1());
						}
						this_Ordinal_15=ruleOrdinal
						{
							$current.merge(this_Ordinal_15);
						}
						{
							afterParserOrEnumRuleCall();
						}
					)?
				)
			)
			kw=Element
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getConstantsAccess().getElementKeyword_9_1());
			}
		)
		    |
		kw=Value
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getConstantsAccess().getValueKeyword_10());
		}
	)
;

// Entry rule entryRuleValueRow
entryRuleValueRow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRowRule()); }
	iv_ruleValueRow=ruleValueRow
	{ $current=$iv_ruleValueRow.current; }
	EOF;

// Rule ValueRow
ruleValueRow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getValueRowAccess().getExplicitValuesNestedExpressionParserRuleCall_0_0());
				}
				lv_explicitValues_0_0=ruleNestedExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRowRule());
					}
					add(
						$current,
						"explicitValues",
						lv_explicitValues_0_0,
						"com.ge.research.sadl.SADL.NestedExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1=Comma
			{
				newLeafNode(otherlv_1, grammarAccess.getValueRowAccess().getCommaKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValueRowAccess().getExplicitValuesNestedExpressionParserRuleCall_1_1_0());
					}
					lv_explicitValues_2_0=ruleNestedExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueRowRule());
						}
						add(
							$current,
							"explicitValues",
							lv_explicitValues_2_0,
							"com.ge.research.sadl.SADL.NestedExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAnyNumber
entryRuleAnyNumber returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAnyNumberRule()); }
	iv_ruleAnyNumber=ruleAnyNumber
	{ $current=$iv_ruleAnyNumber.current.getText(); }
	EOF;

// Rule AnyNumber
ruleAnyNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAnyNumberAccess().getDecimalNumberParserRuleCall_0());
		}
		this_DecimalNumber_0=ruleDecimalNumber
		{
			$current.merge(this_DecimalNumber_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			{
				newCompositeNode(grammarAccess.getAnyNumberAccess().getEXPONENTParserRuleCall_1());
			}
			this_EXPONENT_1=ruleEXPONENT
			{
				$current.merge(this_EXPONENT_1);
			}
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRuleDecimalNumber
entryRuleDecimalNumber returns [String current=null]:
	{ newCompositeNode(grammarAccess.getDecimalNumberRule()); }
	iv_ruleDecimalNumber=ruleDecimalNumber
	{ $current=$iv_ruleDecimalNumber.current.getText(); }
	EOF;

// Rule DecimalNumber
ruleDecimalNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_NUMBER_0=RULE_NUMBER
	{
		$current.merge(this_NUMBER_0);
	}
	{
		newLeafNode(this_NUMBER_0, grammarAccess.getDecimalNumberAccess().getNUMBERTerminalRuleCall());
	}
;

// Entry rule entryRuleEXPONENT
entryRuleEXPONENT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEXPONENTRule()); }
	iv_ruleEXPONENT=ruleEXPONENT
	{ $current=$iv_ruleEXPONENT.current.getText(); }
	EOF;

// Rule EXPONENT
ruleEXPONENT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw=E_1
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getEKeyword_0_0());
			}
			    |
			kw=E
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getEKeyword_0_1());
			}
		)
		(
			kw=HyphenMinus
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getHyphenMinusKeyword_1_0());
			}
			    |
			kw=PlusSign
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getPlusSignKeyword_1_1());
			}
		)?
		{
			newCompositeNode(grammarAccess.getEXPONENTAccess().getDecimalNumberParserRuleCall_2());
		}
		this_DecimalNumber_4=ruleDecimalNumber
		{
			$current.merge(this_DecimalNumber_4);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEOS
entryRuleEOS returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEOSRule()); }
	iv_ruleEOS=ruleEOS
	{ $current=$iv_ruleEOS.current.getText(); }
	EOF;

// Rule EOS
ruleEOS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=FullStop
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getEOSAccess().getFullStopKeyword());
	}
;

// Entry rule entryRuleQNAME
entryRuleQNAME returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQNAMERule()); }
	iv_ruleQNAME=ruleQNAME
	{ $current=$iv_ruleQNAME.current.getText(); }
	EOF;

// Rule QNAME
ruleQNAME returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_QNAME_TERMINAL_0=RULE_QNAME_TERMINAL
		{
			$current.merge(this_QNAME_TERMINAL_0);
		}
		{
			newLeafNode(this_QNAME_TERMINAL_0, grammarAccess.getQNAMEAccess().getQNAME_TERMINALTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getQNAMEAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Rule SadlDataType
ruleSadlDataType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0=String
			{
				$current = grammarAccess.getSadlDataTypeAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSadlDataTypeAccess().getStringEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1=Boolean
			{
				$current = grammarAccess.getSadlDataTypeAccess().getBooleanEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSadlDataTypeAccess().getBooleanEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2=Decimal
			{
				$current = grammarAccess.getSadlDataTypeAccess().getDecimalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getSadlDataTypeAccess().getDecimalEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3=Int
			{
				$current = grammarAccess.getSadlDataTypeAccess().getIntEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getSadlDataTypeAccess().getIntEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4=Long
			{
				$current = grammarAccess.getSadlDataTypeAccess().getLongEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getSadlDataTypeAccess().getLongEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5=Float
			{
				$current = grammarAccess.getSadlDataTypeAccess().getFloatEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getSadlDataTypeAccess().getFloatEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6=Double
			{
				$current = grammarAccess.getSadlDataTypeAccess().getDoubleEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getSadlDataTypeAccess().getDoubleEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7=Duration
			{
				$current = grammarAccess.getSadlDataTypeAccess().getDurationEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getSadlDataTypeAccess().getDurationEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8=DateTime
			{
				$current = grammarAccess.getSadlDataTypeAccess().getDateTimeEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getSadlDataTypeAccess().getDateTimeEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9=Time
			{
				$current = grammarAccess.getSadlDataTypeAccess().getTimeEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getSadlDataTypeAccess().getTimeEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10=Date
			{
				$current = grammarAccess.getSadlDataTypeAccess().getDateEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getSadlDataTypeAccess().getDateEnumLiteralDeclaration_10());
			}
		)
		    |
		(
			enumLiteral_11=GYearMonth
			{
				$current = grammarAccess.getSadlDataTypeAccess().getGYearMonthEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_11, grammarAccess.getSadlDataTypeAccess().getGYearMonthEnumLiteralDeclaration_11());
			}
		)
		    |
		(
			enumLiteral_12=GYear
			{
				$current = grammarAccess.getSadlDataTypeAccess().getGYearEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_12, grammarAccess.getSadlDataTypeAccess().getGYearEnumLiteralDeclaration_12());
			}
		)
		    |
		(
			enumLiteral_13=GMonthDay
			{
				$current = grammarAccess.getSadlDataTypeAccess().getGMonthDayEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_13, grammarAccess.getSadlDataTypeAccess().getGMonthDayEnumLiteralDeclaration_13());
			}
		)
		    |
		(
			enumLiteral_14=GDay
			{
				$current = grammarAccess.getSadlDataTypeAccess().getGDayEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_14, grammarAccess.getSadlDataTypeAccess().getGDayEnumLiteralDeclaration_14());
			}
		)
		    |
		(
			enumLiteral_15=GMonth
			{
				$current = grammarAccess.getSadlDataTypeAccess().getGMonthEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_15, grammarAccess.getSadlDataTypeAccess().getGMonthEnumLiteralDeclaration_15());
			}
		)
		    |
		(
			enumLiteral_16=HexBinary
			{
				$current = grammarAccess.getSadlDataTypeAccess().getHexBinaryEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_16, grammarAccess.getSadlDataTypeAccess().getHexBinaryEnumLiteralDeclaration_16());
			}
		)
		    |
		(
			enumLiteral_17=Base64Binary
			{
				$current = grammarAccess.getSadlDataTypeAccess().getBase64BinaryEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_17, grammarAccess.getSadlDataTypeAccess().getBase64BinaryEnumLiteralDeclaration_17());
			}
		)
		    |
		(
			enumLiteral_18=AnyURI
			{
				$current = grammarAccess.getSadlDataTypeAccess().getAnyURIEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_18, grammarAccess.getSadlDataTypeAccess().getAnyURIEnumLiteralDeclaration_18());
			}
		)
		    |
		(
			enumLiteral_19=Integer
			{
				$current = grammarAccess.getSadlDataTypeAccess().getIntegerEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_19, grammarAccess.getSadlDataTypeAccess().getIntegerEnumLiteralDeclaration_19());
			}
		)
		    |
		(
			enumLiteral_20=NegativeInteger
			{
				$current = grammarAccess.getSadlDataTypeAccess().getNegativeIntegerEnumLiteralDeclaration_20().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_20, grammarAccess.getSadlDataTypeAccess().getNegativeIntegerEnumLiteralDeclaration_20());
			}
		)
		    |
		(
			enumLiteral_21=NonNegativeInteger
			{
				$current = grammarAccess.getSadlDataTypeAccess().getNonNegativeIntegerEnumLiteralDeclaration_21().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_21, grammarAccess.getSadlDataTypeAccess().getNonNegativeIntegerEnumLiteralDeclaration_21());
			}
		)
		    |
		(
			enumLiteral_22=PositiveInteger
			{
				$current = grammarAccess.getSadlDataTypeAccess().getPositiveIntegerEnumLiteralDeclaration_22().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_22, grammarAccess.getSadlDataTypeAccess().getPositiveIntegerEnumLiteralDeclaration_22());
			}
		)
		    |
		(
			enumLiteral_23=NonPositiveInteger
			{
				$current = grammarAccess.getSadlDataTypeAccess().getNonPositiveIntegerEnumLiteralDeclaration_23().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_23, grammarAccess.getSadlDataTypeAccess().getNonPositiveIntegerEnumLiteralDeclaration_23());
			}
		)
		    |
		(
			enumLiteral_24=Byte
			{
				$current = grammarAccess.getSadlDataTypeAccess().getByteEnumLiteralDeclaration_24().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_24, grammarAccess.getSadlDataTypeAccess().getByteEnumLiteralDeclaration_24());
			}
		)
		    |
		(
			enumLiteral_25=UnsignedByte
			{
				$current = grammarAccess.getSadlDataTypeAccess().getUnsignedByteEnumLiteralDeclaration_25().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_25, grammarAccess.getSadlDataTypeAccess().getUnsignedByteEnumLiteralDeclaration_25());
			}
		)
		    |
		(
			enumLiteral_26=UnsignedInt
			{
				$current = grammarAccess.getSadlDataTypeAccess().getUnsignedIntEnumLiteralDeclaration_26().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_26, grammarAccess.getSadlDataTypeAccess().getUnsignedIntEnumLiteralDeclaration_26());
			}
		)
		    |
		(
			enumLiteral_27=AnySimpleType
			{
				$current = grammarAccess.getSadlDataTypeAccess().getAnySimpleTypeEnumLiteralDeclaration_27().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_27, grammarAccess.getSadlDataTypeAccess().getAnySimpleTypeEnumLiteralDeclaration_27());
			}
		)
	)
;
