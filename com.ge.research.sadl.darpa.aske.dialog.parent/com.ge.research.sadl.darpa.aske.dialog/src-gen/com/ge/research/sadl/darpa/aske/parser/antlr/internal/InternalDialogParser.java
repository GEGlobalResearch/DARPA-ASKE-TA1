package com.ge.research.sadl.darpa.aske.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.ge.research.sadl.darpa.aske.services.DialogGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalDialogParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "NonNegativeInteger", "NonPositiveInteger", "NegativeInteger", "PositiveInteger", "AnySimpleType", "Base64Binary", "Relationship", "UnsignedByte", "Symmetrical", "UnsignedInt", "Deductions", "Annotation", "GYearMonth", "Transitive", "Construct", "Described", "Describes", "GMonthDay", "HexBinary", "Instances", "TopLevel", "Equation", "Explain", "External", "Contains", "DateTime", "Disjoint", "Distinct", "Duration", "Matching", "Property", "Another", "Boolean", "Classes", "Contain", "Decimal", "Default", "Element", "Exactly", "Integer", "Inverse", "Located", "Returns", "Seventh", "Subject", "Sublist", "Version", "Print", "Update", "Write", "Always", "AnyURI", "Before", "Delete", "Double", "Eighth", "Exists", "Fourth", "GMonth", "Import", "Insert", "Length", "Return", "Second", "Select", "Single", "String", "Unique", "Values", "Expr", "Graph", "Model", "Read", "Stage", "Test", "After", "Alias", "Class", "Count", "False", "Fifth", "First", "Float", "GYear", "Given", "Index", "Known", "Least", "Level", "Ninth", "Order", "Other", "Sixth", "Tenth", "There", "Third", "Types", "Using", "Value", "Where", "List", "None", "Rule", "What", "Byte", "Data", "Date", "Desc", "Does", "From", "GDay", "Have", "Last", "Long", "Many", "Most", "Must", "Note", "Only", "Same", "Some", "Then", "Time", "True", "Type", "What_1", "With", "FullStopFullStopFullStop", "Ask", "How", "The", "And", "Any", "Are", "Asc", "Ask_1", "Can", "For", "Has", "How_1", "Int", "Not", "One", "The_1", "Uri", "ExclamationMarkEqualsSign", "AmpersandAmpersand", "HyphenMinusHyphenMinus", "LessThanSignEqualsSign", "EqualsSignEqualsSign", "EqualsSignGreaterThanSign", "GreaterThanSignEqualsSign", "An", "PI", "An_1", "As", "At", "Be", "By", "If", "In", "Is", "Of", "Or", "To", "VerticalLineVerticalLine", "ExclamationMark", "PercentSign", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "LessThanSign", "EqualsSign", "GreaterThanSign", "QuestionMark", "A", "E", "LeftSquareBracket", "RightSquareBracket", "CircumflexAccent", "A_1", "E_1", "LeftCurlyBracket", "RightCurlyBracket", "RULE_NUMBER", "RULE_WS", "RULE_ID", "RULE_QNAME_TERMINAL", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_ANY_OTHER"
    };
    public static final int Delete=57;
    public static final int Described=19;
    public static final int Ask_1=139;
    public static final int Or=167;
    public static final int EqualsSignGreaterThanSign=154;
    public static final int String=70;
    public static final int Insert=64;
    public static final int Must=120;
    public static final int LessThanSign=181;
    public static final int Print=51;
    public static final int Distinct=31;
    public static final int Decimal=39;
    public static final int Least=91;
    public static final int Stage=77;
    public static final int Then=125;
    public static final int Classes=37;
    public static final int GreaterThanSign=183;
    public static final int RULE_ID=196;
    public static final int GreaterThanSignEqualsSign=155;
    public static final int Describes=20;
    public static final int Float=86;
    public static final int How=133;
    public static final int Expr=73;
    public static final int Are=137;
    public static final int Note=121;
    public static final int Contains=28;
    public static final int Where=103;
    public static final int A=185;
    public static final int E=186;
    public static final int One=146;
    public static final int Transitive=17;
    public static final int An=156;
    public static final int The=134;
    public static final int Asc=138;
    public static final int As=159;
    public static final int At=160;
    public static final int Located=45;
    public static final int Ask=132;
    public static final int Disjoint=30;
    public static final int NegativeInteger=6;
    public static final int Many=118;
    public static final int Solidus=179;
    public static final int RightCurlyBracket=193;
    public static final int FullStop=178;
    public static final int Be=161;
    public static final int UnsignedByte=11;
    public static final int Eighth=59;
    public static final int Length=65;
    public static final int Sixth=96;
    public static final int QuestionMark=184;
    public static final int Relationship=10;
    public static final int By=162;
    public static final int Select=68;
    public static final int After=79;
    public static final int Has=142;
    public static final int TopLevel=24;
    public static final int Other=95;
    public static final int HyphenMinusHyphenMinus=151;
    public static final int Types=100;
    public static final int Using=101;
    public static final int Index=89;
    public static final int Seventh=47;
    public static final int Desc=111;
    public static final int Last=116;
    public static final int There=98;
    public static final int Version=50;
    public static final int Test=78;
    public static final int List=104;
    public static final int First=85;
    public static final int To=168;
    public static final int Another=35;
    public static final int An_1=158;
    public static final int Same=123;
    public static final int For=141;
    public static final int RightParenthesis=173;
    public static final int Duration=32;
    public static final int Not=145;
    public static final int E_1=191;
    public static final int External=27;
    public static final int Long=117;
    public static final int Does=112;
    public static final int Unique=71;
    public static final int Class=81;
    public static final int Element=41;
    public static final int Time=126;
    public static final int What=107;
    public static final int With=130;
    public static final int RULE_SL_COMMENT=200;
    public static final int NonPositiveInteger=5;
    public static final int AmpersandAmpersand=150;
    public static final int Colon=180;
    public static final int EOF=-1;
    public static final int Asterisk=174;
    public static final int Return=66;
    public static final int NonNegativeInteger=4;
    public static final int LeftCurlyBracket=192;
    public static final int RULE_NUMBER=194;
    public static final int Subject=48;
    public static final int CircumflexAccent=189;
    public static final int Integer=43;
    public static final int Exactly=42;
    public static final int Exists=60;
    public static final int Base64Binary=9;
    public static final int Import=63;
    public static final int Values=72;
    public static final int Count=82;
    public static final int False=83;
    public static final int DateTime=29;
    public static final int The_1=147;
    public static final int LeftParenthesis=172;
    public static final int Inverse=44;
    public static final int Boolean=36;
    public static final int ExclamationMark=170;
    public static final int AnyURI=55;
    public static final int EqualsSignEqualsSign=153;
    public static final int Graph=74;
    public static final int Some=124;
    public static final int UnsignedInt=13;
    public static final int GYear=87;
    public static final int PlusSign=175;
    public static final int Byte=108;
    public static final int RULE_QNAME_TERMINAL=197;
    public static final int RULE_ML_COMMENT=199;
    public static final int Level=92;
    public static final int LeftSquareBracket=187;
    public static final int Always=54;
    public static final int Rule=106;
    public static final int If=163;
    public static final int HexBinary=22;
    public static final int Write=53;
    public static final int In=164;
    public static final int VerticalLineVerticalLine=169;
    public static final int Given=88;
    public static final int Is=165;
    public static final int Uri=148;
    public static final int Comma=176;
    public static final int HyphenMinus=177;
    public static final int Contain=38;
    public static final int LessThanSignEqualsSign=152;
    public static final int Property=34;
    public static final int Sublist=49;
    public static final int PositiveInteger=7;
    public static final int Default=40;
    public static final int Annotation=15;
    public static final int Instances=23;
    public static final int Type=128;
    public static final int Known=90;
    public static final int Model=75;
    public static final int ExclamationMarkEqualsSign=149;
    public static final int None=105;
    public static final int Most=119;
    public static final int GYearMonth=16;
    public static final int True=127;
    public static final int Update=52;
    public static final int FullStopFullStopFullStop=131;
    public static final int Matching=33;
    public static final int Read=76;
    public static final int Returns=46;
    public static final int PercentSign=171;
    public static final int Third=99;
    public static final int Fifth=84;
    public static final int Symmetrical=12;
    public static final int RightSquareBracket=188;
    public static final int Order=94;
    public static final int Have=115;
    public static final int Double=58;
    public static final int Can=140;
    public static final int GMonthDay=21;
    public static final int A_1=190;
    public static final int And=135;
    public static final int Value=102;
    public static final int Before=56;
    public static final int AnySimpleType=8;
    public static final int How_1=143;
    public static final int RULE_STRING=198;
    public static final int What_1=129;
    public static final int Any=136;
    public static final int Int=144;
    public static final int EqualsSign=182;
    public static final int Ninth=93;
    public static final int GMonth=62;
    public static final int RULE_WS=195;
    public static final int Explain=26;
    public static final int Equation=25;
    public static final int Only=122;
    public static final int Data=109;
    public static final int From=113;
    public static final int RULE_ANY_OTHER=201;
    public static final int Date=110;
    public static final int Second=67;
    public static final int GDay=114;
    public static final int Single=69;
    public static final int Alias=80;
    public static final int Of=166;
    public static final int Construct=18;
    public static final int PI=157;
    public static final int Deductions=14;
    public static final int Fourth=61;
    public static final int Tenth=97;

    // delegates
    // delegators


        public InternalDialogParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalDialogParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalDialogParser.tokenNames; }
    public String getGrammarFileName() { return "InternalDialogParser.g"; }



     	private DialogGrammarAccess grammarAccess;

        public InternalDialogParser(TokenStream input, DialogGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "DialogModel";
       	}

       	@Override
       	protected DialogGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleDialogModel"
    // InternalDialogParser.g:58:1: entryRuleDialogModel returns [EObject current=null] : iv_ruleDialogModel= ruleDialogModel EOF ;
    public final EObject entryRuleDialogModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDialogModel = null;


        try {
            // InternalDialogParser.g:58:52: (iv_ruleDialogModel= ruleDialogModel EOF )
            // InternalDialogParser.g:59:2: iv_ruleDialogModel= ruleDialogModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDialogModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDialogModel=ruleDialogModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDialogModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDialogModel"


    // $ANTLR start "ruleDialogModel"
    // InternalDialogParser.g:65:1: ruleDialogModel returns [EObject current=null] : this_SadlModel_0= ruleSadlModel ;
    public final EObject ruleDialogModel() throws RecognitionException {
        EObject current = null;

        EObject this_SadlModel_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:71:2: (this_SadlModel_0= ruleSadlModel )
            // InternalDialogParser.g:72:2: this_SadlModel_0= ruleSadlModel
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getDialogModelAccess().getSadlModelParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_SadlModel_0=ruleSadlModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SadlModel_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDialogModel"


    // $ANTLR start "entryRuleSadlModelElement"
    // InternalDialogParser.g:83:1: entryRuleSadlModelElement returns [EObject current=null] : iv_ruleSadlModelElement= ruleSadlModelElement EOF ;
    public final EObject entryRuleSadlModelElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlModelElement = null;


        try {
            // InternalDialogParser.g:83:57: (iv_ruleSadlModelElement= ruleSadlModelElement EOF )
            // InternalDialogParser.g:84:2: iv_ruleSadlModelElement= ruleSadlModelElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlModelElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlModelElement=ruleSadlModelElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlModelElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlModelElement"


    // $ANTLR start "ruleSadlModelElement"
    // InternalDialogParser.g:90:1: ruleSadlModelElement returns [EObject current=null] : ( (this_ModifiedAskStatement_0= ruleModifiedAskStatement ruleEOS ) | (this_WhatStatement_2= ruleWhatStatement ruleEOS ) | (this_HowManyValuesStatement_4= ruleHowManyValuesStatement ruleEOS ) ) ;
    public final EObject ruleSadlModelElement() throws RecognitionException {
        EObject current = null;

        EObject this_ModifiedAskStatement_0 = null;

        EObject this_WhatStatement_2 = null;

        EObject this_HowManyValuesStatement_4 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:96:2: ( ( (this_ModifiedAskStatement_0= ruleModifiedAskStatement ruleEOS ) | (this_WhatStatement_2= ruleWhatStatement ruleEOS ) | (this_HowManyValuesStatement_4= ruleHowManyValuesStatement ruleEOS ) ) )
            // InternalDialogParser.g:97:2: ( (this_ModifiedAskStatement_0= ruleModifiedAskStatement ruleEOS ) | (this_WhatStatement_2= ruleWhatStatement ruleEOS ) | (this_HowManyValuesStatement_4= ruleHowManyValuesStatement ruleEOS ) )
            {
            // InternalDialogParser.g:97:2: ( (this_ModifiedAskStatement_0= ruleModifiedAskStatement ruleEOS ) | (this_WhatStatement_2= ruleWhatStatement ruleEOS ) | (this_HowManyValuesStatement_4= ruleHowManyValuesStatement ruleEOS ) )
            int alt1=3;
            switch ( input.LA(1) ) {
            case Ask:
            case Ask_1:
                {
                alt1=1;
                }
                break;
            case Values:
            case Value:
            case What:
            case What_1:
                {
                alt1=2;
                }
                break;
            case How:
            case How_1:
                {
                alt1=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }

            switch (alt1) {
                case 1 :
                    // InternalDialogParser.g:98:3: (this_ModifiedAskStatement_0= ruleModifiedAskStatement ruleEOS )
                    {
                    // InternalDialogParser.g:98:3: (this_ModifiedAskStatement_0= ruleModifiedAskStatement ruleEOS )
                    // InternalDialogParser.g:99:4: this_ModifiedAskStatement_0= ruleModifiedAskStatement ruleEOS
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getModifiedAskStatementParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_3);
                    this_ModifiedAskStatement_0=ruleModifiedAskStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ModifiedAskStatement_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getEOSParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleEOS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:116:3: (this_WhatStatement_2= ruleWhatStatement ruleEOS )
                    {
                    // InternalDialogParser.g:116:3: (this_WhatStatement_2= ruleWhatStatement ruleEOS )
                    // InternalDialogParser.g:117:4: this_WhatStatement_2= ruleWhatStatement ruleEOS
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getWhatStatementParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_3);
                    this_WhatStatement_2=ruleWhatStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_WhatStatement_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getEOSParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleEOS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:134:3: (this_HowManyValuesStatement_4= ruleHowManyValuesStatement ruleEOS )
                    {
                    // InternalDialogParser.g:134:3: (this_HowManyValuesStatement_4= ruleHowManyValuesStatement ruleEOS )
                    // InternalDialogParser.g:135:4: this_HowManyValuesStatement_4= ruleHowManyValuesStatement ruleEOS
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getHowManyValuesStatementParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FOLLOW_3);
                    this_HowManyValuesStatement_4=ruleHowManyValuesStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_HowManyValuesStatement_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getEOSParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleEOS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlModelElement"


    // $ANTLR start "entryRuleModifiedAskStatement"
    // InternalDialogParser.g:155:1: entryRuleModifiedAskStatement returns [EObject current=null] : iv_ruleModifiedAskStatement= ruleModifiedAskStatement EOF ;
    public final EObject entryRuleModifiedAskStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModifiedAskStatement = null;


        try {
            // InternalDialogParser.g:155:61: (iv_ruleModifiedAskStatement= ruleModifiedAskStatement EOF )
            // InternalDialogParser.g:156:2: iv_ruleModifiedAskStatement= ruleModifiedAskStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModifiedAskStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModifiedAskStatement=ruleModifiedAskStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModifiedAskStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModifiedAskStatement"


    // $ANTLR start "ruleModifiedAskStatement"
    // InternalDialogParser.g:162:1: ruleModifiedAskStatement returns [EObject current=null] : ( () (otherlv_1= Ask | otherlv_2= Ask_1 ) ( ( (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression ) ) ) ) ;
    public final EObject ruleModifiedAskStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_expr_3_1 = null;

        EObject lv_expr_3_2 = null;

        EObject lv_expr_3_3 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:168:2: ( ( () (otherlv_1= Ask | otherlv_2= Ask_1 ) ( ( (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression ) ) ) ) )
            // InternalDialogParser.g:169:2: ( () (otherlv_1= Ask | otherlv_2= Ask_1 ) ( ( (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression ) ) ) )
            {
            // InternalDialogParser.g:169:2: ( () (otherlv_1= Ask | otherlv_2= Ask_1 ) ( ( (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression ) ) ) )
            // InternalDialogParser.g:170:3: () (otherlv_1= Ask | otherlv_2= Ask_1 ) ( ( (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression ) ) )
            {
            // InternalDialogParser.g:170:3: ()
            // InternalDialogParser.g:171:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getModifiedAskStatementAccess().getModifiedAskStatementAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:177:3: (otherlv_1= Ask | otherlv_2= Ask_1 )
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==Ask) ) {
                alt2=1;
            }
            else if ( (LA2_0==Ask_1) ) {
                alt2=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }
            switch (alt2) {
                case 1 :
                    // InternalDialogParser.g:178:4: otherlv_1= Ask
                    {
                    otherlv_1=(Token)match(input,Ask,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getModifiedAskStatementAccess().getAskKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:183:4: otherlv_2= Ask_1
                    {
                    otherlv_2=(Token)match(input,Ask_1,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getModifiedAskStatementAccess().getAskKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:188:3: ( ( (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression ) ) )
            // InternalDialogParser.g:189:4: ( (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression ) )
            {
            // InternalDialogParser.g:189:4: ( (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression ) )
            // InternalDialogParser.g:190:5: (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression )
            {
            // InternalDialogParser.g:190:5: (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression )
            int alt3=3;
            switch ( input.LA(1) ) {
            case Construct:
                {
                alt3=1;
                }
                break;
            case Ask_1:
                {
                alt3=2;
                }
                break;
            case Another:
            case Element:
            case Sublist:
            case Length:
            case Select:
            case Count:
            case False:
            case First:
            case Index:
            case Known:
            case There:
            case Value:
            case None:
            case Last:
            case Only:
            case Some:
            case True:
            case Type:
            case The:
            case Any:
            case Not:
            case The_1:
            case HyphenMinusHyphenMinus:
            case An:
            case PI:
            case An_1:
            case ExclamationMark:
            case LeftParenthesis:
            case HyphenMinus:
            case A:
            case LeftSquareBracket:
            case A_1:
            case E_1:
            case LeftCurlyBracket:
            case RULE_NUMBER:
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
            case RULE_STRING:
                {
                alt3=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalDialogParser.g:191:6: lv_expr_3_1= ruleConstructExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModifiedAskStatementAccess().getExprConstructExpressionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_1=ruleConstructExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModifiedAskStatementRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_1,
                      							"com.ge.research.sadl.SADL.ConstructExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:207:6: lv_expr_3_2= ruleAskExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModifiedAskStatementAccess().getExprAskExpressionParserRuleCall_2_0_1());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_2=ruleAskExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModifiedAskStatementRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_2,
                      							"com.ge.research.sadl.SADL.AskExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:223:6: lv_expr_3_3= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModifiedAskStatementAccess().getExprExpressionParserRuleCall_2_0_2());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_3=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModifiedAskStatementRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_3,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModifiedAskStatement"


    // $ANTLR start "entryRuleWhatStatement"
    // InternalDialogParser.g:245:1: entryRuleWhatStatement returns [EObject current=null] : iv_ruleWhatStatement= ruleWhatStatement EOF ;
    public final EObject entryRuleWhatStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhatStatement = null;


        try {
            // InternalDialogParser.g:245:54: (iv_ruleWhatStatement= ruleWhatStatement EOF )
            // InternalDialogParser.g:246:2: iv_ruleWhatStatement= ruleWhatStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhatStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWhatStatement=ruleWhatStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhatStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhatStatement"


    // $ANTLR start "ruleWhatStatement"
    // InternalDialogParser.g:252:1: ruleWhatStatement returns [EObject current=null] : ( ( () (otherlv_1= What | otherlv_2= What_1 ) ( (lv_stmt_3_0= ruleWhatIsStatement ) ) ) | this_WhatValuesStatement_4= ruleWhatValuesStatement ) ;
    public final EObject ruleWhatStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_stmt_3_0 = null;

        EObject this_WhatValuesStatement_4 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:258:2: ( ( ( () (otherlv_1= What | otherlv_2= What_1 ) ( (lv_stmt_3_0= ruleWhatIsStatement ) ) ) | this_WhatValuesStatement_4= ruleWhatValuesStatement ) )
            // InternalDialogParser.g:259:2: ( ( () (otherlv_1= What | otherlv_2= What_1 ) ( (lv_stmt_3_0= ruleWhatIsStatement ) ) ) | this_WhatValuesStatement_4= ruleWhatValuesStatement )
            {
            // InternalDialogParser.g:259:2: ( ( () (otherlv_1= What | otherlv_2= What_1 ) ( (lv_stmt_3_0= ruleWhatIsStatement ) ) ) | this_WhatValuesStatement_4= ruleWhatValuesStatement )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==What||LA5_0==What_1) ) {
                alt5=1;
            }
            else if ( (LA5_0==Values||LA5_0==Value) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalDialogParser.g:260:3: ( () (otherlv_1= What | otherlv_2= What_1 ) ( (lv_stmt_3_0= ruleWhatIsStatement ) ) )
                    {
                    // InternalDialogParser.g:260:3: ( () (otherlv_1= What | otherlv_2= What_1 ) ( (lv_stmt_3_0= ruleWhatIsStatement ) ) )
                    // InternalDialogParser.g:261:4: () (otherlv_1= What | otherlv_2= What_1 ) ( (lv_stmt_3_0= ruleWhatIsStatement ) )
                    {
                    // InternalDialogParser.g:261:4: ()
                    // InternalDialogParser.g:262:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getWhatStatementAccess().getWhatStatementAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:268:4: (otherlv_1= What | otherlv_2= What_1 )
                    int alt4=2;
                    int LA4_0 = input.LA(1);

                    if ( (LA4_0==What) ) {
                        alt4=1;
                    }
                    else if ( (LA4_0==What_1) ) {
                        alt4=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 4, 0, input);

                        throw nvae;
                    }
                    switch (alt4) {
                        case 1 :
                            // InternalDialogParser.g:269:5: otherlv_1= What
                            {
                            otherlv_1=(Token)match(input,What,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getWhatStatementAccess().getWhatKeyword_0_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:274:5: otherlv_2= What_1
                            {
                            otherlv_2=(Token)match(input,What_1,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getWhatStatementAccess().getWhatKeyword_0_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalDialogParser.g:279:4: ( (lv_stmt_3_0= ruleWhatIsStatement ) )
                    // InternalDialogParser.g:280:5: (lv_stmt_3_0= ruleWhatIsStatement )
                    {
                    // InternalDialogParser.g:280:5: (lv_stmt_3_0= ruleWhatIsStatement )
                    // InternalDialogParser.g:281:6: lv_stmt_3_0= ruleWhatIsStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWhatStatementAccess().getStmtWhatIsStatementParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_stmt_3_0=ruleWhatIsStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWhatStatementRule());
                      						}
                      						set(
                      							current,
                      							"stmt",
                      							lv_stmt_3_0,
                      							"com.ge.research.sadl.darpa.aske.Dialog.WhatIsStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:300:3: this_WhatValuesStatement_4= ruleWhatValuesStatement
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getWhatStatementAccess().getWhatValuesStatementParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_WhatValuesStatement_4=ruleWhatValuesStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_WhatValuesStatement_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhatStatement"


    // $ANTLR start "entryRuleWhatIsStatement"
    // InternalDialogParser.g:312:1: entryRuleWhatIsStatement returns [EObject current=null] : iv_ruleWhatIsStatement= ruleWhatIsStatement EOF ;
    public final EObject entryRuleWhatIsStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhatIsStatement = null;


        try {
            // InternalDialogParser.g:312:56: (iv_ruleWhatIsStatement= ruleWhatIsStatement EOF )
            // InternalDialogParser.g:313:2: iv_ruleWhatIsStatement= ruleWhatIsStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhatIsStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWhatIsStatement=ruleWhatIsStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhatIsStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhatIsStatement"


    // $ANTLR start "ruleWhatIsStatement"
    // InternalDialogParser.g:319:1: ruleWhatIsStatement returns [EObject current=null] : ( () otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlResource ) ) ) ;
    public final EObject ruleWhatIsStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_article_2_0 = null;

        EObject lv_target_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:325:2: ( ( () otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlResource ) ) ) )
            // InternalDialogParser.g:326:2: ( () otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlResource ) ) )
            {
            // InternalDialogParser.g:326:2: ( () otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlResource ) ) )
            // InternalDialogParser.g:327:3: () otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlResource ) )
            {
            // InternalDialogParser.g:327:3: ()
            // InternalDialogParser.g:328:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getWhatIsStatementAccess().getWhatIsStatementAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Is,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getWhatIsStatementAccess().getIsKeyword_1());
              		
            }
            // InternalDialogParser.g:338:3: ( (lv_article_2_0= ruleAnArticle ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==Another||LA6_0==Some||LA6_0==The||LA6_0==Any||LA6_0==The_1||LA6_0==An||LA6_0==An_1||LA6_0==A||LA6_0==A_1) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalDialogParser.g:339:4: (lv_article_2_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:339:4: (lv_article_2_0= ruleAnArticle )
                    // InternalDialogParser.g:340:5: lv_article_2_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getWhatIsStatementAccess().getArticleAnArticleParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_6);
                    lv_article_2_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getWhatIsStatementRule());
                      					}
                      					set(
                      						current,
                      						"article",
                      						lv_article_2_0,
                      						"com.ge.research.sadl.SADL.AnArticle");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalDialogParser.g:357:3: ( (lv_target_3_0= ruleSadlResource ) )
            // InternalDialogParser.g:358:4: (lv_target_3_0= ruleSadlResource )
            {
            // InternalDialogParser.g:358:4: (lv_target_3_0= ruleSadlResource )
            // InternalDialogParser.g:359:5: lv_target_3_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWhatIsStatementAccess().getTargetSadlResourceParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_target_3_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWhatIsStatementRule());
              					}
              					set(
              						current,
              						"target",
              						lv_target_3_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhatIsStatement"


    // $ANTLR start "entryRuleWhatValuesStatement"
    // InternalDialogParser.g:380:1: entryRuleWhatValuesStatement returns [EObject current=null] : iv_ruleWhatValuesStatement= ruleWhatValuesStatement EOF ;
    public final EObject entryRuleWhatValuesStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhatValuesStatement = null;


        try {
            // InternalDialogParser.g:380:60: (iv_ruleWhatValuesStatement= ruleWhatValuesStatement EOF )
            // InternalDialogParser.g:381:2: iv_ruleWhatValuesStatement= ruleWhatValuesStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhatValuesStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWhatValuesStatement=ruleWhatValuesStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhatValuesStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhatValuesStatement"


    // $ANTLR start "ruleWhatValuesStatement"
    // InternalDialogParser.g:387:1: ruleWhatValuesStatement returns [EObject current=null] : ( () (otherlv_1= Value | otherlv_2= Values ) ( ( (lv_typ_3_1= Can | lv_typ_3_2= Must ) ) ) ( (lv_prop_4_0= ruleSadlResource ) ) otherlv_5= Of ( (lv_article_6_0= ruleAnArticle ) )? ( (lv_cls_7_0= ruleSadlPrimaryTypeReference ) ) otherlv_8= Have ) ;
    public final EObject ruleWhatValuesStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_typ_3_1=null;
        Token lv_typ_3_2=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_prop_4_0 = null;

        AntlrDatatypeRuleToken lv_article_6_0 = null;

        EObject lv_cls_7_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:393:2: ( ( () (otherlv_1= Value | otherlv_2= Values ) ( ( (lv_typ_3_1= Can | lv_typ_3_2= Must ) ) ) ( (lv_prop_4_0= ruleSadlResource ) ) otherlv_5= Of ( (lv_article_6_0= ruleAnArticle ) )? ( (lv_cls_7_0= ruleSadlPrimaryTypeReference ) ) otherlv_8= Have ) )
            // InternalDialogParser.g:394:2: ( () (otherlv_1= Value | otherlv_2= Values ) ( ( (lv_typ_3_1= Can | lv_typ_3_2= Must ) ) ) ( (lv_prop_4_0= ruleSadlResource ) ) otherlv_5= Of ( (lv_article_6_0= ruleAnArticle ) )? ( (lv_cls_7_0= ruleSadlPrimaryTypeReference ) ) otherlv_8= Have )
            {
            // InternalDialogParser.g:394:2: ( () (otherlv_1= Value | otherlv_2= Values ) ( ( (lv_typ_3_1= Can | lv_typ_3_2= Must ) ) ) ( (lv_prop_4_0= ruleSadlResource ) ) otherlv_5= Of ( (lv_article_6_0= ruleAnArticle ) )? ( (lv_cls_7_0= ruleSadlPrimaryTypeReference ) ) otherlv_8= Have )
            // InternalDialogParser.g:395:3: () (otherlv_1= Value | otherlv_2= Values ) ( ( (lv_typ_3_1= Can | lv_typ_3_2= Must ) ) ) ( (lv_prop_4_0= ruleSadlResource ) ) otherlv_5= Of ( (lv_article_6_0= ruleAnArticle ) )? ( (lv_cls_7_0= ruleSadlPrimaryTypeReference ) ) otherlv_8= Have
            {
            // InternalDialogParser.g:395:3: ()
            // InternalDialogParser.g:396:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getWhatValuesStatementAccess().getWhatValuesStatementAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:402:3: (otherlv_1= Value | otherlv_2= Values )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==Value) ) {
                alt7=1;
            }
            else if ( (LA7_0==Values) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalDialogParser.g:403:4: otherlv_1= Value
                    {
                    otherlv_1=(Token)match(input,Value,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getWhatValuesStatementAccess().getValueKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:408:4: otherlv_2= Values
                    {
                    otherlv_2=(Token)match(input,Values,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getWhatValuesStatementAccess().getValuesKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:413:3: ( ( (lv_typ_3_1= Can | lv_typ_3_2= Must ) ) )
            // InternalDialogParser.g:414:4: ( (lv_typ_3_1= Can | lv_typ_3_2= Must ) )
            {
            // InternalDialogParser.g:414:4: ( (lv_typ_3_1= Can | lv_typ_3_2= Must ) )
            // InternalDialogParser.g:415:5: (lv_typ_3_1= Can | lv_typ_3_2= Must )
            {
            // InternalDialogParser.g:415:5: (lv_typ_3_1= Can | lv_typ_3_2= Must )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==Can) ) {
                alt8=1;
            }
            else if ( (LA8_0==Must) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalDialogParser.g:416:6: lv_typ_3_1= Can
                    {
                    lv_typ_3_1=(Token)match(input,Can,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_typ_3_1, grammarAccess.getWhatValuesStatementAccess().getTypCanKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getWhatValuesStatementRule());
                      						}
                      						setWithLastConsumed(current, "typ", lv_typ_3_1, null);
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:427:6: lv_typ_3_2= Must
                    {
                    lv_typ_3_2=(Token)match(input,Must,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_typ_3_2, grammarAccess.getWhatValuesStatementAccess().getTypMustKeyword_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getWhatValuesStatementRule());
                      						}
                      						setWithLastConsumed(current, "typ", lv_typ_3_2, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalDialogParser.g:440:3: ( (lv_prop_4_0= ruleSadlResource ) )
            // InternalDialogParser.g:441:4: (lv_prop_4_0= ruleSadlResource )
            {
            // InternalDialogParser.g:441:4: (lv_prop_4_0= ruleSadlResource )
            // InternalDialogParser.g:442:5: lv_prop_4_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWhatValuesStatementAccess().getPropSadlResourceParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_8);
            lv_prop_4_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWhatValuesStatementRule());
              					}
              					set(
              						current,
              						"prop",
              						lv_prop_4_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,Of,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getWhatValuesStatementAccess().getOfKeyword_4());
              		
            }
            // InternalDialogParser.g:463:3: ( (lv_article_6_0= ruleAnArticle ) )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==Another||LA9_0==Some||LA9_0==The||LA9_0==Any||LA9_0==The_1||LA9_0==An||LA9_0==An_1||LA9_0==A||LA9_0==A_1) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalDialogParser.g:464:4: (lv_article_6_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:464:4: (lv_article_6_0= ruleAnArticle )
                    // InternalDialogParser.g:465:5: lv_article_6_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getWhatValuesStatementAccess().getArticleAnArticleParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_9);
                    lv_article_6_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getWhatValuesStatementRule());
                      					}
                      					set(
                      						current,
                      						"article",
                      						lv_article_6_0,
                      						"com.ge.research.sadl.SADL.AnArticle");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalDialogParser.g:482:3: ( (lv_cls_7_0= ruleSadlPrimaryTypeReference ) )
            // InternalDialogParser.g:483:4: (lv_cls_7_0= ruleSadlPrimaryTypeReference )
            {
            // InternalDialogParser.g:483:4: (lv_cls_7_0= ruleSadlPrimaryTypeReference )
            // InternalDialogParser.g:484:5: lv_cls_7_0= ruleSadlPrimaryTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWhatValuesStatementAccess().getClsSadlPrimaryTypeReferenceParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_cls_7_0=ruleSadlPrimaryTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWhatValuesStatementRule());
              					}
              					set(
              						current,
              						"cls",
              						lv_cls_7_0,
              						"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_8=(Token)match(input,Have,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getWhatValuesStatementAccess().getHaveKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhatValuesStatement"


    // $ANTLR start "entryRuleHowManyValuesStatement"
    // InternalDialogParser.g:509:1: entryRuleHowManyValuesStatement returns [EObject current=null] : iv_ruleHowManyValuesStatement= ruleHowManyValuesStatement EOF ;
    public final EObject entryRuleHowManyValuesStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHowManyValuesStatement = null;


        try {
            // InternalDialogParser.g:509:63: (iv_ruleHowManyValuesStatement= ruleHowManyValuesStatement EOF )
            // InternalDialogParser.g:510:2: iv_ruleHowManyValuesStatement= ruleHowManyValuesStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHowManyValuesStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHowManyValuesStatement=ruleHowManyValuesStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHowManyValuesStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHowManyValuesStatement"


    // $ANTLR start "ruleHowManyValuesStatement"
    // InternalDialogParser.g:516:1: ruleHowManyValuesStatement returns [EObject current=null] : ( () (otherlv_1= How | otherlv_2= How_1 ) otherlv_3= Many otherlv_4= Values otherlv_5= Of ( (lv_prop_6_0= ruleSadlResource ) ) (otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) ) )? otherlv_10= Can ( (lv_article_11_0= ruleAnArticle ) )? ( (lv_cls_12_0= ruleSadlPrimaryTypeReference ) ) otherlv_13= Have ) ;
    public final EObject ruleHowManyValuesStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_13=null;
        EObject lv_prop_6_0 = null;

        EObject lv_typ_9_0 = null;

        AntlrDatatypeRuleToken lv_article_11_0 = null;

        EObject lv_cls_12_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:522:2: ( ( () (otherlv_1= How | otherlv_2= How_1 ) otherlv_3= Many otherlv_4= Values otherlv_5= Of ( (lv_prop_6_0= ruleSadlResource ) ) (otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) ) )? otherlv_10= Can ( (lv_article_11_0= ruleAnArticle ) )? ( (lv_cls_12_0= ruleSadlPrimaryTypeReference ) ) otherlv_13= Have ) )
            // InternalDialogParser.g:523:2: ( () (otherlv_1= How | otherlv_2= How_1 ) otherlv_3= Many otherlv_4= Values otherlv_5= Of ( (lv_prop_6_0= ruleSadlResource ) ) (otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) ) )? otherlv_10= Can ( (lv_article_11_0= ruleAnArticle ) )? ( (lv_cls_12_0= ruleSadlPrimaryTypeReference ) ) otherlv_13= Have )
            {
            // InternalDialogParser.g:523:2: ( () (otherlv_1= How | otherlv_2= How_1 ) otherlv_3= Many otherlv_4= Values otherlv_5= Of ( (lv_prop_6_0= ruleSadlResource ) ) (otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) ) )? otherlv_10= Can ( (lv_article_11_0= ruleAnArticle ) )? ( (lv_cls_12_0= ruleSadlPrimaryTypeReference ) ) otherlv_13= Have )
            // InternalDialogParser.g:524:3: () (otherlv_1= How | otherlv_2= How_1 ) otherlv_3= Many otherlv_4= Values otherlv_5= Of ( (lv_prop_6_0= ruleSadlResource ) ) (otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) ) )? otherlv_10= Can ( (lv_article_11_0= ruleAnArticle ) )? ( (lv_cls_12_0= ruleSadlPrimaryTypeReference ) ) otherlv_13= Have
            {
            // InternalDialogParser.g:524:3: ()
            // InternalDialogParser.g:525:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getHowManyValuesStatementAccess().getHowManyValuesStatementAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:531:3: (otherlv_1= How | otherlv_2= How_1 )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==How) ) {
                alt10=1;
            }
            else if ( (LA10_0==How_1) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalDialogParser.g:532:4: otherlv_1= How
                    {
                    otherlv_1=(Token)match(input,How,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getHowManyValuesStatementAccess().getHowKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:537:4: otherlv_2= How_1
                    {
                    otherlv_2=(Token)match(input,How_1,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getHowManyValuesStatementAccess().getHowKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,Many,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getHowManyValuesStatementAccess().getManyKeyword_2());
              		
            }
            otherlv_4=(Token)match(input,Values,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getHowManyValuesStatementAccess().getValuesKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,Of,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getHowManyValuesStatementAccess().getOfKeyword_4());
              		
            }
            // InternalDialogParser.g:554:3: ( (lv_prop_6_0= ruleSadlResource ) )
            // InternalDialogParser.g:555:4: (lv_prop_6_0= ruleSadlResource )
            {
            // InternalDialogParser.g:555:4: (lv_prop_6_0= ruleSadlResource )
            // InternalDialogParser.g:556:5: lv_prop_6_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getHowManyValuesStatementAccess().getPropSadlResourceParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_prop_6_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getHowManyValuesStatementRule());
              					}
              					set(
              						current,
              						"prop",
              						lv_prop_6_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:573:3: (otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==Of) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalDialogParser.g:574:4: otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) )
                    {
                    otherlv_7=(Token)match(input,Of,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getHowManyValuesStatementAccess().getOfKeyword_6_0());
                      			
                    }
                    otherlv_8=(Token)match(input,Type,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getHowManyValuesStatementAccess().getTypeKeyword_6_1());
                      			
                    }
                    // InternalDialogParser.g:582:4: ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:583:5: (lv_typ_9_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:583:5: (lv_typ_9_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:584:6: lv_typ_9_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHowManyValuesStatementAccess().getTypSadlPrimaryTypeReferenceParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_15);
                    lv_typ_9_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHowManyValuesStatementRule());
                      						}
                      						set(
                      							current,
                      							"typ",
                      							lv_typ_9_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,Can,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getHowManyValuesStatementAccess().getCanKeyword_7());
              		
            }
            // InternalDialogParser.g:606:3: ( (lv_article_11_0= ruleAnArticle ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==Another||LA12_0==Some||LA12_0==The||LA12_0==Any||LA12_0==The_1||LA12_0==An||LA12_0==An_1||LA12_0==A||LA12_0==A_1) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalDialogParser.g:607:4: (lv_article_11_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:607:4: (lv_article_11_0= ruleAnArticle )
                    // InternalDialogParser.g:608:5: lv_article_11_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getHowManyValuesStatementAccess().getArticleAnArticleParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_9);
                    lv_article_11_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getHowManyValuesStatementRule());
                      					}
                      					set(
                      						current,
                      						"article",
                      						lv_article_11_0,
                      						"com.ge.research.sadl.SADL.AnArticle");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalDialogParser.g:625:3: ( (lv_cls_12_0= ruleSadlPrimaryTypeReference ) )
            // InternalDialogParser.g:626:4: (lv_cls_12_0= ruleSadlPrimaryTypeReference )
            {
            // InternalDialogParser.g:626:4: (lv_cls_12_0= ruleSadlPrimaryTypeReference )
            // InternalDialogParser.g:627:5: lv_cls_12_0= ruleSadlPrimaryTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getHowManyValuesStatementAccess().getClsSadlPrimaryTypeReferenceParserRuleCall_9_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_cls_12_0=ruleSadlPrimaryTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getHowManyValuesStatementRule());
              					}
              					set(
              						current,
              						"cls",
              						lv_cls_12_0,
              						"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_13=(Token)match(input,Have,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getHowManyValuesStatementAccess().getHaveKeyword_10());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHowManyValuesStatement"


    // $ANTLR start "entryRuleEOS"
    // InternalDialogParser.g:652:1: entryRuleEOS returns [String current=null] : iv_ruleEOS= ruleEOS EOF ;
    public final String entryRuleEOS() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEOS = null;


        try {
            // InternalDialogParser.g:652:43: (iv_ruleEOS= ruleEOS EOF )
            // InternalDialogParser.g:653:2: iv_ruleEOS= ruleEOS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEOSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEOS=ruleEOS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEOS.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEOS"


    // $ANTLR start "ruleEOS"
    // InternalDialogParser.g:659:1: ruleEOS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_EOS_0= superEOS | kw= QuestionMark ) ;
    public final AntlrDatatypeRuleToken ruleEOS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_EOS_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:665:2: ( (this_EOS_0= superEOS | kw= QuestionMark ) )
            // InternalDialogParser.g:666:2: (this_EOS_0= superEOS | kw= QuestionMark )
            {
            // InternalDialogParser.g:666:2: (this_EOS_0= superEOS | kw= QuestionMark )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==FullStop) ) {
                alt13=1;
            }
            else if ( (LA13_0==QuestionMark) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalDialogParser.g:667:3: this_EOS_0= superEOS
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEOSAccess().getEOSParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EOS_0=superEOS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_EOS_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:678:3: kw= QuestionMark
                    {
                    kw=(Token)match(input,QuestionMark,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEOSAccess().getQuestionMarkKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEOS"


    // $ANTLR start "entryRuleSadlModel"
    // InternalDialogParser.g:687:1: entryRuleSadlModel returns [EObject current=null] : iv_ruleSadlModel= ruleSadlModel EOF ;
    public final EObject entryRuleSadlModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlModel = null;


        try {
            // InternalDialogParser.g:687:50: (iv_ruleSadlModel= ruleSadlModel EOF )
            // InternalDialogParser.g:688:2: iv_ruleSadlModel= ruleSadlModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlModel=ruleSadlModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlModel"


    // $ANTLR start "ruleSadlModel"
    // InternalDialogParser.g:694:1: ruleSadlModel returns [EObject current=null] : (otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )* ) ;
    public final EObject ruleSadlModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_baseUri_1_0=null;
        Token otherlv_2=null;
        Token lv_alias_3_0=null;
        Token otherlv_4=null;
        Token lv_version_5_0=null;
        EObject lv_annotations_6_0 = null;

        EObject lv_imports_8_0 = null;

        EObject lv_elements_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:700:2: ( (otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )* ) )
            // InternalDialogParser.g:701:2: (otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )* )
            {
            // InternalDialogParser.g:701:2: (otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )* )
            // InternalDialogParser.g:702:3: otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )*
            {
            otherlv_0=(Token)match(input,Uri,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSadlModelAccess().getUriKeyword_0());
              		
            }
            // InternalDialogParser.g:706:3: ( (lv_baseUri_1_0= RULE_STRING ) )
            // InternalDialogParser.g:707:4: (lv_baseUri_1_0= RULE_STRING )
            {
            // InternalDialogParser.g:707:4: (lv_baseUri_1_0= RULE_STRING )
            // InternalDialogParser.g:708:5: lv_baseUri_1_0= RULE_STRING
            {
            lv_baseUri_1_0=(Token)match(input,RULE_STRING,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_baseUri_1_0, grammarAccess.getSadlModelAccess().getBaseUriSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlModelRule());
              					}
              					setWithLastConsumed(
              						current,
              						"baseUri",
              						lv_baseUri_1_0,
              						"com.ge.research.sadl.SADL.STRING");
              				
            }

            }


            }

            // InternalDialogParser.g:724:3: (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==Alias) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalDialogParser.g:725:4: otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) )
                    {
                    otherlv_2=(Token)match(input,Alias,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSadlModelAccess().getAliasKeyword_2_0());
                      			
                    }
                    // InternalDialogParser.g:729:4: ( (lv_alias_3_0= RULE_ID ) )
                    // InternalDialogParser.g:730:5: (lv_alias_3_0= RULE_ID )
                    {
                    // InternalDialogParser.g:730:5: (lv_alias_3_0= RULE_ID )
                    // InternalDialogParser.g:731:6: lv_alias_3_0= RULE_ID
                    {
                    lv_alias_3_0=(Token)match(input,RULE_ID,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_3_0, grammarAccess.getSadlModelAccess().getAliasIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlModelRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_3_0,
                      							"com.ge.research.sadl.SADL.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:748:3: (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==Version) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalDialogParser.g:749:4: otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) )
                    {
                    otherlv_4=(Token)match(input,Version,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSadlModelAccess().getVersionKeyword_3_0());
                      			
                    }
                    // InternalDialogParser.g:753:4: ( (lv_version_5_0= RULE_STRING ) )
                    // InternalDialogParser.g:754:5: (lv_version_5_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:754:5: (lv_version_5_0= RULE_STRING )
                    // InternalDialogParser.g:755:6: lv_version_5_0= RULE_STRING
                    {
                    lv_version_5_0=(Token)match(input,RULE_STRING,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_version_5_0, grammarAccess.getSadlModelAccess().getVersionSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlModelRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"version",
                      							lv_version_5_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:772:3: ( (lv_annotations_6_0= ruleSadlAnnotation ) )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==LeftParenthesis||LA16_0==Comma) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // InternalDialogParser.g:773:4: (lv_annotations_6_0= ruleSadlAnnotation )
            	    {
            	    // InternalDialogParser.g:773:4: (lv_annotations_6_0= ruleSadlAnnotation )
            	    // InternalDialogParser.g:774:5: lv_annotations_6_0= ruleSadlAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlModelAccess().getAnnotationsSadlAnnotationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_20);
            	    lv_annotations_6_0=ruleSadlAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_6_0,
            	      						"com.ge.research.sadl.SADL.SadlAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSadlModelAccess().getEOSParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_21);
            ruleEOS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:798:3: ( (lv_imports_8_0= ruleSadlImport ) )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==Import) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // InternalDialogParser.g:799:4: (lv_imports_8_0= ruleSadlImport )
            	    {
            	    // InternalDialogParser.g:799:4: (lv_imports_8_0= ruleSadlImport )
            	    // InternalDialogParser.g:800:5: lv_imports_8_0= ruleSadlImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlModelAccess().getImportsSadlImportParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_21);
            	    lv_imports_8_0=ruleSadlImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"imports",
            	      						lv_imports_8_0,
            	      						"com.ge.research.sadl.SADL.SadlImport");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);

            // InternalDialogParser.g:817:3: ( (lv_elements_9_0= ruleSadlModelElement ) )*
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==Values||LA18_0==Value||LA18_0==What||LA18_0==What_1||(LA18_0>=Ask && LA18_0<=How)||LA18_0==Ask_1||LA18_0==How_1) ) {
                    alt18=1;
                }


                switch (alt18) {
            	case 1 :
            	    // InternalDialogParser.g:818:4: (lv_elements_9_0= ruleSadlModelElement )
            	    {
            	    // InternalDialogParser.g:818:4: (lv_elements_9_0= ruleSadlModelElement )
            	    // InternalDialogParser.g:819:5: lv_elements_9_0= ruleSadlModelElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlModelAccess().getElementsSadlModelElementParserRuleCall_7_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_elements_9_0=ruleSadlModelElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"elements",
            	      						lv_elements_9_0,
            	      						"com.ge.research.sadl.darpa.aske.Dialog.SadlModelElement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlModel"


    // $ANTLR start "entryRuleSadlAnnotation"
    // InternalDialogParser.g:840:1: entryRuleSadlAnnotation returns [EObject current=null] : iv_ruleSadlAnnotation= ruleSadlAnnotation EOF ;
    public final EObject entryRuleSadlAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlAnnotation = null;


        try {
            // InternalDialogParser.g:840:55: (iv_ruleSadlAnnotation= ruleSadlAnnotation EOF )
            // InternalDialogParser.g:841:2: iv_ruleSadlAnnotation= ruleSadlAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlAnnotation=ruleSadlAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlAnnotation"


    // $ANTLR start "ruleSadlAnnotation"
    // InternalDialogParser.g:847:1: ruleSadlAnnotation returns [EObject current=null] : ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis ) ;
    public final EObject ruleSadlAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_type_2_1=null;
        Token lv_type_2_2=null;
        Token lv_contents_3_0=null;
        Token otherlv_4=null;
        Token lv_contents_5_0=null;
        Token otherlv_6=null;


        	enterRule();

        try {
            // InternalDialogParser.g:853:2: ( ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis ) )
            // InternalDialogParser.g:854:2: ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis )
            {
            // InternalDialogParser.g:854:2: ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis )
            // InternalDialogParser.g:855:3: (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis
            {
            // InternalDialogParser.g:855:3: (otherlv_0= Comma )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==Comma) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalDialogParser.g:856:4: otherlv_0= Comma
                    {
                    otherlv_0=(Token)match(input,Comma,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSadlAnnotationAccess().getCommaKeyword_0());
                      			
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSadlAnnotationAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalDialogParser.g:865:3: ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) )
            // InternalDialogParser.g:866:4: ( (lv_type_2_1= Alias | lv_type_2_2= Note ) )
            {
            // InternalDialogParser.g:866:4: ( (lv_type_2_1= Alias | lv_type_2_2= Note ) )
            // InternalDialogParser.g:867:5: (lv_type_2_1= Alias | lv_type_2_2= Note )
            {
            // InternalDialogParser.g:867:5: (lv_type_2_1= Alias | lv_type_2_2= Note )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==Alias) ) {
                alt20=1;
            }
            else if ( (LA20_0==Note) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalDialogParser.g:868:6: lv_type_2_1= Alias
                    {
                    lv_type_2_1=(Token)match(input,Alias,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_2_1, grammarAccess.getSadlAnnotationAccess().getTypeAliasKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlAnnotationRule());
                      						}
                      						setWithLastConsumed(current, "type", lv_type_2_1, null);
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:879:6: lv_type_2_2= Note
                    {
                    lv_type_2_2=(Token)match(input,Note,FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_2_2, grammarAccess.getSadlAnnotationAccess().getTypeNoteKeyword_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlAnnotationRule());
                      						}
                      						setWithLastConsumed(current, "type", lv_type_2_2, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalDialogParser.g:892:3: ( (lv_contents_3_0= RULE_STRING ) )
            // InternalDialogParser.g:893:4: (lv_contents_3_0= RULE_STRING )
            {
            // InternalDialogParser.g:893:4: (lv_contents_3_0= RULE_STRING )
            // InternalDialogParser.g:894:5: lv_contents_3_0= RULE_STRING
            {
            lv_contents_3_0=(Token)match(input,RULE_STRING,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_contents_3_0, grammarAccess.getSadlAnnotationAccess().getContentsSTRINGTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"contents",
              						lv_contents_3_0,
              						"com.ge.research.sadl.SADL.STRING");
              				
            }

            }


            }

            // InternalDialogParser.g:910:3: (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==Comma) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // InternalDialogParser.g:911:4: otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) )
            	    {
            	    otherlv_4=(Token)match(input,Comma,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getSadlAnnotationAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalDialogParser.g:915:4: ( (lv_contents_5_0= RULE_STRING ) )
            	    // InternalDialogParser.g:916:5: (lv_contents_5_0= RULE_STRING )
            	    {
            	    // InternalDialogParser.g:916:5: (lv_contents_5_0= RULE_STRING )
            	    // InternalDialogParser.g:917:6: lv_contents_5_0= RULE_STRING
            	    {
            	    lv_contents_5_0=(Token)match(input,RULE_STRING,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_contents_5_0, grammarAccess.getSadlAnnotationAccess().getContentsSTRINGTerminalRuleCall_4_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getSadlAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"contents",
            	      							lv_contents_5_0,
            	      							"com.ge.research.sadl.SADL.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getSadlAnnotationAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlAnnotation"


    // $ANTLR start "entryRuleSadlImport"
    // InternalDialogParser.g:942:1: entryRuleSadlImport returns [EObject current=null] : iv_ruleSadlImport= ruleSadlImport EOF ;
    public final EObject entryRuleSadlImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlImport = null;


        try {
            // InternalDialogParser.g:942:51: (iv_ruleSadlImport= ruleSadlImport EOF )
            // InternalDialogParser.g:943:2: iv_ruleSadlImport= ruleSadlImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlImport=ruleSadlImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlImport"


    // $ANTLR start "ruleSadlImport"
    // InternalDialogParser.g:949:1: ruleSadlImport returns [EObject current=null] : (otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS ) ;
    public final EObject ruleSadlImport() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_alias_3_0=null;


        	enterRule();

        try {
            // InternalDialogParser.g:955:2: ( (otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS ) )
            // InternalDialogParser.g:956:2: (otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS )
            {
            // InternalDialogParser.g:956:2: (otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS )
            // InternalDialogParser.g:957:3: otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS
            {
            otherlv_0=(Token)match(input,Import,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSadlImportAccess().getImportKeyword_0());
              		
            }
            // InternalDialogParser.g:961:3: ( (otherlv_1= RULE_STRING ) )
            // InternalDialogParser.g:962:4: (otherlv_1= RULE_STRING )
            {
            // InternalDialogParser.g:962:4: (otherlv_1= RULE_STRING )
            // InternalDialogParser.g:963:5: otherlv_1= RULE_STRING
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlImportRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_STRING,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getSadlImportAccess().getImportedResourceSadlModelCrossReference_1_0());
              				
            }

            }


            }

            // InternalDialogParser.g:974:3: (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==As) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // InternalDialogParser.g:975:4: otherlv_2= As ( (lv_alias_3_0= RULE_ID ) )
                    {
                    otherlv_2=(Token)match(input,As,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSadlImportAccess().getAsKeyword_2_0());
                      			
                    }
                    // InternalDialogParser.g:979:4: ( (lv_alias_3_0= RULE_ID ) )
                    // InternalDialogParser.g:980:5: (lv_alias_3_0= RULE_ID )
                    {
                    // InternalDialogParser.g:980:5: (lv_alias_3_0= RULE_ID )
                    // InternalDialogParser.g:981:6: lv_alias_3_0= RULE_ID
                    {
                    lv_alias_3_0=(Token)match(input,RULE_ID,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_3_0, grammarAccess.getSadlImportAccess().getAliasIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlImportRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_3_0,
                      							"com.ge.research.sadl.SADL.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSadlImportAccess().getEOSParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            ruleEOS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlImport"


    // $ANTLR start "ruleEquationSignature"
    // InternalDialogParser.g:1010:1: ruleEquationSignature[EObject in_current] returns [EObject current=in_current] : ( ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon ) ;
    public final EObject ruleEquationSignature(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_name_0_0 = null;

        EObject lv_parameter_2_0 = null;

        EObject lv_parameter_4_0 = null;

        EObject lv_returnType_7_0 = null;

        EObject lv_returnType_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1016:2: ( ( ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon ) )
            // InternalDialogParser.g:1017:2: ( ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon )
            {
            // InternalDialogParser.g:1017:2: ( ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon )
            // InternalDialogParser.g:1018:3: ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon
            {
            // InternalDialogParser.g:1018:3: ( (lv_name_0_0= ruleSadlResource ) )
            // InternalDialogParser.g:1019:4: (lv_name_0_0= ruleSadlResource )
            {
            // InternalDialogParser.g:1019:4: (lv_name_0_0= ruleSadlResource )
            // InternalDialogParser.g:1020:5: lv_name_0_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEquationSignatureAccess().getNameSadlResourceParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_23);
            lv_name_0_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEquationSignatureAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalDialogParser.g:1041:3: ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( ((LA24_0>=NonNegativeInteger && LA24_0<=Base64Binary)||LA24_0==UnsignedByte||LA24_0==UnsignedInt||LA24_0==GYearMonth||(LA24_0>=GMonthDay && LA24_0<=HexBinary)||LA24_0==DateTime||LA24_0==Duration||LA24_0==Boolean||LA24_0==Decimal||LA24_0==Integer||LA24_0==AnyURI||LA24_0==Double||LA24_0==GMonth||LA24_0==String||(LA24_0>=Float && LA24_0<=GYear)||LA24_0==Byte||LA24_0==Date||LA24_0==GDay||LA24_0==Long||LA24_0==Time||LA24_0==FullStopFullStopFullStop||LA24_0==Int||LA24_0==HyphenMinusHyphenMinus||LA24_0==LeftParenthesis||LA24_0==LeftCurlyBracket||(LA24_0>=RULE_ID && LA24_0<=RULE_QNAME_TERMINAL)) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalDialogParser.g:1042:4: ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )*
                    {
                    // InternalDialogParser.g:1042:4: ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) )
                    // InternalDialogParser.g:1043:5: (lv_parameter_2_0= ruleSadlParameterDeclaration )
                    {
                    // InternalDialogParser.g:1043:5: (lv_parameter_2_0= ruleSadlParameterDeclaration )
                    // InternalDialogParser.g:1044:6: lv_parameter_2_0= ruleSadlParameterDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEquationSignatureAccess().getParameterSadlParameterDeclarationParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_parameter_2_0=ruleSadlParameterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
                      						}
                      						add(
                      							current,
                      							"parameter",
                      							lv_parameter_2_0,
                      							"com.ge.research.sadl.SADL.SadlParameterDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:1061:4: (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )*
                    loop23:
                    do {
                        int alt23=2;
                        int LA23_0 = input.LA(1);

                        if ( (LA23_0==Comma) ) {
                            alt23=1;
                        }


                        switch (alt23) {
                    	case 1 :
                    	    // InternalDialogParser.g:1062:5: otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_28); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getEquationSignatureAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:1066:5: ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) )
                    	    // InternalDialogParser.g:1067:6: (lv_parameter_4_0= ruleSadlParameterDeclaration )
                    	    {
                    	    // InternalDialogParser.g:1067:6: (lv_parameter_4_0= ruleSadlParameterDeclaration )
                    	    // InternalDialogParser.g:1068:7: lv_parameter_4_0= ruleSadlParameterDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getEquationSignatureAccess().getParameterSadlParameterDeclarationParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_parameter_4_0=ruleSadlParameterDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameter",
                    	      								lv_parameter_4_0,
                    	      								"com.ge.research.sadl.SADL.SadlParameterDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop23;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getEquationSignatureAccess().getRightParenthesisKeyword_3());
              		
            }
            otherlv_6=(Token)match(input,Returns,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getEquationSignatureAccess().getReturnsKeyword_4());
              		
            }
            // InternalDialogParser.g:1095:3: ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* )
            // InternalDialogParser.g:1096:4: ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )*
            {
            // InternalDialogParser.g:1096:4: ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) )
            // InternalDialogParser.g:1097:5: (lv_returnType_7_0= ruleSadlReturnDeclaration )
            {
            // InternalDialogParser.g:1097:5: (lv_returnType_7_0= ruleSadlReturnDeclaration )
            // InternalDialogParser.g:1098:6: lv_returnType_7_0= ruleSadlReturnDeclaration
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getEquationSignatureAccess().getReturnTypeSadlReturnDeclarationParserRuleCall_5_0_0());
              					
            }
            pushFollow(FOLLOW_31);
            lv_returnType_7_0=ruleSadlReturnDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
              						}
              						add(
              							current,
              							"returnType",
              							lv_returnType_7_0,
              							"com.ge.research.sadl.SADL.SadlReturnDeclaration");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalDialogParser.g:1115:4: (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( (LA25_0==Comma) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // InternalDialogParser.g:1116:5: otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) )
            	    {
            	    otherlv_8=(Token)match(input,Comma,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_8, grammarAccess.getEquationSignatureAccess().getCommaKeyword_5_1_0());
            	      				
            	    }
            	    // InternalDialogParser.g:1120:5: ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) )
            	    // InternalDialogParser.g:1121:6: (lv_returnType_9_0= ruleSadlReturnDeclaration )
            	    {
            	    // InternalDialogParser.g:1121:6: (lv_returnType_9_0= ruleSadlReturnDeclaration )
            	    // InternalDialogParser.g:1122:7: lv_returnType_9_0= ruleSadlReturnDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getEquationSignatureAccess().getReturnTypeSadlReturnDeclarationParserRuleCall_5_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_returnType_9_0=ruleSadlReturnDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
            	      							}
            	      							add(
            	      								current,
            	      								"returnType",
            	      								lv_returnType_9_0,
            	      								"com.ge.research.sadl.SADL.SadlReturnDeclaration");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);


            }

            otherlv_10=(Token)match(input,Colon,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getEquationSignatureAccess().getColonKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEquationSignature"


    // $ANTLR start "entryRuleSadlParameterDeclaration"
    // InternalDialogParser.g:1149:1: entryRuleSadlParameterDeclaration returns [EObject current=null] : iv_ruleSadlParameterDeclaration= ruleSadlParameterDeclaration EOF ;
    public final EObject entryRuleSadlParameterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlParameterDeclaration = null;


        try {
            // InternalDialogParser.g:1149:65: (iv_ruleSadlParameterDeclaration= ruleSadlParameterDeclaration EOF )
            // InternalDialogParser.g:1150:2: iv_ruleSadlParameterDeclaration= ruleSadlParameterDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlParameterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlParameterDeclaration=ruleSadlParameterDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlParameterDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlParameterDeclaration"


    // $ANTLR start "ruleSadlParameterDeclaration"
    // InternalDialogParser.g:1156:1: ruleSadlParameterDeclaration returns [EObject current=null] : ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) | ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) ) ) ;
    public final EObject ruleSadlParameterDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_unknown_2_0=null;
        Token lv_ellipsis_3_0=null;
        EObject lv_type_0_0 = null;

        EObject lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1162:2: ( ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) | ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) ) ) )
            // InternalDialogParser.g:1163:2: ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) | ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) ) )
            {
            // InternalDialogParser.g:1163:2: ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) | ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) ) )
            int alt26=3;
            switch ( input.LA(1) ) {
            case NonNegativeInteger:
            case NonPositiveInteger:
            case NegativeInteger:
            case PositiveInteger:
            case AnySimpleType:
            case Base64Binary:
            case UnsignedByte:
            case UnsignedInt:
            case GYearMonth:
            case GMonthDay:
            case HexBinary:
            case DateTime:
            case Duration:
            case Boolean:
            case Decimal:
            case Integer:
            case AnyURI:
            case Double:
            case GMonth:
            case String:
            case Float:
            case GYear:
            case Byte:
            case Date:
            case GDay:
            case Long:
            case Time:
            case Int:
            case LeftParenthesis:
            case LeftCurlyBracket:
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt26=1;
                }
                break;
            case HyphenMinusHyphenMinus:
                {
                alt26=2;
                }
                break;
            case FullStopFullStopFullStop:
                {
                alt26=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }

            switch (alt26) {
                case 1 :
                    // InternalDialogParser.g:1164:3: ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) )
                    {
                    // InternalDialogParser.g:1164:3: ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) )
                    // InternalDialogParser.g:1165:4: ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) )
                    {
                    // InternalDialogParser.g:1165:4: ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:1166:5: (lv_type_0_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:1166:5: (lv_type_0_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:1167:6: lv_type_0_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlParameterDeclarationAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_6);
                    lv_type_0_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlParameterDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_0_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:1184:4: ( (lv_name_1_0= ruleSadlResource ) )
                    // InternalDialogParser.g:1185:5: (lv_name_1_0= ruleSadlResource )
                    {
                    // InternalDialogParser.g:1185:5: (lv_name_1_0= ruleSadlResource )
                    // InternalDialogParser.g:1186:6: lv_name_1_0= ruleSadlResource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlParameterDeclarationAccess().getNameSadlResourceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_1_0=ruleSadlResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlParameterDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"com.ge.research.sadl.SADL.SadlResource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:1205:3: ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) )
                    {
                    // InternalDialogParser.g:1205:3: ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) )
                    // InternalDialogParser.g:1206:4: (lv_unknown_2_0= HyphenMinusHyphenMinus )
                    {
                    // InternalDialogParser.g:1206:4: (lv_unknown_2_0= HyphenMinusHyphenMinus )
                    // InternalDialogParser.g:1207:5: lv_unknown_2_0= HyphenMinusHyphenMinus
                    {
                    lv_unknown_2_0=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_unknown_2_0, grammarAccess.getSadlParameterDeclarationAccess().getUnknownHyphenMinusHyphenMinusKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlParameterDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "unknown", lv_unknown_2_0, "--");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:1220:3: ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) )
                    {
                    // InternalDialogParser.g:1220:3: ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) )
                    // InternalDialogParser.g:1221:4: (lv_ellipsis_3_0= FullStopFullStopFullStop )
                    {
                    // InternalDialogParser.g:1221:4: (lv_ellipsis_3_0= FullStopFullStopFullStop )
                    // InternalDialogParser.g:1222:5: lv_ellipsis_3_0= FullStopFullStopFullStop
                    {
                    lv_ellipsis_3_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ellipsis_3_0, grammarAccess.getSadlParameterDeclarationAccess().getEllipsisFullStopFullStopFullStopKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlParameterDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "ellipsis", lv_ellipsis_3_0, "...");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlParameterDeclaration"


    // $ANTLR start "entryRuleSadlReturnDeclaration"
    // InternalDialogParser.g:1238:1: entryRuleSadlReturnDeclaration returns [EObject current=null] : iv_ruleSadlReturnDeclaration= ruleSadlReturnDeclaration EOF ;
    public final EObject entryRuleSadlReturnDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlReturnDeclaration = null;


        try {
            // InternalDialogParser.g:1238:62: (iv_ruleSadlReturnDeclaration= ruleSadlReturnDeclaration EOF )
            // InternalDialogParser.g:1239:2: iv_ruleSadlReturnDeclaration= ruleSadlReturnDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlReturnDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlReturnDeclaration=ruleSadlReturnDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlReturnDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlReturnDeclaration"


    // $ANTLR start "ruleSadlReturnDeclaration"
    // InternalDialogParser.g:1245:1: ruleSadlReturnDeclaration returns [EObject current=null] : ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) | ( (lv_none_1_0= None ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) ) ;
    public final EObject ruleSadlReturnDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_none_1_0=null;
        Token lv_unknown_2_0=null;
        EObject lv_type_0_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1251:2: ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) | ( (lv_none_1_0= None ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) ) )
            // InternalDialogParser.g:1252:2: ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) | ( (lv_none_1_0= None ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) )
            {
            // InternalDialogParser.g:1252:2: ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) | ( (lv_none_1_0= None ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) )
            int alt27=3;
            switch ( input.LA(1) ) {
            case NonNegativeInteger:
            case NonPositiveInteger:
            case NegativeInteger:
            case PositiveInteger:
            case AnySimpleType:
            case Base64Binary:
            case UnsignedByte:
            case UnsignedInt:
            case GYearMonth:
            case GMonthDay:
            case HexBinary:
            case DateTime:
            case Duration:
            case Boolean:
            case Decimal:
            case Integer:
            case AnyURI:
            case Double:
            case GMonth:
            case String:
            case Float:
            case GYear:
            case Byte:
            case Date:
            case GDay:
            case Long:
            case Time:
            case Int:
            case LeftParenthesis:
            case LeftCurlyBracket:
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt27=1;
                }
                break;
            case None:
                {
                alt27=2;
                }
                break;
            case HyphenMinusHyphenMinus:
                {
                alt27=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }

            switch (alt27) {
                case 1 :
                    // InternalDialogParser.g:1253:3: ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) )
                    {
                    // InternalDialogParser.g:1253:3: ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:1254:4: (lv_type_0_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:1254:4: (lv_type_0_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:1255:5: lv_type_0_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSadlReturnDeclarationAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_0_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSadlReturnDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_0_0,
                      						"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:1273:3: ( (lv_none_1_0= None ) )
                    {
                    // InternalDialogParser.g:1273:3: ( (lv_none_1_0= None ) )
                    // InternalDialogParser.g:1274:4: (lv_none_1_0= None )
                    {
                    // InternalDialogParser.g:1274:4: (lv_none_1_0= None )
                    // InternalDialogParser.g:1275:5: lv_none_1_0= None
                    {
                    lv_none_1_0=(Token)match(input,None,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_none_1_0, grammarAccess.getSadlReturnDeclarationAccess().getNoneNoneKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlReturnDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "none", lv_none_1_0, "None");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:1288:3: ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) )
                    {
                    // InternalDialogParser.g:1288:3: ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) )
                    // InternalDialogParser.g:1289:4: (lv_unknown_2_0= HyphenMinusHyphenMinus )
                    {
                    // InternalDialogParser.g:1289:4: (lv_unknown_2_0= HyphenMinusHyphenMinus )
                    // InternalDialogParser.g:1290:5: lv_unknown_2_0= HyphenMinusHyphenMinus
                    {
                    lv_unknown_2_0=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_unknown_2_0, grammarAccess.getSadlReturnDeclarationAccess().getUnknownHyphenMinusHyphenMinusKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlReturnDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "unknown", lv_unknown_2_0, "--");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlReturnDeclaration"


    // $ANTLR start "entryRuleSadlPropertyCondition"
    // InternalDialogParser.g:1306:1: entryRuleSadlPropertyCondition returns [EObject current=null] : iv_ruleSadlPropertyCondition= ruleSadlPropertyCondition EOF ;
    public final EObject entryRuleSadlPropertyCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPropertyCondition = null;


        try {
            // InternalDialogParser.g:1306:62: (iv_ruleSadlPropertyCondition= ruleSadlPropertyCondition EOF )
            // InternalDialogParser.g:1307:2: iv_ruleSadlPropertyCondition= ruleSadlPropertyCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPropertyConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPropertyCondition=ruleSadlPropertyCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPropertyCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPropertyCondition"


    // $ANTLR start "ruleSadlPropertyCondition"
    // InternalDialogParser.g:1313:1: ruleSadlPropertyCondition returns [EObject current=null] : ( ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) ) ) ;
    public final EObject ruleSadlPropertyCondition() throws RecognitionException {
        EObject current = null;

        EObject lv_cond_1_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1319:2: ( ( ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) ) ) )
            // InternalDialogParser.g:1320:2: ( ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) ) )
            {
            // InternalDialogParser.g:1320:2: ( ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) ) )
            // InternalDialogParser.g:1321:3: ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) )
            {
            // InternalDialogParser.g:1321:3: ( ( ruleQNAME ) )
            // InternalDialogParser.g:1322:4: ( ruleQNAME )
            {
            // InternalDialogParser.g:1322:4: ( ruleQNAME )
            // InternalDialogParser.g:1323:5: ruleQNAME
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlPropertyConditionRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlPropertyConditionAccess().getPropertySadlResourceCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_32);
            ruleQNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:1337:3: ( (lv_cond_1_0= ruleSadlCondition ) )
            // InternalDialogParser.g:1338:4: (lv_cond_1_0= ruleSadlCondition )
            {
            // InternalDialogParser.g:1338:4: (lv_cond_1_0= ruleSadlCondition )
            // InternalDialogParser.g:1339:5: lv_cond_1_0= ruleSadlCondition
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlPropertyConditionAccess().getCondSadlConditionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_cond_1_0=ruleSadlCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSadlPropertyConditionRule());
              					}
              					add(
              						current,
              						"cond",
              						lv_cond_1_0,
              						"com.ge.research.sadl.SADL.SadlCondition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPropertyCondition"


    // $ANTLR start "entryRuleSadlPropertyInitializer"
    // InternalDialogParser.g:1360:1: entryRuleSadlPropertyInitializer returns [EObject current=null] : iv_ruleSadlPropertyInitializer= ruleSadlPropertyInitializer EOF ;
    public final EObject entryRuleSadlPropertyInitializer() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPropertyInitializer = null;


        try {
            // InternalDialogParser.g:1360:64: (iv_ruleSadlPropertyInitializer= ruleSadlPropertyInitializer EOF )
            // InternalDialogParser.g:1361:2: iv_ruleSadlPropertyInitializer= ruleSadlPropertyInitializer EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPropertyInitializerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPropertyInitializer=ruleSadlPropertyInitializer();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPropertyInitializer; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPropertyInitializer"


    // $ANTLR start "ruleSadlPropertyInitializer"
    // InternalDialogParser.g:1367:1: ruleSadlPropertyInitializer returns [EObject current=null] : ( ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) | ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) ) | ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) ) ) ;
    public final EObject ruleSadlPropertyInitializer() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        EObject lv_value_4_0 = null;

        EObject lv_value_6_0 = null;

        EObject lv_value_17_0 = null;

        EObject lv_value_19_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1373:2: ( ( ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) | ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) ) | ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) ) ) )
            // InternalDialogParser.g:1374:2: ( ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) | ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) ) | ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) ) )
            {
            // InternalDialogParser.g:1374:2: ( ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) | ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) ) | ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) ) )
            int alt34=3;
            switch ( input.LA(1) ) {
            case Comma:
                {
                switch ( input.LA(2) ) {
                case Is:
                    {
                    alt34=2;
                    }
                    break;
                case With:
                case Has:
                case RULE_ID:
                case RULE_QNAME_TERMINAL:
                    {
                    alt34=1;
                    }
                    break;
                case Of:
                    {
                    alt34=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 1, input);

                    throw nvae;
                }

                }
                break;
            case With:
            case Has:
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt34=1;
                }
                break;
            case Is:
                {
                alt34=2;
                }
                break;
            case Of:
                {
                alt34=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }

            switch (alt34) {
                case 1 :
                    // InternalDialogParser.g:1375:3: ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) )
                    {
                    // InternalDialogParser.g:1375:3: ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) )
                    // InternalDialogParser.g:1376:4: (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) )
                    {
                    // InternalDialogParser.g:1376:4: (otherlv_0= Comma )?
                    int alt28=2;
                    int LA28_0 = input.LA(1);

                    if ( (LA28_0==Comma) ) {
                        alt28=1;
                    }
                    switch (alt28) {
                        case 1 :
                            // InternalDialogParser.g:1377:5: otherlv_0= Comma
                            {
                            otherlv_0=(Token)match(input,Comma,FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_0, grammarAccess.getSadlPropertyInitializerAccess().getCommaKeyword_0_0());
                              				
                            }

                            }
                            break;

                    }

                    // InternalDialogParser.g:1382:4: (otherlv_1= With | otherlv_2= Has )?
                    int alt29=3;
                    int LA29_0 = input.LA(1);

                    if ( (LA29_0==With) ) {
                        alt29=1;
                    }
                    else if ( (LA29_0==Has) ) {
                        alt29=2;
                    }
                    switch (alt29) {
                        case 1 :
                            // InternalDialogParser.g:1383:5: otherlv_1= With
                            {
                            otherlv_1=(Token)match(input,With,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getSadlPropertyInitializerAccess().getWithKeyword_0_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:1388:5: otherlv_2= Has
                            {
                            otherlv_2=(Token)match(input,Has,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getSadlPropertyInitializerAccess().getHasKeyword_0_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalDialogParser.g:1393:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:1394:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:1394:5: ( ruleQNAME )
                    // InternalDialogParser.g:1395:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getPropertySadlResourceCrossReference_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_35);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:1409:4: ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) )
                    int alt30=2;
                    int LA30_0 = input.LA(1);

                    if ( (LA30_0==False||LA30_0==Known||LA30_0==True||LA30_0==Not||LA30_0==PI||LA30_0==HyphenMinus||LA30_0==LeftSquareBracket||LA30_0==E_1||LA30_0==RULE_NUMBER||(LA30_0>=RULE_ID && LA30_0<=RULE_STRING)) ) {
                        alt30=1;
                    }
                    else if ( (LA30_0==LeftParenthesis) ) {
                        alt30=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 30, 0, input);

                        throw nvae;
                    }
                    switch (alt30) {
                        case 1 :
                            // InternalDialogParser.g:1410:5: ( (lv_value_4_0= ruleSadlExplicitValue ) )
                            {
                            // InternalDialogParser.g:1410:5: ( (lv_value_4_0= ruleSadlExplicitValue ) )
                            // InternalDialogParser.g:1411:6: (lv_value_4_0= ruleSadlExplicitValue )
                            {
                            // InternalDialogParser.g:1411:6: (lv_value_4_0= ruleSadlExplicitValue )
                            // InternalDialogParser.g:1412:7: lv_value_4_0= ruleSadlExplicitValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlExplicitValueParserRuleCall_0_3_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_value_4_0=ruleSadlExplicitValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_4_0,
                              								"com.ge.research.sadl.SADL.SadlExplicitValue");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:1430:5: (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis )
                            {
                            // InternalDialogParser.g:1430:5: (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis )
                            // InternalDialogParser.g:1431:6: otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis
                            {
                            otherlv_5=(Token)match(input,LeftParenthesis,FOLLOW_6); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getSadlPropertyInitializerAccess().getLeftParenthesisKeyword_0_3_1_0());
                              					
                            }
                            // InternalDialogParser.g:1435:6: ( (lv_value_6_0= ruleSadlNestedInstance ) )
                            // InternalDialogParser.g:1436:7: (lv_value_6_0= ruleSadlNestedInstance )
                            {
                            // InternalDialogParser.g:1436:7: (lv_value_6_0= ruleSadlNestedInstance )
                            // InternalDialogParser.g:1437:8: lv_value_6_0= ruleSadlNestedInstance
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlNestedInstanceParserRuleCall_0_3_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_36);
                            lv_value_6_0=ruleSadlNestedInstance();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
                              								}
                              								set(
                              									current,
                              									"value",
                              									lv_value_6_0,
                              									"com.ge.research.sadl.SADL.SadlNestedInstance");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_7=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getSadlPropertyInitializerAccess().getRightParenthesisKeyword_0_3_1_2());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:1462:3: ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) )
                    {
                    // InternalDialogParser.g:1462:3: ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) )
                    // InternalDialogParser.g:1463:4: (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) )
                    {
                    // InternalDialogParser.g:1463:4: (otherlv_8= Comma )?
                    int alt31=2;
                    int LA31_0 = input.LA(1);

                    if ( (LA31_0==Comma) ) {
                        alt31=1;
                    }
                    switch (alt31) {
                        case 1 :
                            // InternalDialogParser.g:1464:5: otherlv_8= Comma
                            {
                            otherlv_8=(Token)match(input,Comma,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getSadlPropertyInitializerAccess().getCommaKeyword_1_0());
                              				
                            }

                            }
                            break;

                    }

                    otherlv_9=(Token)match(input,Is,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSadlPropertyInitializerAccess().getIsKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:1473:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:1474:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:1474:5: ( ruleQNAME )
                    // InternalDialogParser.g:1475:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getPropertySadlResourceCrossReference_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_8);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,Of,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getSadlPropertyInitializerAccess().getOfKeyword_1_3());
                      			
                    }
                    // InternalDialogParser.g:1493:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:1494:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:1494:5: ( ruleQNAME )
                    // InternalDialogParser.g:1495:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getTypeSadlResourceCrossReference_1_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:1511:3: ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) )
                    {
                    // InternalDialogParser.g:1511:3: ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) )
                    // InternalDialogParser.g:1512:4: (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) )
                    {
                    // InternalDialogParser.g:1512:4: (otherlv_13= Comma )?
                    int alt32=2;
                    int LA32_0 = input.LA(1);

                    if ( (LA32_0==Comma) ) {
                        alt32=1;
                    }
                    switch (alt32) {
                        case 1 :
                            // InternalDialogParser.g:1513:5: otherlv_13= Comma
                            {
                            otherlv_13=(Token)match(input,Comma,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_13, grammarAccess.getSadlPropertyInitializerAccess().getCommaKeyword_2_0());
                              				
                            }

                            }
                            break;

                    }

                    otherlv_14=(Token)match(input,Of,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getSadlPropertyInitializerAccess().getOfKeyword_2_1());
                      			
                    }
                    // InternalDialogParser.g:1522:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:1523:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:1523:5: ( ruleQNAME )
                    // InternalDialogParser.g:1524:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getPropertySadlResourceCrossReference_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_16=(Token)match(input,Is,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getSadlPropertyInitializerAccess().getIsKeyword_2_3());
                      			
                    }
                    // InternalDialogParser.g:1542:4: ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) )
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==False||LA33_0==Known||LA33_0==True||LA33_0==Not||LA33_0==PI||LA33_0==HyphenMinus||LA33_0==LeftSquareBracket||LA33_0==E_1||LA33_0==RULE_NUMBER||(LA33_0>=RULE_ID && LA33_0<=RULE_STRING)) ) {
                        alt33=1;
                    }
                    else if ( (LA33_0==LeftParenthesis) ) {
                        alt33=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 33, 0, input);

                        throw nvae;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalDialogParser.g:1543:5: ( (lv_value_17_0= ruleSadlExplicitValue ) )
                            {
                            // InternalDialogParser.g:1543:5: ( (lv_value_17_0= ruleSadlExplicitValue ) )
                            // InternalDialogParser.g:1544:6: (lv_value_17_0= ruleSadlExplicitValue )
                            {
                            // InternalDialogParser.g:1544:6: (lv_value_17_0= ruleSadlExplicitValue )
                            // InternalDialogParser.g:1545:7: lv_value_17_0= ruleSadlExplicitValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlExplicitValueParserRuleCall_2_4_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_value_17_0=ruleSadlExplicitValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_17_0,
                              								"com.ge.research.sadl.SADL.SadlExplicitValue");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:1563:5: (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis )
                            {
                            // InternalDialogParser.g:1563:5: (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis )
                            // InternalDialogParser.g:1564:6: otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis
                            {
                            otherlv_18=(Token)match(input,LeftParenthesis,FOLLOW_6); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_18, grammarAccess.getSadlPropertyInitializerAccess().getLeftParenthesisKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:1568:6: ( (lv_value_19_0= ruleSadlNestedInstance ) )
                            // InternalDialogParser.g:1569:7: (lv_value_19_0= ruleSadlNestedInstance )
                            {
                            // InternalDialogParser.g:1569:7: (lv_value_19_0= ruleSadlNestedInstance )
                            // InternalDialogParser.g:1570:8: lv_value_19_0= ruleSadlNestedInstance
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlNestedInstanceParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_36);
                            lv_value_19_0=ruleSadlNestedInstance();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
                              								}
                              								set(
                              									current,
                              									"value",
                              									lv_value_19_0,
                              									"com.ge.research.sadl.SADL.SadlNestedInstance");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_20=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_20, grammarAccess.getSadlPropertyInitializerAccess().getRightParenthesisKeyword_2_4_1_2());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPropertyInitializer"


    // $ANTLR start "entryRuleSadlNestedInstance"
    // InternalDialogParser.g:1598:1: entryRuleSadlNestedInstance returns [EObject current=null] : iv_ruleSadlNestedInstance= ruleSadlNestedInstance EOF ;
    public final EObject entryRuleSadlNestedInstance() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlNestedInstance = null;


        try {
            // InternalDialogParser.g:1598:59: (iv_ruleSadlNestedInstance= ruleSadlNestedInstance EOF )
            // InternalDialogParser.g:1599:2: iv_ruleSadlNestedInstance= ruleSadlNestedInstance EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlNestedInstanceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlNestedInstance=ruleSadlNestedInstance();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlNestedInstance; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlNestedInstance"


    // $ANTLR start "ruleSadlNestedInstance"
    // InternalDialogParser.g:1605:1: ruleSadlNestedInstance returns [EObject current=null] : ( () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) ) ) ;
    public final EObject ruleSadlNestedInstance() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_instance_1_0 = null;

        AntlrDatatypeRuleToken lv_article_3_0 = null;

        EObject lv_type_4_0 = null;

        EObject lv_propertyInitializers_5_0 = null;

        AntlrDatatypeRuleToken lv_article_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_instance_8_0 = null;

        EObject lv_propertyInitializers_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1611:2: ( ( () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) ) ) )
            // InternalDialogParser.g:1612:2: ( () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) ) )
            {
            // InternalDialogParser.g:1612:2: ( () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) ) )
            // InternalDialogParser.g:1613:3: () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) )
            {
            // InternalDialogParser.g:1613:3: ()
            // InternalDialogParser.g:1614:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSadlNestedInstanceAccess().getSadlNestedInstanceAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:1620:3: ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( ((LA38_0>=RULE_ID && LA38_0<=RULE_QNAME_TERMINAL)) ) {
                alt38=1;
            }
            else if ( (LA38_0==Another||LA38_0==Some||LA38_0==The||LA38_0==Any||LA38_0==The_1||LA38_0==An||LA38_0==An_1||LA38_0==A||LA38_0==A_1) ) {
                alt38=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }
            switch (alt38) {
                case 1 :
                    // InternalDialogParser.g:1621:4: ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* )
                    {
                    // InternalDialogParser.g:1621:4: ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* )
                    // InternalDialogParser.g:1622:5: ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )*
                    {
                    // InternalDialogParser.g:1622:5: ( (lv_instance_1_0= ruleSadlResource ) )
                    // InternalDialogParser.g:1623:6: (lv_instance_1_0= ruleSadlResource )
                    {
                    // InternalDialogParser.g:1623:6: (lv_instance_1_0= ruleSadlResource )
                    // InternalDialogParser.g:1624:7: lv_instance_1_0= ruleSadlResource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getInstanceSadlResourceParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_5);
                    lv_instance_1_0=ruleSadlResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"instance",
                      								lv_instance_1_0,
                      								"com.ge.research.sadl.SADL.SadlResource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,Is,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getSadlNestedInstanceAccess().getIsKeyword_1_0_1());
                      				
                    }
                    // InternalDialogParser.g:1645:5: ( (lv_article_3_0= ruleAnArticle ) )
                    // InternalDialogParser.g:1646:6: (lv_article_3_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:1646:6: (lv_article_3_0= ruleAnArticle )
                    // InternalDialogParser.g:1647:7: lv_article_3_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getArticleAnArticleParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_9);
                    lv_article_3_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"article",
                      								lv_article_3_0,
                      								"com.ge.research.sadl.SADL.AnArticle");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:1664:5: ( (lv_type_4_0= ruleSadlTypeReference ) )
                    // InternalDialogParser.g:1665:6: (lv_type_4_0= ruleSadlTypeReference )
                    {
                    // InternalDialogParser.g:1665:6: (lv_type_4_0= ruleSadlTypeReference )
                    // InternalDialogParser.g:1666:7: lv_type_4_0= ruleSadlTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getTypeSadlTypeReferenceParserRuleCall_1_0_3_0());
                      						
                    }
                    pushFollow(FOLLOW_38);
                    lv_type_4_0=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_4_0,
                      								"com.ge.research.sadl.SADL.SadlTypeReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:1683:5: ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )*
                    loop35:
                    do {
                        int alt35=2;
                        int LA35_0 = input.LA(1);

                        if ( (LA35_0==With||LA35_0==Has||(LA35_0>=Is && LA35_0<=Of)||LA35_0==Comma||(LA35_0>=RULE_ID && LA35_0<=RULE_QNAME_TERMINAL)) ) {
                            alt35=1;
                        }


                        switch (alt35) {
                    	case 1 :
                    	    // InternalDialogParser.g:1684:6: (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer )
                    	    {
                    	    // InternalDialogParser.g:1684:6: (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer )
                    	    // InternalDialogParser.g:1685:7: lv_propertyInitializers_5_0= ruleSadlPropertyInitializer
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getPropertyInitializersSadlPropertyInitializerParserRuleCall_1_0_4_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_38);
                    	    lv_propertyInitializers_5_0=ruleSadlPropertyInitializer();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"propertyInitializers",
                    	      								lv_propertyInitializers_5_0,
                    	      								"com.ge.research.sadl.SADL.SadlPropertyInitializer");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop35;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:1704:4: ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* )
                    {
                    // InternalDialogParser.g:1704:4: ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* )
                    // InternalDialogParser.g:1705:5: ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )*
                    {
                    // InternalDialogParser.g:1705:5: ( (lv_article_6_0= ruleAnArticle ) )
                    // InternalDialogParser.g:1706:6: (lv_article_6_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:1706:6: (lv_article_6_0= ruleAnArticle )
                    // InternalDialogParser.g:1707:7: lv_article_6_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getArticleAnArticleParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_9);
                    lv_article_6_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"article",
                      								lv_article_6_0,
                      								"com.ge.research.sadl.SADL.AnArticle");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:1724:5: ( (lv_type_7_0= ruleSadlTypeReference ) )
                    // InternalDialogParser.g:1725:6: (lv_type_7_0= ruleSadlTypeReference )
                    {
                    // InternalDialogParser.g:1725:6: (lv_type_7_0= ruleSadlTypeReference )
                    // InternalDialogParser.g:1726:7: lv_type_7_0= ruleSadlTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getTypeSadlTypeReferenceParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_39);
                    lv_type_7_0=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_7_0,
                      								"com.ge.research.sadl.SADL.SadlTypeReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:1743:5: ( (lv_instance_8_0= ruleSadlResource ) )?
                    int alt36=2;
                    alt36 = dfa36.predict(input);
                    switch (alt36) {
                        case 1 :
                            // InternalDialogParser.g:1744:6: (lv_instance_8_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:1744:6: (lv_instance_8_0= ruleSadlResource )
                            // InternalDialogParser.g:1745:7: lv_instance_8_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getInstanceSadlResourceParserRuleCall_1_1_2_0());
                              						
                            }
                            pushFollow(FOLLOW_38);
                            lv_instance_8_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                              							}
                              							set(
                              								current,
                              								"instance",
                              								lv_instance_8_0,
                              								"com.ge.research.sadl.SADL.SadlResource");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:1762:5: ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )*
                    loop37:
                    do {
                        int alt37=2;
                        int LA37_0 = input.LA(1);

                        if ( (LA37_0==With||LA37_0==Has||(LA37_0>=Is && LA37_0<=Of)||LA37_0==Comma||(LA37_0>=RULE_ID && LA37_0<=RULE_QNAME_TERMINAL)) ) {
                            alt37=1;
                        }


                        switch (alt37) {
                    	case 1 :
                    	    // InternalDialogParser.g:1763:6: (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer )
                    	    {
                    	    // InternalDialogParser.g:1763:6: (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer )
                    	    // InternalDialogParser.g:1764:7: lv_propertyInitializers_9_0= ruleSadlPropertyInitializer
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getPropertyInitializersSadlPropertyInitializerParserRuleCall_1_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_38);
                    	    lv_propertyInitializers_9_0=ruleSadlPropertyInitializer();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"propertyInitializers",
                    	      								lv_propertyInitializers_9_0,
                    	      								"com.ge.research.sadl.SADL.SadlPropertyInitializer");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop37;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlNestedInstance"


    // $ANTLR start "entryRuleSadlResource"
    // InternalDialogParser.g:1787:1: entryRuleSadlResource returns [EObject current=null] : iv_ruleSadlResource= ruleSadlResource EOF ;
    public final EObject entryRuleSadlResource() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlResource = null;


        try {
            // InternalDialogParser.g:1787:53: (iv_ruleSadlResource= ruleSadlResource EOF )
            // InternalDialogParser.g:1788:2: iv_ruleSadlResource= ruleSadlResource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlResourceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlResource=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlResource; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlResource"


    // $ANTLR start "ruleSadlResource"
    // InternalDialogParser.g:1794:1: ruleSadlResource returns [EObject current=null] : ( ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )* ) ;
    public final EObject ruleSadlResource() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_1_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1800:2: ( ( ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )* ) )
            // InternalDialogParser.g:1801:2: ( ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )* )
            {
            // InternalDialogParser.g:1801:2: ( ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )* )
            // InternalDialogParser.g:1802:3: ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )*
            {
            // InternalDialogParser.g:1802:3: ( ( ruleQNAME ) )
            // InternalDialogParser.g:1803:4: ( ruleQNAME )
            {
            // InternalDialogParser.g:1803:4: ( ruleQNAME )
            // InternalDialogParser.g:1804:5: ruleQNAME
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlResourceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlResourceAccess().getNameSadlResourceCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_40);
            ruleQNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:1818:3: ( (lv_annotations_1_0= ruleSadlAnnotation ) )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==LeftParenthesis) ) {
                    int LA39_2 = input.LA(2);

                    if ( (LA39_2==Alias||LA39_2==Note) ) {
                        alt39=1;
                    }


                }
                else if ( (LA39_0==Comma) ) {
                    int LA39_3 = input.LA(2);

                    if ( (LA39_3==LeftParenthesis) ) {
                        int LA39_5 = input.LA(3);

                        if ( (LA39_5==Alias||LA39_5==Note) ) {
                            alt39=1;
                        }


                    }


                }


                switch (alt39) {
            	case 1 :
            	    // InternalDialogParser.g:1819:4: (lv_annotations_1_0= ruleSadlAnnotation )
            	    {
            	    // InternalDialogParser.g:1819:4: (lv_annotations_1_0= ruleSadlAnnotation )
            	    // InternalDialogParser.g:1820:5: lv_annotations_1_0= ruleSadlAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlResourceAccess().getAnnotationsSadlAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_40);
            	    lv_annotations_1_0=ruleSadlAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlResourceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"com.ge.research.sadl.SADL.SadlAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlResource"


    // $ANTLR start "entryRuleSadlDataTypeFacet"
    // InternalDialogParser.g:1841:1: entryRuleSadlDataTypeFacet returns [EObject current=null] : iv_ruleSadlDataTypeFacet= ruleSadlDataTypeFacet EOF ;
    public final EObject entryRuleSadlDataTypeFacet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlDataTypeFacet = null;


        try {
            // InternalDialogParser.g:1841:58: (iv_ruleSadlDataTypeFacet= ruleSadlDataTypeFacet EOF )
            // InternalDialogParser.g:1842:2: iv_ruleSadlDataTypeFacet= ruleSadlDataTypeFacet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlDataTypeFacetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlDataTypeFacet=ruleSadlDataTypeFacet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlDataTypeFacet; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlDataTypeFacet"


    // $ANTLR start "ruleSadlDataTypeFacet"
    // InternalDialogParser.g:1848:1: ruleSadlDataTypeFacet returns [EObject current=null] : ( ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) ) | ( (lv_regex_8_0= RULE_STRING ) ) | (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) ) | (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket ) ) ;
    public final EObject ruleSadlDataTypeFacet() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_minInclusive_2_0=null;
        Token otherlv_4=null;
        Token lv_maxInclusive_6_0=null;
        Token otherlv_7=null;
        Token lv_regex_8_0=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        Token lv_maxlen_13_2=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        AntlrDatatypeRuleToken lv_min_3_0 = null;

        AntlrDatatypeRuleToken lv_max_5_0 = null;

        AntlrDatatypeRuleToken lv_len_10_0 = null;

        AntlrDatatypeRuleToken lv_minlen_11_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_13_1 = null;

        AntlrDatatypeRuleToken lv_values_15_0 = null;

        AntlrDatatypeRuleToken lv_values_17_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1854:2: ( ( ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) ) | ( (lv_regex_8_0= RULE_STRING ) ) | (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) ) | (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket ) ) )
            // InternalDialogParser.g:1855:2: ( ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) ) | ( (lv_regex_8_0= RULE_STRING ) ) | (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) ) | (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket ) )
            {
            // InternalDialogParser.g:1855:2: ( ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) ) | ( (lv_regex_8_0= RULE_STRING ) ) | (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) ) | (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket ) )
            int alt48=4;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
            case LeftSquareBracket:
                {
                alt48=1;
                }
                break;
            case RULE_STRING:
                {
                alt48=2;
                }
                break;
            case Length:
                {
                alt48=3;
                }
                break;
            case LeftCurlyBracket:
                {
                alt48=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }

            switch (alt48) {
                case 1 :
                    // InternalDialogParser.g:1856:3: ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) )
                    {
                    // InternalDialogParser.g:1856:3: ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) )
                    // InternalDialogParser.g:1857:4: () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis )
                    {
                    // InternalDialogParser.g:1857:4: ()
                    // InternalDialogParser.g:1858:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlDataTypeFacetAccess().getSadlDataTypeFacetAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:1864:4: (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) )
                    int alt40=2;
                    int LA40_0 = input.LA(1);

                    if ( (LA40_0==LeftParenthesis) ) {
                        alt40=1;
                    }
                    else if ( (LA40_0==LeftSquareBracket) ) {
                        alt40=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 40, 0, input);

                        throw nvae;
                    }
                    switch (alt40) {
                        case 1 :
                            // InternalDialogParser.g:1865:5: otherlv_1= LeftParenthesis
                            {
                            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getSadlDataTypeFacetAccess().getLeftParenthesisKeyword_0_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:1870:5: ( (lv_minInclusive_2_0= LeftSquareBracket ) )
                            {
                            // InternalDialogParser.g:1870:5: ( (lv_minInclusive_2_0= LeftSquareBracket ) )
                            // InternalDialogParser.g:1871:6: (lv_minInclusive_2_0= LeftSquareBracket )
                            {
                            // InternalDialogParser.g:1871:6: (lv_minInclusive_2_0= LeftSquareBracket )
                            // InternalDialogParser.g:1872:7: lv_minInclusive_2_0= LeftSquareBracket
                            {
                            lv_minInclusive_2_0=(Token)match(input,LeftSquareBracket,FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_minInclusive_2_0, grammarAccess.getSadlDataTypeFacetAccess().getMinInclusiveLeftSquareBracketKeyword_0_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
                              							}
                              							setWithLastConsumed(current, "minInclusive", true, "[");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:1885:4: ( (lv_min_3_0= ruleFacetNumber ) )?
                    int alt41=2;
                    int LA41_0 = input.LA(1);

                    if ( (LA41_0==HyphenMinus||LA41_0==RULE_NUMBER) ) {
                        alt41=1;
                    }
                    switch (alt41) {
                        case 1 :
                            // InternalDialogParser.g:1886:5: (lv_min_3_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:1886:5: (lv_min_3_0= ruleFacetNumber )
                            // InternalDialogParser.g:1887:6: lv_min_3_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMinFacetNumberParserRuleCall_0_2_0());
                              					
                            }
                            pushFollow(FOLLOW_42);
                            lv_min_3_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                              						}
                              						set(
                              							current,
                              							"min",
                              							lv_min_3_0,
                              							"com.ge.research.sadl.SADL.FacetNumber");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,Comma,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSadlDataTypeFacetAccess().getCommaKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:1908:4: ( (lv_max_5_0= ruleFacetNumber ) )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==HyphenMinus||LA42_0==RULE_NUMBER) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            // InternalDialogParser.g:1909:5: (lv_max_5_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:1909:5: (lv_max_5_0= ruleFacetNumber )
                            // InternalDialogParser.g:1910:6: lv_max_5_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMaxFacetNumberParserRuleCall_0_4_0());
                              					
                            }
                            pushFollow(FOLLOW_44);
                            lv_max_5_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                              						}
                              						set(
                              							current,
                              							"max",
                              							lv_max_5_0,
                              							"com.ge.research.sadl.SADL.FacetNumber");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:1927:4: ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis )
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( (LA43_0==RightSquareBracket) ) {
                        alt43=1;
                    }
                    else if ( (LA43_0==RightParenthesis) ) {
                        alt43=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 43, 0, input);

                        throw nvae;
                    }
                    switch (alt43) {
                        case 1 :
                            // InternalDialogParser.g:1928:5: ( (lv_maxInclusive_6_0= RightSquareBracket ) )
                            {
                            // InternalDialogParser.g:1928:5: ( (lv_maxInclusive_6_0= RightSquareBracket ) )
                            // InternalDialogParser.g:1929:6: (lv_maxInclusive_6_0= RightSquareBracket )
                            {
                            // InternalDialogParser.g:1929:6: (lv_maxInclusive_6_0= RightSquareBracket )
                            // InternalDialogParser.g:1930:7: lv_maxInclusive_6_0= RightSquareBracket
                            {
                            lv_maxInclusive_6_0=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_maxInclusive_6_0, grammarAccess.getSadlDataTypeFacetAccess().getMaxInclusiveRightSquareBracketKeyword_0_5_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
                              							}
                              							setWithLastConsumed(current, "maxInclusive", true, "]");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:1943:5: otherlv_7= RightParenthesis
                            {
                            otherlv_7=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getSadlDataTypeFacetAccess().getRightParenthesisKeyword_0_5_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:1950:3: ( (lv_regex_8_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:1950:3: ( (lv_regex_8_0= RULE_STRING ) )
                    // InternalDialogParser.g:1951:4: (lv_regex_8_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:1951:4: (lv_regex_8_0= RULE_STRING )
                    // InternalDialogParser.g:1952:5: lv_regex_8_0= RULE_STRING
                    {
                    lv_regex_8_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_regex_8_0, grammarAccess.getSadlDataTypeFacetAccess().getRegexSTRINGTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"regex",
                      						lv_regex_8_0,
                      						"com.ge.research.sadl.SADL.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:1969:3: (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) )
                    {
                    // InternalDialogParser.g:1969:3: (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) )
                    // InternalDialogParser.g:1970:4: otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) )
                    {
                    otherlv_9=(Token)match(input,Length,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSadlDataTypeFacetAccess().getLengthKeyword_2_0());
                      			
                    }
                    // InternalDialogParser.g:1974:4: ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) )
                    int alt45=2;
                    alt45 = dfa45.predict(input);
                    switch (alt45) {
                        case 1 :
                            // InternalDialogParser.g:1975:5: ( (lv_len_10_0= ruleFacetNumber ) )
                            {
                            // InternalDialogParser.g:1975:5: ( (lv_len_10_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:1976:6: (lv_len_10_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:1976:6: (lv_len_10_0= ruleFacetNumber )
                            // InternalDialogParser.g:1977:7: lv_len_10_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getLenFacetNumberParserRuleCall_2_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_len_10_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                              							}
                              							set(
                              								current,
                              								"len",
                              								lv_len_10_0,
                              								"com.ge.research.sadl.SADL.FacetNumber");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:1995:5: ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) )
                            {
                            // InternalDialogParser.g:1995:5: ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) )
                            // InternalDialogParser.g:1996:6: ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) )
                            {
                            // InternalDialogParser.g:1996:6: ( (lv_minlen_11_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:1997:7: (lv_minlen_11_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:1997:7: (lv_minlen_11_0= ruleFacetNumber )
                            // InternalDialogParser.g:1998:8: lv_minlen_11_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMinlenFacetNumberParserRuleCall_2_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_46);
                            lv_minlen_11_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                              								}
                              								set(
                              									current,
                              									"minlen",
                              									lv_minlen_11_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_12=(Token)match(input,HyphenMinus,FOLLOW_47); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getSadlDataTypeFacetAccess().getHyphenMinusKeyword_2_1_1_1());
                              					
                            }
                            // InternalDialogParser.g:2019:6: ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) )
                            // InternalDialogParser.g:2020:7: ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) )
                            {
                            // InternalDialogParser.g:2020:7: ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) )
                            // InternalDialogParser.g:2021:8: (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk )
                            {
                            // InternalDialogParser.g:2021:8: (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk )
                            int alt44=2;
                            int LA44_0 = input.LA(1);

                            if ( (LA44_0==HyphenMinus||LA44_0==RULE_NUMBER) ) {
                                alt44=1;
                            }
                            else if ( (LA44_0==Asterisk) ) {
                                alt44=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 44, 0, input);

                                throw nvae;
                            }
                            switch (alt44) {
                                case 1 :
                                    // InternalDialogParser.g:2022:9: lv_maxlen_13_1= ruleFacetNumber
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMaxlenFacetNumberParserRuleCall_2_1_1_2_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_maxlen_13_1=ruleFacetNumber();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                                      									}
                                      									set(
                                      										current,
                                      										"maxlen",
                                      										lv_maxlen_13_1,
                                      										"com.ge.research.sadl.SADL.FacetNumber");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:2038:9: lv_maxlen_13_2= Asterisk
                                    {
                                    lv_maxlen_13_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_maxlen_13_2, grammarAccess.getSadlDataTypeFacetAccess().getMaxlenAsteriskKeyword_2_1_1_2_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
                                      									}
                                      									setWithLastConsumed(current, "maxlen", lv_maxlen_13_2, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:2055:3: (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:2055:3: (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket )
                    // InternalDialogParser.g:2056:4: otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket
                    {
                    otherlv_14=(Token)match(input,LeftCurlyBracket,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getSadlDataTypeFacetAccess().getLeftCurlyBracketKeyword_3_0());
                      			
                    }
                    // InternalDialogParser.g:2060:4: ( (lv_values_15_0= ruleFacetValue ) )
                    // InternalDialogParser.g:2061:5: (lv_values_15_0= ruleFacetValue )
                    {
                    // InternalDialogParser.g:2061:5: (lv_values_15_0= ruleFacetValue )
                    // InternalDialogParser.g:2062:6: lv_values_15_0= ruleFacetValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getValuesFacetValueParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_49);
                    lv_values_15_0=ruleFacetValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                      						}
                      						add(
                      							current,
                      							"values",
                      							lv_values_15_0,
                      							"com.ge.research.sadl.SADL.FacetValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:2079:4: ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )*
                    loop47:
                    do {
                        int alt47=2;
                        int LA47_0 = input.LA(1);

                        if ( ((LA47_0>=Comma && LA47_0<=HyphenMinus)||LA47_0==RULE_NUMBER||LA47_0==RULE_STRING) ) {
                            alt47=1;
                        }


                        switch (alt47) {
                    	case 1 :
                    	    // InternalDialogParser.g:2080:5: (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) )
                    	    {
                    	    // InternalDialogParser.g:2080:5: (otherlv_16= Comma )?
                    	    int alt46=2;
                    	    int LA46_0 = input.LA(1);

                    	    if ( (LA46_0==Comma) ) {
                    	        alt46=1;
                    	    }
                    	    switch (alt46) {
                    	        case 1 :
                    	            // InternalDialogParser.g:2081:6: otherlv_16= Comma
                    	            {
                    	            otherlv_16=(Token)match(input,Comma,FOLLOW_48); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_16, grammarAccess.getSadlDataTypeFacetAccess().getCommaKeyword_3_2_0());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    // InternalDialogParser.g:2086:5: ( (lv_values_17_0= ruleFacetValue ) )
                    	    // InternalDialogParser.g:2087:6: (lv_values_17_0= ruleFacetValue )
                    	    {
                    	    // InternalDialogParser.g:2087:6: (lv_values_17_0= ruleFacetValue )
                    	    // InternalDialogParser.g:2088:7: lv_values_17_0= ruleFacetValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getValuesFacetValueParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_49);
                    	    lv_values_17_0=ruleFacetValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"values",
                    	      								lv_values_17_0,
                    	      								"com.ge.research.sadl.SADL.FacetValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop47;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getSadlDataTypeFacetAccess().getRightCurlyBracketKeyword_3_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlDataTypeFacet"


    // $ANTLR start "entryRuleFacetNumber"
    // InternalDialogParser.g:2115:1: entryRuleFacetNumber returns [String current=null] : iv_ruleFacetNumber= ruleFacetNumber EOF ;
    public final String entryRuleFacetNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFacetNumber = null;


        try {
            // InternalDialogParser.g:2115:51: (iv_ruleFacetNumber= ruleFacetNumber EOF )
            // InternalDialogParser.g:2116:2: iv_ruleFacetNumber= ruleFacetNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFacetNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFacetNumber=ruleFacetNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFacetNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFacetNumber"


    // $ANTLR start "ruleFacetNumber"
    // InternalDialogParser.g:2122:1: ruleFacetNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber ) ;
    public final AntlrDatatypeRuleToken ruleFacetNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_AnyNumber_1 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2128:2: ( ( (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber ) )
            // InternalDialogParser.g:2129:2: ( (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber )
            {
            // InternalDialogParser.g:2129:2: ( (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber )
            // InternalDialogParser.g:2130:3: (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber
            {
            // InternalDialogParser.g:2130:3: (kw= HyphenMinus )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==HyphenMinus) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalDialogParser.g:2131:4: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getFacetNumberAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFacetNumberAccess().getAnyNumberParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_AnyNumber_1=ruleAnyNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_AnyNumber_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFacetNumber"


    // $ANTLR start "entryRuleFacetValue"
    // InternalDialogParser.g:2151:1: entryRuleFacetValue returns [String current=null] : iv_ruleFacetValue= ruleFacetValue EOF ;
    public final String entryRuleFacetValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFacetValue = null;


        try {
            // InternalDialogParser.g:2151:50: (iv_ruleFacetValue= ruleFacetValue EOF )
            // InternalDialogParser.g:2152:2: iv_ruleFacetValue= ruleFacetValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFacetValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFacetValue=ruleFacetValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFacetValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFacetValue"


    // $ANTLR start "ruleFacetValue"
    // InternalDialogParser.g:2158:1: ruleFacetValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_FacetNumber_1= ruleFacetNumber ) ;
    public final AntlrDatatypeRuleToken ruleFacetValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        AntlrDatatypeRuleToken this_FacetNumber_1 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2164:2: ( (this_STRING_0= RULE_STRING | this_FacetNumber_1= ruleFacetNumber ) )
            // InternalDialogParser.g:2165:2: (this_STRING_0= RULE_STRING | this_FacetNumber_1= ruleFacetNumber )
            {
            // InternalDialogParser.g:2165:2: (this_STRING_0= RULE_STRING | this_FacetNumber_1= ruleFacetNumber )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==RULE_STRING) ) {
                alt50=1;
            }
            else if ( (LA50_0==HyphenMinus||LA50_0==RULE_NUMBER) ) {
                alt50=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // InternalDialogParser.g:2166:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getFacetValueAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:2174:3: this_FacetNumber_1= ruleFacetNumber
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFacetValueAccess().getFacetNumberParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FacetNumber_1=ruleFacetNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FacetNumber_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFacetValue"


    // $ANTLR start "entryRuleSadlTypeReference"
    // InternalDialogParser.g:2188:1: entryRuleSadlTypeReference returns [EObject current=null] : iv_ruleSadlTypeReference= ruleSadlTypeReference EOF ;
    public final EObject entryRuleSadlTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlTypeReference = null;


        try {
            // InternalDialogParser.g:2188:58: (iv_ruleSadlTypeReference= ruleSadlTypeReference EOF )
            // InternalDialogParser.g:2189:2: iv_ruleSadlTypeReference= ruleSadlTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlTypeReference=ruleSadlTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlTypeReference"


    // $ANTLR start "ruleSadlTypeReference"
    // InternalDialogParser.g:2195:1: ruleSadlTypeReference returns [EObject current=null] : this_SadlUnionType_0= ruleSadlUnionType ;
    public final EObject ruleSadlTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_SadlUnionType_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2201:2: (this_SadlUnionType_0= ruleSadlUnionType )
            // InternalDialogParser.g:2202:2: this_SadlUnionType_0= ruleSadlUnionType
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getSadlTypeReferenceAccess().getSadlUnionTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_SadlUnionType_0=ruleSadlUnionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SadlUnionType_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlTypeReference"


    // $ANTLR start "entryRuleSadlUnionType"
    // InternalDialogParser.g:2213:1: entryRuleSadlUnionType returns [EObject current=null] : iv_ruleSadlUnionType= ruleSadlUnionType EOF ;
    public final EObject entryRuleSadlUnionType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlUnionType = null;


        try {
            // InternalDialogParser.g:2213:54: (iv_ruleSadlUnionType= ruleSadlUnionType EOF )
            // InternalDialogParser.g:2214:2: iv_ruleSadlUnionType= ruleSadlUnionType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlUnionTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlUnionType=ruleSadlUnionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlUnionType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlUnionType"


    // $ANTLR start "ruleSadlUnionType"
    // InternalDialogParser.g:2220:1: ruleSadlUnionType returns [EObject current=null] : (this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )* ) ;
    public final EObject ruleSadlUnionType() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_SadlIntersectionType_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2226:2: ( (this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )* ) )
            // InternalDialogParser.g:2227:2: (this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )* )
            {
            // InternalDialogParser.g:2227:2: (this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )* )
            // InternalDialogParser.g:2228:3: this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSadlUnionTypeAccess().getSadlIntersectionTypeParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_51);
            this_SadlIntersectionType_0=ruleSadlIntersectionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SadlIntersectionType_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:2236:3: ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==Or) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalDialogParser.g:2237:4: () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) )
            	    {
            	    // InternalDialogParser.g:2237:4: ()
            	    // InternalDialogParser.g:2238:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getSadlUnionTypeAccess().getSadlUnionTypeLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    otherlv_2=(Token)match(input,Or,FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getSadlUnionTypeAccess().getOrKeyword_1_1());
            	      			
            	    }
            	    // InternalDialogParser.g:2248:4: ( (lv_right_3_0= ruleSadlIntersectionType ) )
            	    // InternalDialogParser.g:2249:5: (lv_right_3_0= ruleSadlIntersectionType )
            	    {
            	    // InternalDialogParser.g:2249:5: (lv_right_3_0= ruleSadlIntersectionType )
            	    // InternalDialogParser.g:2250:6: lv_right_3_0= ruleSadlIntersectionType
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSadlUnionTypeAccess().getRightSadlIntersectionTypeParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_51);
            	    lv_right_3_0=ruleSadlIntersectionType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSadlUnionTypeRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.SadlIntersectionType");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlUnionType"


    // $ANTLR start "entryRuleSadlIntersectionType"
    // InternalDialogParser.g:2272:1: entryRuleSadlIntersectionType returns [EObject current=null] : iv_ruleSadlIntersectionType= ruleSadlIntersectionType EOF ;
    public final EObject entryRuleSadlIntersectionType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlIntersectionType = null;


        try {
            // InternalDialogParser.g:2272:61: (iv_ruleSadlIntersectionType= ruleSadlIntersectionType EOF )
            // InternalDialogParser.g:2273:2: iv_ruleSadlIntersectionType= ruleSadlIntersectionType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlIntersectionTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlIntersectionType=ruleSadlIntersectionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlIntersectionType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlIntersectionType"


    // $ANTLR start "ruleSadlIntersectionType"
    // InternalDialogParser.g:2279:1: ruleSadlIntersectionType returns [EObject current=null] : (this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )* ) ;
    public final EObject ruleSadlIntersectionType() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_SadlPrimaryTypeReference_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2285:2: ( (this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )* ) )
            // InternalDialogParser.g:2286:2: (this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )* )
            {
            // InternalDialogParser.g:2286:2: (this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )* )
            // InternalDialogParser.g:2287:3: this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSadlIntersectionTypeAccess().getSadlPrimaryTypeReferenceParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_52);
            this_SadlPrimaryTypeReference_0=ruleSadlPrimaryTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SadlPrimaryTypeReference_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:2295:3: ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==And) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalDialogParser.g:2296:4: () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) )
            	    {
            	    // InternalDialogParser.g:2296:4: ()
            	    // InternalDialogParser.g:2297:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getSadlIntersectionTypeAccess().getSadlIntersectionTypeLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    otherlv_2=(Token)match(input,And,FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getSadlIntersectionTypeAccess().getAndKeyword_1_1());
            	      			
            	    }
            	    // InternalDialogParser.g:2307:4: ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) )
            	    // InternalDialogParser.g:2308:5: (lv_right_3_0= ruleSadlPrimaryTypeReference )
            	    {
            	    // InternalDialogParser.g:2308:5: (lv_right_3_0= ruleSadlPrimaryTypeReference )
            	    // InternalDialogParser.g:2309:6: lv_right_3_0= ruleSadlPrimaryTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSadlIntersectionTypeAccess().getRightSadlPrimaryTypeReferenceParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_52);
            	    lv_right_3_0=ruleSadlPrimaryTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSadlIntersectionTypeRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlIntersectionType"


    // $ANTLR start "entryRuleSadlPrimaryTypeReference"
    // InternalDialogParser.g:2331:1: entryRuleSadlPrimaryTypeReference returns [EObject current=null] : iv_ruleSadlPrimaryTypeReference= ruleSadlPrimaryTypeReference EOF ;
    public final EObject entryRuleSadlPrimaryTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPrimaryTypeReference = null;


        try {
            // InternalDialogParser.g:2331:65: (iv_ruleSadlPrimaryTypeReference= ruleSadlPrimaryTypeReference EOF )
            // InternalDialogParser.g:2332:2: iv_ruleSadlPrimaryTypeReference= ruleSadlPrimaryTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPrimaryTypeReference=ruleSadlPrimaryTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPrimaryTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPrimaryTypeReference"


    // $ANTLR start "ruleSadlPrimaryTypeReference"
    // InternalDialogParser.g:2338:1: ruleSadlPrimaryTypeReference returns [EObject current=null] : ( ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? ) | ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? ) | (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis ) | (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket ) ) ;
    public final EObject ruleSadlPrimaryTypeReference() throws RecognitionException {
        EObject current = null;

        Token lv_list_2_0=null;
        Token lv_list_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Enumerator lv_primitiveType_4_0 = null;

        EObject this_SadlPropertyCondition_7 = null;

        EObject this_SadlTypeReference_10 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2344:2: ( ( ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? ) | ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? ) | (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis ) | (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket ) ) )
            // InternalDialogParser.g:2345:2: ( ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? ) | ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? ) | (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis ) | (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket ) )
            {
            // InternalDialogParser.g:2345:2: ( ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? ) | ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? ) | (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis ) | (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket ) )
            int alt55=4;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt55=1;
                }
                break;
            case NonNegativeInteger:
            case NonPositiveInteger:
            case NegativeInteger:
            case PositiveInteger:
            case AnySimpleType:
            case Base64Binary:
            case UnsignedByte:
            case UnsignedInt:
            case GYearMonth:
            case GMonthDay:
            case HexBinary:
            case DateTime:
            case Duration:
            case Boolean:
            case Decimal:
            case Integer:
            case AnyURI:
            case Double:
            case GMonth:
            case String:
            case Float:
            case GYear:
            case Byte:
            case Date:
            case GDay:
            case Long:
            case Time:
            case Int:
                {
                alt55=2;
                }
                break;
            case LeftParenthesis:
                {
                alt55=3;
                }
                break;
            case LeftCurlyBracket:
                {
                alt55=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }

            switch (alt55) {
                case 1 :
                    // InternalDialogParser.g:2346:3: ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? )
                    {
                    // InternalDialogParser.g:2346:3: ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? )
                    // InternalDialogParser.g:2347:4: () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )?
                    {
                    // InternalDialogParser.g:2347:4: ()
                    // InternalDialogParser.g:2348:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlSimpleTypeReferenceAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:2354:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:2355:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:2355:5: ( ruleQNAME )
                    // InternalDialogParser.g:2356:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPrimaryTypeReferenceRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getTypeSadlResourceCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_53);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:2370:4: ( (lv_list_2_0= List ) )?
                    int alt53=2;
                    int LA53_0 = input.LA(1);

                    if ( (LA53_0==List) ) {
                        alt53=1;
                    }
                    switch (alt53) {
                        case 1 :
                            // InternalDialogParser.g:2371:5: (lv_list_2_0= List )
                            {
                            // InternalDialogParser.g:2371:5: (lv_list_2_0= List )
                            // InternalDialogParser.g:2372:6: lv_list_2_0= List
                            {
                            lv_list_2_0=(Token)match(input,List,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_list_2_0, grammarAccess.getSadlPrimaryTypeReferenceAccess().getListListKeyword_0_2_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getSadlPrimaryTypeReferenceRule());
                              						}
                              						setWithLastConsumed(current, "list", true, "List");
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:2386:3: ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? )
                    {
                    // InternalDialogParser.g:2386:3: ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? )
                    // InternalDialogParser.g:2387:4: () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )?
                    {
                    // InternalDialogParser.g:2387:4: ()
                    // InternalDialogParser.g:2388:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlPrimitiveDataTypeAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:2394:4: ( (lv_primitiveType_4_0= ruleSadlDataType ) )
                    // InternalDialogParser.g:2395:5: (lv_primitiveType_4_0= ruleSadlDataType )
                    {
                    // InternalDialogParser.g:2395:5: (lv_primitiveType_4_0= ruleSadlDataType )
                    // InternalDialogParser.g:2396:6: lv_primitiveType_4_0= ruleSadlDataType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getPrimitiveTypeSadlDataTypeEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_53);
                    lv_primitiveType_4_0=ruleSadlDataType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPrimaryTypeReferenceRule());
                      						}
                      						set(
                      							current,
                      							"primitiveType",
                      							lv_primitiveType_4_0,
                      							"com.ge.research.sadl.SADL.SadlDataType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:2413:4: ( (lv_list_5_0= List ) )?
                    int alt54=2;
                    int LA54_0 = input.LA(1);

                    if ( (LA54_0==List) ) {
                        alt54=1;
                    }
                    switch (alt54) {
                        case 1 :
                            // InternalDialogParser.g:2414:5: (lv_list_5_0= List )
                            {
                            // InternalDialogParser.g:2414:5: (lv_list_5_0= List )
                            // InternalDialogParser.g:2415:6: lv_list_5_0= List
                            {
                            lv_list_5_0=(Token)match(input,List,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_list_5_0, grammarAccess.getSadlPrimaryTypeReferenceAccess().getListListKeyword_1_2_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getSadlPrimaryTypeReferenceRule());
                              						}
                              						setWithLastConsumed(current, "list", true, "List");
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:2429:3: (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis )
                    {
                    // InternalDialogParser.g:2429:3: (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis )
                    // InternalDialogParser.g:2430:4: otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSadlPrimaryTypeReferenceAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlPropertyConditionParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_36);
                    this_SadlPropertyCondition_7=ruleSadlPropertyCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SadlPropertyCondition_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_8=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSadlPrimaryTypeReferenceAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:2448:3: (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:2448:3: (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket )
                    // InternalDialogParser.g:2449:4: otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket
                    {
                    otherlv_9=(Token)match(input,LeftCurlyBracket,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSadlPrimaryTypeReferenceAccess().getLeftCurlyBracketKeyword_3_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlTypeReferenceParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_54);
                    this_SadlTypeReference_10=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SadlTypeReference_10;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_11=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getSadlPrimaryTypeReferenceAccess().getRightCurlyBracketKeyword_3_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPrimaryTypeReference"


    // $ANTLR start "entryRuleSadlPropertyDeclarationInClass"
    // InternalDialogParser.g:2470:1: entryRuleSadlPropertyDeclarationInClass returns [EObject current=null] : iv_ruleSadlPropertyDeclarationInClass= ruleSadlPropertyDeclarationInClass EOF ;
    public final EObject entryRuleSadlPropertyDeclarationInClass() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPropertyDeclarationInClass = null;


        try {
            // InternalDialogParser.g:2470:71: (iv_ruleSadlPropertyDeclarationInClass= ruleSadlPropertyDeclarationInClass EOF )
            // InternalDialogParser.g:2471:2: iv_ruleSadlPropertyDeclarationInClass= ruleSadlPropertyDeclarationInClass EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPropertyDeclarationInClassRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPropertyDeclarationInClass=ruleSadlPropertyDeclarationInClass();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPropertyDeclarationInClass; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPropertyDeclarationInClass"


    // $ANTLR start "ruleSadlPropertyDeclarationInClass"
    // InternalDialogParser.g:2477:1: ruleSadlPropertyDeclarationInClass returns [EObject current=null] : ( (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )* ) ;
    public final EObject ruleSadlPropertyDeclarationInClass() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_nameDeclarations_3_0 = null;

        EObject lv_restrictions_4_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2483:2: ( ( (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )* ) )
            // InternalDialogParser.g:2484:2: ( (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )* )
            {
            // InternalDialogParser.g:2484:2: ( (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )* )
            // InternalDialogParser.g:2485:3: (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )*
            {
            // InternalDialogParser.g:2485:3: (otherlv_0= Comma )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==Comma) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalDialogParser.g:2486:4: otherlv_0= Comma
                    {
                    otherlv_0=(Token)match(input,Comma,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSadlPropertyDeclarationInClassAccess().getCommaKeyword_0());
                      			
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,Described,FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSadlPropertyDeclarationInClassAccess().getDescribedKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,By,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSadlPropertyDeclarationInClassAccess().getByKeyword_2());
              		
            }
            // InternalDialogParser.g:2499:3: ( (lv_nameDeclarations_3_0= ruleSadlResource ) )
            // InternalDialogParser.g:2500:4: (lv_nameDeclarations_3_0= ruleSadlResource )
            {
            // InternalDialogParser.g:2500:4: (lv_nameDeclarations_3_0= ruleSadlResource )
            // InternalDialogParser.g:2501:5: lv_nameDeclarations_3_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlPropertyDeclarationInClassAccess().getNameDeclarationsSadlResourceParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_57);
            lv_nameDeclarations_3_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSadlPropertyDeclarationInClassRule());
              					}
              					add(
              						current,
              						"nameDeclarations",
              						lv_nameDeclarations_3_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:2518:3: ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==Describes||LA57_0==Always||LA57_0==Must||LA57_0==Only||LA57_0==With||LA57_0==Can||LA57_0==Has||(LA57_0>=Is && LA57_0<=Of)) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalDialogParser.g:2519:4: (lv_restrictions_4_0= ruleSadlPropertyRestriction )
            	    {
            	    // InternalDialogParser.g:2519:4: (lv_restrictions_4_0= ruleSadlPropertyRestriction )
            	    // InternalDialogParser.g:2520:5: lv_restrictions_4_0= ruleSadlPropertyRestriction
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlPropertyDeclarationInClassAccess().getRestrictionsSadlPropertyRestrictionParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_57);
            	    lv_restrictions_4_0=ruleSadlPropertyRestriction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlPropertyDeclarationInClassRule());
            	      					}
            	      					add(
            	      						current,
            	      						"restrictions",
            	      						lv_restrictions_4_0,
            	      						"com.ge.research.sadl.SADL.SadlPropertyRestriction");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPropertyDeclarationInClass"


    // $ANTLR start "entryRuleSadlPropertyRestriction"
    // InternalDialogParser.g:2541:1: entryRuleSadlPropertyRestriction returns [EObject current=null] : iv_ruleSadlPropertyRestriction= ruleSadlPropertyRestriction EOF ;
    public final EObject entryRuleSadlPropertyRestriction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPropertyRestriction = null;


        try {
            // InternalDialogParser.g:2541:64: (iv_ruleSadlPropertyRestriction= ruleSadlPropertyRestriction EOF )
            // InternalDialogParser.g:2542:2: iv_ruleSadlPropertyRestriction= ruleSadlPropertyRestriction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPropertyRestrictionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPropertyRestriction=ruleSadlPropertyRestriction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPropertyRestriction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPropertyRestriction"


    // $ANTLR start "ruleSadlPropertyRestriction"
    // InternalDialogParser.g:2548:1: ruleSadlPropertyRestriction returns [EObject current=null] : (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) ) ;
    public final EObject ruleSadlPropertyRestriction() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_singleValued_9_0=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_typeonly_14_1=null;
        Token lv_typeonly_14_2=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token lv_level_38_0=null;
        Token otherlv_39=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token lv_inverse_45_0=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token otherlv_50=null;
        Token otherlv_51=null;
        Token otherlv_52=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_59=null;
        Token otherlv_60=null;
        Token otherlv_61=null;
        Token otherlv_62=null;
        Token otherlv_63=null;
        Token otherlv_65=null;
        Token otherlv_67=null;
        EObject this_SadlCondition_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_range_15_0 = null;

        EObject lv_facet_16_0 = null;

        EObject lv_defValue_40_0 = null;

        EObject lv_values_53_0 = null;

        EObject lv_values_55_0 = null;

        EObject lv_values_64_0 = null;

        EObject lv_values_66_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2554:2: ( (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) ) )
            // InternalDialogParser.g:2555:2: (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) )
            {
            // InternalDialogParser.g:2555:2: (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) )
            int alt68=11;
            alt68 = dfa68.predict(input);
            switch (alt68) {
                case 1 :
                    // InternalDialogParser.g:2556:3: this_SadlCondition_0= ruleSadlCondition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getSadlConditionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlCondition_0=ruleSadlCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlCondition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:2565:3: ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) )
                    {
                    // InternalDialogParser.g:2565:3: ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) )
                    // InternalDialogParser.g:2566:4: () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) )
                    {
                    // InternalDialogParser.g:2566:4: ()
                    // InternalDialogParser.g:2567:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlTypeAssociationAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:2573:4: (otherlv_2= Describes | otherlv_3= Of )
                    int alt58=2;
                    int LA58_0 = input.LA(1);

                    if ( (LA58_0==Describes) ) {
                        alt58=1;
                    }
                    else if ( (LA58_0==Of) ) {
                        alt58=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 58, 0, input);

                        throw nvae;
                    }
                    switch (alt58) {
                        case 1 :
                            // InternalDialogParser.g:2574:5: otherlv_2= Describes
                            {
                            otherlv_2=(Token)match(input,Describes,FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getSadlPropertyRestrictionAccess().getDescribesKeyword_1_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2579:5: otherlv_3= Of
                            {
                            otherlv_3=(Token)match(input,Of,FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalDialogParser.g:2584:4: ( (lv_domain_4_0= ruleSadlTypeReference ) )
                    // InternalDialogParser.g:2585:5: (lv_domain_4_0= ruleSadlTypeReference )
                    {
                    // InternalDialogParser.g:2585:5: (lv_domain_4_0= ruleSadlTypeReference )
                    // InternalDialogParser.g:2586:6: lv_domain_4_0= ruleSadlTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getDomainSadlTypeReferenceParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_domain_4_0=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      						set(
                      							current,
                      							"domain",
                      							lv_domain_4_0,
                      							"com.ge.research.sadl.SADL.SadlTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:2605:3: ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) )
                    {
                    // InternalDialogParser.g:2605:3: ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) )
                    // InternalDialogParser.g:2606:4: () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) )
                    {
                    // InternalDialogParser.g:2606:4: ()
                    // InternalDialogParser.g:2607:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlRangeRestrictionAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:2613:4: (otherlv_6= Has | otherlv_7= With )
                    int alt59=2;
                    int LA59_0 = input.LA(1);

                    if ( (LA59_0==Has) ) {
                        alt59=1;
                    }
                    else if ( (LA59_0==With) ) {
                        alt59=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 59, 0, input);

                        throw nvae;
                    }
                    switch (alt59) {
                        case 1 :
                            // InternalDialogParser.g:2614:5: otherlv_6= Has
                            {
                            otherlv_6=(Token)match(input,Has,FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getSadlPropertyRestrictionAccess().getHasKeyword_2_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2619:5: otherlv_7= With
                            {
                            otherlv_7=(Token)match(input,With,FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getSadlPropertyRestrictionAccess().getWithKeyword_2_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalDialogParser.g:2624:4: ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values )
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==A_1) ) {
                        alt60=1;
                    }
                    else if ( (LA60_0==Values) ) {
                        alt60=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 60, 0, input);

                        throw nvae;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalDialogParser.g:2625:5: (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value )
                            {
                            // InternalDialogParser.g:2625:5: (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value )
                            // InternalDialogParser.g:2626:6: otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value
                            {
                            otherlv_8=(Token)match(input,A_1,FOLLOW_59); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getSadlPropertyRestrictionAccess().getAKeyword_2_2_0_0());
                              					
                            }
                            // InternalDialogParser.g:2630:6: ( (lv_singleValued_9_0= Single ) )
                            // InternalDialogParser.g:2631:7: (lv_singleValued_9_0= Single )
                            {
                            // InternalDialogParser.g:2631:7: (lv_singleValued_9_0= Single )
                            // InternalDialogParser.g:2632:8: lv_singleValued_9_0= Single
                            {
                            lv_singleValued_9_0=(Token)match(input,Single,FOLLOW_60); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_singleValued_9_0, grammarAccess.getSadlPropertyRestrictionAccess().getSingleValuedSingleKeyword_2_2_0_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                              								}
                              								setWithLastConsumed(current, "singleValued", true, "single");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,Value,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSadlPropertyRestrictionAccess().getValueKeyword_2_2_0_2());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2650:5: otherlv_11= Values
                            {
                            otherlv_11=(Token)match(input,Values,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_11, grammarAccess.getSadlPropertyRestrictionAccess().getValuesKeyword_2_2_1());
                              				
                            }

                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,Of,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_2_3());
                      			
                    }
                    otherlv_13=(Token)match(input,Type,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getSadlPropertyRestrictionAccess().getTypeKeyword_2_4());
                      			
                    }
                    // InternalDialogParser.g:2663:4: ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) )
                    int alt63=2;
                    int LA63_0 = input.LA(1);

                    if ( (LA63_0==Class||LA63_0==Data) ) {
                        alt63=1;
                    }
                    else if ( ((LA63_0>=NonNegativeInteger && LA63_0<=Base64Binary)||LA63_0==UnsignedByte||LA63_0==UnsignedInt||LA63_0==GYearMonth||(LA63_0>=GMonthDay && LA63_0<=HexBinary)||LA63_0==DateTime||LA63_0==Duration||LA63_0==Boolean||LA63_0==Decimal||LA63_0==Integer||LA63_0==AnyURI||LA63_0==Double||LA63_0==GMonth||LA63_0==String||(LA63_0>=Float && LA63_0<=GYear)||LA63_0==Byte||LA63_0==Date||LA63_0==GDay||LA63_0==Long||LA63_0==Time||LA63_0==Int||LA63_0==LeftParenthesis||LA63_0==LeftCurlyBracket||(LA63_0>=RULE_ID && LA63_0<=RULE_QNAME_TERMINAL)) ) {
                        alt63=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 63, 0, input);

                        throw nvae;
                    }
                    switch (alt63) {
                        case 1 :
                            // InternalDialogParser.g:2664:5: ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) )
                            {
                            // InternalDialogParser.g:2664:5: ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) )
                            // InternalDialogParser.g:2665:6: ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) )
                            {
                            // InternalDialogParser.g:2665:6: ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) )
                            // InternalDialogParser.g:2666:7: (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data )
                            {
                            // InternalDialogParser.g:2666:7: (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data )
                            int alt61=2;
                            int LA61_0 = input.LA(1);

                            if ( (LA61_0==Class) ) {
                                alt61=1;
                            }
                            else if ( (LA61_0==Data) ) {
                                alt61=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 61, 0, input);

                                throw nvae;
                            }
                            switch (alt61) {
                                case 1 :
                                    // InternalDialogParser.g:2667:8: lv_typeonly_14_1= Class
                                    {
                                    lv_typeonly_14_1=(Token)match(input,Class,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_typeonly_14_1, grammarAccess.getSadlPropertyRestrictionAccess().getTypeonlyClassKeyword_2_5_0_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                                      								}
                                      								setWithLastConsumed(current, "typeonly", lv_typeonly_14_1, null);
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:2678:8: lv_typeonly_14_2= Data
                                    {
                                    lv_typeonly_14_2=(Token)match(input,Data,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_typeonly_14_2, grammarAccess.getSadlPropertyRestrictionAccess().getTypeonlyDataKeyword_2_5_0_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                                      								}
                                      								setWithLastConsumed(current, "typeonly", lv_typeonly_14_2, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2692:5: ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? )
                            {
                            // InternalDialogParser.g:2692:5: ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? )
                            // InternalDialogParser.g:2693:6: ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )?
                            {
                            // InternalDialogParser.g:2693:6: ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) )
                            // InternalDialogParser.g:2694:7: (lv_range_15_0= ruleSadlPrimaryTypeReference )
                            {
                            // InternalDialogParser.g:2694:7: (lv_range_15_0= ruleSadlPrimaryTypeReference )
                            // InternalDialogParser.g:2695:8: lv_range_15_0= ruleSadlPrimaryTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getRangeSadlPrimaryTypeReferenceParserRuleCall_2_5_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_62);
                            lv_range_15_0=ruleSadlPrimaryTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                              								}
                              								set(
                              									current,
                              									"range",
                              									lv_range_15_0,
                              									"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:2712:6: ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )?
                            int alt62=2;
                            int LA62_0 = input.LA(1);

                            if ( (LA62_0==Length||LA62_0==LeftParenthesis||LA62_0==LeftSquareBracket||LA62_0==LeftCurlyBracket||LA62_0==RULE_STRING) ) {
                                alt62=1;
                            }
                            switch (alt62) {
                                case 1 :
                                    // InternalDialogParser.g:2713:7: (lv_facet_16_0= ruleSadlDataTypeFacet )
                                    {
                                    // InternalDialogParser.g:2713:7: (lv_facet_16_0= ruleSadlDataTypeFacet )
                                    // InternalDialogParser.g:2714:8: lv_facet_16_0= ruleSadlDataTypeFacet
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getFacetSadlDataTypeFacetParserRuleCall_2_5_1_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_facet_16_0=ruleSadlDataTypeFacet();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                                      								}
                                      								set(
                                      									current,
                                      									"facet",
                                      									lv_facet_16_0,
                                      									"com.ge.research.sadl.SADL.SadlDataTypeFacet");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:2735:3: ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) )
                    {
                    // InternalDialogParser.g:2735:3: ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) )
                    // InternalDialogParser.g:2736:4: () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) )
                    {
                    // InternalDialogParser.g:2736:4: ()
                    // InternalDialogParser.g:2737:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsInverseOfAction_3_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_18=(Token)match(input,Is,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_3_1());
                      			
                    }
                    otherlv_19=(Token)match(input,The_1,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getSadlPropertyRestrictionAccess().getTheKeyword_3_2());
                      			
                    }
                    otherlv_20=(Token)match(input,Inverse,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getSadlPropertyRestrictionAccess().getInverseKeyword_3_3());
                      			
                    }
                    otherlv_21=(Token)match(input,Of,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_3_4());
                      			
                    }
                    // InternalDialogParser.g:2759:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:2760:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:2760:5: ( ruleQNAME )
                    // InternalDialogParser.g:2761:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getOtherPropertySadlResourceCrossReference_3_5_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:2777:3: ( () otherlv_24= Is otherlv_25= Transitive )
                    {
                    // InternalDialogParser.g:2777:3: ( () otherlv_24= Is otherlv_25= Transitive )
                    // InternalDialogParser.g:2778:4: () otherlv_24= Is otherlv_25= Transitive
                    {
                    // InternalDialogParser.g:2778:4: ()
                    // InternalDialogParser.g:2779:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsTransitiveAction_4_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_24=(Token)match(input,Is,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_4_1());
                      			
                    }
                    otherlv_25=(Token)match(input,Transitive,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getSadlPropertyRestrictionAccess().getTransitiveKeyword_4_2());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:2795:3: ( () otherlv_27= Is otherlv_28= Symmetrical )
                    {
                    // InternalDialogParser.g:2795:3: ( () otherlv_27= Is otherlv_28= Symmetrical )
                    // InternalDialogParser.g:2796:4: () otherlv_27= Is otherlv_28= Symmetrical
                    {
                    // InternalDialogParser.g:2796:4: ()
                    // InternalDialogParser.g:2797:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsSymmetricalAction_5_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_27=(Token)match(input,Is,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_5_1());
                      			
                    }
                    otherlv_28=(Token)match(input,Symmetrical,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getSadlPropertyRestrictionAccess().getSymmetricalKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:2813:3: ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation )
                    {
                    // InternalDialogParser.g:2813:3: ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation )
                    // InternalDialogParser.g:2814:4: () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation
                    {
                    // InternalDialogParser.g:2814:4: ()
                    // InternalDialogParser.g:2815:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsAnnotationAction_6_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_30=(Token)match(input,Is,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_6_1());
                      			
                    }
                    otherlv_31=(Token)match(input,A_1,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getSadlPropertyRestrictionAccess().getAKeyword_6_2());
                      			
                    }
                    otherlv_32=(Token)match(input,Type,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getSadlPropertyRestrictionAccess().getTypeKeyword_6_3());
                      			
                    }
                    otherlv_33=(Token)match(input,Of,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_6_4());
                      			
                    }
                    otherlv_34=(Token)match(input,Annotation,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getSadlPropertyRestrictionAccess().getAnnotationKeyword_6_5());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:2843:3: ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) )
                    {
                    // InternalDialogParser.g:2843:3: ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) )
                    // InternalDialogParser.g:2844:4: () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) )
                    {
                    // InternalDialogParser.g:2844:4: ()
                    // InternalDialogParser.g:2845:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlDefaultValueAction_7_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_36=(Token)match(input,Has,FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getSadlPropertyRestrictionAccess().getHasKeyword_7_1());
                      			
                    }
                    // InternalDialogParser.g:2855:4: (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )?
                    int alt64=2;
                    int LA64_0 = input.LA(1);

                    if ( (LA64_0==Level) ) {
                        alt64=1;
                    }
                    switch (alt64) {
                        case 1 :
                            // InternalDialogParser.g:2856:5: otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) )
                            {
                            otherlv_37=(Token)match(input,Level,FOLLOW_50); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_37, grammarAccess.getSadlPropertyRestrictionAccess().getLevelKeyword_7_2_0());
                              				
                            }
                            // InternalDialogParser.g:2860:5: ( (lv_level_38_0= RULE_NUMBER ) )
                            // InternalDialogParser.g:2861:6: (lv_level_38_0= RULE_NUMBER )
                            {
                            // InternalDialogParser.g:2861:6: (lv_level_38_0= RULE_NUMBER )
                            // InternalDialogParser.g:2862:7: lv_level_38_0= RULE_NUMBER
                            {
                            lv_level_38_0=(Token)match(input,RULE_NUMBER,FOLLOW_70); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_level_38_0, grammarAccess.getSadlPropertyRestrictionAccess().getLevelNUMBERTerminalRuleCall_7_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"level",
                              								lv_level_38_0,
                              								"com.ge.research.sadl.SADL.NUMBER");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_39=(Token)match(input,Default,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getSadlPropertyRestrictionAccess().getDefaultKeyword_7_3());
                      			
                    }
                    // InternalDialogParser.g:2883:4: ( (lv_defValue_40_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:2884:5: (lv_defValue_40_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:2884:5: (lv_defValue_40_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:2885:6: lv_defValue_40_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getDefValueSadlExplicitValueParserRuleCall_7_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_defValue_40_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      						set(
                      							current,
                      							"defValue",
                      							lv_defValue_40_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalDialogParser.g:2904:3: ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? )
                    {
                    // InternalDialogParser.g:2904:3: ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? )
                    // InternalDialogParser.g:2905:4: () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )?
                    {
                    // InternalDialogParser.g:2905:4: ()
                    // InternalDialogParser.g:2906:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsFunctionalAction_8_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_42=(Token)match(input,Has,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getSadlPropertyRestrictionAccess().getHasKeyword_8_1());
                      			
                    }
                    otherlv_43=(Token)match(input,A_1,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getSadlPropertyRestrictionAccess().getAKeyword_8_2());
                      			
                    }
                    otherlv_44=(Token)match(input,Single,FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_44, grammarAccess.getSadlPropertyRestrictionAccess().getSingleKeyword_8_3());
                      			
                    }
                    // InternalDialogParser.g:2924:4: ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )?
                    int alt65=3;
                    int LA65_0 = input.LA(1);

                    if ( (LA65_0==Subject) ) {
                        alt65=1;
                    }
                    else if ( (LA65_0==Value) ) {
                        alt65=2;
                    }
                    switch (alt65) {
                        case 1 :
                            // InternalDialogParser.g:2925:5: ( (lv_inverse_45_0= Subject ) )
                            {
                            // InternalDialogParser.g:2925:5: ( (lv_inverse_45_0= Subject ) )
                            // InternalDialogParser.g:2926:6: (lv_inverse_45_0= Subject )
                            {
                            // InternalDialogParser.g:2926:6: (lv_inverse_45_0= Subject )
                            // InternalDialogParser.g:2927:7: lv_inverse_45_0= Subject
                            {
                            lv_inverse_45_0=(Token)match(input,Subject,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_inverse_45_0, grammarAccess.getSadlPropertyRestrictionAccess().getInverseSubjectKeyword_8_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                              							}
                              							setWithLastConsumed(current, "inverse", true, "subject");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2940:5: otherlv_46= Value
                            {
                            otherlv_46=(Token)match(input,Value,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_46, grammarAccess.getSadlPropertyRestrictionAccess().getValueKeyword_8_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalDialogParser.g:2947:3: ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:2947:3: ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket )
                    // InternalDialogParser.g:2948:4: () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket
                    {
                    // InternalDialogParser.g:2948:4: ()
                    // InternalDialogParser.g:2949:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlMustBeOneOfAction_9_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_48=(Token)match(input,Must,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getSadlPropertyRestrictionAccess().getMustKeyword_9_1());
                      			
                    }
                    otherlv_49=(Token)match(input,Be,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getSadlPropertyRestrictionAccess().getBeKeyword_9_2());
                      			
                    }
                    otherlv_50=(Token)match(input,One,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_50, grammarAccess.getSadlPropertyRestrictionAccess().getOneKeyword_9_3());
                      			
                    }
                    otherlv_51=(Token)match(input,Of,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_9_4());
                      			
                    }
                    otherlv_52=(Token)match(input,LeftCurlyBracket,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_52, grammarAccess.getSadlPropertyRestrictionAccess().getLeftCurlyBracketKeyword_9_5());
                      			
                    }
                    // InternalDialogParser.g:2975:4: ( (lv_values_53_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:2976:5: (lv_values_53_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:2976:5: (lv_values_53_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:2977:6: lv_values_53_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_9_6_0());
                      					
                    }
                    pushFollow(FOLLOW_76);
                    lv_values_53_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      						add(
                      							current,
                      							"values",
                      							lv_values_53_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:2994:4: (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )*
                    loop66:
                    do {
                        int alt66=2;
                        int LA66_0 = input.LA(1);

                        if ( (LA66_0==Comma) ) {
                            alt66=1;
                        }


                        switch (alt66) {
                    	case 1 :
                    	    // InternalDialogParser.g:2995:5: otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) )
                    	    {
                    	    otherlv_54=(Token)match(input,Comma,FOLLOW_71); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_54, grammarAccess.getSadlPropertyRestrictionAccess().getCommaKeyword_9_7_0());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:2999:5: ( (lv_values_55_0= ruleSadlExplicitValue ) )
                    	    // InternalDialogParser.g:3000:6: (lv_values_55_0= ruleSadlExplicitValue )
                    	    {
                    	    // InternalDialogParser.g:3000:6: (lv_values_55_0= ruleSadlExplicitValue )
                    	    // InternalDialogParser.g:3001:7: lv_values_55_0= ruleSadlExplicitValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_9_7_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_76);
                    	    lv_values_55_0=ruleSadlExplicitValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"values",
                    	      								lv_values_55_0,
                    	      								"com.ge.research.sadl.SADL.SadlExplicitValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop66;
                        }
                    } while (true);

                    otherlv_56=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getSadlPropertyRestrictionAccess().getRightCurlyBracketKeyword_9_8());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalDialogParser.g:3025:3: ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:3025:3: ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket )
                    // InternalDialogParser.g:3026:4: () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket
                    {
                    // InternalDialogParser.g:3026:4: ()
                    // InternalDialogParser.g:3027:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlCanOnlyBeOneOfAction_10_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_58=(Token)match(input,Can,FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_58, grammarAccess.getSadlPropertyRestrictionAccess().getCanKeyword_10_1());
                      			
                    }
                    otherlv_59=(Token)match(input,Only,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_59, grammarAccess.getSadlPropertyRestrictionAccess().getOnlyKeyword_10_2());
                      			
                    }
                    otherlv_60=(Token)match(input,Be,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_60, grammarAccess.getSadlPropertyRestrictionAccess().getBeKeyword_10_3());
                      			
                    }
                    otherlv_61=(Token)match(input,One,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_61, grammarAccess.getSadlPropertyRestrictionAccess().getOneKeyword_10_4());
                      			
                    }
                    otherlv_62=(Token)match(input,Of,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_62, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_10_5());
                      			
                    }
                    otherlv_63=(Token)match(input,LeftCurlyBracket,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_63, grammarAccess.getSadlPropertyRestrictionAccess().getLeftCurlyBracketKeyword_10_6());
                      			
                    }
                    // InternalDialogParser.g:3057:4: ( (lv_values_64_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:3058:5: (lv_values_64_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:3058:5: (lv_values_64_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:3059:6: lv_values_64_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_10_7_0());
                      					
                    }
                    pushFollow(FOLLOW_76);
                    lv_values_64_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      						add(
                      							current,
                      							"values",
                      							lv_values_64_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:3076:4: (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )*
                    loop67:
                    do {
                        int alt67=2;
                        int LA67_0 = input.LA(1);

                        if ( (LA67_0==Comma) ) {
                            alt67=1;
                        }


                        switch (alt67) {
                    	case 1 :
                    	    // InternalDialogParser.g:3077:5: otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) )
                    	    {
                    	    otherlv_65=(Token)match(input,Comma,FOLLOW_71); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_65, grammarAccess.getSadlPropertyRestrictionAccess().getCommaKeyword_10_8_0());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:3081:5: ( (lv_values_66_0= ruleSadlExplicitValue ) )
                    	    // InternalDialogParser.g:3082:6: (lv_values_66_0= ruleSadlExplicitValue )
                    	    {
                    	    // InternalDialogParser.g:3082:6: (lv_values_66_0= ruleSadlExplicitValue )
                    	    // InternalDialogParser.g:3083:7: lv_values_66_0= ruleSadlExplicitValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_10_8_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_76);
                    	    lv_values_66_0=ruleSadlExplicitValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"values",
                    	      								lv_values_66_0,
                    	      								"com.ge.research.sadl.SADL.SadlExplicitValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop67;
                        }
                    } while (true);

                    otherlv_67=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_67, grammarAccess.getSadlPropertyRestrictionAccess().getRightCurlyBracketKeyword_10_9());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPropertyRestriction"


    // $ANTLR start "entryRuleSadlCondition"
    // InternalDialogParser.g:3110:1: entryRuleSadlCondition returns [EObject current=null] : iv_ruleSadlCondition= ruleSadlCondition EOF ;
    public final EObject entryRuleSadlCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlCondition = null;


        try {
            // InternalDialogParser.g:3110:54: (iv_ruleSadlCondition= ruleSadlCondition EOF )
            // InternalDialogParser.g:3111:2: iv_ruleSadlCondition= ruleSadlCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlCondition=ruleSadlCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlCondition"


    // $ANTLR start "ruleSadlCondition"
    // InternalDialogParser.g:3117:1: ruleSadlCondition returns [EObject current=null] : (this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition | this_SadlHasValueCondition_1= ruleSadlHasValueCondition | this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition ) ;
    public final EObject ruleSadlCondition() throws RecognitionException {
        EObject current = null;

        EObject this_SadlAllValuesCondition_0 = null;

        EObject this_SadlHasValueCondition_1 = null;

        EObject this_SadlCardinalityCondition_2 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3123:2: ( (this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition | this_SadlHasValueCondition_1= ruleSadlHasValueCondition | this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition ) )
            // InternalDialogParser.g:3124:2: (this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition | this_SadlHasValueCondition_1= ruleSadlHasValueCondition | this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition )
            {
            // InternalDialogParser.g:3124:2: (this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition | this_SadlHasValueCondition_1= ruleSadlHasValueCondition | this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition )
            int alt69=3;
            switch ( input.LA(1) ) {
            case Only:
                {
                alt69=1;
                }
                break;
            case Always:
                {
                alt69=2;
                }
                break;
            case With:
            case Has:
                {
                alt69=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }

            switch (alt69) {
                case 1 :
                    // InternalDialogParser.g:3125:3: this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlConditionAccess().getSadlAllValuesConditionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlAllValuesCondition_0=ruleSadlAllValuesCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlAllValuesCondition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3134:3: this_SadlHasValueCondition_1= ruleSadlHasValueCondition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlConditionAccess().getSadlHasValueConditionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlHasValueCondition_1=ruleSadlHasValueCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlHasValueCondition_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:3143:3: this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlConditionAccess().getSadlCardinalityConditionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlCardinalityCondition_2=ruleSadlCardinalityCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlCardinalityCondition_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlCondition"


    // $ANTLR start "entryRuleSadlAllValuesCondition"
    // InternalDialogParser.g:3155:1: entryRuleSadlAllValuesCondition returns [EObject current=null] : iv_ruleSadlAllValuesCondition= ruleSadlAllValuesCondition EOF ;
    public final EObject entryRuleSadlAllValuesCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlAllValuesCondition = null;


        try {
            // InternalDialogParser.g:3155:63: (iv_ruleSadlAllValuesCondition= ruleSadlAllValuesCondition EOF )
            // InternalDialogParser.g:3156:2: iv_ruleSadlAllValuesCondition= ruleSadlAllValuesCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlAllValuesConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlAllValuesCondition=ruleSadlAllValuesCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlAllValuesCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlAllValuesCondition"


    // $ANTLR start "ruleSadlAllValuesCondition"
    // InternalDialogParser.g:3162:1: ruleSadlAllValuesCondition returns [EObject current=null] : (otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )? ) ;
    public final EObject ruleSadlAllValuesCondition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_type_6_0 = null;

        EObject lv_facet_7_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3168:2: ( (otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )? ) )
            // InternalDialogParser.g:3169:2: (otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )? )
            {
            // InternalDialogParser.g:3169:2: (otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )? )
            // InternalDialogParser.g:3170:3: otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )?
            {
            otherlv_0=(Token)match(input,Only,FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSadlAllValuesConditionAccess().getOnlyKeyword_0());
              		
            }
            // InternalDialogParser.g:3174:3: (otherlv_1= Has | otherlv_2= With )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==Has) ) {
                alt70=1;
            }
            else if ( (LA70_0==With) ) {
                alt70=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }
            switch (alt70) {
                case 1 :
                    // InternalDialogParser.g:3175:4: otherlv_1= Has
                    {
                    otherlv_1=(Token)match(input,Has,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSadlAllValuesConditionAccess().getHasKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3180:4: otherlv_2= With
                    {
                    otherlv_2=(Token)match(input,With,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSadlAllValuesConditionAccess().getWithKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,Values,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getSadlAllValuesConditionAccess().getValuesKeyword_2());
              		
            }
            otherlv_4=(Token)match(input,Of,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSadlAllValuesConditionAccess().getOfKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,Type,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getSadlAllValuesConditionAccess().getTypeKeyword_4());
              		
            }
            // InternalDialogParser.g:3197:3: ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) )
            // InternalDialogParser.g:3198:4: (lv_type_6_0= ruleSadlPrimaryTypeReference )
            {
            // InternalDialogParser.g:3198:4: (lv_type_6_0= ruleSadlPrimaryTypeReference )
            // InternalDialogParser.g:3199:5: lv_type_6_0= ruleSadlPrimaryTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlAllValuesConditionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_62);
            lv_type_6_0=ruleSadlPrimaryTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSadlAllValuesConditionRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_6_0,
              						"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:3216:3: ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==Length||LA71_0==LeftParenthesis||LA71_0==LeftSquareBracket||LA71_0==LeftCurlyBracket||LA71_0==RULE_STRING) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalDialogParser.g:3217:4: (lv_facet_7_0= ruleSadlDataTypeFacet )
                    {
                    // InternalDialogParser.g:3217:4: (lv_facet_7_0= ruleSadlDataTypeFacet )
                    // InternalDialogParser.g:3218:5: lv_facet_7_0= ruleSadlDataTypeFacet
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSadlAllValuesConditionAccess().getFacetSadlDataTypeFacetParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_facet_7_0=ruleSadlDataTypeFacet();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSadlAllValuesConditionRule());
                      					}
                      					set(
                      						current,
                      						"facet",
                      						lv_facet_7_0,
                      						"com.ge.research.sadl.SADL.SadlDataTypeFacet");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlAllValuesCondition"


    // $ANTLR start "entryRuleSadlHasValueCondition"
    // InternalDialogParser.g:3239:1: entryRuleSadlHasValueCondition returns [EObject current=null] : iv_ruleSadlHasValueCondition= ruleSadlHasValueCondition EOF ;
    public final EObject entryRuleSadlHasValueCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlHasValueCondition = null;


        try {
            // InternalDialogParser.g:3239:62: (iv_ruleSadlHasValueCondition= ruleSadlHasValueCondition EOF )
            // InternalDialogParser.g:3240:2: iv_ruleSadlHasValueCondition= ruleSadlHasValueCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlHasValueConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlHasValueCondition=ruleSadlHasValueCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlHasValueCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlHasValueCondition"


    // $ANTLR start "ruleSadlHasValueCondition"
    // InternalDialogParser.g:3246:1: ruleSadlHasValueCondition returns [EObject current=null] : (otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) ;
    public final EObject ruleSadlHasValueCondition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_restriction_4_0 = null;

        EObject lv_restriction_6_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3252:2: ( (otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) )
            // InternalDialogParser.g:3253:2: (otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) )
            {
            // InternalDialogParser.g:3253:2: (otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) )
            // InternalDialogParser.g:3254:3: otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) )
            {
            otherlv_0=(Token)match(input,Always,FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSadlHasValueConditionAccess().getAlwaysKeyword_0());
              		
            }
            // InternalDialogParser.g:3258:3: (otherlv_1= Has | otherlv_2= With )
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==Has) ) {
                alt72=1;
            }
            else if ( (LA72_0==With) ) {
                alt72=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;
            }
            switch (alt72) {
                case 1 :
                    // InternalDialogParser.g:3259:4: otherlv_1= Has
                    {
                    otherlv_1=(Token)match(input,Has,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSadlHasValueConditionAccess().getHasKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3264:4: otherlv_2= With
                    {
                    otherlv_2=(Token)match(input,With,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSadlHasValueConditionAccess().getWithKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,Value,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getSadlHasValueConditionAccess().getValueKeyword_2());
              		
            }
            // InternalDialogParser.g:3273:3: ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) )
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==False||LA73_0==Known||LA73_0==True||LA73_0==Not||LA73_0==PI||LA73_0==HyphenMinus||LA73_0==LeftSquareBracket||LA73_0==E_1||LA73_0==RULE_NUMBER||(LA73_0>=RULE_ID && LA73_0<=RULE_STRING)) ) {
                alt73=1;
            }
            else if ( (LA73_0==LeftParenthesis) ) {
                alt73=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;
            }
            switch (alt73) {
                case 1 :
                    // InternalDialogParser.g:3274:4: ( (lv_restriction_4_0= ruleSadlExplicitValue ) )
                    {
                    // InternalDialogParser.g:3274:4: ( (lv_restriction_4_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:3275:5: (lv_restriction_4_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:3275:5: (lv_restriction_4_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:3276:6: lv_restriction_4_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlHasValueConditionAccess().getRestrictionSadlExplicitValueParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_restriction_4_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlHasValueConditionRule());
                      						}
                      						set(
                      							current,
                      							"restriction",
                      							lv_restriction_4_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3294:4: (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis )
                    {
                    // InternalDialogParser.g:3294:4: (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis )
                    // InternalDialogParser.g:3295:5: otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,LeftParenthesis,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSadlHasValueConditionAccess().getLeftParenthesisKeyword_3_1_0());
                      				
                    }
                    // InternalDialogParser.g:3299:5: ( (lv_restriction_6_0= ruleSadlNestedInstance ) )
                    // InternalDialogParser.g:3300:6: (lv_restriction_6_0= ruleSadlNestedInstance )
                    {
                    // InternalDialogParser.g:3300:6: (lv_restriction_6_0= ruleSadlNestedInstance )
                    // InternalDialogParser.g:3301:7: lv_restriction_6_0= ruleSadlNestedInstance
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlHasValueConditionAccess().getRestrictionSadlNestedInstanceParserRuleCall_3_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_36);
                    lv_restriction_6_0=ruleSadlNestedInstance();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlHasValueConditionRule());
                      							}
                      							set(
                      								current,
                      								"restriction",
                      								lv_restriction_6_0,
                      								"com.ge.research.sadl.SADL.SadlNestedInstance");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSadlHasValueConditionAccess().getRightParenthesisKeyword_3_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlHasValueCondition"


    // $ANTLR start "entryRuleSadlCardinalityCondition"
    // InternalDialogParser.g:3328:1: entryRuleSadlCardinalityCondition returns [EObject current=null] : iv_ruleSadlCardinalityCondition= ruleSadlCardinalityCondition EOF ;
    public final EObject entryRuleSadlCardinalityCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlCardinalityCondition = null;


        try {
            // InternalDialogParser.g:3328:65: (iv_ruleSadlCardinalityCondition= ruleSadlCardinalityCondition EOF )
            // InternalDialogParser.g:3329:2: iv_ruleSadlCardinalityCondition= ruleSadlCardinalityCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlCardinalityConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlCardinalityCondition=ruleSadlCardinalityCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlCardinalityCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlCardinalityCondition"


    // $ANTLR start "ruleSadlCardinalityCondition"
    // InternalDialogParser.g:3335:1: ruleSadlCardinalityCondition returns [EObject current=null] : ( (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )? ) ;
    public final EObject ruleSadlCardinalityCondition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_operator_3_1=null;
        Token lv_operator_3_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_cardinality_5_0 = null;

        EObject lv_type_10_0 = null;

        EObject lv_facet_11_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3341:2: ( ( (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )? ) )
            // InternalDialogParser.g:3342:2: ( (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )? )
            {
            // InternalDialogParser.g:3342:2: ( (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )? )
            // InternalDialogParser.g:3343:3: (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )?
            {
            // InternalDialogParser.g:3343:3: (otherlv_0= Has | otherlv_1= With )
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==Has) ) {
                alt74=1;
            }
            else if ( (LA74_0==With) ) {
                alt74=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }
            switch (alt74) {
                case 1 :
                    // InternalDialogParser.g:3344:4: otherlv_0= Has
                    {
                    otherlv_0=(Token)match(input,Has,FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSadlCardinalityConditionAccess().getHasKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3349:4: otherlv_1= With
                    {
                    otherlv_1=(Token)match(input,With,FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSadlCardinalityConditionAccess().getWithKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:3354:3: ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )?
            int alt76=3;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==At) ) {
                alt76=1;
            }
            else if ( (LA76_0==Exactly) ) {
                alt76=2;
            }
            switch (alt76) {
                case 1 :
                    // InternalDialogParser.g:3355:4: (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) )
                    {
                    // InternalDialogParser.g:3355:4: (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) )
                    // InternalDialogParser.g:3356:5: otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) )
                    {
                    otherlv_2=(Token)match(input,At,FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getSadlCardinalityConditionAccess().getAtKeyword_1_0_0());
                      				
                    }
                    // InternalDialogParser.g:3360:5: ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) )
                    // InternalDialogParser.g:3361:6: ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) )
                    {
                    // InternalDialogParser.g:3361:6: ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) )
                    // InternalDialogParser.g:3362:7: (lv_operator_3_1= Least | lv_operator_3_2= Most )
                    {
                    // InternalDialogParser.g:3362:7: (lv_operator_3_1= Least | lv_operator_3_2= Most )
                    int alt75=2;
                    int LA75_0 = input.LA(1);

                    if ( (LA75_0==Least) ) {
                        alt75=1;
                    }
                    else if ( (LA75_0==Most) ) {
                        alt75=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 75, 0, input);

                        throw nvae;
                    }
                    switch (alt75) {
                        case 1 :
                            // InternalDialogParser.g:3363:8: lv_operator_3_1= Least
                            {
                            lv_operator_3_1=(Token)match(input,Least,FOLLOW_79); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_operator_3_1, grammarAccess.getSadlCardinalityConditionAccess().getOperatorLeastKeyword_1_0_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlCardinalityConditionRule());
                              								}
                              								setWithLastConsumed(current, "operator", lv_operator_3_1, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3374:8: lv_operator_3_2= Most
                            {
                            lv_operator_3_2=(Token)match(input,Most,FOLLOW_79); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_operator_3_2, grammarAccess.getSadlCardinalityConditionAccess().getOperatorMostKeyword_1_0_1_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlCardinalityConditionRule());
                              								}
                              								setWithLastConsumed(current, "operator", lv_operator_3_2, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3389:4: otherlv_4= Exactly
                    {
                    otherlv_4=(Token)match(input,Exactly,FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSadlCardinalityConditionAccess().getExactlyKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:3394:3: ( (lv_cardinality_5_0= ruleCardinalityValue ) )
            // InternalDialogParser.g:3395:4: (lv_cardinality_5_0= ruleCardinalityValue )
            {
            // InternalDialogParser.g:3395:4: (lv_cardinality_5_0= ruleCardinalityValue )
            // InternalDialogParser.g:3396:5: lv_cardinality_5_0= ruleCardinalityValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlCardinalityConditionAccess().getCardinalityCardinalityValueParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_81);
            lv_cardinality_5_0=ruleCardinalityValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSadlCardinalityConditionRule());
              					}
              					set(
              						current,
              						"cardinality",
              						lv_cardinality_5_0,
              						"com.ge.research.sadl.SADL.CardinalityValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:3413:3: (otherlv_6= Value | otherlv_7= Values )
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==Value) ) {
                alt77=1;
            }
            else if ( (LA77_0==Values) ) {
                alt77=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }
            switch (alt77) {
                case 1 :
                    // InternalDialogParser.g:3414:4: otherlv_6= Value
                    {
                    otherlv_6=(Token)match(input,Value,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSadlCardinalityConditionAccess().getValueKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3419:4: otherlv_7= Values
                    {
                    otherlv_7=(Token)match(input,Values,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getSadlCardinalityConditionAccess().getValuesKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:3424:3: (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==Of) ) {
                int LA79_1 = input.LA(2);

                if ( (LA79_1==Type) ) {
                    alt79=1;
                }
            }
            switch (alt79) {
                case 1 :
                    // InternalDialogParser.g:3425:4: otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )?
                    {
                    otherlv_8=(Token)match(input,Of,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSadlCardinalityConditionAccess().getOfKeyword_4_0());
                      			
                    }
                    otherlv_9=(Token)match(input,Type,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSadlCardinalityConditionAccess().getTypeKeyword_4_1());
                      			
                    }
                    // InternalDialogParser.g:3433:4: ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:3434:5: (lv_type_10_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:3434:5: (lv_type_10_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:3435:6: lv_type_10_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlCardinalityConditionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_62);
                    lv_type_10_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlCardinalityConditionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_10_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:3452:4: ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==Length||LA78_0==LeftParenthesis||LA78_0==LeftSquareBracket||LA78_0==LeftCurlyBracket||LA78_0==RULE_STRING) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            // InternalDialogParser.g:3453:5: (lv_facet_11_0= ruleSadlDataTypeFacet )
                            {
                            // InternalDialogParser.g:3453:5: (lv_facet_11_0= ruleSadlDataTypeFacet )
                            // InternalDialogParser.g:3454:6: lv_facet_11_0= ruleSadlDataTypeFacet
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSadlCardinalityConditionAccess().getFacetSadlDataTypeFacetParserRuleCall_4_3_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_facet_11_0=ruleSadlDataTypeFacet();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSadlCardinalityConditionRule());
                              						}
                              						set(
                              							current,
                              							"facet",
                              							lv_facet_11_0,
                              							"com.ge.research.sadl.SADL.SadlDataTypeFacet");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlCardinalityCondition"


    // $ANTLR start "entryRuleCardinalityValue"
    // InternalDialogParser.g:3476:1: entryRuleCardinalityValue returns [String current=null] : iv_ruleCardinalityValue= ruleCardinalityValue EOF ;
    public final String entryRuleCardinalityValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCardinalityValue = null;


        try {
            // InternalDialogParser.g:3476:56: (iv_ruleCardinalityValue= ruleCardinalityValue EOF )
            // InternalDialogParser.g:3477:2: iv_ruleCardinalityValue= ruleCardinalityValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCardinalityValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCardinalityValue=ruleCardinalityValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCardinalityValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCardinalityValue"


    // $ANTLR start "ruleCardinalityValue"
    // InternalDialogParser.g:3483:1: ruleCardinalityValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_NUMBER_0= RULE_NUMBER | kw= One ) ;
    public final AntlrDatatypeRuleToken ruleCardinalityValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_NUMBER_0=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:3489:2: ( (this_NUMBER_0= RULE_NUMBER | kw= One ) )
            // InternalDialogParser.g:3490:2: (this_NUMBER_0= RULE_NUMBER | kw= One )
            {
            // InternalDialogParser.g:3490:2: (this_NUMBER_0= RULE_NUMBER | kw= One )
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==RULE_NUMBER) ) {
                alt80=1;
            }
            else if ( (LA80_0==One) ) {
                alt80=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 80, 0, input);

                throw nvae;
            }
            switch (alt80) {
                case 1 :
                    // InternalDialogParser.g:3491:3: this_NUMBER_0= RULE_NUMBER
                    {
                    this_NUMBER_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_NUMBER_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_NUMBER_0, grammarAccess.getCardinalityValueAccess().getNUMBERTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3499:3: kw= One
                    {
                    kw=(Token)match(input,One,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCardinalityValueAccess().getOneKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCardinalityValue"


    // $ANTLR start "entryRuleSadlExplicitValue"
    // InternalDialogParser.g:3508:1: entryRuleSadlExplicitValue returns [EObject current=null] : iv_ruleSadlExplicitValue= ruleSadlExplicitValue EOF ;
    public final EObject entryRuleSadlExplicitValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlExplicitValue = null;


        try {
            // InternalDialogParser.g:3508:58: (iv_ruleSadlExplicitValue= ruleSadlExplicitValue EOF )
            // InternalDialogParser.g:3509:2: iv_ruleSadlExplicitValue= ruleSadlExplicitValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlExplicitValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlExplicitValue=ruleSadlExplicitValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlExplicitValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlExplicitValue"


    // $ANTLR start "ruleSadlExplicitValue"
    // InternalDialogParser.g:3515:1: ruleSadlExplicitValue returns [EObject current=null] : (this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral | ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) ) ) ;
    public final EObject ruleSadlExplicitValue() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_1=null;
        Token lv_operator_2_2=null;
        EObject this_SadlExplicitValueLiteral_0 = null;

        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3521:2: ( (this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral | ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) ) ) )
            // InternalDialogParser.g:3522:2: (this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral | ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) ) )
            {
            // InternalDialogParser.g:3522:2: (this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral | ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) ) )
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==False||LA82_0==Known||LA82_0==True||LA82_0==PI||LA82_0==LeftSquareBracket||LA82_0==E_1||LA82_0==RULE_NUMBER||(LA82_0>=RULE_ID && LA82_0<=RULE_STRING)) ) {
                alt82=1;
            }
            else if ( (LA82_0==HyphenMinus) && (synpred1_InternalDialogParser())) {
                alt82=2;
            }
            else if ( (LA82_0==Not) && (synpred1_InternalDialogParser())) {
                alt82=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 82, 0, input);

                throw nvae;
            }
            switch (alt82) {
                case 1 :
                    // InternalDialogParser.g:3523:3: this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlExplicitValueAccess().getSadlExplicitValueLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlExplicitValueLiteral_0=ruleSadlExplicitValueLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlExplicitValueLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3532:3: ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) )
                    {
                    // InternalDialogParser.g:3532:3: ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) )
                    // InternalDialogParser.g:3533:4: ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) )
                    {
                    // InternalDialogParser.g:3552:4: ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) )
                    // InternalDialogParser.g:3553:5: () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) )
                    {
                    // InternalDialogParser.g:3553:5: ()
                    // InternalDialogParser.g:3554:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSadlExplicitValueAccess().getSadlUnaryExpressionAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalDialogParser.g:3560:5: ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) )
                    // InternalDialogParser.g:3561:6: ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) )
                    {
                    // InternalDialogParser.g:3561:6: ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) )
                    // InternalDialogParser.g:3562:7: (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not )
                    {
                    // InternalDialogParser.g:3562:7: (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not )
                    int alt81=2;
                    int LA81_0 = input.LA(1);

                    if ( (LA81_0==HyphenMinus) ) {
                        alt81=1;
                    }
                    else if ( (LA81_0==Not) ) {
                        alt81=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 81, 0, input);

                        throw nvae;
                    }
                    switch (alt81) {
                        case 1 :
                            // InternalDialogParser.g:3563:8: lv_operator_2_1= HyphenMinus
                            {
                            lv_operator_2_1=(Token)match(input,HyphenMinus,FOLLOW_83); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_operator_2_1, grammarAccess.getSadlExplicitValueAccess().getOperatorHyphenMinusKeyword_1_0_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlExplicitValueRule());
                              								}
                              								setWithLastConsumed(current, "operator", lv_operator_2_1, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3574:8: lv_operator_2_2= Not
                            {
                            lv_operator_2_2=(Token)match(input,Not,FOLLOW_83); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_operator_2_2, grammarAccess.getSadlExplicitValueAccess().getOperatorNotKeyword_1_0_1_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlExplicitValueRule());
                              								}
                              								setWithLastConsumed(current, "operator", lv_operator_2_2, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:3587:5: ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) )
                    // InternalDialogParser.g:3588:6: (lv_value_3_0= ruleSadlExplicitValueLiteral )
                    {
                    // InternalDialogParser.g:3588:6: (lv_value_3_0= ruleSadlExplicitValueLiteral )
                    // InternalDialogParser.g:3589:7: lv_value_3_0= ruleSadlExplicitValueLiteral
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlExplicitValueAccess().getValueSadlExplicitValueLiteralParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleSadlExplicitValueLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlExplicitValueRule());
                      							}
                      							set(
                      								current,
                      								"value",
                      								lv_value_3_0,
                      								"com.ge.research.sadl.SADL.SadlExplicitValueLiteral");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlExplicitValue"


    // $ANTLR start "entryRuleSadlExplicitValueLiteral"
    // InternalDialogParser.g:3612:1: entryRuleSadlExplicitValueLiteral returns [EObject current=null] : iv_ruleSadlExplicitValueLiteral= ruleSadlExplicitValueLiteral EOF ;
    public final EObject entryRuleSadlExplicitValueLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlExplicitValueLiteral = null;


        try {
            // InternalDialogParser.g:3612:65: (iv_ruleSadlExplicitValueLiteral= ruleSadlExplicitValueLiteral EOF )
            // InternalDialogParser.g:3613:2: iv_ruleSadlExplicitValueLiteral= ruleSadlExplicitValueLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlExplicitValueLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlExplicitValueLiteral=ruleSadlExplicitValueLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlExplicitValueLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlExplicitValueLiteral"


    // $ANTLR start "ruleSadlExplicitValueLiteral"
    // InternalDialogParser.g:3619:1: ruleSadlExplicitValueLiteral returns [EObject current=null] : (this_SadlResource_0= ruleSadlResource | ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? ) | ( () ( (lv_literalString_5_0= RULE_STRING ) ) ) | ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) ) | this_SadlValueList_9= ruleSadlValueList | ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) ) ) ;
    public final EObject ruleSadlExplicitValueLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_literalString_5_0=null;
        Token lv_truethy_7_0=null;
        Token otherlv_8=null;
        Token lv_term_11_1=null;
        Token lv_term_11_2=null;
        Token lv_term_11_3=null;
        EObject this_SadlResource_0 = null;

        AntlrDatatypeRuleToken lv_literalNumber_2_0 = null;

        AntlrDatatypeRuleToken lv_unit_3_0 = null;

        EObject this_SadlValueList_9 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3625:2: ( (this_SadlResource_0= ruleSadlResource | ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? ) | ( () ( (lv_literalString_5_0= RULE_STRING ) ) ) | ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) ) | this_SadlValueList_9= ruleSadlValueList | ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) ) ) )
            // InternalDialogParser.g:3626:2: (this_SadlResource_0= ruleSadlResource | ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? ) | ( () ( (lv_literalString_5_0= RULE_STRING ) ) ) | ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) ) | this_SadlValueList_9= ruleSadlValueList | ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) ) )
            {
            // InternalDialogParser.g:3626:2: (this_SadlResource_0= ruleSadlResource | ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? ) | ( () ( (lv_literalString_5_0= RULE_STRING ) ) ) | ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) ) | this_SadlValueList_9= ruleSadlValueList | ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) ) )
            int alt86=6;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt86=1;
                }
                break;
            case RULE_NUMBER:
                {
                alt86=2;
                }
                break;
            case RULE_STRING:
                {
                alt86=3;
                }
                break;
            case False:
            case True:
                {
                alt86=4;
                }
                break;
            case LeftSquareBracket:
                {
                alt86=5;
                }
                break;
            case Known:
            case PI:
            case E_1:
                {
                alt86=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 86, 0, input);

                throw nvae;
            }

            switch (alt86) {
                case 1 :
                    // InternalDialogParser.g:3627:3: this_SadlResource_0= ruleSadlResource
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getSadlResourceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlResource_0=ruleSadlResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlResource_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3636:3: ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? )
                    {
                    // InternalDialogParser.g:3636:3: ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? )
                    // InternalDialogParser.g:3637:4: () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )?
                    {
                    // InternalDialogParser.g:3637:4: ()
                    // InternalDialogParser.g:3638:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlNumberLiteralAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:3644:4: ( (lv_literalNumber_2_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:3645:5: (lv_literalNumber_2_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:3645:5: (lv_literalNumber_2_0= ruleAnyNumber )
                    // InternalDialogParser.g:3646:6: lv_literalNumber_2_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getLiteralNumberAnyNumberParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_84);
                    lv_literalNumber_2_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlExplicitValueLiteralRule());
                      						}
                      						set(
                      							current,
                      							"literalNumber",
                      							lv_literalNumber_2_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:3663:4: ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )?
                    int alt83=2;
                    alt83 = dfa83.predict(input);
                    switch (alt83) {
                        case 1 :
                            // InternalDialogParser.g:3664:5: ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT )
                            {
                            // InternalDialogParser.g:3665:5: (lv_unit_3_0= ruleUNIT )
                            // InternalDialogParser.g:3666:6: lv_unit_3_0= ruleUNIT
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getUnitUNITParserRuleCall_1_2_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_unit_3_0=ruleUNIT();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSadlExplicitValueLiteralRule());
                              						}
                              						set(
                              							current,
                              							"unit",
                              							lv_unit_3_0,
                              							"com.ge.research.sadl.SADL.UNIT");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:3685:3: ( () ( (lv_literalString_5_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:3685:3: ( () ( (lv_literalString_5_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:3686:4: () ( (lv_literalString_5_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:3686:4: ()
                    // InternalDialogParser.g:3687:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlStringLiteralAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:3693:4: ( (lv_literalString_5_0= RULE_STRING ) )
                    // InternalDialogParser.g:3694:5: (lv_literalString_5_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:3694:5: (lv_literalString_5_0= RULE_STRING )
                    // InternalDialogParser.g:3695:6: lv_literalString_5_0= RULE_STRING
                    {
                    lv_literalString_5_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_literalString_5_0, grammarAccess.getSadlExplicitValueLiteralAccess().getLiteralStringSTRINGTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"literalString",
                      							lv_literalString_5_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:3713:3: ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) )
                    {
                    // InternalDialogParser.g:3713:3: ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) )
                    // InternalDialogParser.g:3714:4: () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False )
                    {
                    // InternalDialogParser.g:3714:4: ()
                    // InternalDialogParser.g:3715:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlBooleanLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:3721:4: ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False )
                    int alt84=2;
                    int LA84_0 = input.LA(1);

                    if ( (LA84_0==True) ) {
                        alt84=1;
                    }
                    else if ( (LA84_0==False) ) {
                        alt84=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 84, 0, input);

                        throw nvae;
                    }
                    switch (alt84) {
                        case 1 :
                            // InternalDialogParser.g:3722:5: ( (lv_truethy_7_0= True ) )
                            {
                            // InternalDialogParser.g:3722:5: ( (lv_truethy_7_0= True ) )
                            // InternalDialogParser.g:3723:6: (lv_truethy_7_0= True )
                            {
                            // InternalDialogParser.g:3723:6: (lv_truethy_7_0= True )
                            // InternalDialogParser.g:3724:7: lv_truethy_7_0= True
                            {
                            lv_truethy_7_0=(Token)match(input,True,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_truethy_7_0, grammarAccess.getSadlExplicitValueLiteralAccess().getTruethyTrueKeyword_3_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                              							}
                              							setWithLastConsumed(current, "truethy", true, "true");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3737:5: otherlv_8= False
                            {
                            otherlv_8=(Token)match(input,False,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getSadlExplicitValueLiteralAccess().getFalseKeyword_3_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:3744:3: this_SadlValueList_9= ruleSadlValueList
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getSadlValueListParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlValueList_9=ruleSadlValueList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlValueList_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:3753:3: ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) )
                    {
                    // InternalDialogParser.g:3753:3: ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) )
                    // InternalDialogParser.g:3754:4: () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) )
                    {
                    // InternalDialogParser.g:3754:4: ()
                    // InternalDialogParser.g:3755:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlConstantLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:3761:4: ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) )
                    // InternalDialogParser.g:3762:5: ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) )
                    {
                    // InternalDialogParser.g:3762:5: ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) )
                    // InternalDialogParser.g:3763:6: (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known )
                    {
                    // InternalDialogParser.g:3763:6: (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known )
                    int alt85=3;
                    switch ( input.LA(1) ) {
                    case PI:
                        {
                        alt85=1;
                        }
                        break;
                    case E_1:
                        {
                        alt85=2;
                        }
                        break;
                    case Known:
                        {
                        alt85=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 85, 0, input);

                        throw nvae;
                    }

                    switch (alt85) {
                        case 1 :
                            // InternalDialogParser.g:3764:7: lv_term_11_1= PI
                            {
                            lv_term_11_1=(Token)match(input,PI,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_term_11_1, grammarAccess.getSadlExplicitValueLiteralAccess().getTermPIKeyword_5_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                              							}
                              							setWithLastConsumed(current, "term", lv_term_11_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3775:7: lv_term_11_2= E_1
                            {
                            lv_term_11_2=(Token)match(input,E_1,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_term_11_2, grammarAccess.getSadlExplicitValueLiteralAccess().getTermEKeyword_5_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                              							}
                              							setWithLastConsumed(current, "term", lv_term_11_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:3786:7: lv_term_11_3= Known
                            {
                            lv_term_11_3=(Token)match(input,Known,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_term_11_3, grammarAccess.getSadlExplicitValueLiteralAccess().getTermKnownKeyword_5_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                              							}
                              							setWithLastConsumed(current, "term", lv_term_11_3, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlExplicitValueLiteral"


    // $ANTLR start "entryRuleUNIT"
    // InternalDialogParser.g:3804:1: entryRuleUNIT returns [String current=null] : iv_ruleUNIT= ruleUNIT EOF ;
    public final String entryRuleUNIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUNIT = null;


        try {
            // InternalDialogParser.g:3804:44: (iv_ruleUNIT= ruleUNIT EOF )
            // InternalDialogParser.g:3805:2: iv_ruleUNIT= ruleUNIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUNITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUNIT=ruleUNIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUNIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUNIT"


    // $ANTLR start "ruleUNIT"
    // InternalDialogParser.g:3811:1: ruleUNIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleUNIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_ID_1=null;


        	enterRule();

        try {
            // InternalDialogParser.g:3817:2: ( (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) )
            // InternalDialogParser.g:3818:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            {
            // InternalDialogParser.g:3818:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==RULE_STRING) ) {
                alt87=1;
            }
            else if ( (LA87_0==RULE_ID) ) {
                alt87=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 87, 0, input);

                throw nvae;
            }
            switch (alt87) {
                case 1 :
                    // InternalDialogParser.g:3819:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getUNITAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3827:3: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_1, grammarAccess.getUNITAccess().getIDTerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUNIT"


    // $ANTLR start "entryRuleSadlValueList"
    // InternalDialogParser.g:3838:1: entryRuleSadlValueList returns [EObject current=null] : iv_ruleSadlValueList= ruleSadlValueList EOF ;
    public final EObject entryRuleSadlValueList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlValueList = null;


        try {
            // InternalDialogParser.g:3838:54: (iv_ruleSadlValueList= ruleSadlValueList EOF )
            // InternalDialogParser.g:3839:2: iv_ruleSadlValueList= ruleSadlValueList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlValueListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlValueList=ruleSadlValueList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlValueList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlValueList"


    // $ANTLR start "ruleSadlValueList"
    // InternalDialogParser.g:3845:1: ruleSadlValueList returns [EObject current=null] : ( () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket ) ;
    public final EObject ruleSadlValueList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_explicitValues_2_0 = null;

        EObject lv_explicitValues_4_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3851:2: ( ( () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket ) )
            // InternalDialogParser.g:3852:2: ( () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket )
            {
            // InternalDialogParser.g:3852:2: ( () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket )
            // InternalDialogParser.g:3853:3: () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket
            {
            // InternalDialogParser.g:3853:3: ()
            // InternalDialogParser.g:3854:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSadlValueListAccess().getSadlValueListAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_85); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSadlValueListAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalDialogParser.g:3864:3: ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==False||LA89_0==Known||LA89_0==True||LA89_0==Not||LA89_0==PI||LA89_0==HyphenMinus||LA89_0==LeftSquareBracket||LA89_0==E_1||LA89_0==RULE_NUMBER||(LA89_0>=RULE_ID && LA89_0<=RULE_STRING)) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalDialogParser.g:3865:4: ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )*
                    {
                    // InternalDialogParser.g:3865:4: ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:3866:5: (lv_explicitValues_2_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:3866:5: (lv_explicitValues_2_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:3867:6: lv_explicitValues_2_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlValueListAccess().getExplicitValuesSadlExplicitValueParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_86);
                    lv_explicitValues_2_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlValueListRule());
                      						}
                      						add(
                      							current,
                      							"explicitValues",
                      							lv_explicitValues_2_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:3884:4: (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )*
                    loop88:
                    do {
                        int alt88=2;
                        int LA88_0 = input.LA(1);

                        if ( (LA88_0==Comma) ) {
                            alt88=1;
                        }


                        switch (alt88) {
                    	case 1 :
                    	    // InternalDialogParser.g:3885:5: otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_71); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getSadlValueListAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:3889:5: ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) )
                    	    // InternalDialogParser.g:3890:6: (lv_explicitValues_4_0= ruleSadlExplicitValue )
                    	    {
                    	    // InternalDialogParser.g:3890:6: (lv_explicitValues_4_0= ruleSadlExplicitValue )
                    	    // InternalDialogParser.g:3891:7: lv_explicitValues_4_0= ruleSadlExplicitValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlValueListAccess().getExplicitValuesSadlExplicitValueParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_86);
                    	    lv_explicitValues_4_0=ruleSadlExplicitValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlValueListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"explicitValues",
                    	      								lv_explicitValues_4_0,
                    	      								"com.ge.research.sadl.SADL.SadlExplicitValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop88;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getSadlValueListAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlValueList"


    // $ANTLR start "entryRuleAnArticle"
    // InternalDialogParser.g:3918:1: entryRuleAnArticle returns [String current=null] : iv_ruleAnArticle= ruleAnArticle EOF ;
    public final String entryRuleAnArticle() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAnArticle = null;


        try {
            // InternalDialogParser.g:3918:49: (iv_ruleAnArticle= ruleAnArticle EOF )
            // InternalDialogParser.g:3919:2: iv_ruleAnArticle= ruleAnArticle EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnArticleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnArticle=ruleAnArticle();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnArticle.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnArticle"


    // $ANTLR start "ruleAnArticle"
    // InternalDialogParser.g:3925:1: ruleAnArticle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IndefiniteArticle_0= ruleIndefiniteArticle | this_DefiniteArticle_1= ruleDefiniteArticle ) ;
    public final AntlrDatatypeRuleToken ruleAnArticle() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IndefiniteArticle_0 = null;

        AntlrDatatypeRuleToken this_DefiniteArticle_1 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3931:2: ( (this_IndefiniteArticle_0= ruleIndefiniteArticle | this_DefiniteArticle_1= ruleDefiniteArticle ) )
            // InternalDialogParser.g:3932:2: (this_IndefiniteArticle_0= ruleIndefiniteArticle | this_DefiniteArticle_1= ruleDefiniteArticle )
            {
            // InternalDialogParser.g:3932:2: (this_IndefiniteArticle_0= ruleIndefiniteArticle | this_DefiniteArticle_1= ruleDefiniteArticle )
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==Another||LA90_0==Some||LA90_0==Any||LA90_0==An||LA90_0==An_1||LA90_0==A||LA90_0==A_1) ) {
                alt90=1;
            }
            else if ( (LA90_0==The||LA90_0==The_1) ) {
                alt90=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }
            switch (alt90) {
                case 1 :
                    // InternalDialogParser.g:3933:3: this_IndefiniteArticle_0= ruleIndefiniteArticle
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnArticleAccess().getIndefiniteArticleParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IndefiniteArticle_0=ruleIndefiniteArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_IndefiniteArticle_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3944:3: this_DefiniteArticle_1= ruleDefiniteArticle
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnArticleAccess().getDefiniteArticleParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DefiniteArticle_1=ruleDefiniteArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_DefiniteArticle_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnArticle"


    // $ANTLR start "entryRuleIndefiniteArticle"
    // InternalDialogParser.g:3958:1: entryRuleIndefiniteArticle returns [String current=null] : iv_ruleIndefiniteArticle= ruleIndefiniteArticle EOF ;
    public final String entryRuleIndefiniteArticle() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIndefiniteArticle = null;


        try {
            // InternalDialogParser.g:3958:57: (iv_ruleIndefiniteArticle= ruleIndefiniteArticle EOF )
            // InternalDialogParser.g:3959:2: iv_ruleIndefiniteArticle= ruleIndefiniteArticle EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIndefiniteArticleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIndefiniteArticle=ruleIndefiniteArticle();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIndefiniteArticle.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIndefiniteArticle"


    // $ANTLR start "ruleIndefiniteArticle"
    // InternalDialogParser.g:3965:1: ruleIndefiniteArticle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= A | kw= A_1 | kw= An | kw= An_1 | kw= Any | kw= Some | kw= Another ) ;
    public final AntlrDatatypeRuleToken ruleIndefiniteArticle() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:3971:2: ( (kw= A | kw= A_1 | kw= An | kw= An_1 | kw= Any | kw= Some | kw= Another ) )
            // InternalDialogParser.g:3972:2: (kw= A | kw= A_1 | kw= An | kw= An_1 | kw= Any | kw= Some | kw= Another )
            {
            // InternalDialogParser.g:3972:2: (kw= A | kw= A_1 | kw= An | kw= An_1 | kw= Any | kw= Some | kw= Another )
            int alt91=7;
            switch ( input.LA(1) ) {
            case A:
                {
                alt91=1;
                }
                break;
            case A_1:
                {
                alt91=2;
                }
                break;
            case An:
                {
                alt91=3;
                }
                break;
            case An_1:
                {
                alt91=4;
                }
                break;
            case Any:
                {
                alt91=5;
                }
                break;
            case Some:
                {
                alt91=6;
                }
                break;
            case Another:
                {
                alt91=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 91, 0, input);

                throw nvae;
            }

            switch (alt91) {
                case 1 :
                    // InternalDialogParser.g:3973:3: kw= A
                    {
                    kw=(Token)match(input,A,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3979:3: kw= A_1
                    {
                    kw=(Token)match(input,A_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:3985:3: kw= An
                    {
                    kw=(Token)match(input,An,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:3991:3: kw= An_1
                    {
                    kw=(Token)match(input,An_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:3997:3: kw= Any
                    {
                    kw=(Token)match(input,Any,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnyKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:4003:3: kw= Some
                    {
                    kw=(Token)match(input,Some,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getSomeKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:4009:3: kw= Another
                    {
                    kw=(Token)match(input,Another,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnotherKeyword_6());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIndefiniteArticle"


    // $ANTLR start "entryRuleDefiniteArticle"
    // InternalDialogParser.g:4018:1: entryRuleDefiniteArticle returns [String current=null] : iv_ruleDefiniteArticle= ruleDefiniteArticle EOF ;
    public final String entryRuleDefiniteArticle() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDefiniteArticle = null;


        try {
            // InternalDialogParser.g:4018:55: (iv_ruleDefiniteArticle= ruleDefiniteArticle EOF )
            // InternalDialogParser.g:4019:2: iv_ruleDefiniteArticle= ruleDefiniteArticle EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefiniteArticleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefiniteArticle=ruleDefiniteArticle();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefiniteArticle.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefiniteArticle"


    // $ANTLR start "ruleDefiniteArticle"
    // InternalDialogParser.g:4025:1: ruleDefiniteArticle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= The | kw= The_1 ) ;
    public final AntlrDatatypeRuleToken ruleDefiniteArticle() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:4031:2: ( (kw= The | kw= The_1 ) )
            // InternalDialogParser.g:4032:2: (kw= The | kw= The_1 )
            {
            // InternalDialogParser.g:4032:2: (kw= The | kw= The_1 )
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==The) ) {
                alt92=1;
            }
            else if ( (LA92_0==The_1) ) {
                alt92=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 92, 0, input);

                throw nvae;
            }
            switch (alt92) {
                case 1 :
                    // InternalDialogParser.g:4033:3: kw= The
                    {
                    kw=(Token)match(input,The,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDefiniteArticleAccess().getTheKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4039:3: kw= The_1
                    {
                    kw=(Token)match(input,The_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDefiniteArticleAccess().getTheKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefiniteArticle"


    // $ANTLR start "entryRuleOrdinal"
    // InternalDialogParser.g:4048:1: entryRuleOrdinal returns [String current=null] : iv_ruleOrdinal= ruleOrdinal EOF ;
    public final String entryRuleOrdinal() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOrdinal = null;


        try {
            // InternalDialogParser.g:4048:47: (iv_ruleOrdinal= ruleOrdinal EOF )
            // InternalDialogParser.g:4049:2: iv_ruleOrdinal= ruleOrdinal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrdinalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrdinal=ruleOrdinal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrdinal.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrdinal"


    // $ANTLR start "ruleOrdinal"
    // InternalDialogParser.g:4055:1: ruleOrdinal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= First | kw= Second | kw= Other | kw= Third | kw= Fourth | kw= Fifth | kw= Sixth | kw= Seventh | kw= Eighth | kw= Ninth | kw= Tenth ) ;
    public final AntlrDatatypeRuleToken ruleOrdinal() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:4061:2: ( (kw= First | kw= Second | kw= Other | kw= Third | kw= Fourth | kw= Fifth | kw= Sixth | kw= Seventh | kw= Eighth | kw= Ninth | kw= Tenth ) )
            // InternalDialogParser.g:4062:2: (kw= First | kw= Second | kw= Other | kw= Third | kw= Fourth | kw= Fifth | kw= Sixth | kw= Seventh | kw= Eighth | kw= Ninth | kw= Tenth )
            {
            // InternalDialogParser.g:4062:2: (kw= First | kw= Second | kw= Other | kw= Third | kw= Fourth | kw= Fifth | kw= Sixth | kw= Seventh | kw= Eighth | kw= Ninth | kw= Tenth )
            int alt93=11;
            switch ( input.LA(1) ) {
            case First:
                {
                alt93=1;
                }
                break;
            case Second:
                {
                alt93=2;
                }
                break;
            case Other:
                {
                alt93=3;
                }
                break;
            case Third:
                {
                alt93=4;
                }
                break;
            case Fourth:
                {
                alt93=5;
                }
                break;
            case Fifth:
                {
                alt93=6;
                }
                break;
            case Sixth:
                {
                alt93=7;
                }
                break;
            case Seventh:
                {
                alt93=8;
                }
                break;
            case Eighth:
                {
                alt93=9;
                }
                break;
            case Ninth:
                {
                alt93=10;
                }
                break;
            case Tenth:
                {
                alt93=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 93, 0, input);

                throw nvae;
            }

            switch (alt93) {
                case 1 :
                    // InternalDialogParser.g:4063:3: kw= First
                    {
                    kw=(Token)match(input,First,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getFirstKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4069:3: kw= Second
                    {
                    kw=(Token)match(input,Second,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getSecondKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:4075:3: kw= Other
                    {
                    kw=(Token)match(input,Other,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getOtherKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:4081:3: kw= Third
                    {
                    kw=(Token)match(input,Third,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getThirdKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:4087:3: kw= Fourth
                    {
                    kw=(Token)match(input,Fourth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getFourthKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:4093:3: kw= Fifth
                    {
                    kw=(Token)match(input,Fifth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getFifthKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:4099:3: kw= Sixth
                    {
                    kw=(Token)match(input,Sixth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getSixthKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:4105:3: kw= Seventh
                    {
                    kw=(Token)match(input,Seventh,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getSeventhKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalDialogParser.g:4111:3: kw= Eighth
                    {
                    kw=(Token)match(input,Eighth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getEighthKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalDialogParser.g:4117:3: kw= Ninth
                    {
                    kw=(Token)match(input,Ninth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getNinthKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalDialogParser.g:4123:3: kw= Tenth
                    {
                    kw=(Token)match(input,Tenth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getTenthKeyword_10());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrdinal"


    // $ANTLR start "entryRuleNamedStructureAnnotation"
    // InternalDialogParser.g:4132:1: entryRuleNamedStructureAnnotation returns [EObject current=null] : iv_ruleNamedStructureAnnotation= ruleNamedStructureAnnotation EOF ;
    public final EObject entryRuleNamedStructureAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedStructureAnnotation = null;


        try {
            // InternalDialogParser.g:4132:65: (iv_ruleNamedStructureAnnotation= ruleNamedStructureAnnotation EOF )
            // InternalDialogParser.g:4133:2: iv_ruleNamedStructureAnnotation= ruleNamedStructureAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedStructureAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedStructureAnnotation=ruleNamedStructureAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedStructureAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedStructureAnnotation"


    // $ANTLR start "ruleNamedStructureAnnotation"
    // InternalDialogParser.g:4139:1: ruleNamedStructureAnnotation returns [EObject current=null] : ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis ) ;
    public final EObject ruleNamedStructureAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_type_2_0 = null;

        EObject lv_contents_3_0 = null;

        EObject lv_contents_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4145:2: ( ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis ) )
            // InternalDialogParser.g:4146:2: ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis )
            {
            // InternalDialogParser.g:4146:2: ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis )
            // InternalDialogParser.g:4147:3: (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis
            {
            // InternalDialogParser.g:4147:3: (otherlv_0= Comma )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==Comma) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalDialogParser.g:4148:4: otherlv_0= Comma
                    {
                    otherlv_0=(Token)match(input,Comma,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getNamedStructureAnnotationAccess().getCommaKeyword_0());
                      			
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNamedStructureAnnotationAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalDialogParser.g:4157:3: ( (lv_type_2_0= ruleSadlResource ) )
            // InternalDialogParser.g:4158:4: (lv_type_2_0= ruleSadlResource )
            {
            // InternalDialogParser.g:4158:4: (lv_type_2_0= ruleSadlResource )
            // InternalDialogParser.g:4159:5: lv_type_2_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedStructureAnnotationAccess().getTypeSadlResourceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_71);
            lv_type_2_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedStructureAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:4176:3: ( (lv_contents_3_0= ruleSadlExplicitValue ) )
            // InternalDialogParser.g:4177:4: (lv_contents_3_0= ruleSadlExplicitValue )
            {
            // InternalDialogParser.g:4177:4: (lv_contents_3_0= ruleSadlExplicitValue )
            // InternalDialogParser.g:4178:5: lv_contents_3_0= ruleSadlExplicitValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedStructureAnnotationAccess().getContentsSadlExplicitValueParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_contents_3_0=ruleSadlExplicitValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedStructureAnnotationRule());
              					}
              					add(
              						current,
              						"contents",
              						lv_contents_3_0,
              						"com.ge.research.sadl.SADL.SadlExplicitValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:4195:3: (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==Comma) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalDialogParser.g:4196:4: otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) )
            	    {
            	    otherlv_4=(Token)match(input,Comma,FOLLOW_71); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getNamedStructureAnnotationAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalDialogParser.g:4200:4: ( (lv_contents_5_0= ruleSadlExplicitValue ) )
            	    // InternalDialogParser.g:4201:5: (lv_contents_5_0= ruleSadlExplicitValue )
            	    {
            	    // InternalDialogParser.g:4201:5: (lv_contents_5_0= ruleSadlExplicitValue )
            	    // InternalDialogParser.g:4202:6: lv_contents_5_0= ruleSadlExplicitValue
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNamedStructureAnnotationAccess().getContentsSadlExplicitValueParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_contents_5_0=ruleSadlExplicitValue();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNamedStructureAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"contents",
            	      							lv_contents_5_0,
            	      							"com.ge.research.sadl.SADL.SadlExplicitValue");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getNamedStructureAnnotationAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedStructureAnnotation"


    // $ANTLR start "entryRuleConstructExpression"
    // InternalDialogParser.g:4228:1: entryRuleConstructExpression returns [EObject current=null] : iv_ruleConstructExpression= ruleConstructExpression EOF ;
    public final EObject entryRuleConstructExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstructExpression = null;


        try {
            // InternalDialogParser.g:4228:60: (iv_ruleConstructExpression= ruleConstructExpression EOF )
            // InternalDialogParser.g:4229:2: iv_ruleConstructExpression= ruleConstructExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstructExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstructExpression=ruleConstructExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstructExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstructExpression"


    // $ANTLR start "ruleConstructExpression"
    // InternalDialogParser.g:4235:1: ruleConstructExpression returns [EObject current=null] : ( () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) ) ;
    public final EObject ruleConstructExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_subj_2_0 = null;

        EObject lv_pred_4_0 = null;

        EObject lv_obj_6_0 = null;

        EObject lv_whereExpression_8_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4241:2: ( ( () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) ) )
            // InternalDialogParser.g:4242:2: ( () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )
            {
            // InternalDialogParser.g:4242:2: ( () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )
            // InternalDialogParser.g:4243:3: () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) )
            {
            // InternalDialogParser.g:4243:3: ()
            // InternalDialogParser.g:4244:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConstructExpressionAccess().getConstructExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Construct,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConstructExpressionAccess().getConstructKeyword_1());
              		
            }
            // InternalDialogParser.g:4254:3: ( (lv_subj_2_0= ruleSadlResource ) )
            // InternalDialogParser.g:4255:4: (lv_subj_2_0= ruleSadlResource )
            {
            // InternalDialogParser.g:4255:4: (lv_subj_2_0= ruleSadlResource )
            // InternalDialogParser.g:4256:5: lv_subj_2_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstructExpressionAccess().getSubjSadlResourceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_87);
            lv_subj_2_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
              					}
              					set(
              						current,
              						"subj",
              						lv_subj_2_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:4273:3: (otherlv_3= Comma )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==Comma) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalDialogParser.g:4274:4: otherlv_3= Comma
                    {
                    otherlv_3=(Token)match(input,Comma,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getConstructExpressionAccess().getCommaKeyword_3());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:4279:3: ( (lv_pred_4_0= ruleSadlResource ) )
            // InternalDialogParser.g:4280:4: (lv_pred_4_0= ruleSadlResource )
            {
            // InternalDialogParser.g:4280:4: (lv_pred_4_0= ruleSadlResource )
            // InternalDialogParser.g:4281:5: lv_pred_4_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstructExpressionAccess().getPredSadlResourceParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_87);
            lv_pred_4_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
              					}
              					set(
              						current,
              						"pred",
              						lv_pred_4_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:4298:3: (otherlv_5= Comma )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==Comma) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalDialogParser.g:4299:4: otherlv_5= Comma
                    {
                    otherlv_5=(Token)match(input,Comma,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getConstructExpressionAccess().getCommaKeyword_5());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:4304:3: ( (lv_obj_6_0= ruleSadlResource ) )
            // InternalDialogParser.g:4305:4: (lv_obj_6_0= ruleSadlResource )
            {
            // InternalDialogParser.g:4305:4: (lv_obj_6_0= ruleSadlResource )
            // InternalDialogParser.g:4306:5: lv_obj_6_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstructExpressionAccess().getObjSadlResourceParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_88);
            lv_obj_6_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
              					}
              					set(
              						current,
              						"obj",
              						lv_obj_6_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,Where,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getConstructExpressionAccess().getWhereKeyword_7());
              		
            }
            // InternalDialogParser.g:4327:3: ( (lv_whereExpression_8_0= ruleExpression ) )
            // InternalDialogParser.g:4328:4: (lv_whereExpression_8_0= ruleExpression )
            {
            // InternalDialogParser.g:4328:4: (lv_whereExpression_8_0= ruleExpression )
            // InternalDialogParser.g:4329:5: lv_whereExpression_8_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstructExpressionAccess().getWhereExpressionExpressionParserRuleCall_8_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_whereExpression_8_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
              					}
              					set(
              						current,
              						"whereExpression",
              						lv_whereExpression_8_0,
              						"com.ge.research.sadl.SADL.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstructExpression"


    // $ANTLR start "entryRuleAskExpression"
    // InternalDialogParser.g:4350:1: entryRuleAskExpression returns [EObject current=null] : iv_ruleAskExpression= ruleAskExpression EOF ;
    public final EObject entryRuleAskExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAskExpression = null;


        try {
            // InternalDialogParser.g:4350:54: (iv_ruleAskExpression= ruleAskExpression EOF )
            // InternalDialogParser.g:4351:2: iv_ruleAskExpression= ruleAskExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAskExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAskExpression=ruleAskExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAskExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAskExpression"


    // $ANTLR start "ruleAskExpression"
    // InternalDialogParser.g:4357:1: ruleAskExpression returns [EObject current=null] : ( () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) ) ) ;
    public final EObject ruleAskExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_whereExpression_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4363:2: ( ( () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) ) ) )
            // InternalDialogParser.g:4364:2: ( () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) ) )
            {
            // InternalDialogParser.g:4364:2: ( () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) ) )
            // InternalDialogParser.g:4365:3: () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) )
            {
            // InternalDialogParser.g:4365:3: ()
            // InternalDialogParser.g:4366:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAskExpressionAccess().getAskExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Ask_1,FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAskExpressionAccess().getAskKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,Where,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAskExpressionAccess().getWhereKeyword_2());
              		
            }
            // InternalDialogParser.g:4380:3: ( (lv_whereExpression_3_0= ruleExpression ) )
            // InternalDialogParser.g:4381:4: (lv_whereExpression_3_0= ruleExpression )
            {
            // InternalDialogParser.g:4381:4: (lv_whereExpression_3_0= ruleExpression )
            // InternalDialogParser.g:4382:5: lv_whereExpression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAskExpressionAccess().getWhereExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_whereExpression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAskExpressionRule());
              					}
              					set(
              						current,
              						"whereExpression",
              						lv_whereExpression_3_0,
              						"com.ge.research.sadl.SADL.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAskExpression"


    // $ANTLR start "entryRuleUpdateExpression"
    // InternalDialogParser.g:4403:1: entryRuleUpdateExpression returns [EObject current=null] : iv_ruleUpdateExpression= ruleUpdateExpression EOF ;
    public final EObject entryRuleUpdateExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUpdateExpression = null;


        try {
            // InternalDialogParser.g:4403:57: (iv_ruleUpdateExpression= ruleUpdateExpression EOF )
            // InternalDialogParser.g:4404:2: iv_ruleUpdateExpression= ruleUpdateExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUpdateExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUpdateExpression=ruleUpdateExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUpdateExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUpdateExpression"


    // $ANTLR start "ruleUpdateExpression"
    // InternalDialogParser.g:4410:1: ruleUpdateExpression returns [EObject current=null] : ( () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )? ) ;
    public final EObject ruleUpdateExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_dData_2_0=null;
        Token otherlv_4=null;
        Token lv_iData_5_0=null;
        Token otherlv_7=null;
        EObject lv_deleteExpression_3_0 = null;

        EObject lv_insertExpression_6_0 = null;

        EObject lv_whereExpression_8_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4416:2: ( ( () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )? ) )
            // InternalDialogParser.g:4417:2: ( () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )? )
            {
            // InternalDialogParser.g:4417:2: ( () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )? )
            // InternalDialogParser.g:4418:3: () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )?
            {
            // InternalDialogParser.g:4418:3: ()
            // InternalDialogParser.g:4419:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getUpdateExpressionAccess().getUpdateExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:4425:3: (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==Delete) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // InternalDialogParser.g:4426:4: otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) )
                    {
                    otherlv_1=(Token)match(input,Delete,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getUpdateExpressionAccess().getDeleteKeyword_1_0());
                      			
                    }
                    // InternalDialogParser.g:4430:4: ( (lv_dData_2_0= Data ) )?
                    int alt98=2;
                    int LA98_0 = input.LA(1);

                    if ( (LA98_0==Data) ) {
                        alt98=1;
                    }
                    switch (alt98) {
                        case 1 :
                            // InternalDialogParser.g:4431:5: (lv_dData_2_0= Data )
                            {
                            // InternalDialogParser.g:4431:5: (lv_dData_2_0= Data )
                            // InternalDialogParser.g:4432:6: lv_dData_2_0= Data
                            {
                            lv_dData_2_0=(Token)match(input,Data,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_dData_2_0, grammarAccess.getUpdateExpressionAccess().getDDataDataKeyword_1_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUpdateExpressionRule());
                              						}
                              						setWithLastConsumed(current, "dData", lv_dData_2_0, "data");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:4444:4: ( (lv_deleteExpression_3_0= ruleExpression ) )
                    // InternalDialogParser.g:4445:5: (lv_deleteExpression_3_0= ruleExpression )
                    {
                    // InternalDialogParser.g:4445:5: (lv_deleteExpression_3_0= ruleExpression )
                    // InternalDialogParser.g:4446:6: lv_deleteExpression_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUpdateExpressionAccess().getDeleteExpressionExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_90);
                    lv_deleteExpression_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUpdateExpressionRule());
                      						}
                      						set(
                      							current,
                      							"deleteExpression",
                      							lv_deleteExpression_3_0,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:4464:3: (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==Insert) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalDialogParser.g:4465:4: otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) )
                    {
                    otherlv_4=(Token)match(input,Insert,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getUpdateExpressionAccess().getInsertKeyword_2_0());
                      			
                    }
                    // InternalDialogParser.g:4469:4: ( (lv_iData_5_0= Data ) )?
                    int alt100=2;
                    int LA100_0 = input.LA(1);

                    if ( (LA100_0==Data) ) {
                        alt100=1;
                    }
                    switch (alt100) {
                        case 1 :
                            // InternalDialogParser.g:4470:5: (lv_iData_5_0= Data )
                            {
                            // InternalDialogParser.g:4470:5: (lv_iData_5_0= Data )
                            // InternalDialogParser.g:4471:6: lv_iData_5_0= Data
                            {
                            lv_iData_5_0=(Token)match(input,Data,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_iData_5_0, grammarAccess.getUpdateExpressionAccess().getIDataDataKeyword_2_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUpdateExpressionRule());
                              						}
                              						setWithLastConsumed(current, "iData", lv_iData_5_0, "data");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:4483:4: ( (lv_insertExpression_6_0= ruleExpression ) )
                    // InternalDialogParser.g:4484:5: (lv_insertExpression_6_0= ruleExpression )
                    {
                    // InternalDialogParser.g:4484:5: (lv_insertExpression_6_0= ruleExpression )
                    // InternalDialogParser.g:4485:6: lv_insertExpression_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUpdateExpressionAccess().getInsertExpressionExpressionParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_91);
                    lv_insertExpression_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUpdateExpressionRule());
                      						}
                      						set(
                      							current,
                      							"insertExpression",
                      							lv_insertExpression_6_0,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:4503:3: (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==Where) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalDialogParser.g:4504:4: otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) )
                    {
                    otherlv_7=(Token)match(input,Where,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getUpdateExpressionAccess().getWhereKeyword_3_0());
                      			
                    }
                    // InternalDialogParser.g:4508:4: ( (lv_whereExpression_8_0= ruleExpression ) )
                    // InternalDialogParser.g:4509:5: (lv_whereExpression_8_0= ruleExpression )
                    {
                    // InternalDialogParser.g:4509:5: (lv_whereExpression_8_0= ruleExpression )
                    // InternalDialogParser.g:4510:6: lv_whereExpression_8_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUpdateExpressionAccess().getWhereExpressionExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_whereExpression_8_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUpdateExpressionRule());
                      						}
                      						set(
                      							current,
                      							"whereExpression",
                      							lv_whereExpression_8_0,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUpdateExpression"


    // $ANTLR start "entryRuleExpression"
    // InternalDialogParser.g:4532:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalDialogParser.g:4532:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalDialogParser.g:4533:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalDialogParser.g:4539:1: ruleExpression returns [EObject current=null] : this_SelectExpression_0= norm3_SelectExpression ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_SelectExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4545:2: (this_SelectExpression_0= norm3_SelectExpression )
            // InternalDialogParser.g:4546:2: this_SelectExpression_0= norm3_SelectExpression
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getSelectExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_SelectExpression_0=norm3_SelectExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SelectExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleNestedExpression"
    // InternalDialogParser.g:4557:1: entryRuleNestedExpression returns [EObject current=null] : iv_ruleNestedExpression= ruleNestedExpression EOF ;
    public final EObject entryRuleNestedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNestedExpression = null;


        try {
            // InternalDialogParser.g:4557:57: (iv_ruleNestedExpression= ruleNestedExpression EOF )
            // InternalDialogParser.g:4558:2: iv_ruleNestedExpression= ruleNestedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNestedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNestedExpression=ruleNestedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNestedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNestedExpression"


    // $ANTLR start "ruleNestedExpression"
    // InternalDialogParser.g:4564:1: ruleNestedExpression returns [EObject current=null] : this_SelectExpression_0= norm1_SelectExpression ;
    public final EObject ruleNestedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_SelectExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4570:2: (this_SelectExpression_0= norm1_SelectExpression )
            // InternalDialogParser.g:4571:2: this_SelectExpression_0= norm1_SelectExpression
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getNestedExpressionAccess().getSelectExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_SelectExpression_0=norm1_SelectExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SelectExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNestedExpression"


    // $ANTLR start "entryRuleSelectExpression"
    // InternalDialogParser.g:4582:1: entryRuleSelectExpression returns [EObject current=null] : iv_ruleSelectExpression= ruleSelectExpression EOF ;
    public final EObject entryRuleSelectExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelectExpression = null;


        try {
            // InternalDialogParser.g:4582:57: (iv_ruleSelectExpression= ruleSelectExpression EOF )
            // InternalDialogParser.g:4583:2: iv_ruleSelectExpression= ruleSelectExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelectExpression=ruleSelectExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelectExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelectExpression"


    // $ANTLR start "ruleSelectExpression"
    // InternalDialogParser.g:4589:1: ruleSelectExpression returns [EObject current=null] : ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= ruleExpressionParameterized ) ;
    public final EObject ruleSelectExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_distinct_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_orderby_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_selectFrom_4_0 = null;

        EObject lv_selectFrom_6_0 = null;

        EObject lv_whereExpression_8_0 = null;

        EObject lv_orderList_11_0 = null;

        EObject lv_orderList_13_0 = null;

        EObject this_ExpressionParameterized_14 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4595:2: ( ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= ruleExpressionParameterized ) )
            // InternalDialogParser.g:4596:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= ruleExpressionParameterized )
            {
            // InternalDialogParser.g:4596:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= ruleExpressionParameterized )
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==Select) && (synpred3_InternalDialogParser())) {
                alt110=1;
            }
            else if ( (LA110_0==Another||LA110_0==Element||LA110_0==Sublist||LA110_0==Length||(LA110_0>=Count && LA110_0<=False)||LA110_0==First||(LA110_0>=Index && LA110_0<=Known)||LA110_0==There||LA110_0==Value||LA110_0==None||LA110_0==Last||LA110_0==Only||LA110_0==Some||(LA110_0>=True && LA110_0<=Type)||LA110_0==The||LA110_0==Any||LA110_0==Not||LA110_0==The_1||LA110_0==HyphenMinusHyphenMinus||(LA110_0>=An && LA110_0<=An_1)||LA110_0==ExclamationMark||LA110_0==LeftParenthesis||LA110_0==HyphenMinus||LA110_0==A||LA110_0==LeftSquareBracket||(LA110_0>=A_1 && LA110_0<=LeftCurlyBracket)||LA110_0==RULE_NUMBER||(LA110_0>=RULE_ID && LA110_0<=RULE_STRING)) ) {
                alt110=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;
            }
            switch (alt110) {
                case 1 :
                    // InternalDialogParser.g:4597:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    {
                    // InternalDialogParser.g:4597:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    // InternalDialogParser.g:4598:4: ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    {
                    // InternalDialogParser.g:4599:4: ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    // InternalDialogParser.g:4600:5: () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    {
                    // InternalDialogParser.g:4600:5: ()
                    // InternalDialogParser.g:4601:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,Select,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
                      				
                    }
                    // InternalDialogParser.g:4611:5: ( (lv_distinct_2_0= Distinct ) )?
                    int alt103=2;
                    int LA103_0 = input.LA(1);

                    if ( (LA103_0==Distinct) ) {
                        alt103=1;
                    }
                    switch (alt103) {
                        case 1 :
                            // InternalDialogParser.g:4612:6: (lv_distinct_2_0= Distinct )
                            {
                            // InternalDialogParser.g:4612:6: (lv_distinct_2_0= Distinct )
                            // InternalDialogParser.g:4613:7: lv_distinct_2_0= Distinct
                            {
                            lv_distinct_2_0=(Token)match(input,Distinct,FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSelectExpressionRule());
                              							}
                              							setWithLastConsumed(current, "distinct", true, "distinct");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:4625:5: (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) )
                    int alt106=2;
                    int LA106_0 = input.LA(1);

                    if ( (LA106_0==Asterisk) ) {
                        alt106=1;
                    }
                    else if ( ((LA106_0>=RULE_ID && LA106_0<=RULE_QNAME_TERMINAL)) ) {
                        alt106=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 106, 0, input);

                        throw nvae;
                    }
                    switch (alt106) {
                        case 1 :
                            // InternalDialogParser.g:4626:6: otherlv_3= Asterisk
                            {
                            otherlv_3=(Token)match(input,Asterisk,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:4631:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            {
                            // InternalDialogParser.g:4631:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            // InternalDialogParser.g:4632:7: ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            {
                            // InternalDialogParser.g:4632:7: ( (lv_selectFrom_4_0= ruleSadlResource ) )
                            // InternalDialogParser.g:4633:8: (lv_selectFrom_4_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:4633:8: (lv_selectFrom_4_0= ruleSadlResource )
                            // InternalDialogParser.g:4634:9: lv_selectFrom_4_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
                              								
                            }
                            pushFollow(FOLLOW_94);
                            lv_selectFrom_4_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              									}
                              									add(
                              										current,
                              										"selectFrom",
                              										lv_selectFrom_4_0,
                              										"com.ge.research.sadl.SADL.SadlResource");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalDialogParser.g:4651:7: ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            loop105:
                            do {
                                int alt105=2;
                                int LA105_0 = input.LA(1);

                                if ( (LA105_0==Comma||(LA105_0>=RULE_ID && LA105_0<=RULE_QNAME_TERMINAL)) ) {
                                    alt105=1;
                                }


                                switch (alt105) {
                            	case 1 :
                            	    // InternalDialogParser.g:4652:8: (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    {
                            	    // InternalDialogParser.g:4652:8: (otherlv_5= Comma )?
                            	    int alt104=2;
                            	    int LA104_0 = input.LA(1);

                            	    if ( (LA104_0==Comma) ) {
                            	        alt104=1;
                            	    }
                            	    switch (alt104) {
                            	        case 1 :
                            	            // InternalDialogParser.g:4653:9: otherlv_5= Comma
                            	            {
                            	            otherlv_5=(Token)match(input,Comma,FOLLOW_6); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:4658:8: ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:4659:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:4659:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:4660:10: lv_selectFrom_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_94);
                            	    lv_selectFrom_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"selectFrom",
                            	      											lv_selectFrom_6_0,
                            	      											"com.ge.research.sadl.SADL.SadlResource");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop105;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,Where,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
                      				
                    }
                    // InternalDialogParser.g:4684:5: ( (lv_whereExpression_8_0= ruleExpressionParameterized ) )
                    // InternalDialogParser.g:4685:6: (lv_whereExpression_8_0= ruleExpressionParameterized )
                    {
                    // InternalDialogParser.g:4685:6: (lv_whereExpression_8_0= ruleExpressionParameterized )
                    // InternalDialogParser.g:4686:7: lv_whereExpression_8_0= ruleExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
                      						
                    }
                    pushFollow(FOLLOW_96);
                    lv_whereExpression_8_0=ruleExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                      							}
                      							set(
                      								current,
                      								"whereExpression",
                      								lv_whereExpression_8_0,
                      								"com.ge.research.sadl.SADL.ExpressionParameterized");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:4703:5: ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( (LA109_0==Order) ) {
                        alt109=1;
                    }
                    switch (alt109) {
                        case 1 :
                            // InternalDialogParser.g:4704:6: ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            {
                            // InternalDialogParser.g:4704:6: ( (lv_orderby_9_0= Order ) )
                            // InternalDialogParser.g:4705:7: (lv_orderby_9_0= Order )
                            {
                            // InternalDialogParser.g:4705:7: (lv_orderby_9_0= Order )
                            // InternalDialogParser.g:4706:8: lv_orderby_9_0= Order
                            {
                            lv_orderby_9_0=(Token)match(input,Order,FOLLOW_56); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSelectExpressionRule());
                              								}
                              								setWithLastConsumed(current, "orderby", lv_orderby_9_0, "order");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,By,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
                              					
                            }
                            // InternalDialogParser.g:4722:6: ( (lv_orderList_11_0= ruleOrderElement ) )
                            // InternalDialogParser.g:4723:7: (lv_orderList_11_0= ruleOrderElement )
                            {
                            // InternalDialogParser.g:4723:7: (lv_orderList_11_0= ruleOrderElement )
                            // InternalDialogParser.g:4724:8: lv_orderList_11_0= ruleOrderElement
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
                              							
                            }
                            pushFollow(FOLLOW_98);
                            lv_orderList_11_0=ruleOrderElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              								}
                              								add(
                              									current,
                              									"orderList",
                              									lv_orderList_11_0,
                              									"com.ge.research.sadl.SADL.OrderElement");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:4741:6: ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            loop108:
                            do {
                                int alt108=2;
                                int LA108_0 = input.LA(1);

                                if ( (LA108_0==Comma) && (synpred4_InternalDialogParser())) {
                                    alt108=1;
                                }
                                else if ( (LA108_0==Asc) && (synpred4_InternalDialogParser())) {
                                    alt108=1;
                                }
                                else if ( (LA108_0==Desc) && (synpred4_InternalDialogParser())) {
                                    alt108=1;
                                }
                                else if ( (LA108_0==RULE_QNAME_TERMINAL) && (synpred4_InternalDialogParser())) {
                                    alt108=1;
                                }
                                else if ( (LA108_0==RULE_ID) && (synpred4_InternalDialogParser())) {
                                    alt108=1;
                                }


                                switch (alt108) {
                            	case 1 :
                            	    // InternalDialogParser.g:4742:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    {
                            	    // InternalDialogParser.g:4743:7: ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    // InternalDialogParser.g:4744:8: (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    {
                            	    // InternalDialogParser.g:4744:8: (otherlv_12= Comma )?
                            	    int alt107=2;
                            	    int LA107_0 = input.LA(1);

                            	    if ( (LA107_0==Comma) ) {
                            	        alt107=1;
                            	    }
                            	    switch (alt107) {
                            	        case 1 :
                            	            // InternalDialogParser.g:4745:9: otherlv_12= Comma
                            	            {
                            	            otherlv_12=(Token)match(input,Comma,FOLLOW_97); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:4750:8: ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    // InternalDialogParser.g:4751:9: (lv_orderList_13_0= ruleOrderElement )
                            	    {
                            	    // InternalDialogParser.g:4751:9: (lv_orderList_13_0= ruleOrderElement )
                            	    // InternalDialogParser.g:4752:10: lv_orderList_13_0= ruleOrderElement
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_98);
                            	    lv_orderList_13_0=ruleOrderElement();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"orderList",
                            	      											lv_orderList_13_0,
                            	      											"com.ge.research.sadl.SADL.OrderElement");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop108;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4775:3: this_ExpressionParameterized_14= ruleExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionParameterized_14=ruleExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionParameterized_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelectExpression"


    // $ANTLR start "norm1_SelectExpression"
    // InternalDialogParser.g:4788:1: norm1_SelectExpression returns [EObject current=null] : ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm1_ExpressionParameterized ) ;
    public final EObject norm1_SelectExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_distinct_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_orderby_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_selectFrom_4_0 = null;

        EObject lv_selectFrom_6_0 = null;

        EObject lv_whereExpression_8_0 = null;

        EObject lv_orderList_11_0 = null;

        EObject lv_orderList_13_0 = null;

        EObject this_ExpressionParameterized_14 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4794:2: ( ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm1_ExpressionParameterized ) )
            // InternalDialogParser.g:4795:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm1_ExpressionParameterized )
            {
            // InternalDialogParser.g:4795:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm1_ExpressionParameterized )
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==Select) && (synpred5_InternalDialogParser())) {
                alt118=1;
            }
            else if ( (LA118_0==Another||LA118_0==Element||LA118_0==Sublist||LA118_0==Length||(LA118_0>=Count && LA118_0<=False)||LA118_0==First||(LA118_0>=Index && LA118_0<=Known)||LA118_0==There||LA118_0==Value||LA118_0==None||LA118_0==Last||LA118_0==Only||LA118_0==Some||(LA118_0>=True && LA118_0<=Type)||LA118_0==The||LA118_0==Any||LA118_0==Not||LA118_0==The_1||LA118_0==HyphenMinusHyphenMinus||(LA118_0>=An && LA118_0<=An_1)||LA118_0==ExclamationMark||LA118_0==LeftParenthesis||LA118_0==HyphenMinus||LA118_0==A||LA118_0==LeftSquareBracket||(LA118_0>=A_1 && LA118_0<=LeftCurlyBracket)||LA118_0==RULE_NUMBER||(LA118_0>=RULE_ID && LA118_0<=RULE_STRING)) ) {
                alt118=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 118, 0, input);

                throw nvae;
            }
            switch (alt118) {
                case 1 :
                    // InternalDialogParser.g:4796:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    {
                    // InternalDialogParser.g:4796:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    // InternalDialogParser.g:4797:4: ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    {
                    // InternalDialogParser.g:4798:4: ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    // InternalDialogParser.g:4799:5: () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    {
                    // InternalDialogParser.g:4799:5: ()
                    // InternalDialogParser.g:4800:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,Select,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
                      				
                    }
                    // InternalDialogParser.g:4810:5: ( (lv_distinct_2_0= Distinct ) )?
                    int alt111=2;
                    int LA111_0 = input.LA(1);

                    if ( (LA111_0==Distinct) ) {
                        alt111=1;
                    }
                    switch (alt111) {
                        case 1 :
                            // InternalDialogParser.g:4811:6: (lv_distinct_2_0= Distinct )
                            {
                            // InternalDialogParser.g:4811:6: (lv_distinct_2_0= Distinct )
                            // InternalDialogParser.g:4812:7: lv_distinct_2_0= Distinct
                            {
                            lv_distinct_2_0=(Token)match(input,Distinct,FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSelectExpressionRule());
                              							}
                              							setWithLastConsumed(current, "distinct", true, "distinct");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:4824:5: (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) )
                    int alt114=2;
                    int LA114_0 = input.LA(1);

                    if ( (LA114_0==Asterisk) ) {
                        alt114=1;
                    }
                    else if ( ((LA114_0>=RULE_ID && LA114_0<=RULE_QNAME_TERMINAL)) ) {
                        alt114=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 114, 0, input);

                        throw nvae;
                    }
                    switch (alt114) {
                        case 1 :
                            // InternalDialogParser.g:4825:6: otherlv_3= Asterisk
                            {
                            otherlv_3=(Token)match(input,Asterisk,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:4830:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            {
                            // InternalDialogParser.g:4830:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            // InternalDialogParser.g:4831:7: ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            {
                            // InternalDialogParser.g:4831:7: ( (lv_selectFrom_4_0= ruleSadlResource ) )
                            // InternalDialogParser.g:4832:8: (lv_selectFrom_4_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:4832:8: (lv_selectFrom_4_0= ruleSadlResource )
                            // InternalDialogParser.g:4833:9: lv_selectFrom_4_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
                              								
                            }
                            pushFollow(FOLLOW_94);
                            lv_selectFrom_4_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              									}
                              									add(
                              										current,
                              										"selectFrom",
                              										lv_selectFrom_4_0,
                              										"com.ge.research.sadl.SADL.SadlResource");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalDialogParser.g:4850:7: ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            loop113:
                            do {
                                int alt113=2;
                                int LA113_0 = input.LA(1);

                                if ( (LA113_0==Comma||(LA113_0>=RULE_ID && LA113_0<=RULE_QNAME_TERMINAL)) ) {
                                    alt113=1;
                                }


                                switch (alt113) {
                            	case 1 :
                            	    // InternalDialogParser.g:4851:8: (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    {
                            	    // InternalDialogParser.g:4851:8: (otherlv_5= Comma )?
                            	    int alt112=2;
                            	    int LA112_0 = input.LA(1);

                            	    if ( (LA112_0==Comma) ) {
                            	        alt112=1;
                            	    }
                            	    switch (alt112) {
                            	        case 1 :
                            	            // InternalDialogParser.g:4852:9: otherlv_5= Comma
                            	            {
                            	            otherlv_5=(Token)match(input,Comma,FOLLOW_6); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:4857:8: ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:4858:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:4858:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:4859:10: lv_selectFrom_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_94);
                            	    lv_selectFrom_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"selectFrom",
                            	      											lv_selectFrom_6_0,
                            	      											"com.ge.research.sadl.SADL.SadlResource");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop113;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,Where,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
                      				
                    }
                    // InternalDialogParser.g:4883:5: ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) )
                    // InternalDialogParser.g:4884:6: (lv_whereExpression_8_0= norm1_ExpressionParameterized )
                    {
                    // InternalDialogParser.g:4884:6: (lv_whereExpression_8_0= norm1_ExpressionParameterized )
                    // InternalDialogParser.g:4885:7: lv_whereExpression_8_0= norm1_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
                      						
                    }
                    pushFollow(FOLLOW_96);
                    lv_whereExpression_8_0=norm1_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                      							}
                      							set(
                      								current,
                      								"whereExpression",
                      								lv_whereExpression_8_0,
                      								"com.ge.research.sadl.SADL.ExpressionParameterized");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:4902:5: ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    int alt117=2;
                    int LA117_0 = input.LA(1);

                    if ( (LA117_0==Order) ) {
                        alt117=1;
                    }
                    switch (alt117) {
                        case 1 :
                            // InternalDialogParser.g:4903:6: ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            {
                            // InternalDialogParser.g:4903:6: ( (lv_orderby_9_0= Order ) )
                            // InternalDialogParser.g:4904:7: (lv_orderby_9_0= Order )
                            {
                            // InternalDialogParser.g:4904:7: (lv_orderby_9_0= Order )
                            // InternalDialogParser.g:4905:8: lv_orderby_9_0= Order
                            {
                            lv_orderby_9_0=(Token)match(input,Order,FOLLOW_56); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSelectExpressionRule());
                              								}
                              								setWithLastConsumed(current, "orderby", lv_orderby_9_0, "order");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,By,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
                              					
                            }
                            // InternalDialogParser.g:4921:6: ( (lv_orderList_11_0= ruleOrderElement ) )
                            // InternalDialogParser.g:4922:7: (lv_orderList_11_0= ruleOrderElement )
                            {
                            // InternalDialogParser.g:4922:7: (lv_orderList_11_0= ruleOrderElement )
                            // InternalDialogParser.g:4923:8: lv_orderList_11_0= ruleOrderElement
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
                              							
                            }
                            pushFollow(FOLLOW_98);
                            lv_orderList_11_0=ruleOrderElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              								}
                              								add(
                              									current,
                              									"orderList",
                              									lv_orderList_11_0,
                              									"com.ge.research.sadl.SADL.OrderElement");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:4940:6: ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            loop116:
                            do {
                                int alt116=2;
                                int LA116_0 = input.LA(1);

                                if ( (LA116_0==Comma) ) {
                                    int LA116_2 = input.LA(2);

                                    if ( (LA116_2==RULE_QNAME_TERMINAL) ) {
                                        int LA116_7 = input.LA(3);

                                        if ( (synpred6_InternalDialogParser()) ) {
                                            alt116=1;
                                        }


                                    }
                                    else if ( (LA116_2==RULE_ID) ) {
                                        int LA116_8 = input.LA(3);

                                        if ( (synpred6_InternalDialogParser()) ) {
                                            alt116=1;
                                        }


                                    }
                                    else if ( (LA116_2==Asc) && (synpred6_InternalDialogParser())) {
                                        alt116=1;
                                    }
                                    else if ( (LA116_2==Desc) && (synpred6_InternalDialogParser())) {
                                        alt116=1;
                                    }


                                }
                                else if ( (LA116_0==Asc) && (synpred6_InternalDialogParser())) {
                                    alt116=1;
                                }
                                else if ( (LA116_0==Desc) && (synpred6_InternalDialogParser())) {
                                    alt116=1;
                                }
                                else if ( (LA116_0==RULE_QNAME_TERMINAL) && (synpred6_InternalDialogParser())) {
                                    alt116=1;
                                }
                                else if ( (LA116_0==RULE_ID) && (synpred6_InternalDialogParser())) {
                                    alt116=1;
                                }


                                switch (alt116) {
                            	case 1 :
                            	    // InternalDialogParser.g:4941:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    {
                            	    // InternalDialogParser.g:4942:7: ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    // InternalDialogParser.g:4943:8: (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    {
                            	    // InternalDialogParser.g:4943:8: (otherlv_12= Comma )?
                            	    int alt115=2;
                            	    int LA115_0 = input.LA(1);

                            	    if ( (LA115_0==Comma) ) {
                            	        alt115=1;
                            	    }
                            	    switch (alt115) {
                            	        case 1 :
                            	            // InternalDialogParser.g:4944:9: otherlv_12= Comma
                            	            {
                            	            otherlv_12=(Token)match(input,Comma,FOLLOW_97); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:4949:8: ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    // InternalDialogParser.g:4950:9: (lv_orderList_13_0= ruleOrderElement )
                            	    {
                            	    // InternalDialogParser.g:4950:9: (lv_orderList_13_0= ruleOrderElement )
                            	    // InternalDialogParser.g:4951:10: lv_orderList_13_0= ruleOrderElement
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_98);
                            	    lv_orderList_13_0=ruleOrderElement();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"orderList",
                            	      											lv_orderList_13_0,
                            	      											"com.ge.research.sadl.SADL.OrderElement");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop116;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4974:3: this_ExpressionParameterized_14= norm1_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionParameterized_14=norm1_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionParameterized_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_SelectExpression"


    // $ANTLR start "norm2_SelectExpression"
    // InternalDialogParser.g:4987:1: norm2_SelectExpression returns [EObject current=null] : ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm2_ExpressionParameterized ) ;
    public final EObject norm2_SelectExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_distinct_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_orderby_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_selectFrom_4_0 = null;

        EObject lv_selectFrom_6_0 = null;

        EObject lv_whereExpression_8_0 = null;

        EObject lv_orderList_11_0 = null;

        EObject lv_orderList_13_0 = null;

        EObject this_ExpressionParameterized_14 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4993:2: ( ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm2_ExpressionParameterized ) )
            // InternalDialogParser.g:4994:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm2_ExpressionParameterized )
            {
            // InternalDialogParser.g:4994:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm2_ExpressionParameterized )
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==Select) && (synpred7_InternalDialogParser())) {
                alt126=1;
            }
            else if ( (LA126_0==Another||LA126_0==Element||LA126_0==Sublist||LA126_0==Length||(LA126_0>=Count && LA126_0<=False)||LA126_0==First||(LA126_0>=Index && LA126_0<=Known)||LA126_0==There||LA126_0==Value||LA126_0==None||LA126_0==Last||LA126_0==Only||LA126_0==Some||(LA126_0>=True && LA126_0<=Type)||LA126_0==The||LA126_0==Any||LA126_0==Not||LA126_0==The_1||LA126_0==HyphenMinusHyphenMinus||(LA126_0>=An && LA126_0<=An_1)||LA126_0==ExclamationMark||LA126_0==LeftParenthesis||LA126_0==HyphenMinus||LA126_0==A||LA126_0==LeftSquareBracket||(LA126_0>=A_1 && LA126_0<=LeftCurlyBracket)||LA126_0==RULE_NUMBER||(LA126_0>=RULE_ID && LA126_0<=RULE_STRING)) ) {
                alt126=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 126, 0, input);

                throw nvae;
            }
            switch (alt126) {
                case 1 :
                    // InternalDialogParser.g:4995:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    {
                    // InternalDialogParser.g:4995:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    // InternalDialogParser.g:4996:4: ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    {
                    // InternalDialogParser.g:4997:4: ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    // InternalDialogParser.g:4998:5: () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    {
                    // InternalDialogParser.g:4998:5: ()
                    // InternalDialogParser.g:4999:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,Select,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
                      				
                    }
                    // InternalDialogParser.g:5009:5: ( (lv_distinct_2_0= Distinct ) )?
                    int alt119=2;
                    int LA119_0 = input.LA(1);

                    if ( (LA119_0==Distinct) ) {
                        alt119=1;
                    }
                    switch (alt119) {
                        case 1 :
                            // InternalDialogParser.g:5010:6: (lv_distinct_2_0= Distinct )
                            {
                            // InternalDialogParser.g:5010:6: (lv_distinct_2_0= Distinct )
                            // InternalDialogParser.g:5011:7: lv_distinct_2_0= Distinct
                            {
                            lv_distinct_2_0=(Token)match(input,Distinct,FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSelectExpressionRule());
                              							}
                              							setWithLastConsumed(current, "distinct", true, "distinct");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:5023:5: (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) )
                    int alt122=2;
                    int LA122_0 = input.LA(1);

                    if ( (LA122_0==Asterisk) ) {
                        alt122=1;
                    }
                    else if ( ((LA122_0>=RULE_ID && LA122_0<=RULE_QNAME_TERMINAL)) ) {
                        alt122=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 122, 0, input);

                        throw nvae;
                    }
                    switch (alt122) {
                        case 1 :
                            // InternalDialogParser.g:5024:6: otherlv_3= Asterisk
                            {
                            otherlv_3=(Token)match(input,Asterisk,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:5029:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            {
                            // InternalDialogParser.g:5029:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            // InternalDialogParser.g:5030:7: ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            {
                            // InternalDialogParser.g:5030:7: ( (lv_selectFrom_4_0= ruleSadlResource ) )
                            // InternalDialogParser.g:5031:8: (lv_selectFrom_4_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:5031:8: (lv_selectFrom_4_0= ruleSadlResource )
                            // InternalDialogParser.g:5032:9: lv_selectFrom_4_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
                              								
                            }
                            pushFollow(FOLLOW_94);
                            lv_selectFrom_4_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              									}
                              									add(
                              										current,
                              										"selectFrom",
                              										lv_selectFrom_4_0,
                              										"com.ge.research.sadl.SADL.SadlResource");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalDialogParser.g:5049:7: ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            loop121:
                            do {
                                int alt121=2;
                                int LA121_0 = input.LA(1);

                                if ( (LA121_0==Comma||(LA121_0>=RULE_ID && LA121_0<=RULE_QNAME_TERMINAL)) ) {
                                    alt121=1;
                                }


                                switch (alt121) {
                            	case 1 :
                            	    // InternalDialogParser.g:5050:8: (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    {
                            	    // InternalDialogParser.g:5050:8: (otherlv_5= Comma )?
                            	    int alt120=2;
                            	    int LA120_0 = input.LA(1);

                            	    if ( (LA120_0==Comma) ) {
                            	        alt120=1;
                            	    }
                            	    switch (alt120) {
                            	        case 1 :
                            	            // InternalDialogParser.g:5051:9: otherlv_5= Comma
                            	            {
                            	            otherlv_5=(Token)match(input,Comma,FOLLOW_6); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:5056:8: ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:5057:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:5057:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:5058:10: lv_selectFrom_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_94);
                            	    lv_selectFrom_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"selectFrom",
                            	      											lv_selectFrom_6_0,
                            	      											"com.ge.research.sadl.SADL.SadlResource");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop121;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,Where,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
                      				
                    }
                    // InternalDialogParser.g:5082:5: ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) )
                    // InternalDialogParser.g:5083:6: (lv_whereExpression_8_0= norm2_ExpressionParameterized )
                    {
                    // InternalDialogParser.g:5083:6: (lv_whereExpression_8_0= norm2_ExpressionParameterized )
                    // InternalDialogParser.g:5084:7: lv_whereExpression_8_0= norm2_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
                      						
                    }
                    pushFollow(FOLLOW_96);
                    lv_whereExpression_8_0=norm2_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                      							}
                      							set(
                      								current,
                      								"whereExpression",
                      								lv_whereExpression_8_0,
                      								"com.ge.research.sadl.SADL.ExpressionParameterized");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:5101:5: ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    int alt125=2;
                    int LA125_0 = input.LA(1);

                    if ( (LA125_0==Order) ) {
                        alt125=1;
                    }
                    switch (alt125) {
                        case 1 :
                            // InternalDialogParser.g:5102:6: ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            {
                            // InternalDialogParser.g:5102:6: ( (lv_orderby_9_0= Order ) )
                            // InternalDialogParser.g:5103:7: (lv_orderby_9_0= Order )
                            {
                            // InternalDialogParser.g:5103:7: (lv_orderby_9_0= Order )
                            // InternalDialogParser.g:5104:8: lv_orderby_9_0= Order
                            {
                            lv_orderby_9_0=(Token)match(input,Order,FOLLOW_56); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSelectExpressionRule());
                              								}
                              								setWithLastConsumed(current, "orderby", lv_orderby_9_0, "order");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,By,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
                              					
                            }
                            // InternalDialogParser.g:5120:6: ( (lv_orderList_11_0= ruleOrderElement ) )
                            // InternalDialogParser.g:5121:7: (lv_orderList_11_0= ruleOrderElement )
                            {
                            // InternalDialogParser.g:5121:7: (lv_orderList_11_0= ruleOrderElement )
                            // InternalDialogParser.g:5122:8: lv_orderList_11_0= ruleOrderElement
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
                              							
                            }
                            pushFollow(FOLLOW_98);
                            lv_orderList_11_0=ruleOrderElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              								}
                              								add(
                              									current,
                              									"orderList",
                              									lv_orderList_11_0,
                              									"com.ge.research.sadl.SADL.OrderElement");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:5139:6: ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            loop124:
                            do {
                                int alt124=2;
                                int LA124_0 = input.LA(1);

                                if ( (LA124_0==Comma) && (synpred8_InternalDialogParser())) {
                                    alt124=1;
                                }
                                else if ( (LA124_0==Asc) && (synpred8_InternalDialogParser())) {
                                    alt124=1;
                                }
                                else if ( (LA124_0==Desc) && (synpred8_InternalDialogParser())) {
                                    alt124=1;
                                }
                                else if ( (LA124_0==RULE_QNAME_TERMINAL) && (synpred8_InternalDialogParser())) {
                                    alt124=1;
                                }
                                else if ( (LA124_0==RULE_ID) && (synpred8_InternalDialogParser())) {
                                    alt124=1;
                                }


                                switch (alt124) {
                            	case 1 :
                            	    // InternalDialogParser.g:5140:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    {
                            	    // InternalDialogParser.g:5141:7: ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    // InternalDialogParser.g:5142:8: (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    {
                            	    // InternalDialogParser.g:5142:8: (otherlv_12= Comma )?
                            	    int alt123=2;
                            	    int LA123_0 = input.LA(1);

                            	    if ( (LA123_0==Comma) ) {
                            	        alt123=1;
                            	    }
                            	    switch (alt123) {
                            	        case 1 :
                            	            // InternalDialogParser.g:5143:9: otherlv_12= Comma
                            	            {
                            	            otherlv_12=(Token)match(input,Comma,FOLLOW_97); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:5148:8: ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    // InternalDialogParser.g:5149:9: (lv_orderList_13_0= ruleOrderElement )
                            	    {
                            	    // InternalDialogParser.g:5149:9: (lv_orderList_13_0= ruleOrderElement )
                            	    // InternalDialogParser.g:5150:10: lv_orderList_13_0= ruleOrderElement
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_98);
                            	    lv_orderList_13_0=ruleOrderElement();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"orderList",
                            	      											lv_orderList_13_0,
                            	      											"com.ge.research.sadl.SADL.OrderElement");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop124;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5173:3: this_ExpressionParameterized_14= norm2_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionParameterized_14=norm2_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionParameterized_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_SelectExpression"


    // $ANTLR start "norm3_SelectExpression"
    // InternalDialogParser.g:5186:1: norm3_SelectExpression returns [EObject current=null] : ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm3_ExpressionParameterized ) ;
    public final EObject norm3_SelectExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_distinct_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_orderby_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_selectFrom_4_0 = null;

        EObject lv_selectFrom_6_0 = null;

        EObject lv_whereExpression_8_0 = null;

        EObject lv_orderList_11_0 = null;

        EObject lv_orderList_13_0 = null;

        EObject this_ExpressionParameterized_14 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5192:2: ( ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm3_ExpressionParameterized ) )
            // InternalDialogParser.g:5193:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm3_ExpressionParameterized )
            {
            // InternalDialogParser.g:5193:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm3_ExpressionParameterized )
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==Select) && (synpred9_InternalDialogParser())) {
                alt134=1;
            }
            else if ( (LA134_0==Another||LA134_0==Element||LA134_0==Sublist||LA134_0==Length||(LA134_0>=Count && LA134_0<=False)||LA134_0==First||(LA134_0>=Index && LA134_0<=Known)||LA134_0==There||LA134_0==Value||LA134_0==None||LA134_0==Last||LA134_0==Only||LA134_0==Some||(LA134_0>=True && LA134_0<=Type)||LA134_0==The||LA134_0==Any||LA134_0==Not||LA134_0==The_1||LA134_0==HyphenMinusHyphenMinus||(LA134_0>=An && LA134_0<=An_1)||LA134_0==ExclamationMark||LA134_0==LeftParenthesis||LA134_0==HyphenMinus||LA134_0==A||LA134_0==LeftSquareBracket||(LA134_0>=A_1 && LA134_0<=LeftCurlyBracket)||LA134_0==RULE_NUMBER||(LA134_0>=RULE_ID && LA134_0<=RULE_STRING)) ) {
                alt134=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 134, 0, input);

                throw nvae;
            }
            switch (alt134) {
                case 1 :
                    // InternalDialogParser.g:5194:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    {
                    // InternalDialogParser.g:5194:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    // InternalDialogParser.g:5195:4: ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    {
                    // InternalDialogParser.g:5196:4: ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    // InternalDialogParser.g:5197:5: () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    {
                    // InternalDialogParser.g:5197:5: ()
                    // InternalDialogParser.g:5198:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,Select,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
                      				
                    }
                    // InternalDialogParser.g:5208:5: ( (lv_distinct_2_0= Distinct ) )?
                    int alt127=2;
                    int LA127_0 = input.LA(1);

                    if ( (LA127_0==Distinct) ) {
                        alt127=1;
                    }
                    switch (alt127) {
                        case 1 :
                            // InternalDialogParser.g:5209:6: (lv_distinct_2_0= Distinct )
                            {
                            // InternalDialogParser.g:5209:6: (lv_distinct_2_0= Distinct )
                            // InternalDialogParser.g:5210:7: lv_distinct_2_0= Distinct
                            {
                            lv_distinct_2_0=(Token)match(input,Distinct,FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSelectExpressionRule());
                              							}
                              							setWithLastConsumed(current, "distinct", true, "distinct");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:5222:5: (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) )
                    int alt130=2;
                    int LA130_0 = input.LA(1);

                    if ( (LA130_0==Asterisk) ) {
                        alt130=1;
                    }
                    else if ( ((LA130_0>=RULE_ID && LA130_0<=RULE_QNAME_TERMINAL)) ) {
                        alt130=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 130, 0, input);

                        throw nvae;
                    }
                    switch (alt130) {
                        case 1 :
                            // InternalDialogParser.g:5223:6: otherlv_3= Asterisk
                            {
                            otherlv_3=(Token)match(input,Asterisk,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:5228:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            {
                            // InternalDialogParser.g:5228:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            // InternalDialogParser.g:5229:7: ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            {
                            // InternalDialogParser.g:5229:7: ( (lv_selectFrom_4_0= ruleSadlResource ) )
                            // InternalDialogParser.g:5230:8: (lv_selectFrom_4_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:5230:8: (lv_selectFrom_4_0= ruleSadlResource )
                            // InternalDialogParser.g:5231:9: lv_selectFrom_4_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
                              								
                            }
                            pushFollow(FOLLOW_94);
                            lv_selectFrom_4_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              									}
                              									add(
                              										current,
                              										"selectFrom",
                              										lv_selectFrom_4_0,
                              										"com.ge.research.sadl.SADL.SadlResource");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalDialogParser.g:5248:7: ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            loop129:
                            do {
                                int alt129=2;
                                int LA129_0 = input.LA(1);

                                if ( (LA129_0==Comma||(LA129_0>=RULE_ID && LA129_0<=RULE_QNAME_TERMINAL)) ) {
                                    alt129=1;
                                }


                                switch (alt129) {
                            	case 1 :
                            	    // InternalDialogParser.g:5249:8: (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    {
                            	    // InternalDialogParser.g:5249:8: (otherlv_5= Comma )?
                            	    int alt128=2;
                            	    int LA128_0 = input.LA(1);

                            	    if ( (LA128_0==Comma) ) {
                            	        alt128=1;
                            	    }
                            	    switch (alt128) {
                            	        case 1 :
                            	            // InternalDialogParser.g:5250:9: otherlv_5= Comma
                            	            {
                            	            otherlv_5=(Token)match(input,Comma,FOLLOW_6); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:5255:8: ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:5256:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:5256:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:5257:10: lv_selectFrom_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_94);
                            	    lv_selectFrom_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"selectFrom",
                            	      											lv_selectFrom_6_0,
                            	      											"com.ge.research.sadl.SADL.SadlResource");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop129;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,Where,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
                      				
                    }
                    // InternalDialogParser.g:5281:5: ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) )
                    // InternalDialogParser.g:5282:6: (lv_whereExpression_8_0= norm3_ExpressionParameterized )
                    {
                    // InternalDialogParser.g:5282:6: (lv_whereExpression_8_0= norm3_ExpressionParameterized )
                    // InternalDialogParser.g:5283:7: lv_whereExpression_8_0= norm3_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
                      						
                    }
                    pushFollow(FOLLOW_96);
                    lv_whereExpression_8_0=norm3_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                      							}
                      							set(
                      								current,
                      								"whereExpression",
                      								lv_whereExpression_8_0,
                      								"com.ge.research.sadl.SADL.ExpressionParameterized");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:5300:5: ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    int alt133=2;
                    int LA133_0 = input.LA(1);

                    if ( (LA133_0==Order) ) {
                        alt133=1;
                    }
                    switch (alt133) {
                        case 1 :
                            // InternalDialogParser.g:5301:6: ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            {
                            // InternalDialogParser.g:5301:6: ( (lv_orderby_9_0= Order ) )
                            // InternalDialogParser.g:5302:7: (lv_orderby_9_0= Order )
                            {
                            // InternalDialogParser.g:5302:7: (lv_orderby_9_0= Order )
                            // InternalDialogParser.g:5303:8: lv_orderby_9_0= Order
                            {
                            lv_orderby_9_0=(Token)match(input,Order,FOLLOW_56); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSelectExpressionRule());
                              								}
                              								setWithLastConsumed(current, "orderby", lv_orderby_9_0, "order");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,By,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
                              					
                            }
                            // InternalDialogParser.g:5319:6: ( (lv_orderList_11_0= ruleOrderElement ) )
                            // InternalDialogParser.g:5320:7: (lv_orderList_11_0= ruleOrderElement )
                            {
                            // InternalDialogParser.g:5320:7: (lv_orderList_11_0= ruleOrderElement )
                            // InternalDialogParser.g:5321:8: lv_orderList_11_0= ruleOrderElement
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
                              							
                            }
                            pushFollow(FOLLOW_98);
                            lv_orderList_11_0=ruleOrderElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              								}
                              								add(
                              									current,
                              									"orderList",
                              									lv_orderList_11_0,
                              									"com.ge.research.sadl.SADL.OrderElement");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:5338:6: ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            loop132:
                            do {
                                int alt132=2;
                                int LA132_0 = input.LA(1);

                                if ( (LA132_0==Comma) && (synpred10_InternalDialogParser())) {
                                    alt132=1;
                                }
                                else if ( (LA132_0==Asc) && (synpred10_InternalDialogParser())) {
                                    alt132=1;
                                }
                                else if ( (LA132_0==Desc) && (synpred10_InternalDialogParser())) {
                                    alt132=1;
                                }
                                else if ( (LA132_0==RULE_QNAME_TERMINAL) && (synpred10_InternalDialogParser())) {
                                    alt132=1;
                                }
                                else if ( (LA132_0==RULE_ID) && (synpred10_InternalDialogParser())) {
                                    alt132=1;
                                }


                                switch (alt132) {
                            	case 1 :
                            	    // InternalDialogParser.g:5339:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    {
                            	    // InternalDialogParser.g:5340:7: ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    // InternalDialogParser.g:5341:8: (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    {
                            	    // InternalDialogParser.g:5341:8: (otherlv_12= Comma )?
                            	    int alt131=2;
                            	    int LA131_0 = input.LA(1);

                            	    if ( (LA131_0==Comma) ) {
                            	        alt131=1;
                            	    }
                            	    switch (alt131) {
                            	        case 1 :
                            	            // InternalDialogParser.g:5342:9: otherlv_12= Comma
                            	            {
                            	            otherlv_12=(Token)match(input,Comma,FOLLOW_97); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:5347:8: ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    // InternalDialogParser.g:5348:9: (lv_orderList_13_0= ruleOrderElement )
                            	    {
                            	    // InternalDialogParser.g:5348:9: (lv_orderList_13_0= ruleOrderElement )
                            	    // InternalDialogParser.g:5349:10: lv_orderList_13_0= ruleOrderElement
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_98);
                            	    lv_orderList_13_0=ruleOrderElement();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"orderList",
                            	      											lv_orderList_13_0,
                            	      											"com.ge.research.sadl.SADL.OrderElement");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop132;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5372:3: this_ExpressionParameterized_14= norm3_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionParameterized_14=norm3_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionParameterized_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_SelectExpression"


    // $ANTLR start "entryRuleOrderElement"
    // InternalDialogParser.g:5384:1: entryRuleOrderElement returns [EObject current=null] : iv_ruleOrderElement= ruleOrderElement EOF ;
    public final EObject entryRuleOrderElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrderElement = null;


        try {
            // InternalDialogParser.g:5384:53: (iv_ruleOrderElement= ruleOrderElement EOF )
            // InternalDialogParser.g:5385:2: iv_ruleOrderElement= ruleOrderElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrderElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrderElement=ruleOrderElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrderElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrderElement"


    // $ANTLR start "ruleOrderElement"
    // InternalDialogParser.g:5391:1: ruleOrderElement returns [EObject current=null] : ( (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) ) ) ;
    public final EObject ruleOrderElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_desc_1_0=null;
        EObject lv_orderBy_2_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5397:2: ( ( (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) ) ) )
            // InternalDialogParser.g:5398:2: ( (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) ) )
            {
            // InternalDialogParser.g:5398:2: ( (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) ) )
            // InternalDialogParser.g:5399:3: (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) )
            {
            // InternalDialogParser.g:5399:3: (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )?
            int alt135=3;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==Asc) ) {
                alt135=1;
            }
            else if ( (LA135_0==Desc) ) {
                alt135=2;
            }
            switch (alt135) {
                case 1 :
                    // InternalDialogParser.g:5400:4: otherlv_0= Asc
                    {
                    otherlv_0=(Token)match(input,Asc,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getOrderElementAccess().getAscKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5405:4: ( (lv_desc_1_0= Desc ) )
                    {
                    // InternalDialogParser.g:5405:4: ( (lv_desc_1_0= Desc ) )
                    // InternalDialogParser.g:5406:5: (lv_desc_1_0= Desc )
                    {
                    // InternalDialogParser.g:5406:5: (lv_desc_1_0= Desc )
                    // InternalDialogParser.g:5407:6: lv_desc_1_0= Desc
                    {
                    lv_desc_1_0=(Token)match(input,Desc,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_desc_1_0, grammarAccess.getOrderElementAccess().getDescDescKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getOrderElementRule());
                      						}
                      						setWithLastConsumed(current, "desc", true, "desc");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:5420:3: ( (lv_orderBy_2_0= ruleSadlResource ) )
            // InternalDialogParser.g:5421:4: (lv_orderBy_2_0= ruleSadlResource )
            {
            // InternalDialogParser.g:5421:4: (lv_orderBy_2_0= ruleSadlResource )
            // InternalDialogParser.g:5422:5: lv_orderBy_2_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOrderElementAccess().getOrderBySadlResourceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_orderBy_2_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOrderElementRule());
              					}
              					set(
              						current,
              						"orderBy",
              						lv_orderBy_2_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrderElement"


    // $ANTLR start "entryRuleExpressionParameterized"
    // InternalDialogParser.g:5443:1: entryRuleExpressionParameterized returns [EObject current=null] : iv_ruleExpressionParameterized= ruleExpressionParameterized EOF ;
    public final EObject entryRuleExpressionParameterized() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionParameterized = null;


        try {
            // InternalDialogParser.g:5443:64: (iv_ruleExpressionParameterized= ruleExpressionParameterized EOF )
            // InternalDialogParser.g:5444:2: iv_ruleExpressionParameterized= ruleExpressionParameterized EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionParameterizedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionParameterized=ruleExpressionParameterized();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionParameterized; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionParameterized"


    // $ANTLR start "ruleExpressionParameterized"
    // InternalDialogParser.g:5450:1: ruleExpressionParameterized returns [EObject current=null] : ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression ) ;
    public final EObject ruleExpressionParameterized() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_list_4_0 = null;

        EObject lv_where_6_0 = null;

        EObject this_OrExpression_7 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5456:2: ( ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression ) )
            // InternalDialogParser.g:5457:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression )
            {
            // InternalDialogParser.g:5457:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression )
            int alt137=2;
            alt137 = dfa137.predict(input);
            switch (alt137) {
                case 1 :
                    // InternalDialogParser.g:5458:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) )
                    {
                    // InternalDialogParser.g:5458:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) )
                    // InternalDialogParser.g:5459:4: () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) )
                    {
                    // InternalDialogParser.g:5459:4: ()
                    // InternalDialogParser.g:5460:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:5466:4: ( ruleAnArticle )?
                    int alt136=2;
                    int LA136_0 = input.LA(1);

                    if ( (LA136_0==Another||LA136_0==Some||LA136_0==The||LA136_0==Any||LA136_0==The_1||LA136_0==An||LA136_0==An_1||LA136_0==A||LA136_0==A_1) ) {
                        alt136=1;
                    }
                    switch (alt136) {
                        case 1 :
                            // InternalDialogParser.g:5467:5: ruleAnArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_99);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,Sublist,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,Of,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:5483:4: ( (lv_list_4_0= ruleOrExpression ) )
                    // InternalDialogParser.g:5484:5: (lv_list_4_0= ruleOrExpression )
                    {
                    // InternalDialogParser.g:5484:5: (lv_list_4_0= ruleOrExpression )
                    // InternalDialogParser.g:5485:6: lv_list_4_0= ruleOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_100);
                    lv_list_4_0=ruleOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"list",
                      							lv_list_4_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,Matching,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
                      			
                    }
                    // InternalDialogParser.g:5506:4: ( (lv_where_6_0= ruleOrExpression ) )
                    // InternalDialogParser.g:5507:5: (lv_where_6_0= ruleOrExpression )
                    {
                    // InternalDialogParser.g:5507:5: (lv_where_6_0= ruleOrExpression )
                    // InternalDialogParser.g:5508:6: lv_where_6_0= ruleOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_6_0=ruleOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_6_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5527:3: this_OrExpression_7= ruleOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OrExpression_7=ruleOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OrExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionParameterized"


    // $ANTLR start "norm1_ExpressionParameterized"
    // InternalDialogParser.g:5540:1: norm1_ExpressionParameterized returns [EObject current=null] : ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression ) ;
    public final EObject norm1_ExpressionParameterized() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_list_4_0 = null;

        EObject lv_where_6_0 = null;

        EObject this_OrExpression_7 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5546:2: ( ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression ) )
            // InternalDialogParser.g:5547:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression )
            {
            // InternalDialogParser.g:5547:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression )
            int alt139=2;
            alt139 = dfa139.predict(input);
            switch (alt139) {
                case 1 :
                    // InternalDialogParser.g:5548:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) )
                    {
                    // InternalDialogParser.g:5548:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) )
                    // InternalDialogParser.g:5549:4: () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) )
                    {
                    // InternalDialogParser.g:5549:4: ()
                    // InternalDialogParser.g:5550:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:5556:4: ( ruleAnArticle )?
                    int alt138=2;
                    int LA138_0 = input.LA(1);

                    if ( (LA138_0==Another||LA138_0==Some||LA138_0==The||LA138_0==Any||LA138_0==The_1||LA138_0==An||LA138_0==An_1||LA138_0==A||LA138_0==A_1) ) {
                        alt138=1;
                    }
                    switch (alt138) {
                        case 1 :
                            // InternalDialogParser.g:5557:5: ruleAnArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_99);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,Sublist,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,Of,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:5573:4: ( (lv_list_4_0= norm1_OrExpression ) )
                    // InternalDialogParser.g:5574:5: (lv_list_4_0= norm1_OrExpression )
                    {
                    // InternalDialogParser.g:5574:5: (lv_list_4_0= norm1_OrExpression )
                    // InternalDialogParser.g:5575:6: lv_list_4_0= norm1_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_100);
                    lv_list_4_0=norm1_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"list",
                      							lv_list_4_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,Matching,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
                      			
                    }
                    // InternalDialogParser.g:5596:4: ( (lv_where_6_0= norm1_OrExpression ) )
                    // InternalDialogParser.g:5597:5: (lv_where_6_0= norm1_OrExpression )
                    {
                    // InternalDialogParser.g:5597:5: (lv_where_6_0= norm1_OrExpression )
                    // InternalDialogParser.g:5598:6: lv_where_6_0= norm1_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_6_0=norm1_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_6_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5617:3: this_OrExpression_7= norm1_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OrExpression_7=norm1_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OrExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_ExpressionParameterized"


    // $ANTLR start "norm2_ExpressionParameterized"
    // InternalDialogParser.g:5630:1: norm2_ExpressionParameterized returns [EObject current=null] : ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression ) ;
    public final EObject norm2_ExpressionParameterized() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_list_4_0 = null;

        EObject lv_where_6_0 = null;

        EObject this_OrExpression_7 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5636:2: ( ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression ) )
            // InternalDialogParser.g:5637:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression )
            {
            // InternalDialogParser.g:5637:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression )
            int alt141=2;
            alt141 = dfa141.predict(input);
            switch (alt141) {
                case 1 :
                    // InternalDialogParser.g:5638:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) )
                    {
                    // InternalDialogParser.g:5638:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) )
                    // InternalDialogParser.g:5639:4: () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) )
                    {
                    // InternalDialogParser.g:5639:4: ()
                    // InternalDialogParser.g:5640:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:5646:4: ( ruleAnArticle )?
                    int alt140=2;
                    int LA140_0 = input.LA(1);

                    if ( (LA140_0==Another||LA140_0==Some||LA140_0==The||LA140_0==Any||LA140_0==The_1||LA140_0==An||LA140_0==An_1||LA140_0==A||LA140_0==A_1) ) {
                        alt140=1;
                    }
                    switch (alt140) {
                        case 1 :
                            // InternalDialogParser.g:5647:5: ruleAnArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_99);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,Sublist,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,Of,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:5663:4: ( (lv_list_4_0= norm2_OrExpression ) )
                    // InternalDialogParser.g:5664:5: (lv_list_4_0= norm2_OrExpression )
                    {
                    // InternalDialogParser.g:5664:5: (lv_list_4_0= norm2_OrExpression )
                    // InternalDialogParser.g:5665:6: lv_list_4_0= norm2_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_100);
                    lv_list_4_0=norm2_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"list",
                      							lv_list_4_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,Matching,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
                      			
                    }
                    // InternalDialogParser.g:5686:4: ( (lv_where_6_0= norm2_OrExpression ) )
                    // InternalDialogParser.g:5687:5: (lv_where_6_0= norm2_OrExpression )
                    {
                    // InternalDialogParser.g:5687:5: (lv_where_6_0= norm2_OrExpression )
                    // InternalDialogParser.g:5688:6: lv_where_6_0= norm2_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_6_0=norm2_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_6_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5707:3: this_OrExpression_7= norm2_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OrExpression_7=norm2_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OrExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_ExpressionParameterized"


    // $ANTLR start "norm3_ExpressionParameterized"
    // InternalDialogParser.g:5720:1: norm3_ExpressionParameterized returns [EObject current=null] : ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression ) ;
    public final EObject norm3_ExpressionParameterized() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_list_4_0 = null;

        EObject lv_where_6_0 = null;

        EObject this_OrExpression_7 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5726:2: ( ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression ) )
            // InternalDialogParser.g:5727:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression )
            {
            // InternalDialogParser.g:5727:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression )
            int alt143=2;
            alt143 = dfa143.predict(input);
            switch (alt143) {
                case 1 :
                    // InternalDialogParser.g:5728:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) )
                    {
                    // InternalDialogParser.g:5728:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) )
                    // InternalDialogParser.g:5729:4: () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) )
                    {
                    // InternalDialogParser.g:5729:4: ()
                    // InternalDialogParser.g:5730:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:5736:4: ( ruleAnArticle )?
                    int alt142=2;
                    int LA142_0 = input.LA(1);

                    if ( (LA142_0==Another||LA142_0==Some||LA142_0==The||LA142_0==Any||LA142_0==The_1||LA142_0==An||LA142_0==An_1||LA142_0==A||LA142_0==A_1) ) {
                        alt142=1;
                    }
                    switch (alt142) {
                        case 1 :
                            // InternalDialogParser.g:5737:5: ruleAnArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_99);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,Sublist,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,Of,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:5753:4: ( (lv_list_4_0= norm3_OrExpression ) )
                    // InternalDialogParser.g:5754:5: (lv_list_4_0= norm3_OrExpression )
                    {
                    // InternalDialogParser.g:5754:5: (lv_list_4_0= norm3_OrExpression )
                    // InternalDialogParser.g:5755:6: lv_list_4_0= norm3_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_100);
                    lv_list_4_0=norm3_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"list",
                      							lv_list_4_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,Matching,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
                      			
                    }
                    // InternalDialogParser.g:5776:4: ( (lv_where_6_0= norm3_OrExpression ) )
                    // InternalDialogParser.g:5777:5: (lv_where_6_0= norm3_OrExpression )
                    {
                    // InternalDialogParser.g:5777:5: (lv_where_6_0= norm3_OrExpression )
                    // InternalDialogParser.g:5778:6: lv_where_6_0= norm3_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_6_0=norm3_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_6_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5797:3: this_OrExpression_7= norm3_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OrExpression_7=norm3_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OrExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_ExpressionParameterized"


    // $ANTLR start "entryRuleOrExpression"
    // InternalDialogParser.g:5809:1: entryRuleOrExpression returns [EObject current=null] : iv_ruleOrExpression= ruleOrExpression EOF ;
    public final EObject entryRuleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpression = null;


        try {
            // InternalDialogParser.g:5809:53: (iv_ruleOrExpression= ruleOrExpression EOF )
            // InternalDialogParser.g:5810:2: iv_ruleOrExpression= ruleOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrExpression=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrExpression"


    // $ANTLR start "ruleOrExpression"
    // InternalDialogParser.g:5816:1: ruleOrExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* ) ;
    public final EObject ruleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5822:2: ( (this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* ) )
            // InternalDialogParser.g:5823:2: (this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* )
            {
            // InternalDialogParser.g:5823:2: (this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* )
            // InternalDialogParser.g:5824:3: this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_101);
            this_AndExpression_0=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:5832:3: ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )*
            loop144:
            do {
                int alt144=2;
                int LA144_0 = input.LA(1);

                if ( (LA144_0==Or||LA144_0==VerticalLineVerticalLine) ) {
                    alt144=1;
                }


                switch (alt144) {
            	case 1 :
            	    // InternalDialogParser.g:5833:4: () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) )
            	    {
            	    // InternalDialogParser.g:5833:4: ()
            	    // InternalDialogParser.g:5834:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:5840:4: ( (lv_op_2_0= ruleOpOr ) )
            	    // InternalDialogParser.g:5841:5: (lv_op_2_0= ruleOpOr )
            	    {
            	    // InternalDialogParser.g:5841:5: (lv_op_2_0= ruleOpOr )
            	    // InternalDialogParser.g:5842:6: lv_op_2_0= ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_op_2_0=ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpOr");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:5859:4: ( (lv_right_3_0= ruleAndExpression ) )
            	    // InternalDialogParser.g:5860:5: (lv_right_3_0= ruleAndExpression )
            	    {
            	    // InternalDialogParser.g:5860:5: (lv_right_3_0= ruleAndExpression )
            	    // InternalDialogParser.g:5861:6: lv_right_3_0= ruleAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_101);
            	    lv_right_3_0=ruleAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop144;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrExpression"


    // $ANTLR start "norm1_OrExpression"
    // InternalDialogParser.g:5884:1: norm1_OrExpression returns [EObject current=null] : (this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )* ) ;
    public final EObject norm1_OrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5890:2: ( (this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )* ) )
            // InternalDialogParser.g:5891:2: (this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )* )
            {
            // InternalDialogParser.g:5891:2: (this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )* )
            // InternalDialogParser.g:5892:3: this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_101);
            this_AndExpression_0=norm1_AndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:5900:3: ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )*
            loop145:
            do {
                int alt145=2;
                int LA145_0 = input.LA(1);

                if ( (LA145_0==Or||LA145_0==VerticalLineVerticalLine) ) {
                    alt145=1;
                }


                switch (alt145) {
            	case 1 :
            	    // InternalDialogParser.g:5901:4: () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) )
            	    {
            	    // InternalDialogParser.g:5901:4: ()
            	    // InternalDialogParser.g:5902:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:5908:4: ( (lv_op_2_0= ruleOpOr ) )
            	    // InternalDialogParser.g:5909:5: (lv_op_2_0= ruleOpOr )
            	    {
            	    // InternalDialogParser.g:5909:5: (lv_op_2_0= ruleOpOr )
            	    // InternalDialogParser.g:5910:6: lv_op_2_0= ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_op_2_0=ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpOr");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:5927:4: ( (lv_right_3_0= norm1_AndExpression ) )
            	    // InternalDialogParser.g:5928:5: (lv_right_3_0= norm1_AndExpression )
            	    {
            	    // InternalDialogParser.g:5928:5: (lv_right_3_0= norm1_AndExpression )
            	    // InternalDialogParser.g:5929:6: lv_right_3_0= norm1_AndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_101);
            	    lv_right_3_0=norm1_AndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop145;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_OrExpression"


    // $ANTLR start "norm2_OrExpression"
    // InternalDialogParser.g:5952:1: norm2_OrExpression returns [EObject current=null] : (this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )* ) ;
    public final EObject norm2_OrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5958:2: ( (this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )* ) )
            // InternalDialogParser.g:5959:2: (this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )* )
            {
            // InternalDialogParser.g:5959:2: (this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )* )
            // InternalDialogParser.g:5960:3: this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_101);
            this_AndExpression_0=norm2_AndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:5968:3: ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )*
            loop146:
            do {
                int alt146=2;
                int LA146_0 = input.LA(1);

                if ( (LA146_0==Or||LA146_0==VerticalLineVerticalLine) ) {
                    alt146=1;
                }


                switch (alt146) {
            	case 1 :
            	    // InternalDialogParser.g:5969:4: () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) )
            	    {
            	    // InternalDialogParser.g:5969:4: ()
            	    // InternalDialogParser.g:5970:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:5976:4: ( (lv_op_2_0= ruleOpOr ) )
            	    // InternalDialogParser.g:5977:5: (lv_op_2_0= ruleOpOr )
            	    {
            	    // InternalDialogParser.g:5977:5: (lv_op_2_0= ruleOpOr )
            	    // InternalDialogParser.g:5978:6: lv_op_2_0= ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_op_2_0=ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpOr");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:5995:4: ( (lv_right_3_0= norm2_AndExpression ) )
            	    // InternalDialogParser.g:5996:5: (lv_right_3_0= norm2_AndExpression )
            	    {
            	    // InternalDialogParser.g:5996:5: (lv_right_3_0= norm2_AndExpression )
            	    // InternalDialogParser.g:5997:6: lv_right_3_0= norm2_AndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_101);
            	    lv_right_3_0=norm2_AndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop146;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_OrExpression"


    // $ANTLR start "norm3_OrExpression"
    // InternalDialogParser.g:6020:1: norm3_OrExpression returns [EObject current=null] : (this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )* ) ;
    public final EObject norm3_OrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6026:2: ( (this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )* ) )
            // InternalDialogParser.g:6027:2: (this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )* )
            {
            // InternalDialogParser.g:6027:2: (this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )* )
            // InternalDialogParser.g:6028:3: this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_101);
            this_AndExpression_0=norm3_AndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6036:3: ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )*
            loop147:
            do {
                int alt147=2;
                int LA147_0 = input.LA(1);

                if ( (LA147_0==Or||LA147_0==VerticalLineVerticalLine) ) {
                    alt147=1;
                }


                switch (alt147) {
            	case 1 :
            	    // InternalDialogParser.g:6037:4: () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) )
            	    {
            	    // InternalDialogParser.g:6037:4: ()
            	    // InternalDialogParser.g:6038:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:6044:4: ( (lv_op_2_0= ruleOpOr ) )
            	    // InternalDialogParser.g:6045:5: (lv_op_2_0= ruleOpOr )
            	    {
            	    // InternalDialogParser.g:6045:5: (lv_op_2_0= ruleOpOr )
            	    // InternalDialogParser.g:6046:6: lv_op_2_0= ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_op_2_0=ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpOr");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6063:4: ( (lv_right_3_0= norm3_AndExpression ) )
            	    // InternalDialogParser.g:6064:5: (lv_right_3_0= norm3_AndExpression )
            	    {
            	    // InternalDialogParser.g:6064:5: (lv_right_3_0= norm3_AndExpression )
            	    // InternalDialogParser.g:6065:6: lv_right_3_0= norm3_AndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_101);
            	    lv_right_3_0=norm3_AndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop147;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_OrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalDialogParser.g:6087:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalDialogParser.g:6087:44: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalDialogParser.g:6088:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalDialogParser.g:6094:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Or | kw= VerticalLineVerticalLine ) ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:6100:2: ( (kw= Or | kw= VerticalLineVerticalLine ) )
            // InternalDialogParser.g:6101:2: (kw= Or | kw= VerticalLineVerticalLine )
            {
            // InternalDialogParser.g:6101:2: (kw= Or | kw= VerticalLineVerticalLine )
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==Or) ) {
                alt148=1;
            }
            else if ( (LA148_0==VerticalLineVerticalLine) ) {
                alt148=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 148, 0, input);

                throw nvae;
            }
            switch (alt148) {
                case 1 :
                    // InternalDialogParser.g:6102:3: kw= Or
                    {
                    kw=(Token)match(input,Or,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOrAccess().getOrKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6108:3: kw= VerticalLineVerticalLine
                    {
                    kw=(Token)match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleAndExpression"
    // InternalDialogParser.g:6117:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndExpression = null;


        try {
            // InternalDialogParser.g:6117:54: (iv_ruleAndExpression= ruleAndExpression EOF )
            // InternalDialogParser.g:6118:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndExpression=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndExpression"


    // $ANTLR start "ruleAndExpression"
    // InternalDialogParser.g:6124:1: ruleAndExpression returns [EObject current=null] : (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6130:2: ( (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* ) )
            // InternalDialogParser.g:6131:2: (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* )
            {
            // InternalDialogParser.g:6131:2: (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* )
            // InternalDialogParser.g:6132:3: this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_102);
            this_EqualityExpression_0=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6140:3: ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )*
            loop149:
            do {
                int alt149=2;
                int LA149_0 = input.LA(1);

                if ( (LA149_0==And||LA149_0==AmpersandAmpersand) ) {
                    alt149=1;
                }


                switch (alt149) {
            	case 1 :
            	    // InternalDialogParser.g:6141:4: () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) )
            	    {
            	    // InternalDialogParser.g:6141:4: ()
            	    // InternalDialogParser.g:6142:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:6148:4: ( (lv_op_2_0= ruleOpAnd ) )
            	    // InternalDialogParser.g:6149:5: (lv_op_2_0= ruleOpAnd )
            	    {
            	    // InternalDialogParser.g:6149:5: (lv_op_2_0= ruleOpAnd )
            	    // InternalDialogParser.g:6150:6: lv_op_2_0= ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_op_2_0=ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6167:4: ( (lv_right_3_0= ruleEqualityExpression ) )
            	    // InternalDialogParser.g:6168:5: (lv_right_3_0= ruleEqualityExpression )
            	    {
            	    // InternalDialogParser.g:6168:5: (lv_right_3_0= ruleEqualityExpression )
            	    // InternalDialogParser.g:6169:6: lv_right_3_0= ruleEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_right_3_0=ruleEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop149;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndExpression"


    // $ANTLR start "norm1_AndExpression"
    // InternalDialogParser.g:6192:1: norm1_AndExpression returns [EObject current=null] : (this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )* ) ;
    public final EObject norm1_AndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6198:2: ( (this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )* ) )
            // InternalDialogParser.g:6199:2: (this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )* )
            {
            // InternalDialogParser.g:6199:2: (this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )* )
            // InternalDialogParser.g:6200:3: this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_102);
            this_EqualityExpression_0=norm1_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6208:3: ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )*
            loop150:
            do {
                int alt150=2;
                int LA150_0 = input.LA(1);

                if ( (LA150_0==And||LA150_0==AmpersandAmpersand) ) {
                    alt150=1;
                }


                switch (alt150) {
            	case 1 :
            	    // InternalDialogParser.g:6209:4: () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) )
            	    {
            	    // InternalDialogParser.g:6209:4: ()
            	    // InternalDialogParser.g:6210:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:6216:4: ( (lv_op_2_0= ruleOpAnd ) )
            	    // InternalDialogParser.g:6217:5: (lv_op_2_0= ruleOpAnd )
            	    {
            	    // InternalDialogParser.g:6217:5: (lv_op_2_0= ruleOpAnd )
            	    // InternalDialogParser.g:6218:6: lv_op_2_0= ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_op_2_0=ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6235:4: ( (lv_right_3_0= norm1_EqualityExpression ) )
            	    // InternalDialogParser.g:6236:5: (lv_right_3_0= norm1_EqualityExpression )
            	    {
            	    // InternalDialogParser.g:6236:5: (lv_right_3_0= norm1_EqualityExpression )
            	    // InternalDialogParser.g:6237:6: lv_right_3_0= norm1_EqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_right_3_0=norm1_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop150;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_AndExpression"


    // $ANTLR start "norm2_AndExpression"
    // InternalDialogParser.g:6260:1: norm2_AndExpression returns [EObject current=null] : (this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )* ) ;
    public final EObject norm2_AndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6266:2: ( (this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )* ) )
            // InternalDialogParser.g:6267:2: (this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )* )
            {
            // InternalDialogParser.g:6267:2: (this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )* )
            // InternalDialogParser.g:6268:3: this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_102);
            this_EqualityExpression_0=norm2_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6276:3: ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )*
            loop151:
            do {
                int alt151=2;
                int LA151_0 = input.LA(1);

                if ( (LA151_0==And||LA151_0==AmpersandAmpersand) ) {
                    alt151=1;
                }


                switch (alt151) {
            	case 1 :
            	    // InternalDialogParser.g:6277:4: () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) )
            	    {
            	    // InternalDialogParser.g:6277:4: ()
            	    // InternalDialogParser.g:6278:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:6284:4: ( (lv_op_2_0= ruleOpAnd ) )
            	    // InternalDialogParser.g:6285:5: (lv_op_2_0= ruleOpAnd )
            	    {
            	    // InternalDialogParser.g:6285:5: (lv_op_2_0= ruleOpAnd )
            	    // InternalDialogParser.g:6286:6: lv_op_2_0= ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_op_2_0=ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6303:4: ( (lv_right_3_0= norm2_EqualityExpression ) )
            	    // InternalDialogParser.g:6304:5: (lv_right_3_0= norm2_EqualityExpression )
            	    {
            	    // InternalDialogParser.g:6304:5: (lv_right_3_0= norm2_EqualityExpression )
            	    // InternalDialogParser.g:6305:6: lv_right_3_0= norm2_EqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_right_3_0=norm2_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop151;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_AndExpression"


    // $ANTLR start "norm3_AndExpression"
    // InternalDialogParser.g:6328:1: norm3_AndExpression returns [EObject current=null] : (this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )* ) ;
    public final EObject norm3_AndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6334:2: ( (this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )* ) )
            // InternalDialogParser.g:6335:2: (this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )* )
            {
            // InternalDialogParser.g:6335:2: (this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )* )
            // InternalDialogParser.g:6336:3: this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_102);
            this_EqualityExpression_0=norm3_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6344:3: ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )*
            loop152:
            do {
                int alt152=2;
                int LA152_0 = input.LA(1);

                if ( (LA152_0==And||LA152_0==AmpersandAmpersand) ) {
                    alt152=1;
                }


                switch (alt152) {
            	case 1 :
            	    // InternalDialogParser.g:6345:4: () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) )
            	    {
            	    // InternalDialogParser.g:6345:4: ()
            	    // InternalDialogParser.g:6346:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:6352:4: ( (lv_op_2_0= ruleOpAnd ) )
            	    // InternalDialogParser.g:6353:5: (lv_op_2_0= ruleOpAnd )
            	    {
            	    // InternalDialogParser.g:6353:5: (lv_op_2_0= ruleOpAnd )
            	    // InternalDialogParser.g:6354:6: lv_op_2_0= ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_op_2_0=ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6371:4: ( (lv_right_3_0= norm3_EqualityExpression ) )
            	    // InternalDialogParser.g:6372:5: (lv_right_3_0= norm3_EqualityExpression )
            	    {
            	    // InternalDialogParser.g:6372:5: (lv_right_3_0= norm3_EqualityExpression )
            	    // InternalDialogParser.g:6373:6: lv_right_3_0= norm3_EqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_right_3_0=norm3_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop152;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_AndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // InternalDialogParser.g:6395:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalDialogParser.g:6395:45: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalDialogParser.g:6396:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalDialogParser.g:6402:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= And | kw= AmpersandAmpersand ) ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:6408:2: ( (kw= And | kw= AmpersandAmpersand ) )
            // InternalDialogParser.g:6409:2: (kw= And | kw= AmpersandAmpersand )
            {
            // InternalDialogParser.g:6409:2: (kw= And | kw= AmpersandAmpersand )
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==And) ) {
                alt153=1;
            }
            else if ( (LA153_0==AmpersandAmpersand) ) {
                alt153=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 153, 0, input);

                throw nvae;
            }
            switch (alt153) {
                case 1 :
                    // InternalDialogParser.g:6410:3: kw= And
                    {
                    kw=(Token)match(input,And,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAndAccess().getAndKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6416:3: kw= AmpersandAmpersand
                    {
                    kw=(Token)match(input,AmpersandAmpersand,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleEqualityExpression"
    // InternalDialogParser.g:6425:1: entryRuleEqualityExpression returns [EObject current=null] : iv_ruleEqualityExpression= ruleEqualityExpression EOF ;
    public final EObject entryRuleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpression = null;


        try {
            // InternalDialogParser.g:6425:59: (iv_ruleEqualityExpression= ruleEqualityExpression EOF )
            // InternalDialogParser.g:6426:2: iv_ruleEqualityExpression= ruleEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpression=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityExpression"


    // $ANTLR start "ruleEqualityExpression"
    // InternalDialogParser.g:6432:1: ruleEqualityExpression returns [EObject current=null] : (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )* ) ;
    public final EObject ruleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6438:2: ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )* ) )
            // InternalDialogParser.g:6439:2: (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )* )
            {
            // InternalDialogParser.g:6439:2: (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )* )
            // InternalDialogParser.g:6440:3: this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_103);
            this_RelationalExpression_0=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6448:3: ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )*
            loop154:
            do {
                int alt154=2;
                int LA154_0 = input.LA(1);

                if ( (LA154_0==Contains||LA154_0==Does||LA154_0==ExclamationMarkEqualsSign||LA154_0==EqualsSignEqualsSign||LA154_0==Is||LA154_0==EqualsSign) ) {
                    alt154=1;
                }


                switch (alt154) {
            	case 1 :
            	    // InternalDialogParser.g:6449:4: () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) )
            	    {
            	    // InternalDialogParser.g:6449:4: ()
            	    // InternalDialogParser.g:6450:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:6456:4: ( (lv_op_2_0= ruleInfixOperator ) )
            	    // InternalDialogParser.g:6457:5: (lv_op_2_0= ruleInfixOperator )
            	    {
            	    // InternalDialogParser.g:6457:5: (lv_op_2_0= ruleInfixOperator )
            	    // InternalDialogParser.g:6458:6: lv_op_2_0= ruleInfixOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_op_2_0=ruleInfixOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.InfixOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6475:4: ( (lv_right_3_0= ruleRelationalExpression ) )
            	    // InternalDialogParser.g:6476:5: (lv_right_3_0= ruleRelationalExpression )
            	    {
            	    // InternalDialogParser.g:6476:5: (lv_right_3_0= ruleRelationalExpression )
            	    // InternalDialogParser.g:6477:6: lv_right_3_0= ruleRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_103);
            	    lv_right_3_0=ruleRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.RelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop154;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityExpression"


    // $ANTLR start "norm1_EqualityExpression"
    // InternalDialogParser.g:6500:1: norm1_EqualityExpression returns [EObject current=null] : (this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )* ) ;
    public final EObject norm1_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6506:2: ( (this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )* ) )
            // InternalDialogParser.g:6507:2: (this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )* )
            {
            // InternalDialogParser.g:6507:2: (this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )* )
            // InternalDialogParser.g:6508:3: this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_103);
            this_RelationalExpression_0=norm1_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6516:3: ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )*
            loop155:
            do {
                int alt155=2;
                int LA155_0 = input.LA(1);

                if ( (LA155_0==Contains||LA155_0==Does||LA155_0==ExclamationMarkEqualsSign||LA155_0==EqualsSignEqualsSign||LA155_0==Is||LA155_0==EqualsSign) ) {
                    alt155=1;
                }


                switch (alt155) {
            	case 1 :
            	    // InternalDialogParser.g:6517:4: () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) )
            	    {
            	    // InternalDialogParser.g:6517:4: ()
            	    // InternalDialogParser.g:6518:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:6524:4: ( (lv_op_2_0= ruleInfixOperator ) )
            	    // InternalDialogParser.g:6525:5: (lv_op_2_0= ruleInfixOperator )
            	    {
            	    // InternalDialogParser.g:6525:5: (lv_op_2_0= ruleInfixOperator )
            	    // InternalDialogParser.g:6526:6: lv_op_2_0= ruleInfixOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_op_2_0=ruleInfixOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.InfixOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6543:4: ( (lv_right_3_0= norm1_RelationalExpression ) )
            	    // InternalDialogParser.g:6544:5: (lv_right_3_0= norm1_RelationalExpression )
            	    {
            	    // InternalDialogParser.g:6544:5: (lv_right_3_0= norm1_RelationalExpression )
            	    // InternalDialogParser.g:6545:6: lv_right_3_0= norm1_RelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_103);
            	    lv_right_3_0=norm1_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.RelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop155;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_EqualityExpression"


    // $ANTLR start "norm2_EqualityExpression"
    // InternalDialogParser.g:6568:1: norm2_EqualityExpression returns [EObject current=null] : (this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )* ) ;
    public final EObject norm2_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6574:2: ( (this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )* ) )
            // InternalDialogParser.g:6575:2: (this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )* )
            {
            // InternalDialogParser.g:6575:2: (this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )* )
            // InternalDialogParser.g:6576:3: this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_103);
            this_RelationalExpression_0=norm2_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6584:3: ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )*
            loop156:
            do {
                int alt156=2;
                int LA156_0 = input.LA(1);

                if ( (LA156_0==Contains||LA156_0==Does||LA156_0==ExclamationMarkEqualsSign||LA156_0==EqualsSignEqualsSign||LA156_0==Is||LA156_0==EqualsSign) ) {
                    alt156=1;
                }


                switch (alt156) {
            	case 1 :
            	    // InternalDialogParser.g:6585:4: () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) )
            	    {
            	    // InternalDialogParser.g:6585:4: ()
            	    // InternalDialogParser.g:6586:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:6592:4: ( (lv_op_2_0= ruleInfixOperator ) )
            	    // InternalDialogParser.g:6593:5: (lv_op_2_0= ruleInfixOperator )
            	    {
            	    // InternalDialogParser.g:6593:5: (lv_op_2_0= ruleInfixOperator )
            	    // InternalDialogParser.g:6594:6: lv_op_2_0= ruleInfixOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_op_2_0=ruleInfixOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.InfixOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6611:4: ( (lv_right_3_0= norm2_RelationalExpression ) )
            	    // InternalDialogParser.g:6612:5: (lv_right_3_0= norm2_RelationalExpression )
            	    {
            	    // InternalDialogParser.g:6612:5: (lv_right_3_0= norm2_RelationalExpression )
            	    // InternalDialogParser.g:6613:6: lv_right_3_0= norm2_RelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_103);
            	    lv_right_3_0=norm2_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.RelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop156;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_EqualityExpression"


    // $ANTLR start "norm3_EqualityExpression"
    // InternalDialogParser.g:6636:1: norm3_EqualityExpression returns [EObject current=null] : (this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )* ) ;
    public final EObject norm3_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6642:2: ( (this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )* ) )
            // InternalDialogParser.g:6643:2: (this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )* )
            {
            // InternalDialogParser.g:6643:2: (this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )* )
            // InternalDialogParser.g:6644:3: this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_103);
            this_RelationalExpression_0=norm3_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6652:3: ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )*
            loop157:
            do {
                int alt157=2;
                int LA157_0 = input.LA(1);

                if ( (LA157_0==Contains||LA157_0==Does||LA157_0==ExclamationMarkEqualsSign||LA157_0==EqualsSignEqualsSign||LA157_0==Is||LA157_0==EqualsSign) ) {
                    alt157=1;
                }


                switch (alt157) {
            	case 1 :
            	    // InternalDialogParser.g:6653:4: () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) )
            	    {
            	    // InternalDialogParser.g:6653:4: ()
            	    // InternalDialogParser.g:6654:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:6660:4: ( (lv_op_2_0= ruleInfixOperator ) )
            	    // InternalDialogParser.g:6661:5: (lv_op_2_0= ruleInfixOperator )
            	    {
            	    // InternalDialogParser.g:6661:5: (lv_op_2_0= ruleInfixOperator )
            	    // InternalDialogParser.g:6662:6: lv_op_2_0= ruleInfixOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_op_2_0=ruleInfixOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.InfixOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6679:4: ( (lv_right_3_0= norm3_RelationalExpression ) )
            	    // InternalDialogParser.g:6680:5: (lv_right_3_0= norm3_RelationalExpression )
            	    {
            	    // InternalDialogParser.g:6680:5: (lv_right_3_0= norm3_RelationalExpression )
            	    // InternalDialogParser.g:6681:6: lv_right_3_0= norm3_RelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_103);
            	    lv_right_3_0=norm3_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.RelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop157;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_EqualityExpression"


    // $ANTLR start "entryRuleInfixOperator"
    // InternalDialogParser.g:6703:1: entryRuleInfixOperator returns [String current=null] : iv_ruleInfixOperator= ruleInfixOperator EOF ;
    public final String entryRuleInfixOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInfixOperator = null;


        try {
            // InternalDialogParser.g:6703:53: (iv_ruleInfixOperator= ruleInfixOperator EOF )
            // InternalDialogParser.g:6704:2: iv_ruleInfixOperator= ruleInfixOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInfixOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInfixOperator=ruleInfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInfixOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInfixOperator"


    // $ANTLR start "ruleInfixOperator"
    // InternalDialogParser.g:6710:1: ruleInfixOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSign | (kw= Is ( (kw= Not )? kw= Unique kw= In )? ) | kw= Contains | (kw= Does kw= Not kw= Contain ) ) ;
    public final AntlrDatatypeRuleToken ruleInfixOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:6716:2: ( (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSign | (kw= Is ( (kw= Not )? kw= Unique kw= In )? ) | kw= Contains | (kw= Does kw= Not kw= Contain ) ) )
            // InternalDialogParser.g:6717:2: (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSign | (kw= Is ( (kw= Not )? kw= Unique kw= In )? ) | kw= Contains | (kw= Does kw= Not kw= Contain ) )
            {
            // InternalDialogParser.g:6717:2: (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSign | (kw= Is ( (kw= Not )? kw= Unique kw= In )? ) | kw= Contains | (kw= Does kw= Not kw= Contain ) )
            int alt160=6;
            switch ( input.LA(1) ) {
            case EqualsSignEqualsSign:
                {
                alt160=1;
                }
                break;
            case ExclamationMarkEqualsSign:
                {
                alt160=2;
                }
                break;
            case EqualsSign:
                {
                alt160=3;
                }
                break;
            case Is:
                {
                alt160=4;
                }
                break;
            case Contains:
                {
                alt160=5;
                }
                break;
            case Does:
                {
                alt160=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 160, 0, input);

                throw nvae;
            }

            switch (alt160) {
                case 1 :
                    // InternalDialogParser.g:6718:3: kw= EqualsSignEqualsSign
                    {
                    kw=(Token)match(input,EqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6724:3: kw= ExclamationMarkEqualsSign
                    {
                    kw=(Token)match(input,ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:6730:3: kw= EqualsSign
                    {
                    kw=(Token)match(input,EqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:6736:3: (kw= Is ( (kw= Not )? kw= Unique kw= In )? )
                    {
                    // InternalDialogParser.g:6736:3: (kw= Is ( (kw= Not )? kw= Unique kw= In )? )
                    // InternalDialogParser.g:6737:4: kw= Is ( (kw= Not )? kw= Unique kw= In )?
                    {
                    kw=(Token)match(input,Is,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getIsKeyword_3_0());
                      			
                    }
                    // InternalDialogParser.g:6742:4: ( (kw= Not )? kw= Unique kw= In )?
                    int alt159=2;
                    int LA159_0 = input.LA(1);

                    if ( (LA159_0==Not) ) {
                        int LA159_1 = input.LA(2);

                        if ( (LA159_1==Unique) ) {
                            alt159=1;
                        }
                    }
                    else if ( (LA159_0==Unique) ) {
                        alt159=1;
                    }
                    switch (alt159) {
                        case 1 :
                            // InternalDialogParser.g:6743:5: (kw= Not )? kw= Unique kw= In
                            {
                            // InternalDialogParser.g:6743:5: (kw= Not )?
                            int alt158=2;
                            int LA158_0 = input.LA(1);

                            if ( (LA158_0==Not) ) {
                                alt158=1;
                            }
                            switch (alt158) {
                                case 1 :
                                    // InternalDialogParser.g:6744:6: kw= Not
                                    {
                                    kw=(Token)match(input,Not,FOLLOW_105); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(kw);
                                      						newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getNotKeyword_3_1_0());
                                      					
                                    }

                                    }
                                    break;

                            }

                            kw=(Token)match(input,Unique,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getUniqueKeyword_3_1_1());
                              				
                            }
                            kw=(Token)match(input,In,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getInKeyword_3_1_2());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:6763:3: kw= Contains
                    {
                    kw=(Token)match(input,Contains,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getContainsKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:6769:3: (kw= Does kw= Not kw= Contain )
                    {
                    // InternalDialogParser.g:6769:3: (kw= Does kw= Not kw= Contain )
                    // InternalDialogParser.g:6770:4: kw= Does kw= Not kw= Contain
                    {
                    kw=(Token)match(input,Does,FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getDoesKeyword_5_0());
                      			
                    }
                    kw=(Token)match(input,Not,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getNotKeyword_5_1());
                      			
                    }
                    kw=(Token)match(input,Contain,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getContainKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInfixOperator"


    // $ANTLR start "entryRuleRelationalExpression"
    // InternalDialogParser.g:6790:1: entryRuleRelationalExpression returns [EObject current=null] : iv_ruleRelationalExpression= ruleRelationalExpression EOF ;
    public final EObject entryRuleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationalExpression = null;


        try {
            // InternalDialogParser.g:6790:61: (iv_ruleRelationalExpression= ruleRelationalExpression EOF )
            // InternalDialogParser.g:6791:2: iv_ruleRelationalExpression= ruleRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationalExpression=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationalExpression"


    // $ANTLR start "ruleRelationalExpression"
    // InternalDialogParser.g:6797:1: ruleRelationalExpression returns [EObject current=null] : (this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )* ) ;
    public final EObject ruleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Addition_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6803:2: ( (this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )* ) )
            // InternalDialogParser.g:6804:2: (this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )* )
            {
            // InternalDialogParser.g:6804:2: (this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )* )
            // InternalDialogParser.g:6805:3: this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_109);
            this_Addition_0=ruleAddition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Addition_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6813:3: ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )*
            loop161:
            do {
                int alt161=2;
                int LA161_0 = input.LA(1);

                if ( (LA161_0==GreaterThanSignEqualsSign) && (synpred11_InternalDialogParser())) {
                    alt161=1;
                }
                else if ( (LA161_0==LessThanSignEqualsSign) && (synpred11_InternalDialogParser())) {
                    alt161=1;
                }
                else if ( (LA161_0==GreaterThanSign) && (synpred11_InternalDialogParser())) {
                    alt161=1;
                }
                else if ( (LA161_0==LessThanSign) && (synpred11_InternalDialogParser())) {
                    alt161=1;
                }


                switch (alt161) {
            	case 1 :
            	    // InternalDialogParser.g:6814:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) )
            	    {
            	    // InternalDialogParser.g:6815:4: ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) )
            	    // InternalDialogParser.g:6816:5: () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) )
            	    {
            	    // InternalDialogParser.g:6816:5: ()
            	    // InternalDialogParser.g:6817:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalDialogParser.g:6823:5: ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) )
            	    // InternalDialogParser.g:6824:6: ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare )
            	    {
            	    // InternalDialogParser.g:6828:6: (lv_op_2_0= ruleOpCompare )
            	    // InternalDialogParser.g:6829:7: lv_op_2_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_op_2_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"op",
            	      								lv_op_2_0,
            	      								"com.ge.research.sadl.SADL.OpCompare");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6846:5: ( (lv_right_3_0= ruleAddition ) )
            	    // InternalDialogParser.g:6847:6: (lv_right_3_0= ruleAddition )
            	    {
            	    // InternalDialogParser.g:6847:6: (lv_right_3_0= ruleAddition )
            	    // InternalDialogParser.g:6848:7: lv_right_3_0= ruleAddition
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_109);
            	    lv_right_3_0=ruleAddition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"com.ge.research.sadl.SADL.Addition");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop161;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationalExpression"


    // $ANTLR start "norm1_RelationalExpression"
    // InternalDialogParser.g:6872:1: norm1_RelationalExpression returns [EObject current=null] : (this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )* ) ;
    public final EObject norm1_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Addition_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6878:2: ( (this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )* ) )
            // InternalDialogParser.g:6879:2: (this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )* )
            {
            // InternalDialogParser.g:6879:2: (this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )* )
            // InternalDialogParser.g:6880:3: this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_109);
            this_Addition_0=norm1_Addition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Addition_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6888:3: ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )*
            loop162:
            do {
                int alt162=2;
                int LA162_0 = input.LA(1);

                if ( (LA162_0==GreaterThanSignEqualsSign) && (synpred13_InternalDialogParser())) {
                    alt162=1;
                }
                else if ( (LA162_0==LessThanSignEqualsSign) && (synpred13_InternalDialogParser())) {
                    alt162=1;
                }
                else if ( (LA162_0==GreaterThanSign) && (synpred13_InternalDialogParser())) {
                    alt162=1;
                }
                else if ( (LA162_0==LessThanSign) && (synpred13_InternalDialogParser())) {
                    alt162=1;
                }


                switch (alt162) {
            	case 1 :
            	    // InternalDialogParser.g:6889:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) )
            	    {
            	    // InternalDialogParser.g:6890:4: ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) )
            	    // InternalDialogParser.g:6891:5: () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) )
            	    {
            	    // InternalDialogParser.g:6891:5: ()
            	    // InternalDialogParser.g:6892:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalDialogParser.g:6898:5: ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) )
            	    // InternalDialogParser.g:6899:6: ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare )
            	    {
            	    // InternalDialogParser.g:6903:6: (lv_op_2_0= ruleOpCompare )
            	    // InternalDialogParser.g:6904:7: lv_op_2_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_op_2_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"op",
            	      								lv_op_2_0,
            	      								"com.ge.research.sadl.SADL.OpCompare");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6921:5: ( (lv_right_3_0= norm1_Addition ) )
            	    // InternalDialogParser.g:6922:6: (lv_right_3_0= norm1_Addition )
            	    {
            	    // InternalDialogParser.g:6922:6: (lv_right_3_0= norm1_Addition )
            	    // InternalDialogParser.g:6923:7: lv_right_3_0= norm1_Addition
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_109);
            	    lv_right_3_0=norm1_Addition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"com.ge.research.sadl.SADL.Addition");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop162;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_RelationalExpression"


    // $ANTLR start "norm2_RelationalExpression"
    // InternalDialogParser.g:6947:1: norm2_RelationalExpression returns [EObject current=null] : (this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )* ) ;
    public final EObject norm2_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Addition_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6953:2: ( (this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )* ) )
            // InternalDialogParser.g:6954:2: (this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )* )
            {
            // InternalDialogParser.g:6954:2: (this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )* )
            // InternalDialogParser.g:6955:3: this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_109);
            this_Addition_0=norm2_Addition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Addition_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6963:3: ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )*
            loop163:
            do {
                int alt163=2;
                int LA163_0 = input.LA(1);

                if ( (LA163_0==GreaterThanSignEqualsSign) && (synpred15_InternalDialogParser())) {
                    alt163=1;
                }
                else if ( (LA163_0==LessThanSignEqualsSign) && (synpred15_InternalDialogParser())) {
                    alt163=1;
                }
                else if ( (LA163_0==GreaterThanSign) && (synpred15_InternalDialogParser())) {
                    alt163=1;
                }
                else if ( (LA163_0==LessThanSign) && (synpred15_InternalDialogParser())) {
                    alt163=1;
                }


                switch (alt163) {
            	case 1 :
            	    // InternalDialogParser.g:6964:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) )
            	    {
            	    // InternalDialogParser.g:6965:4: ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) )
            	    // InternalDialogParser.g:6966:5: () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) )
            	    {
            	    // InternalDialogParser.g:6966:5: ()
            	    // InternalDialogParser.g:6967:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalDialogParser.g:6973:5: ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) )
            	    // InternalDialogParser.g:6974:6: ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare )
            	    {
            	    // InternalDialogParser.g:6978:6: (lv_op_2_0= ruleOpCompare )
            	    // InternalDialogParser.g:6979:7: lv_op_2_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_op_2_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"op",
            	      								lv_op_2_0,
            	      								"com.ge.research.sadl.SADL.OpCompare");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6996:5: ( (lv_right_3_0= norm2_Addition ) )
            	    // InternalDialogParser.g:6997:6: (lv_right_3_0= norm2_Addition )
            	    {
            	    // InternalDialogParser.g:6997:6: (lv_right_3_0= norm2_Addition )
            	    // InternalDialogParser.g:6998:7: lv_right_3_0= norm2_Addition
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_109);
            	    lv_right_3_0=norm2_Addition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"com.ge.research.sadl.SADL.Addition");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop163;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_RelationalExpression"


    // $ANTLR start "norm3_RelationalExpression"
    // InternalDialogParser.g:7022:1: norm3_RelationalExpression returns [EObject current=null] : (this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )* ) ;
    public final EObject norm3_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Addition_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7028:2: ( (this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )* ) )
            // InternalDialogParser.g:7029:2: (this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )* )
            {
            // InternalDialogParser.g:7029:2: (this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )* )
            // InternalDialogParser.g:7030:3: this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_109);
            this_Addition_0=norm3_Addition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Addition_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7038:3: ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )*
            loop164:
            do {
                int alt164=2;
                int LA164_0 = input.LA(1);

                if ( (LA164_0==GreaterThanSignEqualsSign) && (synpred17_InternalDialogParser())) {
                    alt164=1;
                }
                else if ( (LA164_0==LessThanSignEqualsSign) && (synpred17_InternalDialogParser())) {
                    alt164=1;
                }
                else if ( (LA164_0==GreaterThanSign) && (synpred17_InternalDialogParser())) {
                    alt164=1;
                }
                else if ( (LA164_0==LessThanSign) && (synpred17_InternalDialogParser())) {
                    alt164=1;
                }


                switch (alt164) {
            	case 1 :
            	    // InternalDialogParser.g:7039:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) )
            	    {
            	    // InternalDialogParser.g:7040:4: ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) )
            	    // InternalDialogParser.g:7041:5: () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) )
            	    {
            	    // InternalDialogParser.g:7041:5: ()
            	    // InternalDialogParser.g:7042:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalDialogParser.g:7048:5: ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) )
            	    // InternalDialogParser.g:7049:6: ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare )
            	    {
            	    // InternalDialogParser.g:7053:6: (lv_op_2_0= ruleOpCompare )
            	    // InternalDialogParser.g:7054:7: lv_op_2_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_op_2_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"op",
            	      								lv_op_2_0,
            	      								"com.ge.research.sadl.SADL.OpCompare");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7071:5: ( (lv_right_3_0= norm3_Addition ) )
            	    // InternalDialogParser.g:7072:6: (lv_right_3_0= norm3_Addition )
            	    {
            	    // InternalDialogParser.g:7072:6: (lv_right_3_0= norm3_Addition )
            	    // InternalDialogParser.g:7073:7: lv_right_3_0= norm3_Addition
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_109);
            	    lv_right_3_0=norm3_Addition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"com.ge.research.sadl.SADL.Addition");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop164;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_RelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // InternalDialogParser.g:7096:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalDialogParser.g:7096:49: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalDialogParser.g:7097:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalDialogParser.g:7103:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:7109:2: ( (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign ) )
            // InternalDialogParser.g:7110:2: (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign )
            {
            // InternalDialogParser.g:7110:2: (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign )
            int alt165=4;
            switch ( input.LA(1) ) {
            case GreaterThanSignEqualsSign:
                {
                alt165=1;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt165=2;
                }
                break;
            case GreaterThanSign:
                {
                alt165=3;
                }
                break;
            case LessThanSign:
                {
                alt165=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 165, 0, input);

                throw nvae;
            }

            switch (alt165) {
                case 1 :
                    // InternalDialogParser.g:7111:3: kw= GreaterThanSignEqualsSign
                    {
                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:7117:3: kw= LessThanSignEqualsSign
                    {
                    kw=(Token)match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:7123:3: kw= GreaterThanSign
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:7129:3: kw= LessThanSign
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleAddition"
    // InternalDialogParser.g:7138:1: entryRuleAddition returns [EObject current=null] : iv_ruleAddition= ruleAddition EOF ;
    public final EObject entryRuleAddition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAddition = null;


        try {
            // InternalDialogParser.g:7138:49: (iv_ruleAddition= ruleAddition EOF )
            // InternalDialogParser.g:7139:2: iv_ruleAddition= ruleAddition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAddition=ruleAddition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddition"


    // $ANTLR start "ruleAddition"
    // InternalDialogParser.g:7145:1: ruleAddition returns [EObject current=null] : (this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* ) ;
    public final EObject ruleAddition() throws RecognitionException {
        EObject current = null;

        EObject this_Multiplication_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7151:2: ( (this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* ) )
            // InternalDialogParser.g:7152:2: (this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* )
            {
            // InternalDialogParser.g:7152:2: (this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* )
            // InternalDialogParser.g:7153:3: this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_110);
            this_Multiplication_0=ruleMultiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Multiplication_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7161:3: ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )*
            loop166:
            do {
                int alt166=2;
                int LA166_0 = input.LA(1);

                if ( (LA166_0==PlusSign||LA166_0==HyphenMinus) ) {
                    alt166=1;
                }


                switch (alt166) {
            	case 1 :
            	    // InternalDialogParser.g:7162:4: () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) )
            	    {
            	    // InternalDialogParser.g:7162:4: ()
            	    // InternalDialogParser.g:7163:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7169:4: ( (lv_op_2_0= ruleAddOp ) )
            	    // InternalDialogParser.g:7170:5: (lv_op_2_0= ruleAddOp )
            	    {
            	    // InternalDialogParser.g:7170:5: (lv_op_2_0= ruleAddOp )
            	    // InternalDialogParser.g:7171:6: lv_op_2_0= ruleAddOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_op_2_0=ruleAddOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.AddOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7188:4: ( (lv_right_3_0= ruleMultiplication ) )
            	    // InternalDialogParser.g:7189:5: (lv_right_3_0= ruleMultiplication )
            	    {
            	    // InternalDialogParser.g:7189:5: (lv_right_3_0= ruleMultiplication )
            	    // InternalDialogParser.g:7190:6: lv_right_3_0= ruleMultiplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_110);
            	    lv_right_3_0=ruleMultiplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Multiplication");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop166;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddition"


    // $ANTLR start "norm1_Addition"
    // InternalDialogParser.g:7213:1: norm1_Addition returns [EObject current=null] : (this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )* ) ;
    public final EObject norm1_Addition() throws RecognitionException {
        EObject current = null;

        EObject this_Multiplication_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7219:2: ( (this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )* ) )
            // InternalDialogParser.g:7220:2: (this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )* )
            {
            // InternalDialogParser.g:7220:2: (this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )* )
            // InternalDialogParser.g:7221:3: this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_110);
            this_Multiplication_0=norm1_Multiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Multiplication_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7229:3: ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )*
            loop167:
            do {
                int alt167=2;
                int LA167_0 = input.LA(1);

                if ( (LA167_0==PlusSign||LA167_0==HyphenMinus) ) {
                    alt167=1;
                }


                switch (alt167) {
            	case 1 :
            	    // InternalDialogParser.g:7230:4: () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) )
            	    {
            	    // InternalDialogParser.g:7230:4: ()
            	    // InternalDialogParser.g:7231:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7237:4: ( (lv_op_2_0= ruleAddOp ) )
            	    // InternalDialogParser.g:7238:5: (lv_op_2_0= ruleAddOp )
            	    {
            	    // InternalDialogParser.g:7238:5: (lv_op_2_0= ruleAddOp )
            	    // InternalDialogParser.g:7239:6: lv_op_2_0= ruleAddOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_op_2_0=ruleAddOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.AddOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7256:4: ( (lv_right_3_0= norm1_Multiplication ) )
            	    // InternalDialogParser.g:7257:5: (lv_right_3_0= norm1_Multiplication )
            	    {
            	    // InternalDialogParser.g:7257:5: (lv_right_3_0= norm1_Multiplication )
            	    // InternalDialogParser.g:7258:6: lv_right_3_0= norm1_Multiplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_110);
            	    lv_right_3_0=norm1_Multiplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Multiplication");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop167;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_Addition"


    // $ANTLR start "norm2_Addition"
    // InternalDialogParser.g:7281:1: norm2_Addition returns [EObject current=null] : (this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )* ) ;
    public final EObject norm2_Addition() throws RecognitionException {
        EObject current = null;

        EObject this_Multiplication_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7287:2: ( (this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )* ) )
            // InternalDialogParser.g:7288:2: (this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )* )
            {
            // InternalDialogParser.g:7288:2: (this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )* )
            // InternalDialogParser.g:7289:3: this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_110);
            this_Multiplication_0=norm2_Multiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Multiplication_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7297:3: ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )*
            loop168:
            do {
                int alt168=2;
                int LA168_0 = input.LA(1);

                if ( (LA168_0==PlusSign||LA168_0==HyphenMinus) ) {
                    alt168=1;
                }


                switch (alt168) {
            	case 1 :
            	    // InternalDialogParser.g:7298:4: () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) )
            	    {
            	    // InternalDialogParser.g:7298:4: ()
            	    // InternalDialogParser.g:7299:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7305:4: ( (lv_op_2_0= ruleAddOp ) )
            	    // InternalDialogParser.g:7306:5: (lv_op_2_0= ruleAddOp )
            	    {
            	    // InternalDialogParser.g:7306:5: (lv_op_2_0= ruleAddOp )
            	    // InternalDialogParser.g:7307:6: lv_op_2_0= ruleAddOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_op_2_0=ruleAddOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.AddOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7324:4: ( (lv_right_3_0= norm2_Multiplication ) )
            	    // InternalDialogParser.g:7325:5: (lv_right_3_0= norm2_Multiplication )
            	    {
            	    // InternalDialogParser.g:7325:5: (lv_right_3_0= norm2_Multiplication )
            	    // InternalDialogParser.g:7326:6: lv_right_3_0= norm2_Multiplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_110);
            	    lv_right_3_0=norm2_Multiplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Multiplication");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop168;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_Addition"


    // $ANTLR start "norm3_Addition"
    // InternalDialogParser.g:7349:1: norm3_Addition returns [EObject current=null] : (this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )* ) ;
    public final EObject norm3_Addition() throws RecognitionException {
        EObject current = null;

        EObject this_Multiplication_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7355:2: ( (this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )* ) )
            // InternalDialogParser.g:7356:2: (this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )* )
            {
            // InternalDialogParser.g:7356:2: (this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )* )
            // InternalDialogParser.g:7357:3: this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_110);
            this_Multiplication_0=norm3_Multiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Multiplication_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7365:3: ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )*
            loop169:
            do {
                int alt169=2;
                int LA169_0 = input.LA(1);

                if ( (LA169_0==PlusSign||LA169_0==HyphenMinus) ) {
                    alt169=1;
                }


                switch (alt169) {
            	case 1 :
            	    // InternalDialogParser.g:7366:4: () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) )
            	    {
            	    // InternalDialogParser.g:7366:4: ()
            	    // InternalDialogParser.g:7367:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7373:4: ( (lv_op_2_0= ruleAddOp ) )
            	    // InternalDialogParser.g:7374:5: (lv_op_2_0= ruleAddOp )
            	    {
            	    // InternalDialogParser.g:7374:5: (lv_op_2_0= ruleAddOp )
            	    // InternalDialogParser.g:7375:6: lv_op_2_0= ruleAddOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_op_2_0=ruleAddOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.AddOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7392:4: ( (lv_right_3_0= norm3_Multiplication ) )
            	    // InternalDialogParser.g:7393:5: (lv_right_3_0= norm3_Multiplication )
            	    {
            	    // InternalDialogParser.g:7393:5: (lv_right_3_0= norm3_Multiplication )
            	    // InternalDialogParser.g:7394:6: lv_right_3_0= norm3_Multiplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_110);
            	    lv_right_3_0=norm3_Multiplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Multiplication");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop169;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_Addition"


    // $ANTLR start "entryRuleAddOp"
    // InternalDialogParser.g:7416:1: entryRuleAddOp returns [String current=null] : iv_ruleAddOp= ruleAddOp EOF ;
    public final String entryRuleAddOp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAddOp = null;


        try {
            // InternalDialogParser.g:7416:45: (iv_ruleAddOp= ruleAddOp EOF )
            // InternalDialogParser.g:7417:2: iv_ruleAddOp= ruleAddOp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddOpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAddOp=ruleAddOp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddOp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddOp"


    // $ANTLR start "ruleAddOp"
    // InternalDialogParser.g:7423:1: ruleAddOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PlusSign | kw= HyphenMinus ) ;
    public final AntlrDatatypeRuleToken ruleAddOp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:7429:2: ( (kw= PlusSign | kw= HyphenMinus ) )
            // InternalDialogParser.g:7430:2: (kw= PlusSign | kw= HyphenMinus )
            {
            // InternalDialogParser.g:7430:2: (kw= PlusSign | kw= HyphenMinus )
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==PlusSign) ) {
                alt170=1;
            }
            else if ( (LA170_0==HyphenMinus) ) {
                alt170=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 170, 0, input);

                throw nvae;
            }
            switch (alt170) {
                case 1 :
                    // InternalDialogParser.g:7431:3: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAddOpAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:7437:3: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAddOpAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddOp"


    // $ANTLR start "entryRuleMultiplication"
    // InternalDialogParser.g:7446:1: entryRuleMultiplication returns [EObject current=null] : iv_ruleMultiplication= ruleMultiplication EOF ;
    public final EObject entryRuleMultiplication() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplication = null;


        try {
            // InternalDialogParser.g:7446:55: (iv_ruleMultiplication= ruleMultiplication EOF )
            // InternalDialogParser.g:7447:2: iv_ruleMultiplication= ruleMultiplication EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplication=ruleMultiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplication; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplication"


    // $ANTLR start "ruleMultiplication"
    // InternalDialogParser.g:7453:1: ruleMultiplication returns [EObject current=null] : (this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )* ) ;
    public final EObject ruleMultiplication() throws RecognitionException {
        EObject current = null;

        EObject this_Power_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7459:2: ( (this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )* ) )
            // InternalDialogParser.g:7460:2: (this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )* )
            {
            // InternalDialogParser.g:7460:2: (this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )* )
            // InternalDialogParser.g:7461:3: this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_111);
            this_Power_0=rulePower();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Power_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7469:3: ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )*
            loop171:
            do {
                int alt171=2;
                int LA171_0 = input.LA(1);

                if ( (LA171_0==PercentSign||LA171_0==Asterisk||LA171_0==Solidus) ) {
                    alt171=1;
                }


                switch (alt171) {
            	case 1 :
            	    // InternalDialogParser.g:7470:4: () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) )
            	    {
            	    // InternalDialogParser.g:7470:4: ()
            	    // InternalDialogParser.g:7471:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7477:4: ( (lv_op_2_0= ruleMultiOp ) )
            	    // InternalDialogParser.g:7478:5: (lv_op_2_0= ruleMultiOp )
            	    {
            	    // InternalDialogParser.g:7478:5: (lv_op_2_0= ruleMultiOp )
            	    // InternalDialogParser.g:7479:6: lv_op_2_0= ruleMultiOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_op_2_0=ruleMultiOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.MultiOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7496:4: ( (lv_right_3_0= rulePower ) )
            	    // InternalDialogParser.g:7497:5: (lv_right_3_0= rulePower )
            	    {
            	    // InternalDialogParser.g:7497:5: (lv_right_3_0= rulePower )
            	    // InternalDialogParser.g:7498:6: lv_right_3_0= rulePower
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_111);
            	    lv_right_3_0=rulePower();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Power");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop171;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplication"


    // $ANTLR start "norm1_Multiplication"
    // InternalDialogParser.g:7521:1: norm1_Multiplication returns [EObject current=null] : (this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )* ) ;
    public final EObject norm1_Multiplication() throws RecognitionException {
        EObject current = null;

        EObject this_Power_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7527:2: ( (this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )* ) )
            // InternalDialogParser.g:7528:2: (this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )* )
            {
            // InternalDialogParser.g:7528:2: (this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )* )
            // InternalDialogParser.g:7529:3: this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_111);
            this_Power_0=norm1_Power();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Power_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7537:3: ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )*
            loop172:
            do {
                int alt172=2;
                int LA172_0 = input.LA(1);

                if ( (LA172_0==PercentSign||LA172_0==Asterisk||LA172_0==Solidus) ) {
                    alt172=1;
                }


                switch (alt172) {
            	case 1 :
            	    // InternalDialogParser.g:7538:4: () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) )
            	    {
            	    // InternalDialogParser.g:7538:4: ()
            	    // InternalDialogParser.g:7539:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7545:4: ( (lv_op_2_0= ruleMultiOp ) )
            	    // InternalDialogParser.g:7546:5: (lv_op_2_0= ruleMultiOp )
            	    {
            	    // InternalDialogParser.g:7546:5: (lv_op_2_0= ruleMultiOp )
            	    // InternalDialogParser.g:7547:6: lv_op_2_0= ruleMultiOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_op_2_0=ruleMultiOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.MultiOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7564:4: ( (lv_right_3_0= norm1_Power ) )
            	    // InternalDialogParser.g:7565:5: (lv_right_3_0= norm1_Power )
            	    {
            	    // InternalDialogParser.g:7565:5: (lv_right_3_0= norm1_Power )
            	    // InternalDialogParser.g:7566:6: lv_right_3_0= norm1_Power
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_111);
            	    lv_right_3_0=norm1_Power();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Power");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop172;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_Multiplication"


    // $ANTLR start "norm2_Multiplication"
    // InternalDialogParser.g:7589:1: norm2_Multiplication returns [EObject current=null] : (this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )* ) ;
    public final EObject norm2_Multiplication() throws RecognitionException {
        EObject current = null;

        EObject this_Power_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7595:2: ( (this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )* ) )
            // InternalDialogParser.g:7596:2: (this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )* )
            {
            // InternalDialogParser.g:7596:2: (this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )* )
            // InternalDialogParser.g:7597:3: this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_111);
            this_Power_0=norm2_Power();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Power_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7605:3: ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )*
            loop173:
            do {
                int alt173=2;
                int LA173_0 = input.LA(1);

                if ( (LA173_0==PercentSign||LA173_0==Asterisk||LA173_0==Solidus) ) {
                    alt173=1;
                }


                switch (alt173) {
            	case 1 :
            	    // InternalDialogParser.g:7606:4: () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) )
            	    {
            	    // InternalDialogParser.g:7606:4: ()
            	    // InternalDialogParser.g:7607:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7613:4: ( (lv_op_2_0= ruleMultiOp ) )
            	    // InternalDialogParser.g:7614:5: (lv_op_2_0= ruleMultiOp )
            	    {
            	    // InternalDialogParser.g:7614:5: (lv_op_2_0= ruleMultiOp )
            	    // InternalDialogParser.g:7615:6: lv_op_2_0= ruleMultiOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_op_2_0=ruleMultiOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.MultiOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7632:4: ( (lv_right_3_0= norm2_Power ) )
            	    // InternalDialogParser.g:7633:5: (lv_right_3_0= norm2_Power )
            	    {
            	    // InternalDialogParser.g:7633:5: (lv_right_3_0= norm2_Power )
            	    // InternalDialogParser.g:7634:6: lv_right_3_0= norm2_Power
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_111);
            	    lv_right_3_0=norm2_Power();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Power");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop173;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_Multiplication"


    // $ANTLR start "norm3_Multiplication"
    // InternalDialogParser.g:7657:1: norm3_Multiplication returns [EObject current=null] : (this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )* ) ;
    public final EObject norm3_Multiplication() throws RecognitionException {
        EObject current = null;

        EObject this_Power_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7663:2: ( (this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )* ) )
            // InternalDialogParser.g:7664:2: (this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )* )
            {
            // InternalDialogParser.g:7664:2: (this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )* )
            // InternalDialogParser.g:7665:3: this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_111);
            this_Power_0=norm3_Power();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Power_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7673:3: ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )*
            loop174:
            do {
                int alt174=2;
                int LA174_0 = input.LA(1);

                if ( (LA174_0==PercentSign||LA174_0==Asterisk||LA174_0==Solidus) ) {
                    alt174=1;
                }


                switch (alt174) {
            	case 1 :
            	    // InternalDialogParser.g:7674:4: () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) )
            	    {
            	    // InternalDialogParser.g:7674:4: ()
            	    // InternalDialogParser.g:7675:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7681:4: ( (lv_op_2_0= ruleMultiOp ) )
            	    // InternalDialogParser.g:7682:5: (lv_op_2_0= ruleMultiOp )
            	    {
            	    // InternalDialogParser.g:7682:5: (lv_op_2_0= ruleMultiOp )
            	    // InternalDialogParser.g:7683:6: lv_op_2_0= ruleMultiOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_op_2_0=ruleMultiOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.MultiOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7700:4: ( (lv_right_3_0= norm3_Power ) )
            	    // InternalDialogParser.g:7701:5: (lv_right_3_0= norm3_Power )
            	    {
            	    // InternalDialogParser.g:7701:5: (lv_right_3_0= norm3_Power )
            	    // InternalDialogParser.g:7702:6: lv_right_3_0= norm3_Power
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_111);
            	    lv_right_3_0=norm3_Power();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Power");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop174;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_Multiplication"


    // $ANTLR start "entryRuleMultiOp"
    // InternalDialogParser.g:7724:1: entryRuleMultiOp returns [String current=null] : iv_ruleMultiOp= ruleMultiOp EOF ;
    public final String entryRuleMultiOp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMultiOp = null;


        try {
            // InternalDialogParser.g:7724:47: (iv_ruleMultiOp= ruleMultiOp EOF )
            // InternalDialogParser.g:7725:2: iv_ruleMultiOp= ruleMultiOp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiOpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiOp=ruleMultiOp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiOp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiOp"


    // $ANTLR start "ruleMultiOp"
    // InternalDialogParser.g:7731:1: ruleMultiOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Asterisk | kw= Solidus | kw= PercentSign ) ;
    public final AntlrDatatypeRuleToken ruleMultiOp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:7737:2: ( (kw= Asterisk | kw= Solidus | kw= PercentSign ) )
            // InternalDialogParser.g:7738:2: (kw= Asterisk | kw= Solidus | kw= PercentSign )
            {
            // InternalDialogParser.g:7738:2: (kw= Asterisk | kw= Solidus | kw= PercentSign )
            int alt175=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt175=1;
                }
                break;
            case Solidus:
                {
                alt175=2;
                }
                break;
            case PercentSign:
                {
                alt175=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 175, 0, input);

                throw nvae;
            }

            switch (alt175) {
                case 1 :
                    // InternalDialogParser.g:7739:3: kw= Asterisk
                    {
                    kw=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiOpAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:7745:3: kw= Solidus
                    {
                    kw=(Token)match(input,Solidus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiOpAccess().getSolidusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:7751:3: kw= PercentSign
                    {
                    kw=(Token)match(input,PercentSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiOpAccess().getPercentSignKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiOp"


    // $ANTLR start "entryRulePower"
    // InternalDialogParser.g:7760:1: entryRulePower returns [EObject current=null] : iv_rulePower= rulePower EOF ;
    public final EObject entryRulePower() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePower = null;


        try {
            // InternalDialogParser.g:7760:46: (iv_rulePower= rulePower EOF )
            // InternalDialogParser.g:7761:2: iv_rulePower= rulePower EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPowerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePower=rulePower();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePower; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePower"


    // $ANTLR start "rulePower"
    // InternalDialogParser.g:7767:1: rulePower returns [EObject current=null] : (this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )* ) ;
    public final EObject rulePower() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_PropOfSubject_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7773:2: ( (this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )* ) )
            // InternalDialogParser.g:7774:2: (this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )* )
            {
            // InternalDialogParser.g:7774:2: (this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )* )
            // InternalDialogParser.g:7775:3: this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_112);
            this_PropOfSubject_0=rulePropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PropOfSubject_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7783:3: ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )*
            loop176:
            do {
                int alt176=2;
                int LA176_0 = input.LA(1);

                if ( (LA176_0==CircumflexAccent) ) {
                    alt176=1;
                }


                switch (alt176) {
            	case 1 :
            	    // InternalDialogParser.g:7784:4: () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) )
            	    {
            	    // InternalDialogParser.g:7784:4: ()
            	    // InternalDialogParser.g:7785:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7791:4: ( (lv_op_2_0= CircumflexAccent ) )
            	    // InternalDialogParser.g:7792:5: (lv_op_2_0= CircumflexAccent )
            	    {
            	    // InternalDialogParser.g:7792:5: (lv_op_2_0= CircumflexAccent )
            	    // InternalDialogParser.g:7793:6: lv_op_2_0= CircumflexAccent
            	    {
            	    lv_op_2_0=(Token)match(input,CircumflexAccent,FOLLOW_95); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getPowerRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7805:4: ( (lv_right_3_0= rulePropOfSubject ) )
            	    // InternalDialogParser.g:7806:5: (lv_right_3_0= rulePropOfSubject )
            	    {
            	    // InternalDialogParser.g:7806:5: (lv_right_3_0= rulePropOfSubject )
            	    // InternalDialogParser.g:7807:6: lv_right_3_0= rulePropOfSubject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_112);
            	    lv_right_3_0=rulePropOfSubject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPowerRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.PropOfSubject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop176;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePower"


    // $ANTLR start "norm1_Power"
    // InternalDialogParser.g:7830:1: norm1_Power returns [EObject current=null] : (this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )* ) ;
    public final EObject norm1_Power() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_PropOfSubject_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7836:2: ( (this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )* ) )
            // InternalDialogParser.g:7837:2: (this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )* )
            {
            // InternalDialogParser.g:7837:2: (this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )* )
            // InternalDialogParser.g:7838:3: this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_112);
            this_PropOfSubject_0=norm1_PropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PropOfSubject_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7846:3: ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )*
            loop177:
            do {
                int alt177=2;
                int LA177_0 = input.LA(1);

                if ( (LA177_0==CircumflexAccent) ) {
                    alt177=1;
                }


                switch (alt177) {
            	case 1 :
            	    // InternalDialogParser.g:7847:4: () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) )
            	    {
            	    // InternalDialogParser.g:7847:4: ()
            	    // InternalDialogParser.g:7848:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7854:4: ( (lv_op_2_0= CircumflexAccent ) )
            	    // InternalDialogParser.g:7855:5: (lv_op_2_0= CircumflexAccent )
            	    {
            	    // InternalDialogParser.g:7855:5: (lv_op_2_0= CircumflexAccent )
            	    // InternalDialogParser.g:7856:6: lv_op_2_0= CircumflexAccent
            	    {
            	    lv_op_2_0=(Token)match(input,CircumflexAccent,FOLLOW_95); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getPowerRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7868:4: ( (lv_right_3_0= norm1_PropOfSubject ) )
            	    // InternalDialogParser.g:7869:5: (lv_right_3_0= norm1_PropOfSubject )
            	    {
            	    // InternalDialogParser.g:7869:5: (lv_right_3_0= norm1_PropOfSubject )
            	    // InternalDialogParser.g:7870:6: lv_right_3_0= norm1_PropOfSubject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_112);
            	    lv_right_3_0=norm1_PropOfSubject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPowerRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.PropOfSubject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop177;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_Power"


    // $ANTLR start "norm2_Power"
    // InternalDialogParser.g:7893:1: norm2_Power returns [EObject current=null] : (this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )* ) ;
    public final EObject norm2_Power() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_PropOfSubject_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7899:2: ( (this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )* ) )
            // InternalDialogParser.g:7900:2: (this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )* )
            {
            // InternalDialogParser.g:7900:2: (this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )* )
            // InternalDialogParser.g:7901:3: this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_112);
            this_PropOfSubject_0=norm2_PropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PropOfSubject_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7909:3: ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )*
            loop178:
            do {
                int alt178=2;
                int LA178_0 = input.LA(1);

                if ( (LA178_0==CircumflexAccent) ) {
                    alt178=1;
                }


                switch (alt178) {
            	case 1 :
            	    // InternalDialogParser.g:7910:4: () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) )
            	    {
            	    // InternalDialogParser.g:7910:4: ()
            	    // InternalDialogParser.g:7911:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7917:4: ( (lv_op_2_0= CircumflexAccent ) )
            	    // InternalDialogParser.g:7918:5: (lv_op_2_0= CircumflexAccent )
            	    {
            	    // InternalDialogParser.g:7918:5: (lv_op_2_0= CircumflexAccent )
            	    // InternalDialogParser.g:7919:6: lv_op_2_0= CircumflexAccent
            	    {
            	    lv_op_2_0=(Token)match(input,CircumflexAccent,FOLLOW_95); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getPowerRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7931:4: ( (lv_right_3_0= norm2_PropOfSubject ) )
            	    // InternalDialogParser.g:7932:5: (lv_right_3_0= norm2_PropOfSubject )
            	    {
            	    // InternalDialogParser.g:7932:5: (lv_right_3_0= norm2_PropOfSubject )
            	    // InternalDialogParser.g:7933:6: lv_right_3_0= norm2_PropOfSubject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_112);
            	    lv_right_3_0=norm2_PropOfSubject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPowerRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.PropOfSubject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop178;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_Power"


    // $ANTLR start "norm3_Power"
    // InternalDialogParser.g:7956:1: norm3_Power returns [EObject current=null] : (this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )* ) ;
    public final EObject norm3_Power() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_PropOfSubject_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7962:2: ( (this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )* ) )
            // InternalDialogParser.g:7963:2: (this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )* )
            {
            // InternalDialogParser.g:7963:2: (this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )* )
            // InternalDialogParser.g:7964:3: this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_112);
            this_PropOfSubject_0=norm3_PropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PropOfSubject_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7972:3: ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )*
            loop179:
            do {
                int alt179=2;
                int LA179_0 = input.LA(1);

                if ( (LA179_0==CircumflexAccent) ) {
                    alt179=1;
                }


                switch (alt179) {
            	case 1 :
            	    // InternalDialogParser.g:7973:4: () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) )
            	    {
            	    // InternalDialogParser.g:7973:4: ()
            	    // InternalDialogParser.g:7974:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7980:4: ( (lv_op_2_0= CircumflexAccent ) )
            	    // InternalDialogParser.g:7981:5: (lv_op_2_0= CircumflexAccent )
            	    {
            	    // InternalDialogParser.g:7981:5: (lv_op_2_0= CircumflexAccent )
            	    // InternalDialogParser.g:7982:6: lv_op_2_0= CircumflexAccent
            	    {
            	    lv_op_2_0=(Token)match(input,CircumflexAccent,FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getPowerRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7994:4: ( (lv_right_3_0= norm3_PropOfSubject ) )
            	    // InternalDialogParser.g:7995:5: (lv_right_3_0= norm3_PropOfSubject )
            	    {
            	    // InternalDialogParser.g:7995:5: (lv_right_3_0= norm3_PropOfSubject )
            	    // InternalDialogParser.g:7996:6: lv_right_3_0= norm3_PropOfSubject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_112);
            	    lv_right_3_0=norm3_PropOfSubject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPowerRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.PropOfSubject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop179;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_Power"


    // $ANTLR start "entryRulePropOfSubject"
    // InternalDialogParser.g:8018:1: entryRulePropOfSubject returns [EObject current=null] : iv_rulePropOfSubject= rulePropOfSubject EOF ;
    public final EObject entryRulePropOfSubject() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropOfSubject = null;


        try {
            // InternalDialogParser.g:8018:54: (iv_rulePropOfSubject= rulePropOfSubject EOF )
            // InternalDialogParser.g:8019:2: iv_rulePropOfSubject= rulePropOfSubject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropOfSubjectRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropOfSubject=rulePropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropOfSubject; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropOfSubject"


    // $ANTLR start "rulePropOfSubject"
    // InternalDialogParser.g:8025:1: rulePropOfSubject returns [EObject current=null] : (this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )? ) ;
    public final EObject rulePropOfSubject() throws RecognitionException {
        EObject current = null;

        Token lv_of_2_1=null;
        Token lv_of_2_2=null;
        Token lv_of_2_3=null;
        Token otherlv_5=null;
        EObject this_ElementInList_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_prop_6_0 = null;

        EObject lv_right_7_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8031:2: ( (this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )? ) )
            // InternalDialogParser.g:8032:2: (this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )? )
            {
            // InternalDialogParser.g:8032:2: (this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )? )
            // InternalDialogParser.g:8033:3: this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_113);
            this_ElementInList_0=ruleElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementInList_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8041:3: ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )?
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==Of) && (synpred19_InternalDialogParser())) {
                alt185=1;
            }
            else if ( (LA185_0==For) && (synpred19_InternalDialogParser())) {
                alt185=1;
            }
            else if ( (LA185_0==In) && (synpred19_InternalDialogParser())) {
                alt185=1;
            }
            else if ( (LA185_0==Has) && (synpred19_InternalDialogParser())) {
                alt185=1;
            }
            else if ( (LA185_0==RULE_QNAME_TERMINAL) && (synpred19_InternalDialogParser())) {
                alt185=1;
            }
            else if ( (LA185_0==RULE_ID) && (synpred19_InternalDialogParser())) {
                alt185=1;
            }
            switch (alt185) {
                case 1 :
                    // InternalDialogParser.g:8042:4: ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ )
                    {
                    // InternalDialogParser.g:8043:4: ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ )
                    int alt184=2;
                    int LA184_0 = input.LA(1);

                    if ( (LA184_0==For||LA184_0==In||LA184_0==Of) ) {
                        alt184=1;
                    }
                    else if ( (LA184_0==Has||(LA184_0>=RULE_ID && LA184_0<=RULE_QNAME_TERMINAL)) ) {
                        alt184=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 184, 0, input);

                        throw nvae;
                    }
                    switch (alt184) {
                        case 1 :
                            // InternalDialogParser.g:8044:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )
                            {
                            // InternalDialogParser.g:8044:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )
                            // InternalDialogParser.g:8045:6: () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) )
                            {
                            // InternalDialogParser.g:8045:6: ()
                            // InternalDialogParser.g:8046:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:8052:6: ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) )
                            // InternalDialogParser.g:8053:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            {
                            // InternalDialogParser.g:8053:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            // InternalDialogParser.g:8054:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            {
                            // InternalDialogParser.g:8054:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            int alt180=3;
                            switch ( input.LA(1) ) {
                            case Of:
                                {
                                alt180=1;
                                }
                                break;
                            case For:
                                {
                                alt180=2;
                                }
                                break;
                            case In:
                                {
                                alt180=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 180, 0, input);

                                throw nvae;
                            }

                            switch (alt180) {
                                case 1 :
                                    // InternalDialogParser.g:8055:9: lv_of_2_1= Of
                                    {
                                    lv_of_2_1=(Token)match(input,Of,FOLLOW_95); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_1, null);
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:8066:9: lv_of_2_2= For
                                    {
                                    lv_of_2_2=(Token)match(input,For,FOLLOW_95); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_2, null);
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalDialogParser.g:8077:9: lv_of_2_3= In
                                    {
                                    lv_of_2_3=(Token)match(input,In,FOLLOW_95); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_3, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalDialogParser.g:8090:6: ( (lv_right_3_0= rulePropOfSubject ) )
                            // InternalDialogParser.g:8091:7: (lv_right_3_0= rulePropOfSubject )
                            {
                            // InternalDialogParser.g:8091:7: (lv_right_3_0= rulePropOfSubject )
                            // InternalDialogParser.g:8092:8: lv_right_3_0= rulePropOfSubject
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_3_0=rulePropOfSubject();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_3_0,
                              									"com.ge.research.sadl.SADL.PropOfSubject");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:8111:5: ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+
                            {
                            // InternalDialogParser.g:8111:5: ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+
                            int cnt183=0;
                            loop183:
                            do {
                                int alt183=2;
                                int LA183_0 = input.LA(1);

                                if ( (LA183_0==Has) && (synpred20_InternalDialogParser())) {
                                    alt183=1;
                                }
                                else if ( (LA183_0==RULE_QNAME_TERMINAL) && (synpred20_InternalDialogParser())) {
                                    alt183=1;
                                }
                                else if ( (LA183_0==RULE_ID) && (synpred20_InternalDialogParser())) {
                                    alt183=1;
                                }


                                switch (alt183) {
                            	case 1 :
                            	    // InternalDialogParser.g:8112:6: ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? )
                            	    {
                            	    // InternalDialogParser.g:8113:6: ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? )
                            	    // InternalDialogParser.g:8114:7: () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )?
                            	    {
                            	    // InternalDialogParser.g:8114:7: ()
                            	    // InternalDialogParser.g:8115:8: 
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								current = forceCreateModelElementAndSet(
                            	      									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
                            	      									current);
                            	      							
                            	    }

                            	    }

                            	    // InternalDialogParser.g:8121:7: (otherlv_5= Has )?
                            	    int alt181=2;
                            	    int LA181_0 = input.LA(1);

                            	    if ( (LA181_0==Has) ) {
                            	        alt181=1;
                            	    }
                            	    switch (alt181) {
                            	        case 1 :
                            	            // InternalDialogParser.g:8122:8: otherlv_5= Has
                            	            {
                            	            otherlv_5=(Token)match(input,Has,FOLLOW_6); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_5, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:8127:7: ( (lv_prop_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:8128:8: (lv_prop_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:8128:8: (lv_prop_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:8129:9: lv_prop_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_114);
                            	    lv_prop_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	      									}
                            	      									set(
                            	      										current,
                            	      										"prop",
                            	      										lv_prop_6_0,
                            	      										"com.ge.research.sadl.SADL.SadlResource");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }

                            	    // InternalDialogParser.g:8146:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )?
                            	    int alt182=2;
                            	    alt182 = dfa182.predict(input);
                            	    switch (alt182) {
                            	        case 1 :
                            	            // InternalDialogParser.g:8147:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList )
                            	            {
                            	            // InternalDialogParser.g:8148:8: (lv_right_7_0= ruleElementInList )
                            	            // InternalDialogParser.g:8149:9: lv_right_7_0= ruleElementInList
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
                            	              								
                            	            }
                            	            pushFollow(FOLLOW_115);
                            	            lv_right_7_0=ruleElementInList();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									set(
                            	              										current,
                            	              										"right",
                            	              										lv_right_7_0,
                            	              										"com.ge.research.sadl.SADL.ElementInList");
                            	              									afterParserOrEnumRuleCall();
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt183 >= 1 ) break loop183;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(183, input);
                                        throw eee;
                                }
                                cnt183++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropOfSubject"


    // $ANTLR start "norm1_PropOfSubject"
    // InternalDialogParser.g:8175:1: norm1_PropOfSubject returns [EObject current=null] : (this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )? ) ;
    public final EObject norm1_PropOfSubject() throws RecognitionException {
        EObject current = null;

        Token lv_of_2_1=null;
        Token lv_of_2_2=null;
        Token lv_of_2_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_ElementInList_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_prop_7_0 = null;

        EObject lv_right_8_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8181:2: ( (this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )? ) )
            // InternalDialogParser.g:8182:2: (this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )? )
            {
            // InternalDialogParser.g:8182:2: (this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )? )
            // InternalDialogParser.g:8183:3: this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_116);
            this_ElementInList_0=norm1_ElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementInList_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8191:3: ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )?
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==Of) && (synpred22_InternalDialogParser())) {
                alt191=1;
            }
            else if ( (LA191_0==For) && (synpred22_InternalDialogParser())) {
                alt191=1;
            }
            else if ( (LA191_0==In) && (synpred22_InternalDialogParser())) {
                alt191=1;
            }
            else if ( (LA191_0==With) && (synpred22_InternalDialogParser())) {
                alt191=1;
            }
            else if ( (LA191_0==Has) && (synpred22_InternalDialogParser())) {
                alt191=1;
            }
            else if ( (LA191_0==RULE_QNAME_TERMINAL) && (synpred22_InternalDialogParser())) {
                alt191=1;
            }
            else if ( (LA191_0==RULE_ID) && (synpred22_InternalDialogParser())) {
                alt191=1;
            }
            switch (alt191) {
                case 1 :
                    // InternalDialogParser.g:8192:4: ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ )
                    {
                    // InternalDialogParser.g:8193:4: ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ )
                    int alt190=2;
                    int LA190_0 = input.LA(1);

                    if ( (LA190_0==For||LA190_0==In||LA190_0==Of) ) {
                        alt190=1;
                    }
                    else if ( (LA190_0==With||LA190_0==Has||(LA190_0>=RULE_ID && LA190_0<=RULE_QNAME_TERMINAL)) ) {
                        alt190=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 190, 0, input);

                        throw nvae;
                    }
                    switch (alt190) {
                        case 1 :
                            // InternalDialogParser.g:8194:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )
                            {
                            // InternalDialogParser.g:8194:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )
                            // InternalDialogParser.g:8195:6: () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) )
                            {
                            // InternalDialogParser.g:8195:6: ()
                            // InternalDialogParser.g:8196:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:8202:6: ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) )
                            // InternalDialogParser.g:8203:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            {
                            // InternalDialogParser.g:8203:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            // InternalDialogParser.g:8204:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            {
                            // InternalDialogParser.g:8204:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            int alt186=3;
                            switch ( input.LA(1) ) {
                            case Of:
                                {
                                alt186=1;
                                }
                                break;
                            case For:
                                {
                                alt186=2;
                                }
                                break;
                            case In:
                                {
                                alt186=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 186, 0, input);

                                throw nvae;
                            }

                            switch (alt186) {
                                case 1 :
                                    // InternalDialogParser.g:8205:9: lv_of_2_1= Of
                                    {
                                    lv_of_2_1=(Token)match(input,Of,FOLLOW_95); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_1, null);
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:8216:9: lv_of_2_2= For
                                    {
                                    lv_of_2_2=(Token)match(input,For,FOLLOW_95); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_2, null);
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalDialogParser.g:8227:9: lv_of_2_3= In
                                    {
                                    lv_of_2_3=(Token)match(input,In,FOLLOW_95); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_3, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalDialogParser.g:8240:6: ( (lv_right_3_0= norm1_PropOfSubject ) )
                            // InternalDialogParser.g:8241:7: (lv_right_3_0= norm1_PropOfSubject )
                            {
                            // InternalDialogParser.g:8241:7: (lv_right_3_0= norm1_PropOfSubject )
                            // InternalDialogParser.g:8242:8: lv_right_3_0= norm1_PropOfSubject
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_3_0=norm1_PropOfSubject();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_3_0,
                              									"com.ge.research.sadl.SADL.PropOfSubject");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:8261:5: ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+
                            {
                            // InternalDialogParser.g:8261:5: ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+
                            int cnt189=0;
                            loop189:
                            do {
                                int alt189=2;
                                int LA189_0 = input.LA(1);

                                if ( (LA189_0==With) && (synpred23_InternalDialogParser())) {
                                    alt189=1;
                                }
                                else if ( (LA189_0==Has) && (synpred23_InternalDialogParser())) {
                                    alt189=1;
                                }
                                else if ( (LA189_0==RULE_QNAME_TERMINAL) && (synpred23_InternalDialogParser())) {
                                    alt189=1;
                                }
                                else if ( (LA189_0==RULE_ID) && (synpred23_InternalDialogParser())) {
                                    alt189=1;
                                }


                                switch (alt189) {
                            	case 1 :
                            	    // InternalDialogParser.g:8262:6: ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? )
                            	    {
                            	    // InternalDialogParser.g:8263:6: ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? )
                            	    // InternalDialogParser.g:8264:7: () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )?
                            	    {
                            	    // InternalDialogParser.g:8264:7: ()
                            	    // InternalDialogParser.g:8265:8: 
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								current = forceCreateModelElementAndSet(
                            	      									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
                            	      									current);
                            	      							
                            	    }

                            	    }

                            	    // InternalDialogParser.g:8271:7: (otherlv_5= With | otherlv_6= Has )?
                            	    int alt187=3;
                            	    int LA187_0 = input.LA(1);

                            	    if ( (LA187_0==With) ) {
                            	        alt187=1;
                            	    }
                            	    else if ( (LA187_0==Has) ) {
                            	        alt187=2;
                            	    }
                            	    switch (alt187) {
                            	        case 1 :
                            	            // InternalDialogParser.g:8272:8: otherlv_5= With
                            	            {
                            	            otherlv_5=(Token)match(input,With,FOLLOW_6); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_5, grammarAccess.getPropOfSubjectAccess().getWithKeyword_1_0_1_0_2_0_0());
                            	              							
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // InternalDialogParser.g:8277:8: otherlv_6= Has
                            	            {
                            	            otherlv_6=(Token)match(input,Has,FOLLOW_6); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_6, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:8282:7: ( (lv_prop_7_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:8283:8: (lv_prop_7_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:8283:8: (lv_prop_7_0= ruleSadlResource )
                            	    // InternalDialogParser.g:8284:9: lv_prop_7_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_117);
                            	    lv_prop_7_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	      									}
                            	      									set(
                            	      										current,
                            	      										"prop",
                            	      										lv_prop_7_0,
                            	      										"com.ge.research.sadl.SADL.SadlResource");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }

                            	    // InternalDialogParser.g:8301:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )?
                            	    int alt188=2;
                            	    alt188 = dfa188.predict(input);
                            	    switch (alt188) {
                            	        case 1 :
                            	            // InternalDialogParser.g:8302:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList )
                            	            {
                            	            // InternalDialogParser.g:8303:8: (lv_right_8_0= norm1_ElementInList )
                            	            // InternalDialogParser.g:8304:9: lv_right_8_0= norm1_ElementInList
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
                            	              								
                            	            }
                            	            pushFollow(FOLLOW_118);
                            	            lv_right_8_0=norm1_ElementInList();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									set(
                            	              										current,
                            	              										"right",
                            	              										lv_right_8_0,
                            	              										"com.ge.research.sadl.SADL.ElementInList");
                            	              									afterParserOrEnumRuleCall();
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt189 >= 1 ) break loop189;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(189, input);
                                        throw eee;
                                }
                                cnt189++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_PropOfSubject"


    // $ANTLR start "norm2_PropOfSubject"
    // InternalDialogParser.g:8330:1: norm2_PropOfSubject returns [EObject current=null] : (this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )? ) ;
    public final EObject norm2_PropOfSubject() throws RecognitionException {
        EObject current = null;

        Token lv_of_2_1=null;
        Token lv_of_2_2=null;
        Token lv_of_2_3=null;
        Token lv_comma_5_0=null;
        Token otherlv_6=null;
        EObject this_ElementInList_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_prop_7_0 = null;

        EObject lv_right_8_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8336:2: ( (this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )? ) )
            // InternalDialogParser.g:8337:2: (this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )? )
            {
            // InternalDialogParser.g:8337:2: (this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )? )
            // InternalDialogParser.g:8338:3: this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_119);
            this_ElementInList_0=norm2_ElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementInList_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8346:3: ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )?
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==Of) && (synpred25_InternalDialogParser())) {
                alt198=1;
            }
            else if ( (LA198_0==For) && (synpred25_InternalDialogParser())) {
                alt198=1;
            }
            else if ( (LA198_0==In) && (synpred25_InternalDialogParser())) {
                alt198=1;
            }
            else if ( (LA198_0==Comma) && (synpred25_InternalDialogParser())) {
                alt198=1;
            }
            else if ( (LA198_0==Has) && (synpred25_InternalDialogParser())) {
                alt198=1;
            }
            else if ( (LA198_0==RULE_QNAME_TERMINAL) && (synpred25_InternalDialogParser())) {
                alt198=1;
            }
            else if ( (LA198_0==RULE_ID) && (synpred25_InternalDialogParser())) {
                alt198=1;
            }
            switch (alt198) {
                case 1 :
                    // InternalDialogParser.g:8347:4: ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ )
                    {
                    // InternalDialogParser.g:8348:4: ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ )
                    int alt197=2;
                    int LA197_0 = input.LA(1);

                    if ( (LA197_0==For||LA197_0==In||LA197_0==Of) ) {
                        alt197=1;
                    }
                    else if ( (LA197_0==Has||LA197_0==Comma||(LA197_0>=RULE_ID && LA197_0<=RULE_QNAME_TERMINAL)) ) {
                        alt197=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 197, 0, input);

                        throw nvae;
                    }
                    switch (alt197) {
                        case 1 :
                            // InternalDialogParser.g:8349:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )
                            {
                            // InternalDialogParser.g:8349:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )
                            // InternalDialogParser.g:8350:6: () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) )
                            {
                            // InternalDialogParser.g:8350:6: ()
                            // InternalDialogParser.g:8351:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:8357:6: ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) )
                            // InternalDialogParser.g:8358:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            {
                            // InternalDialogParser.g:8358:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            // InternalDialogParser.g:8359:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            {
                            // InternalDialogParser.g:8359:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            int alt192=3;
                            switch ( input.LA(1) ) {
                            case Of:
                                {
                                alt192=1;
                                }
                                break;
                            case For:
                                {
                                alt192=2;
                                }
                                break;
                            case In:
                                {
                                alt192=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 192, 0, input);

                                throw nvae;
                            }

                            switch (alt192) {
                                case 1 :
                                    // InternalDialogParser.g:8360:9: lv_of_2_1= Of
                                    {
                                    lv_of_2_1=(Token)match(input,Of,FOLLOW_95); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_1, null);
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:8371:9: lv_of_2_2= For
                                    {
                                    lv_of_2_2=(Token)match(input,For,FOLLOW_95); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_2, null);
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalDialogParser.g:8382:9: lv_of_2_3= In
                                    {
                                    lv_of_2_3=(Token)match(input,In,FOLLOW_95); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_3, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalDialogParser.g:8395:6: ( (lv_right_3_0= norm2_PropOfSubject ) )
                            // InternalDialogParser.g:8396:7: (lv_right_3_0= norm2_PropOfSubject )
                            {
                            // InternalDialogParser.g:8396:7: (lv_right_3_0= norm2_PropOfSubject )
                            // InternalDialogParser.g:8397:8: lv_right_3_0= norm2_PropOfSubject
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_3_0=norm2_PropOfSubject();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_3_0,
                              									"com.ge.research.sadl.SADL.PropOfSubject");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:8416:5: ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+
                            {
                            // InternalDialogParser.g:8416:5: ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+
                            int cnt196=0;
                            loop196:
                            do {
                                int alt196=2;
                                int LA196_0 = input.LA(1);

                                if ( (LA196_0==Comma) && (synpred26_InternalDialogParser())) {
                                    alt196=1;
                                }
                                else if ( (LA196_0==Has) && (synpred26_InternalDialogParser())) {
                                    alt196=1;
                                }
                                else if ( (LA196_0==RULE_QNAME_TERMINAL) && (synpred26_InternalDialogParser())) {
                                    alt196=1;
                                }
                                else if ( (LA196_0==RULE_ID) && (synpred26_InternalDialogParser())) {
                                    alt196=1;
                                }


                                switch (alt196) {
                            	case 1 :
                            	    // InternalDialogParser.g:8417:6: ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? )
                            	    {
                            	    // InternalDialogParser.g:8418:6: ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? )
                            	    // InternalDialogParser.g:8419:7: () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )?
                            	    {
                            	    // InternalDialogParser.g:8419:7: ()
                            	    // InternalDialogParser.g:8420:8: 
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								current = forceCreateModelElementAndSet(
                            	      									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
                            	      									current);
                            	      							
                            	    }

                            	    }

                            	    // InternalDialogParser.g:8426:7: ( (lv_comma_5_0= Comma ) )?
                            	    int alt193=2;
                            	    int LA193_0 = input.LA(1);

                            	    if ( (LA193_0==Comma) ) {
                            	        alt193=1;
                            	    }
                            	    switch (alt193) {
                            	        case 1 :
                            	            // InternalDialogParser.g:8427:8: (lv_comma_5_0= Comma )
                            	            {
                            	            // InternalDialogParser.g:8427:8: (lv_comma_5_0= Comma )
                            	            // InternalDialogParser.g:8428:9: lv_comma_5_0= Comma
                            	            {
                            	            lv_comma_5_0=(Token)match(input,Comma,FOLLOW_120); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_comma_5_0, grammarAccess.getPropOfSubjectAccess().getCommaCommaKeyword_1_0_1_0_1_0_0());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									setWithLastConsumed(current, "comma", true, ",");
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:8440:7: (otherlv_6= Has )?
                            	    int alt194=2;
                            	    int LA194_0 = input.LA(1);

                            	    if ( (LA194_0==Has) ) {
                            	        alt194=1;
                            	    }
                            	    switch (alt194) {
                            	        case 1 :
                            	            // InternalDialogParser.g:8441:8: otherlv_6= Has
                            	            {
                            	            otherlv_6=(Token)match(input,Has,FOLLOW_6); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_6, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:8446:7: ( (lv_prop_7_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:8447:8: (lv_prop_7_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:8447:8: (lv_prop_7_0= ruleSadlResource )
                            	    // InternalDialogParser.g:8448:9: lv_prop_7_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_121);
                            	    lv_prop_7_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	      									}
                            	      									set(
                            	      										current,
                            	      										"prop",
                            	      										lv_prop_7_0,
                            	      										"com.ge.research.sadl.SADL.SadlResource");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }

                            	    // InternalDialogParser.g:8465:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )?
                            	    int alt195=2;
                            	    alt195 = dfa195.predict(input);
                            	    switch (alt195) {
                            	        case 1 :
                            	            // InternalDialogParser.g:8466:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList )
                            	            {
                            	            // InternalDialogParser.g:8467:8: (lv_right_8_0= norm2_ElementInList )
                            	            // InternalDialogParser.g:8468:9: lv_right_8_0= norm2_ElementInList
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
                            	              								
                            	            }
                            	            pushFollow(FOLLOW_122);
                            	            lv_right_8_0=norm2_ElementInList();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									set(
                            	              										current,
                            	              										"right",
                            	              										lv_right_8_0,
                            	              										"com.ge.research.sadl.SADL.ElementInList");
                            	              									afterParserOrEnumRuleCall();
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt196 >= 1 ) break loop196;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(196, input);
                                        throw eee;
                                }
                                cnt196++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_PropOfSubject"


    // $ANTLR start "norm3_PropOfSubject"
    // InternalDialogParser.g:8494:1: norm3_PropOfSubject returns [EObject current=null] : (this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )? ) ;
    public final EObject norm3_PropOfSubject() throws RecognitionException {
        EObject current = null;

        Token lv_of_2_1=null;
        Token lv_of_2_2=null;
        Token lv_of_2_3=null;
        Token lv_comma_5_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject this_ElementInList_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_prop_8_0 = null;

        EObject lv_right_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8500:2: ( (this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )? ) )
            // InternalDialogParser.g:8501:2: (this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )? )
            {
            // InternalDialogParser.g:8501:2: (this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )? )
            // InternalDialogParser.g:8502:3: this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_123);
            this_ElementInList_0=norm3_ElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementInList_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8510:3: ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )?
            int alt205=2;
            alt205 = dfa205.predict(input);
            switch (alt205) {
                case 1 :
                    // InternalDialogParser.g:8511:4: ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ )
                    {
                    // InternalDialogParser.g:8512:4: ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ )
                    int alt204=2;
                    int LA204_0 = input.LA(1);

                    if ( (LA204_0==For||LA204_0==In||LA204_0==Of) ) {
                        alt204=1;
                    }
                    else if ( (LA204_0==With||LA204_0==Has||LA204_0==Comma||(LA204_0>=RULE_ID && LA204_0<=RULE_QNAME_TERMINAL)) ) {
                        alt204=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 204, 0, input);

                        throw nvae;
                    }
                    switch (alt204) {
                        case 1 :
                            // InternalDialogParser.g:8513:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )
                            {
                            // InternalDialogParser.g:8513:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )
                            // InternalDialogParser.g:8514:6: () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) )
                            {
                            // InternalDialogParser.g:8514:6: ()
                            // InternalDialogParser.g:8515:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:8521:6: ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) )
                            // InternalDialogParser.g:8522:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            {
                            // InternalDialogParser.g:8522:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            // InternalDialogParser.g:8523:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            {
                            // InternalDialogParser.g:8523:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            int alt199=3;
                            switch ( input.LA(1) ) {
                            case Of:
                                {
                                alt199=1;
                                }
                                break;
                            case For:
                                {
                                alt199=2;
                                }
                                break;
                            case In:
                                {
                                alt199=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 199, 0, input);

                                throw nvae;
                            }

                            switch (alt199) {
                                case 1 :
                                    // InternalDialogParser.g:8524:9: lv_of_2_1= Of
                                    {
                                    lv_of_2_1=(Token)match(input,Of,FOLLOW_4); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_1, null);
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:8535:9: lv_of_2_2= For
                                    {
                                    lv_of_2_2=(Token)match(input,For,FOLLOW_4); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_2, null);
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalDialogParser.g:8546:9: lv_of_2_3= In
                                    {
                                    lv_of_2_3=(Token)match(input,In,FOLLOW_4); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_3, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalDialogParser.g:8559:6: ( (lv_right_3_0= norm3_PropOfSubject ) )
                            // InternalDialogParser.g:8560:7: (lv_right_3_0= norm3_PropOfSubject )
                            {
                            // InternalDialogParser.g:8560:7: (lv_right_3_0= norm3_PropOfSubject )
                            // InternalDialogParser.g:8561:8: lv_right_3_0= norm3_PropOfSubject
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_3_0=norm3_PropOfSubject();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_3_0,
                              									"com.ge.research.sadl.SADL.PropOfSubject");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:8580:5: ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+
                            {
                            // InternalDialogParser.g:8580:5: ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+
                            int cnt203=0;
                            loop203:
                            do {
                                int alt203=2;
                                int LA203_0 = input.LA(1);

                                if ( (LA203_0==Comma) && (synpred29_InternalDialogParser())) {
                                    alt203=1;
                                }
                                else if ( (LA203_0==With) && (synpred29_InternalDialogParser())) {
                                    alt203=1;
                                }
                                else if ( (LA203_0==Has) && (synpred29_InternalDialogParser())) {
                                    alt203=1;
                                }
                                else if ( (LA203_0==RULE_QNAME_TERMINAL) && (synpred29_InternalDialogParser())) {
                                    alt203=1;
                                }
                                else if ( (LA203_0==RULE_ID) && (synpred29_InternalDialogParser())) {
                                    alt203=1;
                                }


                                switch (alt203) {
                            	case 1 :
                            	    // InternalDialogParser.g:8581:6: ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? )
                            	    {
                            	    // InternalDialogParser.g:8582:6: ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? )
                            	    // InternalDialogParser.g:8583:7: () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )?
                            	    {
                            	    // InternalDialogParser.g:8583:7: ()
                            	    // InternalDialogParser.g:8584:8: 
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								current = forceCreateModelElementAndSet(
                            	      									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
                            	      									current);
                            	      							
                            	    }

                            	    }

                            	    // InternalDialogParser.g:8590:7: ( (lv_comma_5_0= Comma ) )?
                            	    int alt200=2;
                            	    int LA200_0 = input.LA(1);

                            	    if ( (LA200_0==Comma) ) {
                            	        alt200=1;
                            	    }
                            	    switch (alt200) {
                            	        case 1 :
                            	            // InternalDialogParser.g:8591:8: (lv_comma_5_0= Comma )
                            	            {
                            	            // InternalDialogParser.g:8591:8: (lv_comma_5_0= Comma )
                            	            // InternalDialogParser.g:8592:9: lv_comma_5_0= Comma
                            	            {
                            	            lv_comma_5_0=(Token)match(input,Comma,FOLLOW_124); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_comma_5_0, grammarAccess.getPropOfSubjectAccess().getCommaCommaKeyword_1_0_1_0_1_0_0());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									setWithLastConsumed(current, "comma", true, ",");
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:8604:7: (otherlv_6= With | otherlv_7= Has )?
                            	    int alt201=3;
                            	    int LA201_0 = input.LA(1);

                            	    if ( (LA201_0==With) ) {
                            	        alt201=1;
                            	    }
                            	    else if ( (LA201_0==Has) ) {
                            	        alt201=2;
                            	    }
                            	    switch (alt201) {
                            	        case 1 :
                            	            // InternalDialogParser.g:8605:8: otherlv_6= With
                            	            {
                            	            otherlv_6=(Token)match(input,With,FOLLOW_6); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_6, grammarAccess.getPropOfSubjectAccess().getWithKeyword_1_0_1_0_2_0_0());
                            	              							
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // InternalDialogParser.g:8610:8: otherlv_7= Has
                            	            {
                            	            otherlv_7=(Token)match(input,Has,FOLLOW_6); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_7, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:8615:7: ( (lv_prop_8_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:8616:8: (lv_prop_8_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:8616:8: (lv_prop_8_0= ruleSadlResource )
                            	    // InternalDialogParser.g:8617:9: lv_prop_8_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_125);
                            	    lv_prop_8_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	      									}
                            	      									set(
                            	      										current,
                            	      										"prop",
                            	      										lv_prop_8_0,
                            	      										"com.ge.research.sadl.SADL.SadlResource");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }

                            	    // InternalDialogParser.g:8634:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )?
                            	    int alt202=2;
                            	    alt202 = dfa202.predict(input);
                            	    switch (alt202) {
                            	        case 1 :
                            	            // InternalDialogParser.g:8635:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList )
                            	            {
                            	            // InternalDialogParser.g:8636:8: (lv_right_9_0= norm3_ElementInList )
                            	            // InternalDialogParser.g:8637:9: lv_right_9_0= norm3_ElementInList
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
                            	              								
                            	            }
                            	            pushFollow(FOLLOW_126);
                            	            lv_right_9_0=norm3_ElementInList();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									set(
                            	              										current,
                            	              										"right",
                            	              										lv_right_9_0,
                            	              										"com.ge.research.sadl.SADL.ElementInList");
                            	              									afterParserOrEnumRuleCall();
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt203 >= 1 ) break loop203;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(203, input);
                                        throw eee;
                                }
                                cnt203++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_PropOfSubject"


    // $ANTLR start "entryRuleElementInList"
    // InternalDialogParser.g:8662:1: entryRuleElementInList returns [EObject current=null] : iv_ruleElementInList= ruleElementInList EOF ;
    public final EObject entryRuleElementInList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementInList = null;


        try {
            // InternalDialogParser.g:8662:54: (iv_ruleElementInList= ruleElementInList EOF )
            // InternalDialogParser.g:8663:2: iv_ruleElementInList= ruleElementInList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementInListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementInList=ruleElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementInList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementInList"


    // $ANTLR start "ruleElementInList"
    // InternalDialogParser.g:8669:1: ruleElementInList returns [EObject current=null] : (this_UnitExpression_0= ruleUnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) ) ) ;
    public final EObject ruleElementInList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_before_3_0=null;
        Token lv_after_4_0=null;
        EObject this_UnitExpression_0 = null;

        EObject lv_element_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8675:2: ( (this_UnitExpression_0= ruleUnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) ) ) )
            // InternalDialogParser.g:8676:2: (this_UnitExpression_0= ruleUnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) ) )
            {
            // InternalDialogParser.g:8676:2: (this_UnitExpression_0= ruleUnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) ) )
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==Another||LA207_0==Length||(LA207_0>=Count && LA207_0<=False)||LA207_0==First||(LA207_0>=Index && LA207_0<=Known)||LA207_0==There||LA207_0==Value||LA207_0==None||LA207_0==Last||LA207_0==Only||LA207_0==Some||(LA207_0>=True && LA207_0<=Type)||LA207_0==The||LA207_0==Any||LA207_0==Not||LA207_0==The_1||LA207_0==HyphenMinusHyphenMinus||(LA207_0>=An && LA207_0<=An_1)||LA207_0==ExclamationMark||LA207_0==LeftParenthesis||LA207_0==HyphenMinus||LA207_0==A||LA207_0==LeftSquareBracket||(LA207_0>=A_1 && LA207_0<=LeftCurlyBracket)||LA207_0==RULE_NUMBER||(LA207_0>=RULE_ID && LA207_0<=RULE_STRING)) ) {
                alt207=1;
            }
            else if ( (LA207_0==Element) ) {
                alt207=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 207, 0, input);

                throw nvae;
            }
            switch (alt207) {
                case 1 :
                    // InternalDialogParser.g:8677:3: this_UnitExpression_0= ruleUnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnitExpression_0=ruleUnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnitExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:8686:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) )
                    {
                    // InternalDialogParser.g:8686:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) )
                    // InternalDialogParser.g:8687:4: () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) )
                    {
                    // InternalDialogParser.g:8687:4: ()
                    // InternalDialogParser.g:8688:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,Element,FOLLOW_127); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:8698:4: ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )?
                    int alt206=3;
                    int LA206_0 = input.LA(1);

                    if ( (LA206_0==Before) ) {
                        alt206=1;
                    }
                    else if ( (LA206_0==After) ) {
                        alt206=2;
                    }
                    switch (alt206) {
                        case 1 :
                            // InternalDialogParser.g:8699:5: ( (lv_before_3_0= Before ) )
                            {
                            // InternalDialogParser.g:8699:5: ( (lv_before_3_0= Before ) )
                            // InternalDialogParser.g:8700:6: (lv_before_3_0= Before )
                            {
                            // InternalDialogParser.g:8700:6: (lv_before_3_0= Before )
                            // InternalDialogParser.g:8701:7: lv_before_3_0= Before
                            {
                            lv_before_3_0=(Token)match(input,Before,FOLLOW_128); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "before", true, "before");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:8714:5: ( (lv_after_4_0= After ) )
                            {
                            // InternalDialogParser.g:8714:5: ( (lv_after_4_0= After ) )
                            // InternalDialogParser.g:8715:6: (lv_after_4_0= After )
                            {
                            // InternalDialogParser.g:8715:6: (lv_after_4_0= After )
                            // InternalDialogParser.g:8716:7: lv_after_4_0= After
                            {
                            lv_after_4_0=(Token)match(input,After,FOLLOW_128); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "after", true, "after");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:8729:4: ( (lv_element_5_0= ruleUnitExpression ) )
                    // InternalDialogParser.g:8730:5: (lv_element_5_0= ruleUnitExpression )
                    {
                    // InternalDialogParser.g:8730:5: (lv_element_5_0= ruleUnitExpression )
                    // InternalDialogParser.g:8731:6: lv_element_5_0= ruleUnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_element_5_0=ruleUnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElementInListRule());
                      						}
                      						set(
                      							current,
                      							"element",
                      							lv_element_5_0,
                      							"com.ge.research.sadl.SADL.UnitExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementInList"


    // $ANTLR start "norm1_ElementInList"
    // InternalDialogParser.g:8754:1: norm1_ElementInList returns [EObject current=null] : (this_UnitExpression_0= norm1_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) ) ) ;
    public final EObject norm1_ElementInList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_before_3_0=null;
        Token lv_after_4_0=null;
        EObject this_UnitExpression_0 = null;

        EObject lv_element_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8760:2: ( (this_UnitExpression_0= norm1_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) ) ) )
            // InternalDialogParser.g:8761:2: (this_UnitExpression_0= norm1_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) ) )
            {
            // InternalDialogParser.g:8761:2: (this_UnitExpression_0= norm1_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) ) )
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==Another||LA209_0==Length||(LA209_0>=Count && LA209_0<=False)||LA209_0==First||(LA209_0>=Index && LA209_0<=Known)||LA209_0==There||LA209_0==Value||LA209_0==None||LA209_0==Last||LA209_0==Only||LA209_0==Some||(LA209_0>=True && LA209_0<=Type)||LA209_0==The||LA209_0==Any||LA209_0==Not||LA209_0==The_1||LA209_0==HyphenMinusHyphenMinus||(LA209_0>=An && LA209_0<=An_1)||LA209_0==ExclamationMark||LA209_0==LeftParenthesis||LA209_0==HyphenMinus||LA209_0==A||LA209_0==LeftSquareBracket||(LA209_0>=A_1 && LA209_0<=LeftCurlyBracket)||LA209_0==RULE_NUMBER||(LA209_0>=RULE_ID && LA209_0<=RULE_STRING)) ) {
                alt209=1;
            }
            else if ( (LA209_0==Element) ) {
                alt209=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 209, 0, input);

                throw nvae;
            }
            switch (alt209) {
                case 1 :
                    // InternalDialogParser.g:8762:3: this_UnitExpression_0= norm1_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnitExpression_0=norm1_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnitExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:8771:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) )
                    {
                    // InternalDialogParser.g:8771:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) )
                    // InternalDialogParser.g:8772:4: () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) )
                    {
                    // InternalDialogParser.g:8772:4: ()
                    // InternalDialogParser.g:8773:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,Element,FOLLOW_127); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:8783:4: ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )?
                    int alt208=3;
                    int LA208_0 = input.LA(1);

                    if ( (LA208_0==Before) ) {
                        alt208=1;
                    }
                    else if ( (LA208_0==After) ) {
                        alt208=2;
                    }
                    switch (alt208) {
                        case 1 :
                            // InternalDialogParser.g:8784:5: ( (lv_before_3_0= Before ) )
                            {
                            // InternalDialogParser.g:8784:5: ( (lv_before_3_0= Before ) )
                            // InternalDialogParser.g:8785:6: (lv_before_3_0= Before )
                            {
                            // InternalDialogParser.g:8785:6: (lv_before_3_0= Before )
                            // InternalDialogParser.g:8786:7: lv_before_3_0= Before
                            {
                            lv_before_3_0=(Token)match(input,Before,FOLLOW_128); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "before", true, "before");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:8799:5: ( (lv_after_4_0= After ) )
                            {
                            // InternalDialogParser.g:8799:5: ( (lv_after_4_0= After ) )
                            // InternalDialogParser.g:8800:6: (lv_after_4_0= After )
                            {
                            // InternalDialogParser.g:8800:6: (lv_after_4_0= After )
                            // InternalDialogParser.g:8801:7: lv_after_4_0= After
                            {
                            lv_after_4_0=(Token)match(input,After,FOLLOW_128); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "after", true, "after");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:8814:4: ( (lv_element_5_0= norm1_UnitExpression ) )
                    // InternalDialogParser.g:8815:5: (lv_element_5_0= norm1_UnitExpression )
                    {
                    // InternalDialogParser.g:8815:5: (lv_element_5_0= norm1_UnitExpression )
                    // InternalDialogParser.g:8816:6: lv_element_5_0= norm1_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_element_5_0=norm1_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElementInListRule());
                      						}
                      						set(
                      							current,
                      							"element",
                      							lv_element_5_0,
                      							"com.ge.research.sadl.SADL.UnitExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_ElementInList"


    // $ANTLR start "norm2_ElementInList"
    // InternalDialogParser.g:8839:1: norm2_ElementInList returns [EObject current=null] : (this_UnitExpression_0= norm2_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) ) ) ;
    public final EObject norm2_ElementInList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_before_3_0=null;
        Token lv_after_4_0=null;
        EObject this_UnitExpression_0 = null;

        EObject lv_element_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8845:2: ( (this_UnitExpression_0= norm2_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) ) ) )
            // InternalDialogParser.g:8846:2: (this_UnitExpression_0= norm2_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) ) )
            {
            // InternalDialogParser.g:8846:2: (this_UnitExpression_0= norm2_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) ) )
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==Another||LA211_0==Length||(LA211_0>=Count && LA211_0<=False)||LA211_0==First||(LA211_0>=Index && LA211_0<=Known)||LA211_0==There||LA211_0==Value||LA211_0==None||LA211_0==Last||LA211_0==Only||LA211_0==Some||(LA211_0>=True && LA211_0<=Type)||LA211_0==The||LA211_0==Any||LA211_0==Not||LA211_0==The_1||LA211_0==HyphenMinusHyphenMinus||(LA211_0>=An && LA211_0<=An_1)||LA211_0==ExclamationMark||LA211_0==LeftParenthesis||LA211_0==HyphenMinus||LA211_0==A||LA211_0==LeftSquareBracket||(LA211_0>=A_1 && LA211_0<=LeftCurlyBracket)||LA211_0==RULE_NUMBER||(LA211_0>=RULE_ID && LA211_0<=RULE_STRING)) ) {
                alt211=1;
            }
            else if ( (LA211_0==Element) ) {
                alt211=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 211, 0, input);

                throw nvae;
            }
            switch (alt211) {
                case 1 :
                    // InternalDialogParser.g:8847:3: this_UnitExpression_0= norm2_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnitExpression_0=norm2_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnitExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:8856:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) )
                    {
                    // InternalDialogParser.g:8856:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) )
                    // InternalDialogParser.g:8857:4: () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) )
                    {
                    // InternalDialogParser.g:8857:4: ()
                    // InternalDialogParser.g:8858:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,Element,FOLLOW_127); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:8868:4: ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )?
                    int alt210=3;
                    int LA210_0 = input.LA(1);

                    if ( (LA210_0==Before) ) {
                        alt210=1;
                    }
                    else if ( (LA210_0==After) ) {
                        alt210=2;
                    }
                    switch (alt210) {
                        case 1 :
                            // InternalDialogParser.g:8869:5: ( (lv_before_3_0= Before ) )
                            {
                            // InternalDialogParser.g:8869:5: ( (lv_before_3_0= Before ) )
                            // InternalDialogParser.g:8870:6: (lv_before_3_0= Before )
                            {
                            // InternalDialogParser.g:8870:6: (lv_before_3_0= Before )
                            // InternalDialogParser.g:8871:7: lv_before_3_0= Before
                            {
                            lv_before_3_0=(Token)match(input,Before,FOLLOW_128); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "before", true, "before");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:8884:5: ( (lv_after_4_0= After ) )
                            {
                            // InternalDialogParser.g:8884:5: ( (lv_after_4_0= After ) )
                            // InternalDialogParser.g:8885:6: (lv_after_4_0= After )
                            {
                            // InternalDialogParser.g:8885:6: (lv_after_4_0= After )
                            // InternalDialogParser.g:8886:7: lv_after_4_0= After
                            {
                            lv_after_4_0=(Token)match(input,After,FOLLOW_128); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "after", true, "after");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:8899:4: ( (lv_element_5_0= norm2_UnitExpression ) )
                    // InternalDialogParser.g:8900:5: (lv_element_5_0= norm2_UnitExpression )
                    {
                    // InternalDialogParser.g:8900:5: (lv_element_5_0= norm2_UnitExpression )
                    // InternalDialogParser.g:8901:6: lv_element_5_0= norm2_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_element_5_0=norm2_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElementInListRule());
                      						}
                      						set(
                      							current,
                      							"element",
                      							lv_element_5_0,
                      							"com.ge.research.sadl.SADL.UnitExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_ElementInList"


    // $ANTLR start "norm3_ElementInList"
    // InternalDialogParser.g:8924:1: norm3_ElementInList returns [EObject current=null] : (this_UnitExpression_0= norm3_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) ) ) ;
    public final EObject norm3_ElementInList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_before_3_0=null;
        Token lv_after_4_0=null;
        EObject this_UnitExpression_0 = null;

        EObject lv_element_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8930:2: ( (this_UnitExpression_0= norm3_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) ) ) )
            // InternalDialogParser.g:8931:2: (this_UnitExpression_0= norm3_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) ) )
            {
            // InternalDialogParser.g:8931:2: (this_UnitExpression_0= norm3_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) ) )
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==Another||LA213_0==Length||(LA213_0>=Count && LA213_0<=False)||LA213_0==First||(LA213_0>=Index && LA213_0<=Known)||LA213_0==There||LA213_0==Value||LA213_0==None||LA213_0==Last||LA213_0==Only||LA213_0==Some||(LA213_0>=True && LA213_0<=Type)||LA213_0==The||LA213_0==Any||LA213_0==Not||LA213_0==The_1||LA213_0==HyphenMinusHyphenMinus||(LA213_0>=An && LA213_0<=An_1)||LA213_0==ExclamationMark||LA213_0==LeftParenthesis||LA213_0==HyphenMinus||LA213_0==A||LA213_0==LeftSquareBracket||(LA213_0>=A_1 && LA213_0<=LeftCurlyBracket)||LA213_0==RULE_NUMBER||(LA213_0>=RULE_ID && LA213_0<=RULE_STRING)) ) {
                alt213=1;
            }
            else if ( (LA213_0==Element) ) {
                alt213=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 213, 0, input);

                throw nvae;
            }
            switch (alt213) {
                case 1 :
                    // InternalDialogParser.g:8932:3: this_UnitExpression_0= norm3_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnitExpression_0=norm3_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnitExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:8941:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) )
                    {
                    // InternalDialogParser.g:8941:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) )
                    // InternalDialogParser.g:8942:4: () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) )
                    {
                    // InternalDialogParser.g:8942:4: ()
                    // InternalDialogParser.g:8943:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,Element,FOLLOW_127); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:8953:4: ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )?
                    int alt212=3;
                    int LA212_0 = input.LA(1);

                    if ( (LA212_0==Before) ) {
                        alt212=1;
                    }
                    else if ( (LA212_0==After) ) {
                        alt212=2;
                    }
                    switch (alt212) {
                        case 1 :
                            // InternalDialogParser.g:8954:5: ( (lv_before_3_0= Before ) )
                            {
                            // InternalDialogParser.g:8954:5: ( (lv_before_3_0= Before ) )
                            // InternalDialogParser.g:8955:6: (lv_before_3_0= Before )
                            {
                            // InternalDialogParser.g:8955:6: (lv_before_3_0= Before )
                            // InternalDialogParser.g:8956:7: lv_before_3_0= Before
                            {
                            lv_before_3_0=(Token)match(input,Before,FOLLOW_128); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "before", true, "before");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:8969:5: ( (lv_after_4_0= After ) )
                            {
                            // InternalDialogParser.g:8969:5: ( (lv_after_4_0= After ) )
                            // InternalDialogParser.g:8970:6: (lv_after_4_0= After )
                            {
                            // InternalDialogParser.g:8970:6: (lv_after_4_0= After )
                            // InternalDialogParser.g:8971:7: lv_after_4_0= After
                            {
                            lv_after_4_0=(Token)match(input,After,FOLLOW_128); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "after", true, "after");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:8984:4: ( (lv_element_5_0= norm3_UnitExpression ) )
                    // InternalDialogParser.g:8985:5: (lv_element_5_0= norm3_UnitExpression )
                    {
                    // InternalDialogParser.g:8985:5: (lv_element_5_0= norm3_UnitExpression )
                    // InternalDialogParser.g:8986:6: lv_element_5_0= norm3_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_element_5_0=norm3_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElementInListRule());
                      						}
                      						set(
                      							current,
                      							"element",
                      							lv_element_5_0,
                      							"com.ge.research.sadl.SADL.UnitExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_ElementInList"


    // $ANTLR start "entryRuleUnitExpression"
    // InternalDialogParser.g:9008:1: entryRuleUnitExpression returns [EObject current=null] : iv_ruleUnitExpression= ruleUnitExpression EOF ;
    public final EObject entryRuleUnitExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnitExpression = null;


        try {
            // InternalDialogParser.g:9008:55: (iv_ruleUnitExpression= ruleUnitExpression EOF )
            // InternalDialogParser.g:9009:2: iv_ruleUnitExpression= ruleUnitExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnitExpression=ruleUnitExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnitExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnitExpression"


    // $ANTLR start "ruleUnitExpression"
    // InternalDialogParser.g:9015:1: ruleUnitExpression returns [EObject current=null] : (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleUnitExpression() throws RecognitionException {
        EObject current = null;

        Token lv_unit_2_0=null;
        EObject this_UnaryExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9021:2: ( (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) )
            // InternalDialogParser.g:9022:2: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            {
            // InternalDialogParser.g:9022:2: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            // InternalDialogParser.g:9023:3: this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_129);
            this_UnaryExpression_0=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9031:3: ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==RULE_STRING) ) {
                alt214=1;
            }
            switch (alt214) {
                case 1 :
                    // InternalDialogParser.g:9032:4: () ( (lv_unit_2_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:9032:4: ()
                    // InternalDialogParser.g:9033:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9039:4: ( (lv_unit_2_0= RULE_STRING ) )
                    // InternalDialogParser.g:9040:5: (lv_unit_2_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:9040:5: (lv_unit_2_0= RULE_STRING )
                    // InternalDialogParser.g:9041:6: lv_unit_2_0= RULE_STRING
                    {
                    lv_unit_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnitExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitExpression"


    // $ANTLR start "norm1_UnitExpression"
    // InternalDialogParser.g:9063:1: norm1_UnitExpression returns [EObject current=null] : (this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) ;
    public final EObject norm1_UnitExpression() throws RecognitionException {
        EObject current = null;

        Token lv_unit_2_0=null;
        EObject this_UnaryExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9069:2: ( (this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) )
            // InternalDialogParser.g:9070:2: (this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            {
            // InternalDialogParser.g:9070:2: (this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            // InternalDialogParser.g:9071:3: this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_129);
            this_UnaryExpression_0=norm1_UnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9079:3: ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            int alt215=2;
            int LA215_0 = input.LA(1);

            if ( (LA215_0==RULE_STRING) ) {
                alt215=1;
            }
            switch (alt215) {
                case 1 :
                    // InternalDialogParser.g:9080:4: () ( (lv_unit_2_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:9080:4: ()
                    // InternalDialogParser.g:9081:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9087:4: ( (lv_unit_2_0= RULE_STRING ) )
                    // InternalDialogParser.g:9088:5: (lv_unit_2_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:9088:5: (lv_unit_2_0= RULE_STRING )
                    // InternalDialogParser.g:9089:6: lv_unit_2_0= RULE_STRING
                    {
                    lv_unit_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnitExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_UnitExpression"


    // $ANTLR start "norm2_UnitExpression"
    // InternalDialogParser.g:9111:1: norm2_UnitExpression returns [EObject current=null] : (this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) ;
    public final EObject norm2_UnitExpression() throws RecognitionException {
        EObject current = null;

        Token lv_unit_2_0=null;
        EObject this_UnaryExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9117:2: ( (this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) )
            // InternalDialogParser.g:9118:2: (this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            {
            // InternalDialogParser.g:9118:2: (this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            // InternalDialogParser.g:9119:3: this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_129);
            this_UnaryExpression_0=norm2_UnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9127:3: ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==RULE_STRING) ) {
                alt216=1;
            }
            switch (alt216) {
                case 1 :
                    // InternalDialogParser.g:9128:4: () ( (lv_unit_2_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:9128:4: ()
                    // InternalDialogParser.g:9129:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9135:4: ( (lv_unit_2_0= RULE_STRING ) )
                    // InternalDialogParser.g:9136:5: (lv_unit_2_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:9136:5: (lv_unit_2_0= RULE_STRING )
                    // InternalDialogParser.g:9137:6: lv_unit_2_0= RULE_STRING
                    {
                    lv_unit_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnitExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_UnitExpression"


    // $ANTLR start "norm3_UnitExpression"
    // InternalDialogParser.g:9159:1: norm3_UnitExpression returns [EObject current=null] : (this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) ;
    public final EObject norm3_UnitExpression() throws RecognitionException {
        EObject current = null;

        Token lv_unit_2_0=null;
        EObject this_UnaryExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9165:2: ( (this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) )
            // InternalDialogParser.g:9166:2: (this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            {
            // InternalDialogParser.g:9166:2: (this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            // InternalDialogParser.g:9167:3: this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_129);
            this_UnaryExpression_0=norm3_UnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9175:3: ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            int alt217=2;
            int LA217_0 = input.LA(1);

            if ( (LA217_0==RULE_STRING) ) {
                alt217=1;
            }
            switch (alt217) {
                case 1 :
                    // InternalDialogParser.g:9176:4: () ( (lv_unit_2_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:9176:4: ()
                    // InternalDialogParser.g:9177:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9183:4: ( (lv_unit_2_0= RULE_STRING ) )
                    // InternalDialogParser.g:9184:5: (lv_unit_2_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:9184:5: (lv_unit_2_0= RULE_STRING )
                    // InternalDialogParser.g:9185:6: lv_unit_2_0= RULE_STRING
                    {
                    lv_unit_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnitExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_UnitExpression"


    // $ANTLR start "entryRuleUnaryExpression"
    // InternalDialogParser.g:9206:1: entryRuleUnaryExpression returns [EObject current=null] : iv_ruleUnaryExpression= ruleUnaryExpression EOF ;
    public final EObject entryRuleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpression = null;


        try {
            // InternalDialogParser.g:9206:56: (iv_ruleUnaryExpression= ruleUnaryExpression EOF )
            // InternalDialogParser.g:9207:2: iv_ruleUnaryExpression= ruleUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpression=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryExpression"


    // $ANTLR start "ruleUnaryExpression"
    // InternalDialogParser.g:9213:1: ruleUnaryExpression returns [EObject current=null] : (this_PrimaryExpression_0= rulePrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) ) ) ;
    public final EObject ruleUnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject this_PrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_5 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9219:2: ( (this_PrimaryExpression_0= rulePrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) ) ) )
            // InternalDialogParser.g:9220:2: (this_PrimaryExpression_0= rulePrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) ) )
            {
            // InternalDialogParser.g:9220:2: (this_PrimaryExpression_0= rulePrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) ) )
            int alt219=2;
            int LA219_0 = input.LA(1);

            if ( (LA219_0==Another||LA219_0==Length||(LA219_0>=Count && LA219_0<=False)||LA219_0==First||(LA219_0>=Index && LA219_0<=Known)||LA219_0==Value||LA219_0==None||LA219_0==Last||LA219_0==Some||(LA219_0>=True && LA219_0<=Type)||LA219_0==The||LA219_0==Any||LA219_0==The_1||LA219_0==HyphenMinusHyphenMinus||(LA219_0>=An && LA219_0<=An_1)||LA219_0==LeftParenthesis||LA219_0==A||LA219_0==LeftSquareBracket||(LA219_0>=A_1 && LA219_0<=LeftCurlyBracket)||LA219_0==RULE_NUMBER||(LA219_0>=RULE_ID && LA219_0<=RULE_STRING)) ) {
                alt219=1;
            }
            else if ( (LA219_0==There||LA219_0==Only||LA219_0==Not||LA219_0==ExclamationMark||LA219_0==HyphenMinus) ) {
                alt219=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 219, 0, input);

                throw nvae;
            }
            switch (alt219) {
                case 1 :
                    // InternalDialogParser.g:9221:3: this_PrimaryExpression_0= rulePrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_0=rulePrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:9230:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) )
                    {
                    // InternalDialogParser.g:9230:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) )
                    // InternalDialogParser.g:9231:4: () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) )
                    {
                    // InternalDialogParser.g:9231:4: ()
                    // InternalDialogParser.g:9232:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9238:4: ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) )
                    // InternalDialogParser.g:9239:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    {
                    // InternalDialogParser.g:9239:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    // InternalDialogParser.g:9240:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    {
                    // InternalDialogParser.g:9240:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    int alt218=5;
                    switch ( input.LA(1) ) {
                    case Not:
                        {
                        alt218=1;
                        }
                        break;
                    case ExclamationMark:
                        {
                        alt218=2;
                        }
                        break;
                    case Only:
                        {
                        alt218=3;
                        }
                        break;
                    case HyphenMinus:
                        {
                        alt218=4;
                        }
                        break;
                    case There:
                        {
                        alt218=5;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 218, 0, input);

                        throw nvae;
                    }

                    switch (alt218) {
                        case 1 :
                            // InternalDialogParser.g:9241:7: lv_op_2_1= Not
                            {
                            lv_op_2_1=(Token)match(input,Not,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:9252:7: lv_op_2_2= ExclamationMark
                            {
                            lv_op_2_2=(Token)match(input,ExclamationMark,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:9263:7: lv_op_2_3= Only
                            {
                            lv_op_2_3=(Token)match(input,Only,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalDialogParser.g:9274:7: lv_op_2_4= HyphenMinus
                            {
                            lv_op_2_4=(Token)match(input,HyphenMinus,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalDialogParser.g:9285:7: lv_op_2_5= ruleThereExists
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
                              						
                            }
                            pushFollow(FOLLOW_130);
                            lv_op_2_5=ruleThereExists();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                              							}
                              							set(
                              								current,
                              								"op",
                              								lv_op_2_5,
                              								"com.ge.research.sadl.SADL.ThereExists");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:9303:4: ( (lv_expr_3_0= rulePrimaryExpression ) )
                    // InternalDialogParser.g:9304:5: (lv_expr_3_0= rulePrimaryExpression )
                    {
                    // InternalDialogParser.g:9304:5: (lv_expr_3_0= rulePrimaryExpression )
                    // InternalDialogParser.g:9305:6: lv_expr_3_0= rulePrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=rulePrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_0,
                      							"com.ge.research.sadl.SADL.PrimaryExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryExpression"


    // $ANTLR start "norm1_UnaryExpression"
    // InternalDialogParser.g:9328:1: norm1_UnaryExpression returns [EObject current=null] : (this_PrimaryExpression_0= norm1_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) ) ) ;
    public final EObject norm1_UnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject this_PrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_5 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9334:2: ( (this_PrimaryExpression_0= norm1_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) ) ) )
            // InternalDialogParser.g:9335:2: (this_PrimaryExpression_0= norm1_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) ) )
            {
            // InternalDialogParser.g:9335:2: (this_PrimaryExpression_0= norm1_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) ) )
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==Another||LA221_0==Length||(LA221_0>=Count && LA221_0<=False)||LA221_0==First||(LA221_0>=Index && LA221_0<=Known)||LA221_0==Value||LA221_0==None||LA221_0==Last||LA221_0==Some||(LA221_0>=True && LA221_0<=Type)||LA221_0==The||LA221_0==Any||LA221_0==The_1||LA221_0==HyphenMinusHyphenMinus||(LA221_0>=An && LA221_0<=An_1)||LA221_0==LeftParenthesis||LA221_0==A||LA221_0==LeftSquareBracket||(LA221_0>=A_1 && LA221_0<=LeftCurlyBracket)||LA221_0==RULE_NUMBER||(LA221_0>=RULE_ID && LA221_0<=RULE_STRING)) ) {
                alt221=1;
            }
            else if ( (LA221_0==There||LA221_0==Only||LA221_0==Not||LA221_0==ExclamationMark||LA221_0==HyphenMinus) ) {
                alt221=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 221, 0, input);

                throw nvae;
            }
            switch (alt221) {
                case 1 :
                    // InternalDialogParser.g:9336:3: this_PrimaryExpression_0= norm1_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_0=norm1_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:9345:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) )
                    {
                    // InternalDialogParser.g:9345:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) )
                    // InternalDialogParser.g:9346:4: () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) )
                    {
                    // InternalDialogParser.g:9346:4: ()
                    // InternalDialogParser.g:9347:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9353:4: ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) )
                    // InternalDialogParser.g:9354:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    {
                    // InternalDialogParser.g:9354:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    // InternalDialogParser.g:9355:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    {
                    // InternalDialogParser.g:9355:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    int alt220=5;
                    switch ( input.LA(1) ) {
                    case Not:
                        {
                        alt220=1;
                        }
                        break;
                    case ExclamationMark:
                        {
                        alt220=2;
                        }
                        break;
                    case Only:
                        {
                        alt220=3;
                        }
                        break;
                    case HyphenMinus:
                        {
                        alt220=4;
                        }
                        break;
                    case There:
                        {
                        alt220=5;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 220, 0, input);

                        throw nvae;
                    }

                    switch (alt220) {
                        case 1 :
                            // InternalDialogParser.g:9356:7: lv_op_2_1= Not
                            {
                            lv_op_2_1=(Token)match(input,Not,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:9367:7: lv_op_2_2= ExclamationMark
                            {
                            lv_op_2_2=(Token)match(input,ExclamationMark,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:9378:7: lv_op_2_3= Only
                            {
                            lv_op_2_3=(Token)match(input,Only,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalDialogParser.g:9389:7: lv_op_2_4= HyphenMinus
                            {
                            lv_op_2_4=(Token)match(input,HyphenMinus,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalDialogParser.g:9400:7: lv_op_2_5= ruleThereExists
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
                              						
                            }
                            pushFollow(FOLLOW_130);
                            lv_op_2_5=ruleThereExists();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                              							}
                              							set(
                              								current,
                              								"op",
                              								lv_op_2_5,
                              								"com.ge.research.sadl.SADL.ThereExists");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:9418:4: ( (lv_expr_3_0= norm1_PrimaryExpression ) )
                    // InternalDialogParser.g:9419:5: (lv_expr_3_0= norm1_PrimaryExpression )
                    {
                    // InternalDialogParser.g:9419:5: (lv_expr_3_0= norm1_PrimaryExpression )
                    // InternalDialogParser.g:9420:6: lv_expr_3_0= norm1_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=norm1_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_0,
                      							"com.ge.research.sadl.SADL.PrimaryExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_UnaryExpression"


    // $ANTLR start "norm2_UnaryExpression"
    // InternalDialogParser.g:9443:1: norm2_UnaryExpression returns [EObject current=null] : (this_PrimaryExpression_0= norm2_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) ) ) ;
    public final EObject norm2_UnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject this_PrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_5 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9449:2: ( (this_PrimaryExpression_0= norm2_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) ) ) )
            // InternalDialogParser.g:9450:2: (this_PrimaryExpression_0= norm2_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) ) )
            {
            // InternalDialogParser.g:9450:2: (this_PrimaryExpression_0= norm2_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) ) )
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( (LA223_0==Another||LA223_0==Length||(LA223_0>=Count && LA223_0<=False)||LA223_0==First||(LA223_0>=Index && LA223_0<=Known)||LA223_0==Value||LA223_0==None||LA223_0==Last||LA223_0==Some||(LA223_0>=True && LA223_0<=Type)||LA223_0==The||LA223_0==Any||LA223_0==The_1||LA223_0==HyphenMinusHyphenMinus||(LA223_0>=An && LA223_0<=An_1)||LA223_0==LeftParenthesis||LA223_0==A||LA223_0==LeftSquareBracket||(LA223_0>=A_1 && LA223_0<=LeftCurlyBracket)||LA223_0==RULE_NUMBER||(LA223_0>=RULE_ID && LA223_0<=RULE_STRING)) ) {
                alt223=1;
            }
            else if ( (LA223_0==There||LA223_0==Only||LA223_0==Not||LA223_0==ExclamationMark||LA223_0==HyphenMinus) ) {
                alt223=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 223, 0, input);

                throw nvae;
            }
            switch (alt223) {
                case 1 :
                    // InternalDialogParser.g:9451:3: this_PrimaryExpression_0= norm2_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_0=norm2_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:9460:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) )
                    {
                    // InternalDialogParser.g:9460:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) )
                    // InternalDialogParser.g:9461:4: () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) )
                    {
                    // InternalDialogParser.g:9461:4: ()
                    // InternalDialogParser.g:9462:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9468:4: ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) )
                    // InternalDialogParser.g:9469:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    {
                    // InternalDialogParser.g:9469:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    // InternalDialogParser.g:9470:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    {
                    // InternalDialogParser.g:9470:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    int alt222=5;
                    switch ( input.LA(1) ) {
                    case Not:
                        {
                        alt222=1;
                        }
                        break;
                    case ExclamationMark:
                        {
                        alt222=2;
                        }
                        break;
                    case Only:
                        {
                        alt222=3;
                        }
                        break;
                    case HyphenMinus:
                        {
                        alt222=4;
                        }
                        break;
                    case There:
                        {
                        alt222=5;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 222, 0, input);

                        throw nvae;
                    }

                    switch (alt222) {
                        case 1 :
                            // InternalDialogParser.g:9471:7: lv_op_2_1= Not
                            {
                            lv_op_2_1=(Token)match(input,Not,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:9482:7: lv_op_2_2= ExclamationMark
                            {
                            lv_op_2_2=(Token)match(input,ExclamationMark,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:9493:7: lv_op_2_3= Only
                            {
                            lv_op_2_3=(Token)match(input,Only,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalDialogParser.g:9504:7: lv_op_2_4= HyphenMinus
                            {
                            lv_op_2_4=(Token)match(input,HyphenMinus,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalDialogParser.g:9515:7: lv_op_2_5= ruleThereExists
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
                              						
                            }
                            pushFollow(FOLLOW_130);
                            lv_op_2_5=ruleThereExists();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                              							}
                              							set(
                              								current,
                              								"op",
                              								lv_op_2_5,
                              								"com.ge.research.sadl.SADL.ThereExists");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:9533:4: ( (lv_expr_3_0= norm2_PrimaryExpression ) )
                    // InternalDialogParser.g:9534:5: (lv_expr_3_0= norm2_PrimaryExpression )
                    {
                    // InternalDialogParser.g:9534:5: (lv_expr_3_0= norm2_PrimaryExpression )
                    // InternalDialogParser.g:9535:6: lv_expr_3_0= norm2_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=norm2_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_0,
                      							"com.ge.research.sadl.SADL.PrimaryExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_UnaryExpression"


    // $ANTLR start "norm3_UnaryExpression"
    // InternalDialogParser.g:9558:1: norm3_UnaryExpression returns [EObject current=null] : (this_PrimaryExpression_0= norm3_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) ) ) ;
    public final EObject norm3_UnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject this_PrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_5 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9564:2: ( (this_PrimaryExpression_0= norm3_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) ) ) )
            // InternalDialogParser.g:9565:2: (this_PrimaryExpression_0= norm3_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) ) )
            {
            // InternalDialogParser.g:9565:2: (this_PrimaryExpression_0= norm3_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) ) )
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==Another||LA225_0==Length||(LA225_0>=Count && LA225_0<=False)||LA225_0==First||(LA225_0>=Index && LA225_0<=Known)||LA225_0==Value||LA225_0==None||LA225_0==Last||LA225_0==Some||(LA225_0>=True && LA225_0<=Type)||LA225_0==The||LA225_0==Any||LA225_0==The_1||LA225_0==HyphenMinusHyphenMinus||(LA225_0>=An && LA225_0<=An_1)||LA225_0==LeftParenthesis||LA225_0==A||LA225_0==LeftSquareBracket||(LA225_0>=A_1 && LA225_0<=LeftCurlyBracket)||LA225_0==RULE_NUMBER||(LA225_0>=RULE_ID && LA225_0<=RULE_STRING)) ) {
                alt225=1;
            }
            else if ( (LA225_0==There||LA225_0==Only||LA225_0==Not||LA225_0==ExclamationMark||LA225_0==HyphenMinus) ) {
                alt225=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 225, 0, input);

                throw nvae;
            }
            switch (alt225) {
                case 1 :
                    // InternalDialogParser.g:9566:3: this_PrimaryExpression_0= norm3_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_0=norm3_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:9575:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) )
                    {
                    // InternalDialogParser.g:9575:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) )
                    // InternalDialogParser.g:9576:4: () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) )
                    {
                    // InternalDialogParser.g:9576:4: ()
                    // InternalDialogParser.g:9577:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9583:4: ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) )
                    // InternalDialogParser.g:9584:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    {
                    // InternalDialogParser.g:9584:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    // InternalDialogParser.g:9585:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    {
                    // InternalDialogParser.g:9585:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    int alt224=5;
                    switch ( input.LA(1) ) {
                    case Not:
                        {
                        alt224=1;
                        }
                        break;
                    case ExclamationMark:
                        {
                        alt224=2;
                        }
                        break;
                    case Only:
                        {
                        alt224=3;
                        }
                        break;
                    case HyphenMinus:
                        {
                        alt224=4;
                        }
                        break;
                    case There:
                        {
                        alt224=5;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 224, 0, input);

                        throw nvae;
                    }

                    switch (alt224) {
                        case 1 :
                            // InternalDialogParser.g:9586:7: lv_op_2_1= Not
                            {
                            lv_op_2_1=(Token)match(input,Not,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:9597:7: lv_op_2_2= ExclamationMark
                            {
                            lv_op_2_2=(Token)match(input,ExclamationMark,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:9608:7: lv_op_2_3= Only
                            {
                            lv_op_2_3=(Token)match(input,Only,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalDialogParser.g:9619:7: lv_op_2_4= HyphenMinus
                            {
                            lv_op_2_4=(Token)match(input,HyphenMinus,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalDialogParser.g:9630:7: lv_op_2_5= ruleThereExists
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
                              						
                            }
                            pushFollow(FOLLOW_130);
                            lv_op_2_5=ruleThereExists();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                              							}
                              							set(
                              								current,
                              								"op",
                              								lv_op_2_5,
                              								"com.ge.research.sadl.SADL.ThereExists");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:9648:4: ( (lv_expr_3_0= norm3_PrimaryExpression ) )
                    // InternalDialogParser.g:9649:5: (lv_expr_3_0= norm3_PrimaryExpression )
                    {
                    // InternalDialogParser.g:9649:5: (lv_expr_3_0= norm3_PrimaryExpression )
                    // InternalDialogParser.g:9650:6: lv_expr_3_0= norm3_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=norm3_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_0,
                      							"com.ge.research.sadl.SADL.PrimaryExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_UnaryExpression"


    // $ANTLR start "entryRuleThereExists"
    // InternalDialogParser.g:9672:1: entryRuleThereExists returns [String current=null] : iv_ruleThereExists= ruleThereExists EOF ;
    public final String entryRuleThereExists() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleThereExists = null;


        try {
            // InternalDialogParser.g:9672:51: (iv_ruleThereExists= ruleThereExists EOF )
            // InternalDialogParser.g:9673:2: iv_ruleThereExists= ruleThereExists EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThereExistsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThereExists=ruleThereExists();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThereExists.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleThereExists"


    // $ANTLR start "ruleThereExists"
    // InternalDialogParser.g:9679:1: ruleThereExists returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= There kw= Exists ) ;
    public final AntlrDatatypeRuleToken ruleThereExists() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:9685:2: ( (kw= There kw= Exists ) )
            // InternalDialogParser.g:9686:2: (kw= There kw= Exists )
            {
            // InternalDialogParser.g:9686:2: (kw= There kw= Exists )
            // InternalDialogParser.g:9687:3: kw= There kw= Exists
            {
            kw=(Token)match(input,There,FOLLOW_131); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getThereExistsAccess().getThereKeyword_0());
              		
            }
            kw=(Token)match(input,Exists,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getThereExistsAccess().getExistsKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleThereExists"


    // $ANTLR start "entryRulePrimaryExpression"
    // InternalDialogParser.g:9701:1: entryRulePrimaryExpression returns [EObject current=null] : iv_rulePrimaryExpression= rulePrimaryExpression EOF ;
    public final EObject entryRulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpression = null;


        try {
            // InternalDialogParser.g:9701:58: (iv_rulePrimaryExpression= rulePrimaryExpression EOF )
            // InternalDialogParser.g:9702:2: iv_rulePrimaryExpression= rulePrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpression=rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpression"


    // $ANTLR start "rulePrimaryExpression"
    // InternalDialogParser.g:9708:1: rulePrimaryExpression returns [EObject current=null] : ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) ;
    public final EObject rulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_maxlen_16_2=null;
        Token lv_value_18_0=null;
        EObject this_SelectExpression_1 = null;

        EObject this_Name_3 = null;

        AntlrDatatypeRuleToken lv_article_5_0 = null;

        AntlrDatatypeRuleToken lv_ordinal_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_arglist_9_0 = null;

        EObject lv_arglist_11_0 = null;

        AntlrDatatypeRuleToken lv_len_14_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_16_1 = null;

        AntlrDatatypeRuleToken lv_value_20_0 = null;

        AntlrDatatypeRuleToken lv_value_22_0 = null;

        AntlrDatatypeRuleToken lv_constant_24_0 = null;

        EObject lv_valueTable_26_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9714:2: ( ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) )
            // InternalDialogParser.g:9715:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            {
            // InternalDialogParser.g:9715:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            int alt232=8;
            alt232 = dfa232.predict(input);
            switch (alt232) {
                case 1 :
                    // InternalDialogParser.g:9716:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis )
                    {
                    // InternalDialogParser.g:9716:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis )
                    // InternalDialogParser.g:9717:4: otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_132); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_36);
                    this_SelectExpression_1=ruleSelectExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SelectExpression_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:9735:3: this_Name_3= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Name_3=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Name_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:9744:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    {
                    // InternalDialogParser.g:9744:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    // InternalDialogParser.g:9745:4: () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    {
                    // InternalDialogParser.g:9745:4: ()
                    // InternalDialogParser.g:9746:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9752:4: ( (lv_article_5_0= ruleAnArticle ) )
                    // InternalDialogParser.g:9753:5: (lv_article_5_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:9753:5: (lv_article_5_0= ruleAnArticle )
                    // InternalDialogParser.g:9754:6: lv_article_5_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_133);
                    lv_article_5_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"article",
                      							lv_article_5_0,
                      							"com.ge.research.sadl.SADL.AnArticle");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:9771:4: ( (lv_ordinal_6_0= ruleOrdinal ) )?
                    int alt226=2;
                    int LA226_0 = input.LA(1);

                    if ( (LA226_0==Seventh||LA226_0==Eighth||LA226_0==Fourth||LA226_0==Second||(LA226_0>=Fifth && LA226_0<=First)||LA226_0==Ninth||(LA226_0>=Other && LA226_0<=Tenth)||LA226_0==Third) ) {
                        alt226=1;
                    }
                    switch (alt226) {
                        case 1 :
                            // InternalDialogParser.g:9772:5: (lv_ordinal_6_0= ruleOrdinal )
                            {
                            // InternalDialogParser.g:9772:5: (lv_ordinal_6_0= ruleOrdinal )
                            // InternalDialogParser.g:9773:6: lv_ordinal_6_0= ruleOrdinal
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FOLLOW_9);
                            lv_ordinal_6_0=ruleOrdinal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              						}
                              						set(
                              							current,
                              							"ordinal",
                              							lv_ordinal_6_0,
                              							"com.ge.research.sadl.SADL.Ordinal");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:9790:4: ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:9791:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:9791:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:9792:6: lv_type_7_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_134);
                    lv_type_7_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_7_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:9809:4: ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    int alt231=3;
                    int LA231_0 = input.LA(1);

                    if ( (LA231_0==LeftSquareBracket) ) {
                        alt231=1;
                    }
                    else if ( (LA231_0==Length) ) {
                        alt231=2;
                    }
                    switch (alt231) {
                        case 1 :
                            // InternalDialogParser.g:9810:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            {
                            // InternalDialogParser.g:9810:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            // InternalDialogParser.g:9811:6: otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket
                            {
                            otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_135); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
                              					
                            }
                            // InternalDialogParser.g:9815:6: ( (lv_arglist_9_0= ruleNestedExpression ) )?
                            int alt227=2;
                            int LA227_0 = input.LA(1);

                            if ( (LA227_0==Another||LA227_0==Element||LA227_0==Sublist||LA227_0==Length||LA227_0==Select||(LA227_0>=Count && LA227_0<=False)||LA227_0==First||(LA227_0>=Index && LA227_0<=Known)||LA227_0==There||LA227_0==Value||LA227_0==None||LA227_0==Last||LA227_0==Only||LA227_0==Some||(LA227_0>=True && LA227_0<=Type)||LA227_0==The||LA227_0==Any||LA227_0==Not||LA227_0==The_1||LA227_0==HyphenMinusHyphenMinus||(LA227_0>=An && LA227_0<=An_1)||LA227_0==ExclamationMark||LA227_0==LeftParenthesis||LA227_0==HyphenMinus||LA227_0==A||LA227_0==LeftSquareBracket||(LA227_0>=A_1 && LA227_0<=LeftCurlyBracket)||LA227_0==RULE_NUMBER||(LA227_0>=RULE_ID && LA227_0<=RULE_STRING)) ) {
                                alt227=1;
                            }
                            switch (alt227) {
                                case 1 :
                                    // InternalDialogParser.g:9816:7: (lv_arglist_9_0= ruleNestedExpression )
                                    {
                                    // InternalDialogParser.g:9816:7: (lv_arglist_9_0= ruleNestedExpression )
                                    // InternalDialogParser.g:9817:8: lv_arglist_9_0= ruleNestedExpression
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_86);
                                    lv_arglist_9_0=ruleNestedExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                      								}
                                      								add(
                                      									current,
                                      									"arglist",
                                      									lv_arglist_9_0,
                                      									"com.ge.research.sadl.SADL.NestedExpression");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:9834:6: (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )*
                            loop228:
                            do {
                                int alt228=2;
                                int LA228_0 = input.LA(1);

                                if ( (LA228_0==Comma) ) {
                                    alt228=1;
                                }


                                switch (alt228) {
                            	case 1 :
                            	    // InternalDialogParser.g:9835:7: otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_132); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:9839:7: ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    // InternalDialogParser.g:9840:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    {
                            	    // InternalDialogParser.g:9840:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    // InternalDialogParser.g:9841:9: lv_arglist_11_0= ruleNestedExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_86);
                            	    lv_arglist_11_0=ruleNestedExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arglist",
                            	      										lv_arglist_11_0,
                            	      										"com.ge.research.sadl.SADL.NestedExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop228;
                                }
                            } while (true);

                            otherlv_12=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:9865:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            {
                            // InternalDialogParser.g:9865:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            // InternalDialogParser.g:9866:6: otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            {
                            otherlv_13=(Token)match(input,Length,FOLLOW_45); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:9870:6: ( (lv_len_14_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:9871:7: (lv_len_14_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:9871:7: (lv_len_14_0= ruleFacetNumber )
                            // InternalDialogParser.g:9872:8: lv_len_14_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_136);
                            lv_len_14_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              								}
                              								set(
                              									current,
                              									"len",
                              									lv_len_14_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:9889:6: ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            int alt230=2;
                            int LA230_0 = input.LA(1);

                            if ( (LA230_0==HyphenMinus) ) {
                                int LA230_1 = input.LA(2);

                                if ( (LA230_1==RULE_NUMBER) ) {
                                    int LA230_3 = input.LA(3);

                                    if ( (synpred31_InternalDialogParser()) ) {
                                        alt230=1;
                                    }
                                }
                                else if ( (LA230_1==HyphenMinus) ) {
                                    int LA230_4 = input.LA(3);

                                    if ( (LA230_4==RULE_NUMBER) ) {
                                        int LA230_6 = input.LA(4);

                                        if ( (synpred31_InternalDialogParser()) ) {
                                            alt230=1;
                                        }
                                    }
                                }
                                else if ( (LA230_1==Asterisk) && (synpred31_InternalDialogParser())) {
                                    alt230=1;
                                }
                            }
                            switch (alt230) {
                                case 1 :
                                    // InternalDialogParser.g:9890:7: ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    {
                                    // InternalDialogParser.g:9891:7: (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    // InternalDialogParser.g:9892:8: otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    {
                                    otherlv_15=(Token)match(input,HyphenMinus,FOLLOW_47); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
                                      							
                                    }
                                    // InternalDialogParser.g:9896:8: ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    // InternalDialogParser.g:9897:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    {
                                    // InternalDialogParser.g:9897:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    // InternalDialogParser.g:9898:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    {
                                    // InternalDialogParser.g:9898:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    int alt229=2;
                                    int LA229_0 = input.LA(1);

                                    if ( (LA229_0==HyphenMinus||LA229_0==RULE_NUMBER) ) {
                                        alt229=1;
                                    }
                                    else if ( (LA229_0==Asterisk) ) {
                                        alt229=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 229, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt229) {
                                        case 1 :
                                            // InternalDialogParser.g:9899:11: lv_maxlen_16_1= ruleFacetNumber
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_2);
                                            lv_maxlen_16_1=ruleFacetNumber();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											set(
                                              												current,
                                              												"maxlen",
                                              												lv_maxlen_16_1,
                                              												"com.ge.research.sadl.SADL.FacetNumber");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalDialogParser.g:9915:11: lv_maxlen_16_2= Asterisk
                                            {
                                            lv_maxlen_16_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											setWithLastConsumed(current, "maxlen", lv_maxlen_16_2, null);
                                              										
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:9934:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:9934:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:9935:4: () ( (lv_value_18_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:9935:4: ()
                    // InternalDialogParser.g:9936:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9942:4: ( (lv_value_18_0= RULE_STRING ) )
                    // InternalDialogParser.g:9943:5: (lv_value_18_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:9943:5: (lv_value_18_0= RULE_STRING )
                    // InternalDialogParser.g:9944:6: lv_value_18_0= RULE_STRING
                    {
                    lv_value_18_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_18_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:9962:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    {
                    // InternalDialogParser.g:9962:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    // InternalDialogParser.g:9963:4: () ( (lv_value_20_0= ruleAnyNumber ) )
                    {
                    // InternalDialogParser.g:9963:4: ()
                    // InternalDialogParser.g:9964:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9970:4: ( (lv_value_20_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:9971:5: (lv_value_20_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:9971:5: (lv_value_20_0= ruleAnyNumber )
                    // InternalDialogParser.g:9972:6: lv_value_20_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_20_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_20_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:9991:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    {
                    // InternalDialogParser.g:9991:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    // InternalDialogParser.g:9992:4: () ( (lv_value_22_0= ruleBooleanValue ) )
                    {
                    // InternalDialogParser.g:9992:4: ()
                    // InternalDialogParser.g:9993:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9999:4: ( (lv_value_22_0= ruleBooleanValue ) )
                    // InternalDialogParser.g:10000:5: (lv_value_22_0= ruleBooleanValue )
                    {
                    // InternalDialogParser.g:10000:5: (lv_value_22_0= ruleBooleanValue )
                    // InternalDialogParser.g:10001:6: lv_value_22_0= ruleBooleanValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_22_0=ruleBooleanValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_22_0,
                      							"com.ge.research.sadl.SADL.BooleanValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:10020:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    {
                    // InternalDialogParser.g:10020:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    // InternalDialogParser.g:10021:4: () ( (lv_constant_24_0= ruleConstants ) )
                    {
                    // InternalDialogParser.g:10021:4: ()
                    // InternalDialogParser.g:10022:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10028:4: ( (lv_constant_24_0= ruleConstants ) )
                    // InternalDialogParser.g:10029:5: (lv_constant_24_0= ruleConstants )
                    {
                    // InternalDialogParser.g:10029:5: (lv_constant_24_0= ruleConstants )
                    // InternalDialogParser.g:10030:6: lv_constant_24_0= ruleConstants
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_24_0=ruleConstants();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"constant",
                      							lv_constant_24_0,
                      							"com.ge.research.sadl.SADL.Constants");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:10049:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    {
                    // InternalDialogParser.g:10049:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    // InternalDialogParser.g:10050:4: () ( (lv_valueTable_26_0= ruleValueTable ) )
                    {
                    // InternalDialogParser.g:10050:4: ()
                    // InternalDialogParser.g:10051:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10057:4: ( (lv_valueTable_26_0= ruleValueTable ) )
                    // InternalDialogParser.g:10058:5: (lv_valueTable_26_0= ruleValueTable )
                    {
                    // InternalDialogParser.g:10058:5: (lv_valueTable_26_0= ruleValueTable )
                    // InternalDialogParser.g:10059:6: lv_valueTable_26_0= ruleValueTable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_valueTable_26_0=ruleValueTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"valueTable",
                      							lv_valueTable_26_0,
                      							"com.ge.research.sadl.SADL.ValueTable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpression"


    // $ANTLR start "norm1_PrimaryExpression"
    // InternalDialogParser.g:10082:1: norm1_PrimaryExpression returns [EObject current=null] : ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) ;
    public final EObject norm1_PrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_maxlen_16_2=null;
        Token lv_value_18_0=null;
        EObject this_SelectExpression_1 = null;

        EObject this_Name_3 = null;

        AntlrDatatypeRuleToken lv_article_5_0 = null;

        AntlrDatatypeRuleToken lv_ordinal_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_arglist_9_0 = null;

        EObject lv_arglist_11_0 = null;

        AntlrDatatypeRuleToken lv_len_14_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_16_1 = null;

        AntlrDatatypeRuleToken lv_value_20_0 = null;

        AntlrDatatypeRuleToken lv_value_22_0 = null;

        AntlrDatatypeRuleToken lv_constant_24_0 = null;

        EObject lv_valueTable_26_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10088:2: ( ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) )
            // InternalDialogParser.g:10089:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            {
            // InternalDialogParser.g:10089:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            int alt239=8;
            alt239 = dfa239.predict(input);
            switch (alt239) {
                case 1 :
                    // InternalDialogParser.g:10090:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis )
                    {
                    // InternalDialogParser.g:10090:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis )
                    // InternalDialogParser.g:10091:4: otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_132); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_36);
                    this_SelectExpression_1=norm1_SelectExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SelectExpression_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10109:3: this_Name_3= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Name_3=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Name_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:10118:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    {
                    // InternalDialogParser.g:10118:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    // InternalDialogParser.g:10119:4: () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    {
                    // InternalDialogParser.g:10119:4: ()
                    // InternalDialogParser.g:10120:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10126:4: ( (lv_article_5_0= ruleAnArticle ) )
                    // InternalDialogParser.g:10127:5: (lv_article_5_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:10127:5: (lv_article_5_0= ruleAnArticle )
                    // InternalDialogParser.g:10128:6: lv_article_5_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_133);
                    lv_article_5_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"article",
                      							lv_article_5_0,
                      							"com.ge.research.sadl.SADL.AnArticle");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:10145:4: ( (lv_ordinal_6_0= ruleOrdinal ) )?
                    int alt233=2;
                    int LA233_0 = input.LA(1);

                    if ( (LA233_0==Seventh||LA233_0==Eighth||LA233_0==Fourth||LA233_0==Second||(LA233_0>=Fifth && LA233_0<=First)||LA233_0==Ninth||(LA233_0>=Other && LA233_0<=Tenth)||LA233_0==Third) ) {
                        alt233=1;
                    }
                    switch (alt233) {
                        case 1 :
                            // InternalDialogParser.g:10146:5: (lv_ordinal_6_0= ruleOrdinal )
                            {
                            // InternalDialogParser.g:10146:5: (lv_ordinal_6_0= ruleOrdinal )
                            // InternalDialogParser.g:10147:6: lv_ordinal_6_0= ruleOrdinal
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FOLLOW_9);
                            lv_ordinal_6_0=ruleOrdinal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              						}
                              						set(
                              							current,
                              							"ordinal",
                              							lv_ordinal_6_0,
                              							"com.ge.research.sadl.SADL.Ordinal");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:10164:4: ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:10165:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:10165:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:10166:6: lv_type_7_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_134);
                    lv_type_7_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_7_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:10183:4: ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    int alt238=3;
                    int LA238_0 = input.LA(1);

                    if ( (LA238_0==LeftSquareBracket) ) {
                        alt238=1;
                    }
                    else if ( (LA238_0==Length) ) {
                        alt238=2;
                    }
                    switch (alt238) {
                        case 1 :
                            // InternalDialogParser.g:10184:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            {
                            // InternalDialogParser.g:10184:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            // InternalDialogParser.g:10185:6: otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket
                            {
                            otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_135); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
                              					
                            }
                            // InternalDialogParser.g:10189:6: ( (lv_arglist_9_0= ruleNestedExpression ) )?
                            int alt234=2;
                            int LA234_0 = input.LA(1);

                            if ( (LA234_0==Another||LA234_0==Element||LA234_0==Sublist||LA234_0==Length||LA234_0==Select||(LA234_0>=Count && LA234_0<=False)||LA234_0==First||(LA234_0>=Index && LA234_0<=Known)||LA234_0==There||LA234_0==Value||LA234_0==None||LA234_0==Last||LA234_0==Only||LA234_0==Some||(LA234_0>=True && LA234_0<=Type)||LA234_0==The||LA234_0==Any||LA234_0==Not||LA234_0==The_1||LA234_0==HyphenMinusHyphenMinus||(LA234_0>=An && LA234_0<=An_1)||LA234_0==ExclamationMark||LA234_0==LeftParenthesis||LA234_0==HyphenMinus||LA234_0==A||LA234_0==LeftSquareBracket||(LA234_0>=A_1 && LA234_0<=LeftCurlyBracket)||LA234_0==RULE_NUMBER||(LA234_0>=RULE_ID && LA234_0<=RULE_STRING)) ) {
                                alt234=1;
                            }
                            switch (alt234) {
                                case 1 :
                                    // InternalDialogParser.g:10190:7: (lv_arglist_9_0= ruleNestedExpression )
                                    {
                                    // InternalDialogParser.g:10190:7: (lv_arglist_9_0= ruleNestedExpression )
                                    // InternalDialogParser.g:10191:8: lv_arglist_9_0= ruleNestedExpression
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_86);
                                    lv_arglist_9_0=ruleNestedExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                      								}
                                      								add(
                                      									current,
                                      									"arglist",
                                      									lv_arglist_9_0,
                                      									"com.ge.research.sadl.SADL.NestedExpression");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:10208:6: (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )*
                            loop235:
                            do {
                                int alt235=2;
                                int LA235_0 = input.LA(1);

                                if ( (LA235_0==Comma) ) {
                                    alt235=1;
                                }


                                switch (alt235) {
                            	case 1 :
                            	    // InternalDialogParser.g:10209:7: otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_132); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:10213:7: ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    // InternalDialogParser.g:10214:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    {
                            	    // InternalDialogParser.g:10214:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    // InternalDialogParser.g:10215:9: lv_arglist_11_0= ruleNestedExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_86);
                            	    lv_arglist_11_0=ruleNestedExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arglist",
                            	      										lv_arglist_11_0,
                            	      										"com.ge.research.sadl.SADL.NestedExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop235;
                                }
                            } while (true);

                            otherlv_12=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10239:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            {
                            // InternalDialogParser.g:10239:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            // InternalDialogParser.g:10240:6: otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            {
                            otherlv_13=(Token)match(input,Length,FOLLOW_45); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:10244:6: ( (lv_len_14_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:10245:7: (lv_len_14_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:10245:7: (lv_len_14_0= ruleFacetNumber )
                            // InternalDialogParser.g:10246:8: lv_len_14_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_136);
                            lv_len_14_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              								}
                              								set(
                              									current,
                              									"len",
                              									lv_len_14_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:10263:6: ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            int alt237=2;
                            int LA237_0 = input.LA(1);

                            if ( (LA237_0==HyphenMinus) ) {
                                int LA237_1 = input.LA(2);

                                if ( (LA237_1==RULE_NUMBER) ) {
                                    int LA237_3 = input.LA(3);

                                    if ( (synpred32_InternalDialogParser()) ) {
                                        alt237=1;
                                    }
                                }
                                else if ( (LA237_1==HyphenMinus) ) {
                                    int LA237_4 = input.LA(3);

                                    if ( (LA237_4==RULE_NUMBER) ) {
                                        int LA237_6 = input.LA(4);

                                        if ( (synpred32_InternalDialogParser()) ) {
                                            alt237=1;
                                        }
                                    }
                                }
                                else if ( (LA237_1==Asterisk) && (synpred32_InternalDialogParser())) {
                                    alt237=1;
                                }
                            }
                            switch (alt237) {
                                case 1 :
                                    // InternalDialogParser.g:10264:7: ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    {
                                    // InternalDialogParser.g:10265:7: (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    // InternalDialogParser.g:10266:8: otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    {
                                    otherlv_15=(Token)match(input,HyphenMinus,FOLLOW_47); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
                                      							
                                    }
                                    // InternalDialogParser.g:10270:8: ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    // InternalDialogParser.g:10271:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    {
                                    // InternalDialogParser.g:10271:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    // InternalDialogParser.g:10272:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    {
                                    // InternalDialogParser.g:10272:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    int alt236=2;
                                    int LA236_0 = input.LA(1);

                                    if ( (LA236_0==HyphenMinus||LA236_0==RULE_NUMBER) ) {
                                        alt236=1;
                                    }
                                    else if ( (LA236_0==Asterisk) ) {
                                        alt236=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 236, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt236) {
                                        case 1 :
                                            // InternalDialogParser.g:10273:11: lv_maxlen_16_1= ruleFacetNumber
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_2);
                                            lv_maxlen_16_1=ruleFacetNumber();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											set(
                                              												current,
                                              												"maxlen",
                                              												lv_maxlen_16_1,
                                              												"com.ge.research.sadl.SADL.FacetNumber");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalDialogParser.g:10289:11: lv_maxlen_16_2= Asterisk
                                            {
                                            lv_maxlen_16_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											setWithLastConsumed(current, "maxlen", lv_maxlen_16_2, null);
                                              										
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:10308:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:10308:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:10309:4: () ( (lv_value_18_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:10309:4: ()
                    // InternalDialogParser.g:10310:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10316:4: ( (lv_value_18_0= RULE_STRING ) )
                    // InternalDialogParser.g:10317:5: (lv_value_18_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:10317:5: (lv_value_18_0= RULE_STRING )
                    // InternalDialogParser.g:10318:6: lv_value_18_0= RULE_STRING
                    {
                    lv_value_18_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_18_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:10336:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    {
                    // InternalDialogParser.g:10336:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    // InternalDialogParser.g:10337:4: () ( (lv_value_20_0= ruleAnyNumber ) )
                    {
                    // InternalDialogParser.g:10337:4: ()
                    // InternalDialogParser.g:10338:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10344:4: ( (lv_value_20_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:10345:5: (lv_value_20_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:10345:5: (lv_value_20_0= ruleAnyNumber )
                    // InternalDialogParser.g:10346:6: lv_value_20_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_20_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_20_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:10365:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    {
                    // InternalDialogParser.g:10365:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    // InternalDialogParser.g:10366:4: () ( (lv_value_22_0= ruleBooleanValue ) )
                    {
                    // InternalDialogParser.g:10366:4: ()
                    // InternalDialogParser.g:10367:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10373:4: ( (lv_value_22_0= ruleBooleanValue ) )
                    // InternalDialogParser.g:10374:5: (lv_value_22_0= ruleBooleanValue )
                    {
                    // InternalDialogParser.g:10374:5: (lv_value_22_0= ruleBooleanValue )
                    // InternalDialogParser.g:10375:6: lv_value_22_0= ruleBooleanValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_22_0=ruleBooleanValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_22_0,
                      							"com.ge.research.sadl.SADL.BooleanValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:10394:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    {
                    // InternalDialogParser.g:10394:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    // InternalDialogParser.g:10395:4: () ( (lv_constant_24_0= ruleConstants ) )
                    {
                    // InternalDialogParser.g:10395:4: ()
                    // InternalDialogParser.g:10396:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10402:4: ( (lv_constant_24_0= ruleConstants ) )
                    // InternalDialogParser.g:10403:5: (lv_constant_24_0= ruleConstants )
                    {
                    // InternalDialogParser.g:10403:5: (lv_constant_24_0= ruleConstants )
                    // InternalDialogParser.g:10404:6: lv_constant_24_0= ruleConstants
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_24_0=ruleConstants();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"constant",
                      							lv_constant_24_0,
                      							"com.ge.research.sadl.SADL.Constants");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:10423:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    {
                    // InternalDialogParser.g:10423:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    // InternalDialogParser.g:10424:4: () ( (lv_valueTable_26_0= ruleValueTable ) )
                    {
                    // InternalDialogParser.g:10424:4: ()
                    // InternalDialogParser.g:10425:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10431:4: ( (lv_valueTable_26_0= ruleValueTable ) )
                    // InternalDialogParser.g:10432:5: (lv_valueTable_26_0= ruleValueTable )
                    {
                    // InternalDialogParser.g:10432:5: (lv_valueTable_26_0= ruleValueTable )
                    // InternalDialogParser.g:10433:6: lv_valueTable_26_0= ruleValueTable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_valueTable_26_0=ruleValueTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"valueTable",
                      							lv_valueTable_26_0,
                      							"com.ge.research.sadl.SADL.ValueTable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_PrimaryExpression"


    // $ANTLR start "norm2_PrimaryExpression"
    // InternalDialogParser.g:10456:1: norm2_PrimaryExpression returns [EObject current=null] : ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) ;
    public final EObject norm2_PrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_maxlen_16_2=null;
        Token lv_value_18_0=null;
        EObject this_SelectExpression_1 = null;

        EObject this_Name_3 = null;

        AntlrDatatypeRuleToken lv_article_5_0 = null;

        AntlrDatatypeRuleToken lv_ordinal_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_arglist_9_0 = null;

        EObject lv_arglist_11_0 = null;

        AntlrDatatypeRuleToken lv_len_14_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_16_1 = null;

        AntlrDatatypeRuleToken lv_value_20_0 = null;

        AntlrDatatypeRuleToken lv_value_22_0 = null;

        AntlrDatatypeRuleToken lv_constant_24_0 = null;

        EObject lv_valueTable_26_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10462:2: ( ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) )
            // InternalDialogParser.g:10463:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            {
            // InternalDialogParser.g:10463:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            int alt246=8;
            alt246 = dfa246.predict(input);
            switch (alt246) {
                case 1 :
                    // InternalDialogParser.g:10464:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis )
                    {
                    // InternalDialogParser.g:10464:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis )
                    // InternalDialogParser.g:10465:4: otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_132); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_36);
                    this_SelectExpression_1=norm2_SelectExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SelectExpression_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10483:3: this_Name_3= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Name_3=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Name_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:10492:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    {
                    // InternalDialogParser.g:10492:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    // InternalDialogParser.g:10493:4: () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    {
                    // InternalDialogParser.g:10493:4: ()
                    // InternalDialogParser.g:10494:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10500:4: ( (lv_article_5_0= ruleAnArticle ) )
                    // InternalDialogParser.g:10501:5: (lv_article_5_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:10501:5: (lv_article_5_0= ruleAnArticle )
                    // InternalDialogParser.g:10502:6: lv_article_5_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_133);
                    lv_article_5_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"article",
                      							lv_article_5_0,
                      							"com.ge.research.sadl.SADL.AnArticle");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:10519:4: ( (lv_ordinal_6_0= ruleOrdinal ) )?
                    int alt240=2;
                    int LA240_0 = input.LA(1);

                    if ( (LA240_0==Seventh||LA240_0==Eighth||LA240_0==Fourth||LA240_0==Second||(LA240_0>=Fifth && LA240_0<=First)||LA240_0==Ninth||(LA240_0>=Other && LA240_0<=Tenth)||LA240_0==Third) ) {
                        alt240=1;
                    }
                    switch (alt240) {
                        case 1 :
                            // InternalDialogParser.g:10520:5: (lv_ordinal_6_0= ruleOrdinal )
                            {
                            // InternalDialogParser.g:10520:5: (lv_ordinal_6_0= ruleOrdinal )
                            // InternalDialogParser.g:10521:6: lv_ordinal_6_0= ruleOrdinal
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FOLLOW_9);
                            lv_ordinal_6_0=ruleOrdinal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              						}
                              						set(
                              							current,
                              							"ordinal",
                              							lv_ordinal_6_0,
                              							"com.ge.research.sadl.SADL.Ordinal");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:10538:4: ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:10539:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:10539:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:10540:6: lv_type_7_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_134);
                    lv_type_7_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_7_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:10557:4: ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    int alt245=3;
                    int LA245_0 = input.LA(1);

                    if ( (LA245_0==LeftSquareBracket) ) {
                        alt245=1;
                    }
                    else if ( (LA245_0==Length) ) {
                        alt245=2;
                    }
                    switch (alt245) {
                        case 1 :
                            // InternalDialogParser.g:10558:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            {
                            // InternalDialogParser.g:10558:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            // InternalDialogParser.g:10559:6: otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket
                            {
                            otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_135); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
                              					
                            }
                            // InternalDialogParser.g:10563:6: ( (lv_arglist_9_0= ruleNestedExpression ) )?
                            int alt241=2;
                            int LA241_0 = input.LA(1);

                            if ( (LA241_0==Another||LA241_0==Element||LA241_0==Sublist||LA241_0==Length||LA241_0==Select||(LA241_0>=Count && LA241_0<=False)||LA241_0==First||(LA241_0>=Index && LA241_0<=Known)||LA241_0==There||LA241_0==Value||LA241_0==None||LA241_0==Last||LA241_0==Only||LA241_0==Some||(LA241_0>=True && LA241_0<=Type)||LA241_0==The||LA241_0==Any||LA241_0==Not||LA241_0==The_1||LA241_0==HyphenMinusHyphenMinus||(LA241_0>=An && LA241_0<=An_1)||LA241_0==ExclamationMark||LA241_0==LeftParenthesis||LA241_0==HyphenMinus||LA241_0==A||LA241_0==LeftSquareBracket||(LA241_0>=A_1 && LA241_0<=LeftCurlyBracket)||LA241_0==RULE_NUMBER||(LA241_0>=RULE_ID && LA241_0<=RULE_STRING)) ) {
                                alt241=1;
                            }
                            switch (alt241) {
                                case 1 :
                                    // InternalDialogParser.g:10564:7: (lv_arglist_9_0= ruleNestedExpression )
                                    {
                                    // InternalDialogParser.g:10564:7: (lv_arglist_9_0= ruleNestedExpression )
                                    // InternalDialogParser.g:10565:8: lv_arglist_9_0= ruleNestedExpression
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_86);
                                    lv_arglist_9_0=ruleNestedExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                      								}
                                      								add(
                                      									current,
                                      									"arglist",
                                      									lv_arglist_9_0,
                                      									"com.ge.research.sadl.SADL.NestedExpression");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:10582:6: (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )*
                            loop242:
                            do {
                                int alt242=2;
                                int LA242_0 = input.LA(1);

                                if ( (LA242_0==Comma) ) {
                                    alt242=1;
                                }


                                switch (alt242) {
                            	case 1 :
                            	    // InternalDialogParser.g:10583:7: otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_132); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:10587:7: ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    // InternalDialogParser.g:10588:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    {
                            	    // InternalDialogParser.g:10588:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    // InternalDialogParser.g:10589:9: lv_arglist_11_0= ruleNestedExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_86);
                            	    lv_arglist_11_0=ruleNestedExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arglist",
                            	      										lv_arglist_11_0,
                            	      										"com.ge.research.sadl.SADL.NestedExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop242;
                                }
                            } while (true);

                            otherlv_12=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10613:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            {
                            // InternalDialogParser.g:10613:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            // InternalDialogParser.g:10614:6: otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            {
                            otherlv_13=(Token)match(input,Length,FOLLOW_45); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:10618:6: ( (lv_len_14_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:10619:7: (lv_len_14_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:10619:7: (lv_len_14_0= ruleFacetNumber )
                            // InternalDialogParser.g:10620:8: lv_len_14_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_136);
                            lv_len_14_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              								}
                              								set(
                              									current,
                              									"len",
                              									lv_len_14_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:10637:6: ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            int alt244=2;
                            int LA244_0 = input.LA(1);

                            if ( (LA244_0==HyphenMinus) ) {
                                int LA244_1 = input.LA(2);

                                if ( (LA244_1==RULE_NUMBER) ) {
                                    int LA244_3 = input.LA(3);

                                    if ( (synpred33_InternalDialogParser()) ) {
                                        alt244=1;
                                    }
                                }
                                else if ( (LA244_1==HyphenMinus) ) {
                                    int LA244_4 = input.LA(3);

                                    if ( (LA244_4==RULE_NUMBER) ) {
                                        int LA244_6 = input.LA(4);

                                        if ( (synpred33_InternalDialogParser()) ) {
                                            alt244=1;
                                        }
                                    }
                                }
                                else if ( (LA244_1==Asterisk) && (synpred33_InternalDialogParser())) {
                                    alt244=1;
                                }
                            }
                            switch (alt244) {
                                case 1 :
                                    // InternalDialogParser.g:10638:7: ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    {
                                    // InternalDialogParser.g:10639:7: (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    // InternalDialogParser.g:10640:8: otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    {
                                    otherlv_15=(Token)match(input,HyphenMinus,FOLLOW_47); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
                                      							
                                    }
                                    // InternalDialogParser.g:10644:8: ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    // InternalDialogParser.g:10645:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    {
                                    // InternalDialogParser.g:10645:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    // InternalDialogParser.g:10646:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    {
                                    // InternalDialogParser.g:10646:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    int alt243=2;
                                    int LA243_0 = input.LA(1);

                                    if ( (LA243_0==HyphenMinus||LA243_0==RULE_NUMBER) ) {
                                        alt243=1;
                                    }
                                    else if ( (LA243_0==Asterisk) ) {
                                        alt243=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 243, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt243) {
                                        case 1 :
                                            // InternalDialogParser.g:10647:11: lv_maxlen_16_1= ruleFacetNumber
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_2);
                                            lv_maxlen_16_1=ruleFacetNumber();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											set(
                                              												current,
                                              												"maxlen",
                                              												lv_maxlen_16_1,
                                              												"com.ge.research.sadl.SADL.FacetNumber");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalDialogParser.g:10663:11: lv_maxlen_16_2= Asterisk
                                            {
                                            lv_maxlen_16_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											setWithLastConsumed(current, "maxlen", lv_maxlen_16_2, null);
                                              										
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:10682:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:10682:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:10683:4: () ( (lv_value_18_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:10683:4: ()
                    // InternalDialogParser.g:10684:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10690:4: ( (lv_value_18_0= RULE_STRING ) )
                    // InternalDialogParser.g:10691:5: (lv_value_18_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:10691:5: (lv_value_18_0= RULE_STRING )
                    // InternalDialogParser.g:10692:6: lv_value_18_0= RULE_STRING
                    {
                    lv_value_18_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_18_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:10710:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    {
                    // InternalDialogParser.g:10710:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    // InternalDialogParser.g:10711:4: () ( (lv_value_20_0= ruleAnyNumber ) )
                    {
                    // InternalDialogParser.g:10711:4: ()
                    // InternalDialogParser.g:10712:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10718:4: ( (lv_value_20_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:10719:5: (lv_value_20_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:10719:5: (lv_value_20_0= ruleAnyNumber )
                    // InternalDialogParser.g:10720:6: lv_value_20_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_20_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_20_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:10739:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    {
                    // InternalDialogParser.g:10739:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    // InternalDialogParser.g:10740:4: () ( (lv_value_22_0= ruleBooleanValue ) )
                    {
                    // InternalDialogParser.g:10740:4: ()
                    // InternalDialogParser.g:10741:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10747:4: ( (lv_value_22_0= ruleBooleanValue ) )
                    // InternalDialogParser.g:10748:5: (lv_value_22_0= ruleBooleanValue )
                    {
                    // InternalDialogParser.g:10748:5: (lv_value_22_0= ruleBooleanValue )
                    // InternalDialogParser.g:10749:6: lv_value_22_0= ruleBooleanValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_22_0=ruleBooleanValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_22_0,
                      							"com.ge.research.sadl.SADL.BooleanValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:10768:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    {
                    // InternalDialogParser.g:10768:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    // InternalDialogParser.g:10769:4: () ( (lv_constant_24_0= ruleConstants ) )
                    {
                    // InternalDialogParser.g:10769:4: ()
                    // InternalDialogParser.g:10770:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10776:4: ( (lv_constant_24_0= ruleConstants ) )
                    // InternalDialogParser.g:10777:5: (lv_constant_24_0= ruleConstants )
                    {
                    // InternalDialogParser.g:10777:5: (lv_constant_24_0= ruleConstants )
                    // InternalDialogParser.g:10778:6: lv_constant_24_0= ruleConstants
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_24_0=ruleConstants();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"constant",
                      							lv_constant_24_0,
                      							"com.ge.research.sadl.SADL.Constants");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:10797:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    {
                    // InternalDialogParser.g:10797:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    // InternalDialogParser.g:10798:4: () ( (lv_valueTable_26_0= ruleValueTable ) )
                    {
                    // InternalDialogParser.g:10798:4: ()
                    // InternalDialogParser.g:10799:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10805:4: ( (lv_valueTable_26_0= ruleValueTable ) )
                    // InternalDialogParser.g:10806:5: (lv_valueTable_26_0= ruleValueTable )
                    {
                    // InternalDialogParser.g:10806:5: (lv_valueTable_26_0= ruleValueTable )
                    // InternalDialogParser.g:10807:6: lv_valueTable_26_0= ruleValueTable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_valueTable_26_0=ruleValueTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"valueTable",
                      							lv_valueTable_26_0,
                      							"com.ge.research.sadl.SADL.ValueTable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_PrimaryExpression"


    // $ANTLR start "norm3_PrimaryExpression"
    // InternalDialogParser.g:10830:1: norm3_PrimaryExpression returns [EObject current=null] : ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) ;
    public final EObject norm3_PrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_maxlen_16_2=null;
        Token lv_value_18_0=null;
        EObject this_SelectExpression_1 = null;

        EObject this_Name_3 = null;

        AntlrDatatypeRuleToken lv_article_5_0 = null;

        AntlrDatatypeRuleToken lv_ordinal_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_arglist_9_0 = null;

        EObject lv_arglist_11_0 = null;

        AntlrDatatypeRuleToken lv_len_14_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_16_1 = null;

        AntlrDatatypeRuleToken lv_value_20_0 = null;

        AntlrDatatypeRuleToken lv_value_22_0 = null;

        AntlrDatatypeRuleToken lv_constant_24_0 = null;

        EObject lv_valueTable_26_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10836:2: ( ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) )
            // InternalDialogParser.g:10837:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            {
            // InternalDialogParser.g:10837:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            int alt253=8;
            alt253 = dfa253.predict(input);
            switch (alt253) {
                case 1 :
                    // InternalDialogParser.g:10838:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis )
                    {
                    // InternalDialogParser.g:10838:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis )
                    // InternalDialogParser.g:10839:4: otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_36);
                    this_SelectExpression_1=norm3_SelectExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SelectExpression_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10857:3: this_Name_3= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Name_3=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Name_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:10866:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    {
                    // InternalDialogParser.g:10866:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    // InternalDialogParser.g:10867:4: () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    {
                    // InternalDialogParser.g:10867:4: ()
                    // InternalDialogParser.g:10868:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10874:4: ( (lv_article_5_0= ruleAnArticle ) )
                    // InternalDialogParser.g:10875:5: (lv_article_5_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:10875:5: (lv_article_5_0= ruleAnArticle )
                    // InternalDialogParser.g:10876:6: lv_article_5_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_133);
                    lv_article_5_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"article",
                      							lv_article_5_0,
                      							"com.ge.research.sadl.SADL.AnArticle");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:10893:4: ( (lv_ordinal_6_0= ruleOrdinal ) )?
                    int alt247=2;
                    int LA247_0 = input.LA(1);

                    if ( (LA247_0==Seventh||LA247_0==Eighth||LA247_0==Fourth||LA247_0==Second||(LA247_0>=Fifth && LA247_0<=First)||LA247_0==Ninth||(LA247_0>=Other && LA247_0<=Tenth)||LA247_0==Third) ) {
                        alt247=1;
                    }
                    switch (alt247) {
                        case 1 :
                            // InternalDialogParser.g:10894:5: (lv_ordinal_6_0= ruleOrdinal )
                            {
                            // InternalDialogParser.g:10894:5: (lv_ordinal_6_0= ruleOrdinal )
                            // InternalDialogParser.g:10895:6: lv_ordinal_6_0= ruleOrdinal
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FOLLOW_9);
                            lv_ordinal_6_0=ruleOrdinal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              						}
                              						set(
                              							current,
                              							"ordinal",
                              							lv_ordinal_6_0,
                              							"com.ge.research.sadl.SADL.Ordinal");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:10912:4: ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:10913:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:10913:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:10914:6: lv_type_7_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_134);
                    lv_type_7_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_7_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:10931:4: ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    int alt252=3;
                    int LA252_0 = input.LA(1);

                    if ( (LA252_0==LeftSquareBracket) ) {
                        alt252=1;
                    }
                    else if ( (LA252_0==Length) ) {
                        alt252=2;
                    }
                    switch (alt252) {
                        case 1 :
                            // InternalDialogParser.g:10932:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            {
                            // InternalDialogParser.g:10932:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            // InternalDialogParser.g:10933:6: otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket
                            {
                            otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_135); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
                              					
                            }
                            // InternalDialogParser.g:10937:6: ( (lv_arglist_9_0= ruleNestedExpression ) )?
                            int alt248=2;
                            int LA248_0 = input.LA(1);

                            if ( (LA248_0==Another||LA248_0==Element||LA248_0==Sublist||LA248_0==Length||LA248_0==Select||(LA248_0>=Count && LA248_0<=False)||LA248_0==First||(LA248_0>=Index && LA248_0<=Known)||LA248_0==There||LA248_0==Value||LA248_0==None||LA248_0==Last||LA248_0==Only||LA248_0==Some||(LA248_0>=True && LA248_0<=Type)||LA248_0==The||LA248_0==Any||LA248_0==Not||LA248_0==The_1||LA248_0==HyphenMinusHyphenMinus||(LA248_0>=An && LA248_0<=An_1)||LA248_0==ExclamationMark||LA248_0==LeftParenthesis||LA248_0==HyphenMinus||LA248_0==A||LA248_0==LeftSquareBracket||(LA248_0>=A_1 && LA248_0<=LeftCurlyBracket)||LA248_0==RULE_NUMBER||(LA248_0>=RULE_ID && LA248_0<=RULE_STRING)) ) {
                                alt248=1;
                            }
                            switch (alt248) {
                                case 1 :
                                    // InternalDialogParser.g:10938:7: (lv_arglist_9_0= ruleNestedExpression )
                                    {
                                    // InternalDialogParser.g:10938:7: (lv_arglist_9_0= ruleNestedExpression )
                                    // InternalDialogParser.g:10939:8: lv_arglist_9_0= ruleNestedExpression
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_86);
                                    lv_arglist_9_0=ruleNestedExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                      								}
                                      								add(
                                      									current,
                                      									"arglist",
                                      									lv_arglist_9_0,
                                      									"com.ge.research.sadl.SADL.NestedExpression");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:10956:6: (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )*
                            loop249:
                            do {
                                int alt249=2;
                                int LA249_0 = input.LA(1);

                                if ( (LA249_0==Comma) ) {
                                    alt249=1;
                                }


                                switch (alt249) {
                            	case 1 :
                            	    // InternalDialogParser.g:10957:7: otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_132); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:10961:7: ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    // InternalDialogParser.g:10962:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    {
                            	    // InternalDialogParser.g:10962:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    // InternalDialogParser.g:10963:9: lv_arglist_11_0= ruleNestedExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_86);
                            	    lv_arglist_11_0=ruleNestedExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arglist",
                            	      										lv_arglist_11_0,
                            	      										"com.ge.research.sadl.SADL.NestedExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop249;
                                }
                            } while (true);

                            otherlv_12=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10987:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            {
                            // InternalDialogParser.g:10987:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            // InternalDialogParser.g:10988:6: otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            {
                            otherlv_13=(Token)match(input,Length,FOLLOW_45); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:10992:6: ( (lv_len_14_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:10993:7: (lv_len_14_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:10993:7: (lv_len_14_0= ruleFacetNumber )
                            // InternalDialogParser.g:10994:8: lv_len_14_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_136);
                            lv_len_14_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              								}
                              								set(
                              									current,
                              									"len",
                              									lv_len_14_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:11011:6: ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            int alt251=2;
                            int LA251_0 = input.LA(1);

                            if ( (LA251_0==HyphenMinus) ) {
                                int LA251_1 = input.LA(2);

                                if ( (LA251_1==RULE_NUMBER) ) {
                                    int LA251_3 = input.LA(3);

                                    if ( (synpred34_InternalDialogParser()) ) {
                                        alt251=1;
                                    }
                                }
                                else if ( (LA251_1==HyphenMinus) ) {
                                    int LA251_4 = input.LA(3);

                                    if ( (LA251_4==RULE_NUMBER) ) {
                                        int LA251_6 = input.LA(4);

                                        if ( (synpred34_InternalDialogParser()) ) {
                                            alt251=1;
                                        }
                                    }
                                }
                                else if ( (LA251_1==Asterisk) && (synpred34_InternalDialogParser())) {
                                    alt251=1;
                                }
                            }
                            switch (alt251) {
                                case 1 :
                                    // InternalDialogParser.g:11012:7: ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    {
                                    // InternalDialogParser.g:11013:7: (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    // InternalDialogParser.g:11014:8: otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    {
                                    otherlv_15=(Token)match(input,HyphenMinus,FOLLOW_47); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
                                      							
                                    }
                                    // InternalDialogParser.g:11018:8: ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    // InternalDialogParser.g:11019:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    {
                                    // InternalDialogParser.g:11019:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    // InternalDialogParser.g:11020:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    {
                                    // InternalDialogParser.g:11020:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    int alt250=2;
                                    int LA250_0 = input.LA(1);

                                    if ( (LA250_0==HyphenMinus||LA250_0==RULE_NUMBER) ) {
                                        alt250=1;
                                    }
                                    else if ( (LA250_0==Asterisk) ) {
                                        alt250=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 250, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt250) {
                                        case 1 :
                                            // InternalDialogParser.g:11021:11: lv_maxlen_16_1= ruleFacetNumber
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_2);
                                            lv_maxlen_16_1=ruleFacetNumber();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											set(
                                              												current,
                                              												"maxlen",
                                              												lv_maxlen_16_1,
                                              												"com.ge.research.sadl.SADL.FacetNumber");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalDialogParser.g:11037:11: lv_maxlen_16_2= Asterisk
                                            {
                                            lv_maxlen_16_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											setWithLastConsumed(current, "maxlen", lv_maxlen_16_2, null);
                                              										
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:11056:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:11056:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:11057:4: () ( (lv_value_18_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:11057:4: ()
                    // InternalDialogParser.g:11058:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11064:4: ( (lv_value_18_0= RULE_STRING ) )
                    // InternalDialogParser.g:11065:5: (lv_value_18_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:11065:5: (lv_value_18_0= RULE_STRING )
                    // InternalDialogParser.g:11066:6: lv_value_18_0= RULE_STRING
                    {
                    lv_value_18_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_18_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:11084:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    {
                    // InternalDialogParser.g:11084:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    // InternalDialogParser.g:11085:4: () ( (lv_value_20_0= ruleAnyNumber ) )
                    {
                    // InternalDialogParser.g:11085:4: ()
                    // InternalDialogParser.g:11086:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11092:4: ( (lv_value_20_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:11093:5: (lv_value_20_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:11093:5: (lv_value_20_0= ruleAnyNumber )
                    // InternalDialogParser.g:11094:6: lv_value_20_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_20_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_20_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:11113:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    {
                    // InternalDialogParser.g:11113:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    // InternalDialogParser.g:11114:4: () ( (lv_value_22_0= ruleBooleanValue ) )
                    {
                    // InternalDialogParser.g:11114:4: ()
                    // InternalDialogParser.g:11115:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11121:4: ( (lv_value_22_0= ruleBooleanValue ) )
                    // InternalDialogParser.g:11122:5: (lv_value_22_0= ruleBooleanValue )
                    {
                    // InternalDialogParser.g:11122:5: (lv_value_22_0= ruleBooleanValue )
                    // InternalDialogParser.g:11123:6: lv_value_22_0= ruleBooleanValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_22_0=ruleBooleanValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_22_0,
                      							"com.ge.research.sadl.SADL.BooleanValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:11142:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    {
                    // InternalDialogParser.g:11142:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    // InternalDialogParser.g:11143:4: () ( (lv_constant_24_0= ruleConstants ) )
                    {
                    // InternalDialogParser.g:11143:4: ()
                    // InternalDialogParser.g:11144:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11150:4: ( (lv_constant_24_0= ruleConstants ) )
                    // InternalDialogParser.g:11151:5: (lv_constant_24_0= ruleConstants )
                    {
                    // InternalDialogParser.g:11151:5: (lv_constant_24_0= ruleConstants )
                    // InternalDialogParser.g:11152:6: lv_constant_24_0= ruleConstants
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_24_0=ruleConstants();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"constant",
                      							lv_constant_24_0,
                      							"com.ge.research.sadl.SADL.Constants");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:11171:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    {
                    // InternalDialogParser.g:11171:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    // InternalDialogParser.g:11172:4: () ( (lv_valueTable_26_0= ruleValueTable ) )
                    {
                    // InternalDialogParser.g:11172:4: ()
                    // InternalDialogParser.g:11173:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11179:4: ( (lv_valueTable_26_0= ruleValueTable ) )
                    // InternalDialogParser.g:11180:5: (lv_valueTable_26_0= ruleValueTable )
                    {
                    // InternalDialogParser.g:11180:5: (lv_valueTable_26_0= ruleValueTable )
                    // InternalDialogParser.g:11181:6: lv_valueTable_26_0= ruleValueTable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_valueTable_26_0=ruleValueTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"valueTable",
                      							lv_valueTable_26_0,
                      							"com.ge.research.sadl.SADL.ValueTable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_PrimaryExpression"


    // $ANTLR start "entryRuleName"
    // InternalDialogParser.g:11203:1: entryRuleName returns [EObject current=null] : iv_ruleName= ruleName EOF ;
    public final EObject entryRuleName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleName = null;


        try {
            // InternalDialogParser.g:11203:45: (iv_ruleName= ruleName EOF )
            // InternalDialogParser.g:11204:2: iv_ruleName= ruleName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleName=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleName"


    // $ANTLR start "ruleName"
    // InternalDialogParser.g:11210:1: ruleName returns [EObject current=null] : ( () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )? ) ;
    public final EObject ruleName() throws RecognitionException {
        EObject current = null;

        Token lv_function_2_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_arglist_3_0 = null;

        EObject lv_arglist_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:11216:2: ( ( () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )? ) )
            // InternalDialogParser.g:11217:2: ( () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )? )
            {
            // InternalDialogParser.g:11217:2: ( () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )? )
            // InternalDialogParser.g:11218:3: () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )?
            {
            // InternalDialogParser.g:11218:3: ()
            // InternalDialogParser.g:11219:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNameAccess().getNameAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:11225:3: ( ( ruleQNAME ) )
            // InternalDialogParser.g:11226:4: ( ruleQNAME )
            {
            // InternalDialogParser.g:11226:4: ( ruleQNAME )
            // InternalDialogParser.g:11227:5: ruleQNAME
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNameRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNameAccess().getNameSadlResourceCrossReference_1_0());
              				
            }
            pushFollow(FOLLOW_137);
            ruleQNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:11241:3: ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )?
            int alt256=2;
            int LA256_0 = input.LA(1);

            if ( (LA256_0==LeftParenthesis) && (synpred35_InternalDialogParser())) {
                alt256=1;
            }
            switch (alt256) {
                case 1 :
                    // InternalDialogParser.g:11242:4: ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis )
                    {
                    // InternalDialogParser.g:11243:4: ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis )
                    // InternalDialogParser.g:11244:5: ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis
                    {
                    // InternalDialogParser.g:11244:5: ( (lv_function_2_0= LeftParenthesis ) )
                    // InternalDialogParser.g:11245:6: (lv_function_2_0= LeftParenthesis )
                    {
                    // InternalDialogParser.g:11245:6: (lv_function_2_0= LeftParenthesis )
                    // InternalDialogParser.g:11246:7: lv_function_2_0= LeftParenthesis
                    {
                    lv_function_2_0=(Token)match(input,LeftParenthesis,FOLLOW_138); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_function_2_0, grammarAccess.getNameAccess().getFunctionLeftParenthesisKeyword_2_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNameRule());
                      							}
                      							setWithLastConsumed(current, "function", true, "(");
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:11258:5: ( (lv_arglist_3_0= ruleNestedExpression ) )?
                    int alt254=2;
                    int LA254_0 = input.LA(1);

                    if ( (LA254_0==Another||LA254_0==Element||LA254_0==Sublist||LA254_0==Length||LA254_0==Select||(LA254_0>=Count && LA254_0<=False)||LA254_0==First||(LA254_0>=Index && LA254_0<=Known)||LA254_0==There||LA254_0==Value||LA254_0==None||LA254_0==Last||LA254_0==Only||LA254_0==Some||(LA254_0>=True && LA254_0<=Type)||LA254_0==The||LA254_0==Any||LA254_0==Not||LA254_0==The_1||LA254_0==HyphenMinusHyphenMinus||(LA254_0>=An && LA254_0<=An_1)||LA254_0==ExclamationMark||LA254_0==LeftParenthesis||LA254_0==HyphenMinus||LA254_0==A||LA254_0==LeftSquareBracket||(LA254_0>=A_1 && LA254_0<=LeftCurlyBracket)||LA254_0==RULE_NUMBER||(LA254_0>=RULE_ID && LA254_0<=RULE_STRING)) ) {
                        alt254=1;
                    }
                    switch (alt254) {
                        case 1 :
                            // InternalDialogParser.g:11259:6: (lv_arglist_3_0= ruleNestedExpression )
                            {
                            // InternalDialogParser.g:11259:6: (lv_arglist_3_0= ruleNestedExpression )
                            // InternalDialogParser.g:11260:7: lv_arglist_3_0= ruleNestedExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getNameAccess().getArglistNestedExpressionParserRuleCall_2_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_25);
                            lv_arglist_3_0=ruleNestedExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getNameRule());
                              							}
                              							add(
                              								current,
                              								"arglist",
                              								lv_arglist_3_0,
                              								"com.ge.research.sadl.SADL.NestedExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:11277:5: (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )*
                    loop255:
                    do {
                        int alt255=2;
                        int LA255_0 = input.LA(1);

                        if ( (LA255_0==Comma) ) {
                            alt255=1;
                        }


                        switch (alt255) {
                    	case 1 :
                    	    // InternalDialogParser.g:11278:6: otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_132); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getNameAccess().getCommaKeyword_2_0_2_0());
                    	      					
                    	    }
                    	    // InternalDialogParser.g:11282:6: ( (lv_arglist_5_0= ruleNestedExpression ) )
                    	    // InternalDialogParser.g:11283:7: (lv_arglist_5_0= ruleNestedExpression )
                    	    {
                    	    // InternalDialogParser.g:11283:7: (lv_arglist_5_0= ruleNestedExpression )
                    	    // InternalDialogParser.g:11284:8: lv_arglist_5_0= ruleNestedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getNameAccess().getArglistNestedExpressionParserRuleCall_2_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_arglist_5_0=ruleNestedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getNameRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"arglist",
                    	      									lv_arglist_5_0,
                    	      									"com.ge.research.sadl.SADL.NestedExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop255;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getNameAccess().getRightParenthesisKeyword_2_0_3());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleName"


    // $ANTLR start "entryRuleValueTable"
    // InternalDialogParser.g:11312:1: entryRuleValueTable returns [EObject current=null] : iv_ruleValueTable= ruleValueTable EOF ;
    public final EObject entryRuleValueTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueTable = null;


        try {
            // InternalDialogParser.g:11312:51: (iv_ruleValueTable= ruleValueTable EOF )
            // InternalDialogParser.g:11313:2: iv_ruleValueTable= ruleValueTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueTable=ruleValueTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueTable"


    // $ANTLR start "ruleValueTable"
    // InternalDialogParser.g:11319:1: ruleValueTable returns [EObject current=null] : ( (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket ) | (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket ) ) ;
    public final EObject ruleValueTable() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_row_1_0 = null;

        EObject lv_rows_5_0 = null;

        EObject lv_rows_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:11325:2: ( ( (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket ) | (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket ) ) )
            // InternalDialogParser.g:11326:2: ( (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket ) | (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket ) )
            {
            // InternalDialogParser.g:11326:2: ( (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket ) | (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket ) )
            int alt259=2;
            int LA259_0 = input.LA(1);

            if ( (LA259_0==LeftSquareBracket) ) {
                alt259=1;
            }
            else if ( (LA259_0==LeftCurlyBracket) ) {
                alt259=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 259, 0, input);

                throw nvae;
            }
            switch (alt259) {
                case 1 :
                    // InternalDialogParser.g:11327:3: (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket )
                    {
                    // InternalDialogParser.g:11327:3: (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket )
                    // InternalDialogParser.g:11328:4: otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket
                    {
                    otherlv_0=(Token)match(input,LeftSquareBracket,FOLLOW_132); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_0_0());
                      			
                    }
                    // InternalDialogParser.g:11332:4: ( (lv_row_1_0= ruleValueRow ) )
                    // InternalDialogParser.g:11333:5: (lv_row_1_0= ruleValueRow )
                    {
                    // InternalDialogParser.g:11333:5: (lv_row_1_0= ruleValueRow )
                    // InternalDialogParser.g:11334:6: lv_row_1_0= ruleValueRow
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValueTableAccess().getRowValueRowParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_139);
                    lv_row_1_0=ruleValueRow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValueTableRule());
                      						}
                      						set(
                      							current,
                      							"row",
                      							lv_row_1_0,
                      							"com.ge.research.sadl.SADL.ValueRow");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:11357:3: (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:11357:3: (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket )
                    // InternalDialogParser.g:11358:4: otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket
                    {
                    otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getValueTableAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    otherlv_4=(Token)match(input,LeftSquareBracket,FOLLOW_132); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:11366:4: ( (lv_rows_5_0= ruleValueRow ) )
                    // InternalDialogParser.g:11367:5: (lv_rows_5_0= ruleValueRow )
                    {
                    // InternalDialogParser.g:11367:5: (lv_rows_5_0= ruleValueRow )
                    // InternalDialogParser.g:11368:6: lv_rows_5_0= ruleValueRow
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValueTableAccess().getRowsValueRowParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_139);
                    lv_rows_5_0=ruleValueRow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValueTableRule());
                      						}
                      						add(
                      							current,
                      							"rows",
                      							lv_rows_5_0,
                      							"com.ge.research.sadl.SADL.ValueRow");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,RightSquareBracket,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_1_3());
                      			
                    }
                    // InternalDialogParser.g:11389:4: ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )*
                    loop258:
                    do {
                        int alt258=2;
                        int LA258_0 = input.LA(1);

                        if ( (LA258_0==Comma||LA258_0==LeftSquareBracket) ) {
                            alt258=1;
                        }


                        switch (alt258) {
                    	case 1 :
                    	    // InternalDialogParser.g:11390:5: (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket
                    	    {
                    	    // InternalDialogParser.g:11390:5: (otherlv_7= Comma )?
                    	    int alt257=2;
                    	    int LA257_0 = input.LA(1);

                    	    if ( (LA257_0==Comma) ) {
                    	        alt257=1;
                    	    }
                    	    switch (alt257) {
                    	        case 1 :
                    	            // InternalDialogParser.g:11391:6: otherlv_7= Comma
                    	            {
                    	            otherlv_7=(Token)match(input,Comma,FOLLOW_140); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_7, grammarAccess.getValueTableAccess().getCommaKeyword_1_4_0());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_132); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_1_4_1());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:11400:5: ( (lv_rows_9_0= ruleValueRow ) )
                    	    // InternalDialogParser.g:11401:6: (lv_rows_9_0= ruleValueRow )
                    	    {
                    	    // InternalDialogParser.g:11401:6: (lv_rows_9_0= ruleValueRow )
                    	    // InternalDialogParser.g:11402:7: lv_rows_9_0= ruleValueRow
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getValueTableAccess().getRowsValueRowParserRuleCall_1_4_2_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_139);
                    	    lv_rows_9_0=ruleValueRow();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getValueTableRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"rows",
                    	      								lv_rows_9_0,
                    	      								"com.ge.research.sadl.SADL.ValueRow");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_10=(Token)match(input,RightSquareBracket,FOLLOW_141); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_1_4_3());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop258;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getValueTableAccess().getRightCurlyBracketKeyword_1_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueTable"


    // $ANTLR start "entryRuleBooleanValue"
    // InternalDialogParser.g:11433:1: entryRuleBooleanValue returns [String current=null] : iv_ruleBooleanValue= ruleBooleanValue EOF ;
    public final String entryRuleBooleanValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBooleanValue = null;


        try {
            // InternalDialogParser.g:11433:52: (iv_ruleBooleanValue= ruleBooleanValue EOF )
            // InternalDialogParser.g:11434:2: iv_ruleBooleanValue= ruleBooleanValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanValue=ruleBooleanValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanValue"


    // $ANTLR start "ruleBooleanValue"
    // InternalDialogParser.g:11440:1: ruleBooleanValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= True | kw= False ) ;
    public final AntlrDatatypeRuleToken ruleBooleanValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:11446:2: ( (kw= True | kw= False ) )
            // InternalDialogParser.g:11447:2: (kw= True | kw= False )
            {
            // InternalDialogParser.g:11447:2: (kw= True | kw= False )
            int alt260=2;
            int LA260_0 = input.LA(1);

            if ( (LA260_0==True) ) {
                alt260=1;
            }
            else if ( (LA260_0==False) ) {
                alt260=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 260, 0, input);

                throw nvae;
            }
            switch (alt260) {
                case 1 :
                    // InternalDialogParser.g:11448:3: kw= True
                    {
                    kw=(Token)match(input,True,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getTrueKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:11454:3: kw= False
                    {
                    kw=(Token)match(input,False,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getFalseKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanValue"


    // $ANTLR start "entryRuleConstants"
    // InternalDialogParser.g:11463:1: entryRuleConstants returns [String current=null] : iv_ruleConstants= ruleConstants EOF ;
    public final String entryRuleConstants() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleConstants = null;


        try {
            // InternalDialogParser.g:11463:49: (iv_ruleConstants= ruleConstants EOF )
            // InternalDialogParser.g:11464:2: iv_ruleConstants= ruleConstants EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstants=ruleConstants();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstants.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstants"


    // $ANTLR start "ruleConstants"
    // InternalDialogParser.g:11470:1: ruleConstants returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value ) ;
    public final AntlrDatatypeRuleToken ruleConstants() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DefiniteArticle_7 = null;

        AntlrDatatypeRuleToken this_DefiniteArticle_10 = null;

        AntlrDatatypeRuleToken this_AnArticle_14 = null;

        AntlrDatatypeRuleToken this_Ordinal_15 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:11476:2: ( (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value ) )
            // InternalDialogParser.g:11477:2: (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value )
            {
            // InternalDialogParser.g:11477:2: (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value )
            int alt266=11;
            alt266 = dfa266.predict(input);
            switch (alt266) {
                case 1 :
                    // InternalDialogParser.g:11478:3: kw= PI
                    {
                    kw=(Token)match(input,PI,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getPIKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:11484:3: kw= Known
                    {
                    kw=(Token)match(input,Known,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getKnownKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:11490:3: kw= E_1
                    {
                    kw=(Token)match(input,E_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getEKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:11496:3: kw= HyphenMinusHyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getHyphenMinusHyphenMinusKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:11502:3: kw= None
                    {
                    kw=(Token)match(input,None,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getNoneKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:11508:3: ( (kw= A_1 )? kw= Type )
                    {
                    // InternalDialogParser.g:11508:3: ( (kw= A_1 )? kw= Type )
                    // InternalDialogParser.g:11509:4: (kw= A_1 )? kw= Type
                    {
                    // InternalDialogParser.g:11509:4: (kw= A_1 )?
                    int alt261=2;
                    int LA261_0 = input.LA(1);

                    if ( (LA261_0==A_1) ) {
                        alt261=1;
                    }
                    switch (alt261) {
                        case 1 :
                            // InternalDialogParser.g:11510:5: kw= A_1
                            {
                            kw=(Token)match(input,A_1,FOLLOW_14); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getConstantsAccess().getAKeyword_5_0());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,Type,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getConstantsAccess().getTypeKeyword_5_1());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:11523:3: ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length )
                    {
                    // InternalDialogParser.g:11523:3: ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length )
                    // InternalDialogParser.g:11524:4: (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length
                    {
                    // InternalDialogParser.g:11524:4: (this_DefiniteArticle_7= ruleDefiniteArticle )?
                    int alt262=2;
                    int LA262_0 = input.LA(1);

                    if ( (LA262_0==The||LA262_0==The_1) ) {
                        alt262=1;
                    }
                    switch (alt262) {
                        case 1 :
                            // InternalDialogParser.g:11525:5: this_DefiniteArticle_7= ruleDefiniteArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getConstantsAccess().getDefiniteArticleParserRuleCall_6_0());
                              				
                            }
                            pushFollow(FOLLOW_142);
                            this_DefiniteArticle_7=ruleDefiniteArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DefiniteArticle_7);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,Length,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getConstantsAccess().getLengthKeyword_6_1());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:11543:3: kw= Count
                    {
                    kw=(Token)match(input,Count,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getCountKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalDialogParser.g:11549:3: ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index )
                    {
                    // InternalDialogParser.g:11549:3: ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index )
                    // InternalDialogParser.g:11550:4: (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index
                    {
                    // InternalDialogParser.g:11550:4: (this_DefiniteArticle_10= ruleDefiniteArticle )?
                    int alt263=2;
                    int LA263_0 = input.LA(1);

                    if ( (LA263_0==The||LA263_0==The_1) ) {
                        alt263=1;
                    }
                    switch (alt263) {
                        case 1 :
                            // InternalDialogParser.g:11551:5: this_DefiniteArticle_10= ruleDefiniteArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getConstantsAccess().getDefiniteArticleParserRuleCall_8_0());
                              				
                            }
                            pushFollow(FOLLOW_143);
                            this_DefiniteArticle_10=ruleDefiniteArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DefiniteArticle_10);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,Index,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getConstantsAccess().getIndexKeyword_8_1());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalDialogParser.g:11569:3: ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element )
                    {
                    // InternalDialogParser.g:11569:3: ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element )
                    // InternalDialogParser.g:11570:4: (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element
                    {
                    // InternalDialogParser.g:11570:4: (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) )
                    int alt265=3;
                    switch ( input.LA(1) ) {
                    case First:
                        {
                        alt265=1;
                        }
                        break;
                    case Last:
                        {
                        alt265=2;
                        }
                        break;
                    case Another:
                    case Some:
                    case The:
                    case Any:
                    case The_1:
                    case An:
                    case An_1:
                    case A:
                    case A_1:
                        {
                        alt265=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 265, 0, input);

                        throw nvae;
                    }

                    switch (alt265) {
                        case 1 :
                            // InternalDialogParser.g:11571:5: kw= First
                            {
                            kw=(Token)match(input,First,FOLLOW_144); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getConstantsAccess().getFirstKeyword_9_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:11577:5: kw= Last
                            {
                            kw=(Token)match(input,Last,FOLLOW_144); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getConstantsAccess().getLastKeyword_9_0_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:11583:5: (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? )
                            {
                            // InternalDialogParser.g:11583:5: (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? )
                            // InternalDialogParser.g:11584:6: this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )?
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getConstantsAccess().getAnArticleParserRuleCall_9_0_2_0());
                              					
                            }
                            pushFollow(FOLLOW_145);
                            this_AnArticle_14=ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current.merge(this_AnArticle_14);
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						afterParserOrEnumRuleCall();
                              					
                            }
                            // InternalDialogParser.g:11594:6: (this_Ordinal_15= ruleOrdinal )?
                            int alt264=2;
                            int LA264_0 = input.LA(1);

                            if ( (LA264_0==Seventh||LA264_0==Eighth||LA264_0==Fourth||LA264_0==Second||(LA264_0>=Fifth && LA264_0<=First)||LA264_0==Ninth||(LA264_0>=Other && LA264_0<=Tenth)||LA264_0==Third) ) {
                                alt264=1;
                            }
                            switch (alt264) {
                                case 1 :
                                    // InternalDialogParser.g:11595:7: this_Ordinal_15= ruleOrdinal
                                    {
                                    if ( state.backtracking==0 ) {

                                      							newCompositeNode(grammarAccess.getConstantsAccess().getOrdinalParserRuleCall_9_0_2_1());
                                      						
                                    }
                                    pushFollow(FOLLOW_144);
                                    this_Ordinal_15=ruleOrdinal();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							current.merge(this_Ordinal_15);
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							afterParserOrEnumRuleCall();
                                      						
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    kw=(Token)match(input,Element,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getConstantsAccess().getElementKeyword_9_1());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalDialogParser.g:11615:3: kw= Value
                    {
                    kw=(Token)match(input,Value,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getValueKeyword_10());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstants"


    // $ANTLR start "entryRuleValueRow"
    // InternalDialogParser.g:11624:1: entryRuleValueRow returns [EObject current=null] : iv_ruleValueRow= ruleValueRow EOF ;
    public final EObject entryRuleValueRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueRow = null;


        try {
            // InternalDialogParser.g:11624:49: (iv_ruleValueRow= ruleValueRow EOF )
            // InternalDialogParser.g:11625:2: iv_ruleValueRow= ruleValueRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueRow=ruleValueRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueRow"


    // $ANTLR start "ruleValueRow"
    // InternalDialogParser.g:11631:1: ruleValueRow returns [EObject current=null] : ( ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )* ) ;
    public final EObject ruleValueRow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_explicitValues_0_0 = null;

        EObject lv_explicitValues_2_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:11637:2: ( ( ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )* ) )
            // InternalDialogParser.g:11638:2: ( ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )* )
            {
            // InternalDialogParser.g:11638:2: ( ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )* )
            // InternalDialogParser.g:11639:3: ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )*
            {
            // InternalDialogParser.g:11639:3: ( (lv_explicitValues_0_0= ruleNestedExpression ) )
            // InternalDialogParser.g:11640:4: (lv_explicitValues_0_0= ruleNestedExpression )
            {
            // InternalDialogParser.g:11640:4: (lv_explicitValues_0_0= ruleNestedExpression )
            // InternalDialogParser.g:11641:5: lv_explicitValues_0_0= ruleNestedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueRowAccess().getExplicitValuesNestedExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_146);
            lv_explicitValues_0_0=ruleNestedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueRowRule());
              					}
              					add(
              						current,
              						"explicitValues",
              						lv_explicitValues_0_0,
              						"com.ge.research.sadl.SADL.NestedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:11658:3: (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )*
            loop267:
            do {
                int alt267=2;
                int LA267_0 = input.LA(1);

                if ( (LA267_0==Comma) ) {
                    alt267=1;
                }


                switch (alt267) {
            	case 1 :
            	    // InternalDialogParser.g:11659:4: otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) )
            	    {
            	    otherlv_1=(Token)match(input,Comma,FOLLOW_132); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getValueRowAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalDialogParser.g:11663:4: ( (lv_explicitValues_2_0= ruleNestedExpression ) )
            	    // InternalDialogParser.g:11664:5: (lv_explicitValues_2_0= ruleNestedExpression )
            	    {
            	    // InternalDialogParser.g:11664:5: (lv_explicitValues_2_0= ruleNestedExpression )
            	    // InternalDialogParser.g:11665:6: lv_explicitValues_2_0= ruleNestedExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValueRowAccess().getExplicitValuesNestedExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_146);
            	    lv_explicitValues_2_0=ruleNestedExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValueRowRule());
            	      						}
            	      						add(
            	      							current,
            	      							"explicitValues",
            	      							lv_explicitValues_2_0,
            	      							"com.ge.research.sadl.SADL.NestedExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop267;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueRow"


    // $ANTLR start "entryRuleAnyNumber"
    // InternalDialogParser.g:11687:1: entryRuleAnyNumber returns [String current=null] : iv_ruleAnyNumber= ruleAnyNumber EOF ;
    public final String entryRuleAnyNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAnyNumber = null;


        try {
            // InternalDialogParser.g:11687:49: (iv_ruleAnyNumber= ruleAnyNumber EOF )
            // InternalDialogParser.g:11688:2: iv_ruleAnyNumber= ruleAnyNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnyNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnyNumber=ruleAnyNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnyNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnyNumber"


    // $ANTLR start "ruleAnyNumber"
    // InternalDialogParser.g:11694:1: ruleAnyNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )? ) ;
    public final AntlrDatatypeRuleToken ruleAnyNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_DecimalNumber_0 = null;

        AntlrDatatypeRuleToken this_EXPONENT_1 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:11700:2: ( (this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )? ) )
            // InternalDialogParser.g:11701:2: (this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )? )
            {
            // InternalDialogParser.g:11701:2: (this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )? )
            // InternalDialogParser.g:11702:3: this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAnyNumberAccess().getDecimalNumberParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_147);
            this_DecimalNumber_0=ruleDecimalNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_DecimalNumber_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:11712:3: (this_EXPONENT_1= ruleEXPONENT )?
            int alt268=2;
            int LA268_0 = input.LA(1);

            if ( (LA268_0==E||LA268_0==E_1) ) {
                alt268=1;
            }
            switch (alt268) {
                case 1 :
                    // InternalDialogParser.g:11713:4: this_EXPONENT_1= ruleEXPONENT
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAnyNumberAccess().getEXPONENTParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_EXPONENT_1=ruleEXPONENT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_EXPONENT_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnyNumber"


    // $ANTLR start "entryRuleDecimalNumber"
    // InternalDialogParser.g:11728:1: entryRuleDecimalNumber returns [String current=null] : iv_ruleDecimalNumber= ruleDecimalNumber EOF ;
    public final String entryRuleDecimalNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDecimalNumber = null;


        try {
            // InternalDialogParser.g:11728:53: (iv_ruleDecimalNumber= ruleDecimalNumber EOF )
            // InternalDialogParser.g:11729:2: iv_ruleDecimalNumber= ruleDecimalNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDecimalNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDecimalNumber=ruleDecimalNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDecimalNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDecimalNumber"


    // $ANTLR start "ruleDecimalNumber"
    // InternalDialogParser.g:11735:1: ruleDecimalNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_NUMBER_0= RULE_NUMBER ;
    public final AntlrDatatypeRuleToken ruleDecimalNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_NUMBER_0=null;


        	enterRule();

        try {
            // InternalDialogParser.g:11741:2: (this_NUMBER_0= RULE_NUMBER )
            // InternalDialogParser.g:11742:2: this_NUMBER_0= RULE_NUMBER
            {
            this_NUMBER_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_NUMBER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_NUMBER_0, grammarAccess.getDecimalNumberAccess().getNUMBERTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDecimalNumber"


    // $ANTLR start "entryRuleEXPONENT"
    // InternalDialogParser.g:11752:1: entryRuleEXPONENT returns [String current=null] : iv_ruleEXPONENT= ruleEXPONENT EOF ;
    public final String entryRuleEXPONENT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEXPONENT = null;


        try {
            // InternalDialogParser.g:11752:48: (iv_ruleEXPONENT= ruleEXPONENT EOF )
            // InternalDialogParser.g:11753:2: iv_ruleEXPONENT= ruleEXPONENT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEXPONENTRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEXPONENT=ruleEXPONENT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEXPONENT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEXPONENT"


    // $ANTLR start "ruleEXPONENT"
    // InternalDialogParser.g:11759:1: ruleEXPONENT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber ) ;
    public final AntlrDatatypeRuleToken ruleEXPONENT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DecimalNumber_4 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:11765:2: ( ( (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber ) )
            // InternalDialogParser.g:11766:2: ( (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber )
            {
            // InternalDialogParser.g:11766:2: ( (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber )
            // InternalDialogParser.g:11767:3: (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber
            {
            // InternalDialogParser.g:11767:3: (kw= E_1 | kw= E )
            int alt269=2;
            int LA269_0 = input.LA(1);

            if ( (LA269_0==E_1) ) {
                alt269=1;
            }
            else if ( (LA269_0==E) ) {
                alt269=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 269, 0, input);

                throw nvae;
            }
            switch (alt269) {
                case 1 :
                    // InternalDialogParser.g:11768:4: kw= E_1
                    {
                    kw=(Token)match(input,E_1,FOLLOW_148); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getEKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:11774:4: kw= E
                    {
                    kw=(Token)match(input,E,FOLLOW_148); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getEKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:11780:3: (kw= HyphenMinus | kw= PlusSign )?
            int alt270=3;
            int LA270_0 = input.LA(1);

            if ( (LA270_0==HyphenMinus) ) {
                alt270=1;
            }
            else if ( (LA270_0==PlusSign) ) {
                alt270=2;
            }
            switch (alt270) {
                case 1 :
                    // InternalDialogParser.g:11781:4: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getHyphenMinusKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:11787:4: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getPlusSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEXPONENTAccess().getDecimalNumberParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_DecimalNumber_4=ruleDecimalNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_DecimalNumber_4);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEXPONENT"


    // $ANTLR start "entrySuperEOS"
    // InternalDialogParser.g:11807:1: entrySuperEOS returns [String current=null] : iv_superEOS= superEOS EOF ;
    public final String entrySuperEOS() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_superEOS = null;


        try {
            // InternalDialogParser.g:11807:44: (iv_superEOS= superEOS EOF )
            // InternalDialogParser.g:11808:2: iv_superEOS= superEOS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSADLEOSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_superEOS=superEOS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superEOS.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperEOS"


    // $ANTLR start "superEOS"
    // InternalDialogParser.g:11814:1: superEOS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= FullStop ;
    public final AntlrDatatypeRuleToken superEOS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:11820:2: (kw= FullStop )
            // InternalDialogParser.g:11821:2: kw= FullStop
            {
            kw=(Token)match(input,FullStop,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getSADLEOSAccess().getFullStopKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superEOS"


    // $ANTLR start "entryRuleQNAME"
    // InternalDialogParser.g:11829:1: entryRuleQNAME returns [String current=null] : iv_ruleQNAME= ruleQNAME EOF ;
    public final String entryRuleQNAME() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQNAME = null;


        try {
            // InternalDialogParser.g:11829:45: (iv_ruleQNAME= ruleQNAME EOF )
            // InternalDialogParser.g:11830:2: iv_ruleQNAME= ruleQNAME EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQNAMERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQNAME=ruleQNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQNAME.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQNAME"


    // $ANTLR start "ruleQNAME"
    // InternalDialogParser.g:11836:1: ruleQNAME returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL | this_ID_1= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleQNAME() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_QNAME_TERMINAL_0=null;
        Token this_ID_1=null;


        	enterRule();

        try {
            // InternalDialogParser.g:11842:2: ( (this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL | this_ID_1= RULE_ID ) )
            // InternalDialogParser.g:11843:2: (this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL | this_ID_1= RULE_ID )
            {
            // InternalDialogParser.g:11843:2: (this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL | this_ID_1= RULE_ID )
            int alt271=2;
            int LA271_0 = input.LA(1);

            if ( (LA271_0==RULE_QNAME_TERMINAL) ) {
                alt271=1;
            }
            else if ( (LA271_0==RULE_ID) ) {
                alt271=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 271, 0, input);

                throw nvae;
            }
            switch (alt271) {
                case 1 :
                    // InternalDialogParser.g:11844:3: this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL
                    {
                    this_QNAME_TERMINAL_0=(Token)match(input,RULE_QNAME_TERMINAL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_QNAME_TERMINAL_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_QNAME_TERMINAL_0, grammarAccess.getQNAMEAccess().getQNAME_TERMINALTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:11852:3: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_1, grammarAccess.getQNAMEAccess().getIDTerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQNAME"


    // $ANTLR start "ruleSadlDataType"
    // InternalDialogParser.g:11863:1: ruleSadlDataType returns [Enumerator current=null] : ( (enumLiteral_0= String ) | (enumLiteral_1= Boolean ) | (enumLiteral_2= Decimal ) | (enumLiteral_3= Int ) | (enumLiteral_4= Long ) | (enumLiteral_5= Float ) | (enumLiteral_6= Double ) | (enumLiteral_7= Duration ) | (enumLiteral_8= DateTime ) | (enumLiteral_9= Time ) | (enumLiteral_10= Date ) | (enumLiteral_11= GYearMonth ) | (enumLiteral_12= GYear ) | (enumLiteral_13= GMonthDay ) | (enumLiteral_14= GDay ) | (enumLiteral_15= GMonth ) | (enumLiteral_16= HexBinary ) | (enumLiteral_17= Base64Binary ) | (enumLiteral_18= AnyURI ) | (enumLiteral_19= Integer ) | (enumLiteral_20= NegativeInteger ) | (enumLiteral_21= NonNegativeInteger ) | (enumLiteral_22= PositiveInteger ) | (enumLiteral_23= NonPositiveInteger ) | (enumLiteral_24= Byte ) | (enumLiteral_25= UnsignedByte ) | (enumLiteral_26= UnsignedInt ) | (enumLiteral_27= AnySimpleType ) ) ;
    public final Enumerator ruleSadlDataType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;
        Token enumLiteral_9=null;
        Token enumLiteral_10=null;
        Token enumLiteral_11=null;
        Token enumLiteral_12=null;
        Token enumLiteral_13=null;
        Token enumLiteral_14=null;
        Token enumLiteral_15=null;
        Token enumLiteral_16=null;
        Token enumLiteral_17=null;
        Token enumLiteral_18=null;
        Token enumLiteral_19=null;
        Token enumLiteral_20=null;
        Token enumLiteral_21=null;
        Token enumLiteral_22=null;
        Token enumLiteral_23=null;
        Token enumLiteral_24=null;
        Token enumLiteral_25=null;
        Token enumLiteral_26=null;
        Token enumLiteral_27=null;


        	enterRule();

        try {
            // InternalDialogParser.g:11869:2: ( ( (enumLiteral_0= String ) | (enumLiteral_1= Boolean ) | (enumLiteral_2= Decimal ) | (enumLiteral_3= Int ) | (enumLiteral_4= Long ) | (enumLiteral_5= Float ) | (enumLiteral_6= Double ) | (enumLiteral_7= Duration ) | (enumLiteral_8= DateTime ) | (enumLiteral_9= Time ) | (enumLiteral_10= Date ) | (enumLiteral_11= GYearMonth ) | (enumLiteral_12= GYear ) | (enumLiteral_13= GMonthDay ) | (enumLiteral_14= GDay ) | (enumLiteral_15= GMonth ) | (enumLiteral_16= HexBinary ) | (enumLiteral_17= Base64Binary ) | (enumLiteral_18= AnyURI ) | (enumLiteral_19= Integer ) | (enumLiteral_20= NegativeInteger ) | (enumLiteral_21= NonNegativeInteger ) | (enumLiteral_22= PositiveInteger ) | (enumLiteral_23= NonPositiveInteger ) | (enumLiteral_24= Byte ) | (enumLiteral_25= UnsignedByte ) | (enumLiteral_26= UnsignedInt ) | (enumLiteral_27= AnySimpleType ) ) )
            // InternalDialogParser.g:11870:2: ( (enumLiteral_0= String ) | (enumLiteral_1= Boolean ) | (enumLiteral_2= Decimal ) | (enumLiteral_3= Int ) | (enumLiteral_4= Long ) | (enumLiteral_5= Float ) | (enumLiteral_6= Double ) | (enumLiteral_7= Duration ) | (enumLiteral_8= DateTime ) | (enumLiteral_9= Time ) | (enumLiteral_10= Date ) | (enumLiteral_11= GYearMonth ) | (enumLiteral_12= GYear ) | (enumLiteral_13= GMonthDay ) | (enumLiteral_14= GDay ) | (enumLiteral_15= GMonth ) | (enumLiteral_16= HexBinary ) | (enumLiteral_17= Base64Binary ) | (enumLiteral_18= AnyURI ) | (enumLiteral_19= Integer ) | (enumLiteral_20= NegativeInteger ) | (enumLiteral_21= NonNegativeInteger ) | (enumLiteral_22= PositiveInteger ) | (enumLiteral_23= NonPositiveInteger ) | (enumLiteral_24= Byte ) | (enumLiteral_25= UnsignedByte ) | (enumLiteral_26= UnsignedInt ) | (enumLiteral_27= AnySimpleType ) )
            {
            // InternalDialogParser.g:11870:2: ( (enumLiteral_0= String ) | (enumLiteral_1= Boolean ) | (enumLiteral_2= Decimal ) | (enumLiteral_3= Int ) | (enumLiteral_4= Long ) | (enumLiteral_5= Float ) | (enumLiteral_6= Double ) | (enumLiteral_7= Duration ) | (enumLiteral_8= DateTime ) | (enumLiteral_9= Time ) | (enumLiteral_10= Date ) | (enumLiteral_11= GYearMonth ) | (enumLiteral_12= GYear ) | (enumLiteral_13= GMonthDay ) | (enumLiteral_14= GDay ) | (enumLiteral_15= GMonth ) | (enumLiteral_16= HexBinary ) | (enumLiteral_17= Base64Binary ) | (enumLiteral_18= AnyURI ) | (enumLiteral_19= Integer ) | (enumLiteral_20= NegativeInteger ) | (enumLiteral_21= NonNegativeInteger ) | (enumLiteral_22= PositiveInteger ) | (enumLiteral_23= NonPositiveInteger ) | (enumLiteral_24= Byte ) | (enumLiteral_25= UnsignedByte ) | (enumLiteral_26= UnsignedInt ) | (enumLiteral_27= AnySimpleType ) )
            int alt272=28;
            switch ( input.LA(1) ) {
            case String:
                {
                alt272=1;
                }
                break;
            case Boolean:
                {
                alt272=2;
                }
                break;
            case Decimal:
                {
                alt272=3;
                }
                break;
            case Int:
                {
                alt272=4;
                }
                break;
            case Long:
                {
                alt272=5;
                }
                break;
            case Float:
                {
                alt272=6;
                }
                break;
            case Double:
                {
                alt272=7;
                }
                break;
            case Duration:
                {
                alt272=8;
                }
                break;
            case DateTime:
                {
                alt272=9;
                }
                break;
            case Time:
                {
                alt272=10;
                }
                break;
            case Date:
                {
                alt272=11;
                }
                break;
            case GYearMonth:
                {
                alt272=12;
                }
                break;
            case GYear:
                {
                alt272=13;
                }
                break;
            case GMonthDay:
                {
                alt272=14;
                }
                break;
            case GDay:
                {
                alt272=15;
                }
                break;
            case GMonth:
                {
                alt272=16;
                }
                break;
            case HexBinary:
                {
                alt272=17;
                }
                break;
            case Base64Binary:
                {
                alt272=18;
                }
                break;
            case AnyURI:
                {
                alt272=19;
                }
                break;
            case Integer:
                {
                alt272=20;
                }
                break;
            case NegativeInteger:
                {
                alt272=21;
                }
                break;
            case NonNegativeInteger:
                {
                alt272=22;
                }
                break;
            case PositiveInteger:
                {
                alt272=23;
                }
                break;
            case NonPositiveInteger:
                {
                alt272=24;
                }
                break;
            case Byte:
                {
                alt272=25;
                }
                break;
            case UnsignedByte:
                {
                alt272=26;
                }
                break;
            case UnsignedInt:
                {
                alt272=27;
                }
                break;
            case AnySimpleType:
                {
                alt272=28;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 272, 0, input);

                throw nvae;
            }

            switch (alt272) {
                case 1 :
                    // InternalDialogParser.g:11871:3: (enumLiteral_0= String )
                    {
                    // InternalDialogParser.g:11871:3: (enumLiteral_0= String )
                    // InternalDialogParser.g:11872:4: enumLiteral_0= String
                    {
                    enumLiteral_0=(Token)match(input,String,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getSadlDataTypeAccess().getStringEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:11879:3: (enumLiteral_1= Boolean )
                    {
                    // InternalDialogParser.g:11879:3: (enumLiteral_1= Boolean )
                    // InternalDialogParser.g:11880:4: enumLiteral_1= Boolean
                    {
                    enumLiteral_1=(Token)match(input,Boolean,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getBooleanEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getSadlDataTypeAccess().getBooleanEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:11887:3: (enumLiteral_2= Decimal )
                    {
                    // InternalDialogParser.g:11887:3: (enumLiteral_2= Decimal )
                    // InternalDialogParser.g:11888:4: enumLiteral_2= Decimal
                    {
                    enumLiteral_2=(Token)match(input,Decimal,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDecimalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getSadlDataTypeAccess().getDecimalEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:11895:3: (enumLiteral_3= Int )
                    {
                    // InternalDialogParser.g:11895:3: (enumLiteral_3= Int )
                    // InternalDialogParser.g:11896:4: enumLiteral_3= Int
                    {
                    enumLiteral_3=(Token)match(input,Int,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getIntEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getSadlDataTypeAccess().getIntEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:11903:3: (enumLiteral_4= Long )
                    {
                    // InternalDialogParser.g:11903:3: (enumLiteral_4= Long )
                    // InternalDialogParser.g:11904:4: enumLiteral_4= Long
                    {
                    enumLiteral_4=(Token)match(input,Long,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getLongEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getSadlDataTypeAccess().getLongEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:11911:3: (enumLiteral_5= Float )
                    {
                    // InternalDialogParser.g:11911:3: (enumLiteral_5= Float )
                    // InternalDialogParser.g:11912:4: enumLiteral_5= Float
                    {
                    enumLiteral_5=(Token)match(input,Float,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getFloatEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getSadlDataTypeAccess().getFloatEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:11919:3: (enumLiteral_6= Double )
                    {
                    // InternalDialogParser.g:11919:3: (enumLiteral_6= Double )
                    // InternalDialogParser.g:11920:4: enumLiteral_6= Double
                    {
                    enumLiteral_6=(Token)match(input,Double,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDoubleEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getSadlDataTypeAccess().getDoubleEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:11927:3: (enumLiteral_7= Duration )
                    {
                    // InternalDialogParser.g:11927:3: (enumLiteral_7= Duration )
                    // InternalDialogParser.g:11928:4: enumLiteral_7= Duration
                    {
                    enumLiteral_7=(Token)match(input,Duration,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDurationEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getSadlDataTypeAccess().getDurationEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalDialogParser.g:11935:3: (enumLiteral_8= DateTime )
                    {
                    // InternalDialogParser.g:11935:3: (enumLiteral_8= DateTime )
                    // InternalDialogParser.g:11936:4: enumLiteral_8= DateTime
                    {
                    enumLiteral_8=(Token)match(input,DateTime,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDateTimeEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_8, grammarAccess.getSadlDataTypeAccess().getDateTimeEnumLiteralDeclaration_8());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalDialogParser.g:11943:3: (enumLiteral_9= Time )
                    {
                    // InternalDialogParser.g:11943:3: (enumLiteral_9= Time )
                    // InternalDialogParser.g:11944:4: enumLiteral_9= Time
                    {
                    enumLiteral_9=(Token)match(input,Time,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getTimeEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_9, grammarAccess.getSadlDataTypeAccess().getTimeEnumLiteralDeclaration_9());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalDialogParser.g:11951:3: (enumLiteral_10= Date )
                    {
                    // InternalDialogParser.g:11951:3: (enumLiteral_10= Date )
                    // InternalDialogParser.g:11952:4: enumLiteral_10= Date
                    {
                    enumLiteral_10=(Token)match(input,Date,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDateEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_10, grammarAccess.getSadlDataTypeAccess().getDateEnumLiteralDeclaration_10());
                      			
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalDialogParser.g:11959:3: (enumLiteral_11= GYearMonth )
                    {
                    // InternalDialogParser.g:11959:3: (enumLiteral_11= GYearMonth )
                    // InternalDialogParser.g:11960:4: enumLiteral_11= GYearMonth
                    {
                    enumLiteral_11=(Token)match(input,GYearMonth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGYearMonthEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_11, grammarAccess.getSadlDataTypeAccess().getGYearMonthEnumLiteralDeclaration_11());
                      			
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalDialogParser.g:11967:3: (enumLiteral_12= GYear )
                    {
                    // InternalDialogParser.g:11967:3: (enumLiteral_12= GYear )
                    // InternalDialogParser.g:11968:4: enumLiteral_12= GYear
                    {
                    enumLiteral_12=(Token)match(input,GYear,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGYearEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_12, grammarAccess.getSadlDataTypeAccess().getGYearEnumLiteralDeclaration_12());
                      			
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalDialogParser.g:11975:3: (enumLiteral_13= GMonthDay )
                    {
                    // InternalDialogParser.g:11975:3: (enumLiteral_13= GMonthDay )
                    // InternalDialogParser.g:11976:4: enumLiteral_13= GMonthDay
                    {
                    enumLiteral_13=(Token)match(input,GMonthDay,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGMonthDayEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_13, grammarAccess.getSadlDataTypeAccess().getGMonthDayEnumLiteralDeclaration_13());
                      			
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalDialogParser.g:11983:3: (enumLiteral_14= GDay )
                    {
                    // InternalDialogParser.g:11983:3: (enumLiteral_14= GDay )
                    // InternalDialogParser.g:11984:4: enumLiteral_14= GDay
                    {
                    enumLiteral_14=(Token)match(input,GDay,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGDayEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_14, grammarAccess.getSadlDataTypeAccess().getGDayEnumLiteralDeclaration_14());
                      			
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalDialogParser.g:11991:3: (enumLiteral_15= GMonth )
                    {
                    // InternalDialogParser.g:11991:3: (enumLiteral_15= GMonth )
                    // InternalDialogParser.g:11992:4: enumLiteral_15= GMonth
                    {
                    enumLiteral_15=(Token)match(input,GMonth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGMonthEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_15, grammarAccess.getSadlDataTypeAccess().getGMonthEnumLiteralDeclaration_15());
                      			
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalDialogParser.g:11999:3: (enumLiteral_16= HexBinary )
                    {
                    // InternalDialogParser.g:11999:3: (enumLiteral_16= HexBinary )
                    // InternalDialogParser.g:12000:4: enumLiteral_16= HexBinary
                    {
                    enumLiteral_16=(Token)match(input,HexBinary,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getHexBinaryEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_16, grammarAccess.getSadlDataTypeAccess().getHexBinaryEnumLiteralDeclaration_16());
                      			
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalDialogParser.g:12007:3: (enumLiteral_17= Base64Binary )
                    {
                    // InternalDialogParser.g:12007:3: (enumLiteral_17= Base64Binary )
                    // InternalDialogParser.g:12008:4: enumLiteral_17= Base64Binary
                    {
                    enumLiteral_17=(Token)match(input,Base64Binary,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getBase64BinaryEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_17, grammarAccess.getSadlDataTypeAccess().getBase64BinaryEnumLiteralDeclaration_17());
                      			
                    }

                    }


                    }
                    break;
                case 19 :
                    // InternalDialogParser.g:12015:3: (enumLiteral_18= AnyURI )
                    {
                    // InternalDialogParser.g:12015:3: (enumLiteral_18= AnyURI )
                    // InternalDialogParser.g:12016:4: enumLiteral_18= AnyURI
                    {
                    enumLiteral_18=(Token)match(input,AnyURI,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getAnyURIEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_18, grammarAccess.getSadlDataTypeAccess().getAnyURIEnumLiteralDeclaration_18());
                      			
                    }

                    }


                    }
                    break;
                case 20 :
                    // InternalDialogParser.g:12023:3: (enumLiteral_19= Integer )
                    {
                    // InternalDialogParser.g:12023:3: (enumLiteral_19= Integer )
                    // InternalDialogParser.g:12024:4: enumLiteral_19= Integer
                    {
                    enumLiteral_19=(Token)match(input,Integer,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getIntegerEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_19, grammarAccess.getSadlDataTypeAccess().getIntegerEnumLiteralDeclaration_19());
                      			
                    }

                    }


                    }
                    break;
                case 21 :
                    // InternalDialogParser.g:12031:3: (enumLiteral_20= NegativeInteger )
                    {
                    // InternalDialogParser.g:12031:3: (enumLiteral_20= NegativeInteger )
                    // InternalDialogParser.g:12032:4: enumLiteral_20= NegativeInteger
                    {
                    enumLiteral_20=(Token)match(input,NegativeInteger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getNegativeIntegerEnumLiteralDeclaration_20().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_20, grammarAccess.getSadlDataTypeAccess().getNegativeIntegerEnumLiteralDeclaration_20());
                      			
                    }

                    }


                    }
                    break;
                case 22 :
                    // InternalDialogParser.g:12039:3: (enumLiteral_21= NonNegativeInteger )
                    {
                    // InternalDialogParser.g:12039:3: (enumLiteral_21= NonNegativeInteger )
                    // InternalDialogParser.g:12040:4: enumLiteral_21= NonNegativeInteger
                    {
                    enumLiteral_21=(Token)match(input,NonNegativeInteger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getNonNegativeIntegerEnumLiteralDeclaration_21().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_21, grammarAccess.getSadlDataTypeAccess().getNonNegativeIntegerEnumLiteralDeclaration_21());
                      			
                    }

                    }


                    }
                    break;
                case 23 :
                    // InternalDialogParser.g:12047:3: (enumLiteral_22= PositiveInteger )
                    {
                    // InternalDialogParser.g:12047:3: (enumLiteral_22= PositiveInteger )
                    // InternalDialogParser.g:12048:4: enumLiteral_22= PositiveInteger
                    {
                    enumLiteral_22=(Token)match(input,PositiveInteger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getPositiveIntegerEnumLiteralDeclaration_22().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_22, grammarAccess.getSadlDataTypeAccess().getPositiveIntegerEnumLiteralDeclaration_22());
                      			
                    }

                    }


                    }
                    break;
                case 24 :
                    // InternalDialogParser.g:12055:3: (enumLiteral_23= NonPositiveInteger )
                    {
                    // InternalDialogParser.g:12055:3: (enumLiteral_23= NonPositiveInteger )
                    // InternalDialogParser.g:12056:4: enumLiteral_23= NonPositiveInteger
                    {
                    enumLiteral_23=(Token)match(input,NonPositiveInteger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getNonPositiveIntegerEnumLiteralDeclaration_23().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_23, grammarAccess.getSadlDataTypeAccess().getNonPositiveIntegerEnumLiteralDeclaration_23());
                      			
                    }

                    }


                    }
                    break;
                case 25 :
                    // InternalDialogParser.g:12063:3: (enumLiteral_24= Byte )
                    {
                    // InternalDialogParser.g:12063:3: (enumLiteral_24= Byte )
                    // InternalDialogParser.g:12064:4: enumLiteral_24= Byte
                    {
                    enumLiteral_24=(Token)match(input,Byte,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getByteEnumLiteralDeclaration_24().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_24, grammarAccess.getSadlDataTypeAccess().getByteEnumLiteralDeclaration_24());
                      			
                    }

                    }


                    }
                    break;
                case 26 :
                    // InternalDialogParser.g:12071:3: (enumLiteral_25= UnsignedByte )
                    {
                    // InternalDialogParser.g:12071:3: (enumLiteral_25= UnsignedByte )
                    // InternalDialogParser.g:12072:4: enumLiteral_25= UnsignedByte
                    {
                    enumLiteral_25=(Token)match(input,UnsignedByte,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getUnsignedByteEnumLiteralDeclaration_25().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_25, grammarAccess.getSadlDataTypeAccess().getUnsignedByteEnumLiteralDeclaration_25());
                      			
                    }

                    }


                    }
                    break;
                case 27 :
                    // InternalDialogParser.g:12079:3: (enumLiteral_26= UnsignedInt )
                    {
                    // InternalDialogParser.g:12079:3: (enumLiteral_26= UnsignedInt )
                    // InternalDialogParser.g:12080:4: enumLiteral_26= UnsignedInt
                    {
                    enumLiteral_26=(Token)match(input,UnsignedInt,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getUnsignedIntEnumLiteralDeclaration_26().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_26, grammarAccess.getSadlDataTypeAccess().getUnsignedIntEnumLiteralDeclaration_26());
                      			
                    }

                    }


                    }
                    break;
                case 28 :
                    // InternalDialogParser.g:12087:3: (enumLiteral_27= AnySimpleType )
                    {
                    // InternalDialogParser.g:12087:3: (enumLiteral_27= AnySimpleType )
                    // InternalDialogParser.g:12088:4: enumLiteral_27= AnySimpleType
                    {
                    enumLiteral_27=(Token)match(input,AnySimpleType,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getAnySimpleTypeEnumLiteralDeclaration_27().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_27, grammarAccess.getSadlDataTypeAccess().getAnySimpleTypeEnumLiteralDeclaration_27());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlDataType"

    // $ANTLR start synpred1_InternalDialogParser
    public final void synpred1_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:3533:4: ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )
        // InternalDialogParser.g:3533:5: ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) )
        {
        // InternalDialogParser.g:3533:5: ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) )
        // InternalDialogParser.g:3534:5: () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) )
        {
        // InternalDialogParser.g:3534:5: ()
        // InternalDialogParser.g:3535:5: 
        {
        }

        // InternalDialogParser.g:3536:5: ( ( ( HyphenMinus | Not ) ) )
        // InternalDialogParser.g:3537:6: ( ( HyphenMinus | Not ) )
        {
        // InternalDialogParser.g:3537:6: ( ( HyphenMinus | Not ) )
        // InternalDialogParser.g:3538:7: ( HyphenMinus | Not )
        {
        if ( input.LA(1)==Not||input.LA(1)==HyphenMinus ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }

        // InternalDialogParser.g:3545:5: ( ( ruleSadlExplicitValueLiteral ) )
        // InternalDialogParser.g:3546:6: ( ruleSadlExplicitValueLiteral )
        {
        // InternalDialogParser.g:3546:6: ( ruleSadlExplicitValueLiteral )
        // InternalDialogParser.g:3547:7: ruleSadlExplicitValueLiteral
        {
        pushFollow(FOLLOW_2);
        ruleSadlExplicitValueLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred1_InternalDialogParser

    // $ANTLR start synpred2_InternalDialogParser
    public final void synpred2_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:3664:5: ( RULE_STRING | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==RULE_ID||input.LA(1)==RULE_STRING ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred2_InternalDialogParser

    // $ANTLR start synpred3_InternalDialogParser
    public final void synpred3_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:4598:4: ( Select )
        // InternalDialogParser.g:4598:5: Select
        {
        match(input,Select,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_InternalDialogParser

    // $ANTLR start synpred4_InternalDialogParser
    public final void synpred4_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:4742:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Desc||input.LA(1)==Asc||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred4_InternalDialogParser

    // $ANTLR start synpred5_InternalDialogParser
    public final void synpred5_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:4797:4: ( Select )
        // InternalDialogParser.g:4797:5: Select
        {
        match(input,Select,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred5_InternalDialogParser

    // $ANTLR start synpred6_InternalDialogParser
    public final void synpred6_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:4941:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Desc||input.LA(1)==Asc||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred6_InternalDialogParser

    // $ANTLR start synpred7_InternalDialogParser
    public final void synpred7_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:4996:4: ( Select )
        // InternalDialogParser.g:4996:5: Select
        {
        match(input,Select,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred7_InternalDialogParser

    // $ANTLR start synpred8_InternalDialogParser
    public final void synpred8_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:5140:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Desc||input.LA(1)==Asc||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred8_InternalDialogParser

    // $ANTLR start synpred9_InternalDialogParser
    public final void synpred9_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:5195:4: ( Select )
        // InternalDialogParser.g:5195:5: Select
        {
        match(input,Select,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred9_InternalDialogParser

    // $ANTLR start synpred10_InternalDialogParser
    public final void synpred10_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:5339:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Desc||input.LA(1)==Asc||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred10_InternalDialogParser

    // $ANTLR start synpred11_InternalDialogParser
    public final void synpred11_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6814:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==LessThanSignEqualsSign||input.LA(1)==GreaterThanSignEqualsSign||input.LA(1)==LessThanSign||input.LA(1)==GreaterThanSign ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred11_InternalDialogParser

    // $ANTLR start synpred13_InternalDialogParser
    public final void synpred13_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6889:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==LessThanSignEqualsSign||input.LA(1)==GreaterThanSignEqualsSign||input.LA(1)==LessThanSign||input.LA(1)==GreaterThanSign ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred13_InternalDialogParser

    // $ANTLR start synpred15_InternalDialogParser
    public final void synpred15_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6964:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==LessThanSignEqualsSign||input.LA(1)==GreaterThanSignEqualsSign||input.LA(1)==LessThanSign||input.LA(1)==GreaterThanSign ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred15_InternalDialogParser

    // $ANTLR start synpred17_InternalDialogParser
    public final void synpred17_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:7039:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==LessThanSignEqualsSign||input.LA(1)==GreaterThanSignEqualsSign||input.LA(1)==LessThanSign||input.LA(1)==GreaterThanSign ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred17_InternalDialogParser

    // $ANTLR start synpred19_InternalDialogParser
    public final void synpred19_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8042:4: ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( (input.LA(1)>=For && input.LA(1)<=Has)||input.LA(1)==In||input.LA(1)==Of||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred19_InternalDialogParser

    // $ANTLR start synpred20_InternalDialogParser
    public final void synpred20_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8112:6: ( Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Has||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred20_InternalDialogParser

    // $ANTLR start synpred21_InternalDialogParser
    public final void synpred21_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8147:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Another||input.LA(1)==Element||input.LA(1)==Length||(input.LA(1)>=Count && input.LA(1)<=False)||input.LA(1)==First||(input.LA(1)>=Index && input.LA(1)<=Known)||input.LA(1)==There||input.LA(1)==Value||input.LA(1)==None||input.LA(1)==Last||input.LA(1)==Only||input.LA(1)==Some||(input.LA(1)>=True && input.LA(1)<=Type)||input.LA(1)==The||input.LA(1)==Any||input.LA(1)==Not||input.LA(1)==The_1||input.LA(1)==HyphenMinusHyphenMinus||(input.LA(1)>=An && input.LA(1)<=An_1)||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==HyphenMinus||input.LA(1)==A||input.LA(1)==LeftSquareBracket||(input.LA(1)>=A_1 && input.LA(1)<=LeftCurlyBracket)||input.LA(1)==RULE_NUMBER||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred21_InternalDialogParser

    // $ANTLR start synpred22_InternalDialogParser
    public final void synpred22_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8192:4: ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==With||(input.LA(1)>=For && input.LA(1)<=Has)||input.LA(1)==In||input.LA(1)==Of||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred22_InternalDialogParser

    // $ANTLR start synpred23_InternalDialogParser
    public final void synpred23_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8262:6: ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==With||input.LA(1)==Has||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred23_InternalDialogParser

    // $ANTLR start synpred24_InternalDialogParser
    public final void synpred24_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8302:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Another||input.LA(1)==Element||input.LA(1)==Length||(input.LA(1)>=Count && input.LA(1)<=False)||input.LA(1)==First||(input.LA(1)>=Index && input.LA(1)<=Known)||input.LA(1)==There||input.LA(1)==Value||input.LA(1)==None||input.LA(1)==Last||input.LA(1)==Only||input.LA(1)==Some||(input.LA(1)>=True && input.LA(1)<=Type)||input.LA(1)==The||input.LA(1)==Any||input.LA(1)==Not||input.LA(1)==The_1||input.LA(1)==HyphenMinusHyphenMinus||(input.LA(1)>=An && input.LA(1)<=An_1)||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==HyphenMinus||input.LA(1)==A||input.LA(1)==LeftSquareBracket||(input.LA(1)>=A_1 && input.LA(1)<=LeftCurlyBracket)||input.LA(1)==RULE_NUMBER||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred24_InternalDialogParser

    // $ANTLR start synpred25_InternalDialogParser
    public final void synpred25_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8347:4: ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( (input.LA(1)>=For && input.LA(1)<=Has)||input.LA(1)==In||input.LA(1)==Of||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred25_InternalDialogParser

    // $ANTLR start synpred26_InternalDialogParser
    public final void synpred26_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8417:6: ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Has||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred26_InternalDialogParser

    // $ANTLR start synpred27_InternalDialogParser
    public final void synpred27_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8466:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Another||input.LA(1)==Element||input.LA(1)==Length||(input.LA(1)>=Count && input.LA(1)<=False)||input.LA(1)==First||(input.LA(1)>=Index && input.LA(1)<=Known)||input.LA(1)==There||input.LA(1)==Value||input.LA(1)==None||input.LA(1)==Last||input.LA(1)==Only||input.LA(1)==Some||(input.LA(1)>=True && input.LA(1)<=Type)||input.LA(1)==The||input.LA(1)==Any||input.LA(1)==Not||input.LA(1)==The_1||input.LA(1)==HyphenMinusHyphenMinus||(input.LA(1)>=An && input.LA(1)<=An_1)||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==HyphenMinus||input.LA(1)==A||input.LA(1)==LeftSquareBracket||(input.LA(1)>=A_1 && input.LA(1)<=LeftCurlyBracket)||input.LA(1)==RULE_NUMBER||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred27_InternalDialogParser

    // $ANTLR start synpred28_InternalDialogParser
    public final void synpred28_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8511:4: ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==With||(input.LA(1)>=For && input.LA(1)<=Has)||input.LA(1)==In||input.LA(1)==Of||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred28_InternalDialogParser

    // $ANTLR start synpred29_InternalDialogParser
    public final void synpred29_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8581:6: ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==With||input.LA(1)==Has||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred29_InternalDialogParser

    // $ANTLR start synpred30_InternalDialogParser
    public final void synpred30_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8635:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Another||input.LA(1)==Element||input.LA(1)==Length||(input.LA(1)>=Count && input.LA(1)<=False)||input.LA(1)==First||(input.LA(1)>=Index && input.LA(1)<=Known)||input.LA(1)==There||input.LA(1)==Value||input.LA(1)==None||input.LA(1)==Last||input.LA(1)==Only||input.LA(1)==Some||(input.LA(1)>=True && input.LA(1)<=Type)||input.LA(1)==The||input.LA(1)==Any||input.LA(1)==Not||input.LA(1)==The_1||input.LA(1)==HyphenMinusHyphenMinus||(input.LA(1)>=An && input.LA(1)<=An_1)||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==HyphenMinus||input.LA(1)==A||input.LA(1)==LeftSquareBracket||(input.LA(1)>=A_1 && input.LA(1)<=LeftCurlyBracket)||input.LA(1)==RULE_NUMBER||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred30_InternalDialogParser

    // $ANTLR start synpred31_InternalDialogParser
    public final void synpred31_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9890:7: ( HyphenMinus )
        // InternalDialogParser.g:9890:8: HyphenMinus
        {
        match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred31_InternalDialogParser

    // $ANTLR start synpred32_InternalDialogParser
    public final void synpred32_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:10264:7: ( HyphenMinus )
        // InternalDialogParser.g:10264:8: HyphenMinus
        {
        match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred32_InternalDialogParser

    // $ANTLR start synpred33_InternalDialogParser
    public final void synpred33_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:10638:7: ( HyphenMinus )
        // InternalDialogParser.g:10638:8: HyphenMinus
        {
        match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred33_InternalDialogParser

    // $ANTLR start synpred34_InternalDialogParser
    public final void synpred34_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:11012:7: ( HyphenMinus )
        // InternalDialogParser.g:11012:8: HyphenMinus
        {
        match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred34_InternalDialogParser

    // $ANTLR start synpred35_InternalDialogParser
    public final void synpred35_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:11242:4: ( LeftParenthesis )
        // InternalDialogParser.g:11242:5: LeftParenthesis
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred35_InternalDialogParser

    // Delegated rules

    public final boolean synpred20_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA36 dfa36 = new DFA36(this);
    protected DFA45 dfa45 = new DFA45(this);
    protected DFA68 dfa68 = new DFA68(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA137 dfa137 = new DFA137(this);
    protected DFA139 dfa139 = new DFA139(this);
    protected DFA141 dfa141 = new DFA141(this);
    protected DFA143 dfa143 = new DFA143(this);
    protected DFA182 dfa182 = new DFA182(this);
    protected DFA188 dfa188 = new DFA188(this);
    protected DFA195 dfa195 = new DFA195(this);
    protected DFA205 dfa205 = new DFA205(this);
    protected DFA202 dfa202 = new DFA202(this);
    protected DFA232 dfa232 = new DFA232(this);
    protected DFA239 dfa239 = new DFA239(this);
    protected DFA246 dfa246 = new DFA246(this);
    protected DFA253 dfa253 = new DFA253(this);
    protected DFA266 dfa266 = new DFA266(this);
    static final String dfa_1s = "\14\uffff";
    static final String dfa_2s = "\1\3\2\7\1\uffff\2\3\3\uffff\2\7\1\uffff";
    static final String dfa_3s = "\1\u0082\2\123\1\uffff\2\123\1\43\1\uffff\1\43\2\123\1\43";
    static final String dfa_4s = "\1\u00c5\2\u00c6\1\uffff\2\u00c6\1\u00c5\1\uffff\1\u00c5\2\u00c6\1\u00c5";
    static final String dfa_5s = "\3\uffff\1\2\3\uffff\1\1\4\uffff";
    static final String dfa_6s = "\14\uffff}>";
    static final String[] dfa_7s = {
            "\1\3\13\uffff\1\3\26\uffff\2\3\6\uffff\1\3\2\uffff\1\3\23\uffff\1\2\1\1",
            "\1\3\6\uffff\1\3\44\uffff\1\3\2\uffff\1\7\13\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\6\1\7\2\uffff\1\7\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\6\uffff\1\3\44\uffff\1\3\2\uffff\1\7\13\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\6\1\7\2\uffff\1\7\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "",
            "\1\7\6\uffff\1\7\44\uffff\1\7\2\uffff\1\3\13\uffff\1\3\2\uffff\1\7\13\uffff\1\7\7\uffff\2\3\5\uffff\1\10\1\3\2\uffff\1\3\1\7\11\uffff\1\7\3\uffff\1\7\2\uffff\1\7\1\uffff\1\12\1\11\1\7",
            "\1\7\6\uffff\1\7\44\uffff\1\7\2\uffff\1\3\13\uffff\1\3\2\uffff\1\7\13\uffff\1\7\7\uffff\2\3\5\uffff\1\10\1\3\2\uffff\1\3\1\7\11\uffff\1\7\3\uffff\1\7\2\uffff\1\7\1\uffff\1\12\1\11\1\7",
            "\1\3\54\uffff\1\7\50\uffff\1\7\2\uffff\1\3\11\uffff\1\3\1\uffff\1\3\12\uffff\1\3\10\uffff\1\3\1\uffff\1\3\32\uffff\1\3\4\uffff\1\3\5\uffff\2\3",
            "",
            "\1\7\54\uffff\1\3\50\uffff\1\3\2\uffff\1\7\11\uffff\1\7\1\uffff\1\7\12\uffff\1\7\10\uffff\1\7\1\uffff\1\7\32\uffff\1\7\4\uffff\1\7\5\uffff\2\7",
            "\1\3\6\uffff\1\3\44\uffff\1\3\2\uffff\1\7\13\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\13\1\7\2\uffff\1\7\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\6\uffff\1\3\44\uffff\1\3\2\uffff\1\7\13\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\13\1\7\2\uffff\1\7\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\54\uffff\1\7\50\uffff\1\7\2\uffff\1\3\11\uffff\1\3\1\uffff\1\3\12\uffff\1\3\10\uffff\1\3\1\uffff\1\3\32\uffff\1\3\4\uffff\1\3\5\uffff\2\3"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA36 extends DFA {

        public DFA36(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 36;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "1743:5: ( (lv_instance_8_0= ruleSadlResource ) )?";
        }
    }
    static final String dfa_8s = "\12\uffff";
    static final String dfa_9s = "\2\uffff\1\5\6\uffff\1\5";
    static final String dfa_10s = "\1\u00b1\1\u00c2\1\24\2\u00af\2\uffff\2\u00c2\1\24";
    static final String dfa_11s = "\2\u00c2\1\u00bf\2\u00c2\2\uffff\2\u00c2\1\u00b1";
    static final String dfa_12s = "\5\uffff\1\1\1\2\3\uffff";
    static final String dfa_13s = "\12\uffff}>";
    static final String[] dfa_14s = {
            "\1\1\20\uffff\1\2",
            "\1\2",
            "\1\5\41\uffff\1\5\101\uffff\1\5\1\uffff\1\5\7\uffff\1\5\11\uffff\1\5\1\uffff\1\5\26\uffff\2\5\6\uffff\1\5\3\uffff\1\6\10\uffff\1\4\4\uffff\1\3",
            "\1\10\1\uffff\1\7\20\uffff\1\11",
            "\1\10\1\uffff\1\7\20\uffff\1\11",
            "",
            "",
            "\1\11",
            "\1\11",
            "\1\5\41\uffff\1\5\101\uffff\1\5\1\uffff\1\5\7\uffff\1\5\11\uffff\1\5\1\uffff\1\5\26\uffff\2\5\6\uffff\1\5\3\uffff\1\6"
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA45 extends DFA {

        public DFA45(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 45;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "1974:4: ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) )";
        }
    }
    static final String dfa_15s = "\23\uffff";
    static final String dfa_16s = "\17\uffff\1\20\1\uffff\1\20\1\uffff";
    static final String dfa_17s = "\1\24\1\uffff\1\50\1\52\1\uffff\1\14\3\uffff\1\105\5\uffff\1\24\1\uffff\1\24\1\4";
    static final String dfa_18s = "\1\u00a6\1\uffff\2\u00c2\1\uffff\1\u00be\3\uffff\1\105\5\uffff\1\u00a6\1\uffff\1\u00a6\1\u00c5";
    static final String dfa_19s = "\1\uffff\1\1\2\uffff\1\2\1\uffff\1\12\1\13\1\10\1\uffff\1\3\1\4\1\5\1\7\1\6\1\uffff\1\11\2\uffff";
    static final String dfa_20s = "\23\uffff}>";
    static final String[] dfa_21s = {
            "\1\4\41\uffff\1\1\101\uffff\1\6\1\uffff\1\1\7\uffff\1\3\11\uffff\1\7\1\uffff\1\2\26\uffff\1\5\1\4",
            "",
            "\1\10\1\uffff\1\1\35\uffff\1\12\23\uffff\1\10\65\uffff\1\1\15\uffff\1\1\35\uffff\1\11\3\uffff\1\1",
            "\1\1\35\uffff\1\12\111\uffff\1\1\15\uffff\1\1\35\uffff\1\12\3\uffff\1\1",
            "",
            "\1\16\4\uffff\1\14\u0081\uffff\1\13\52\uffff\1\15",
            "",
            "",
            "",
            "\1\17",
            "",
            "",
            "",
            "",
            "",
            "\1\20\33\uffff\1\20\5\uffff\1\20\57\uffff\1\21\21\uffff\1\20\1\uffff\1\20\7\uffff\1\20\11\uffff\1\20\1\uffff\1\20\26\uffff\2\20",
            "",
            "\1\20\41\uffff\1\20\101\uffff\1\20\1\uffff\1\20\7\uffff\1\20\11\uffff\1\20\1\uffff\1\20\26\uffff\1\20\1\22",
            "\6\20\1\uffff\1\20\1\uffff\1\20\2\uffff\1\20\4\uffff\2\20\6\uffff\1\20\2\uffff\1\20\3\uffff\1\20\2\uffff\1\20\3\uffff\1\20\13\uffff\1\20\2\uffff\1\20\3\uffff\1\20\7\uffff\1\20\17\uffff\2\20\24\uffff\1\20\1\uffff\1\20\3\uffff\1\20\2\uffff\1\20\10\uffff\1\20\1\uffff\1\12\17\uffff\1\20\33\uffff\1\20\23\uffff\1\20\3\uffff\2\20"
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final char[] dfa_18 = DFA.unpackEncodedStringToUnsignedChars(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[][] dfa_21 = unpackEncodedStringArray(dfa_21s);

    class DFA68 extends DFA {

        public DFA68(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 68;
            this.eot = dfa_15;
            this.eof = dfa_16;
            this.min = dfa_17;
            this.max = dfa_18;
            this.accept = dfa_19;
            this.special = dfa_20;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "2555:2: (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) )";
        }
    }
    static final String dfa_22s = "\66\uffff";
    static final String dfa_23s = "\1\3\1\uffff\1\4\6\uffff\2\3\12\uffff\2\57\37\uffff";
    static final String dfa_24s = "\1\24\1\uffff\1\24\6\uffff\2\123\11\uffff\1\43\2\123\25\uffff\1\43\11\uffff";
    static final String dfa_25s = "\1\u00c6\1\uffff\1\u00c6\6\uffff\2\u00c6\11\uffff\1\u00c5\2\u00c6\25\uffff\1\u00c5\11\uffff";
    static final String dfa_26s = "\1\uffff\1\1\1\uffff\1\2\5\1\2\uffff\11\1\3\uffff\25\1\1\uffff\11\1";
    static final String dfa_27s = "\1\6\1\uffff\1\4\6\uffff\1\3\1\2\11\uffff\1\0\1\5\1\1\25\uffff\1\7\11\uffff}>";
    static final String[] dfa_28s = {
            "\1\3\41\uffff\1\3\101\uffff\1\3\1\uffff\1\3\7\uffff\1\3\11\uffff\1\3\1\uffff\1\3\26\uffff\2\3\6\uffff\1\3\2\uffff\1\3\13\uffff\1\3\4\uffff\1\3\2\uffff\1\2\1\3\1\1",
            "",
            "\1\17\41\uffff\1\16\34\uffff\1\3\6\uffff\1\3\35\uffff\1\20\1\uffff\1\15\4\uffff\1\3\2\uffff\1\7\11\uffff\1\21\1\uffff\1\10\2\uffff\1\3\13\uffff\1\3\7\uffff\1\13\1\14\5\uffff\1\3\1\5\2\uffff\1\6\1\3\11\uffff\1\3\1\23\2\uffff\1\3\1\uffff\1\22\1\3\1\uffff\1\12\1\11\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\32\6\uffff\1\36\44\uffff\1\31\2\uffff\1\3\13\uffff\1\3\2\uffff\1\40\13\uffff\1\34\7\uffff\2\3\5\uffff\1\24\1\3\2\uffff\1\3\1\37\11\uffff\1\33\3\uffff\1\35\2\uffff\1\27\1\uffff\1\26\1\25\1\30",
            "\1\32\6\uffff\1\36\44\uffff\1\31\2\uffff\1\3\13\uffff\1\3\2\uffff\1\40\13\uffff\1\34\7\uffff\2\3\5\uffff\1\24\1\3\2\uffff\1\3\1\37\11\uffff\1\33\3\uffff\1\35\2\uffff\1\27\1\uffff\1\26\1\25\1\30",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\51\54\uffff\1\3\50\uffff\1\3\2\uffff\1\50\11\uffff\1\52\1\uffff\1\47\12\uffff\1\53\10\uffff\1\45\1\uffff\1\46\32\uffff\1\43\4\uffff\1\44\5\uffff\1\42\1\41",
            "\1\3\6\uffff\1\3\44\uffff\1\3\2\uffff\1\60\13\uffff\1\61\2\uffff\1\3\13\uffff\1\3\7\uffff\1\62\1\63\5\uffff\1\54\1\56\2\uffff\1\55\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\12\1\11\1\3",
            "\1\3\6\uffff\1\3\44\uffff\1\3\2\uffff\1\60\13\uffff\1\61\2\uffff\1\3\13\uffff\1\3\7\uffff\1\62\1\63\5\uffff\1\54\1\56\2\uffff\1\55\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\12\1\11\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\3\54\uffff\1\64\50\uffff\1\65\2\uffff\1\3\11\uffff\1\3\1\uffff\1\3\12\uffff\1\3\10\uffff\1\3\1\uffff\1\3\32\uffff\1\3\4\uffff\1\3\5\uffff\2\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final char[] dfa_25 = DFA.unpackEncodedStringToUnsignedChars(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[][] dfa_28 = unpackEncodedStringArray(dfa_28s);

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = dfa_22;
            this.eof = dfa_23;
            this.min = dfa_24;
            this.max = dfa_25;
            this.accept = dfa_26;
            this.special = dfa_27;
            this.transition = dfa_28;
        }
        public String getDescription() {
            return "3663:4: ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_20 = input.LA(1);

                         
                        int index83_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA83_20==Alias||LA83_20==Note) ) {s = 3;}

                        else if ( (LA83_20==RULE_QNAME_TERMINAL) && (synpred2_InternalDialogParser())) {s = 33;}

                        else if ( (LA83_20==RULE_ID) && (synpred2_InternalDialogParser())) {s = 34;}

                        else if ( (LA83_20==A) && (synpred2_InternalDialogParser())) {s = 35;}

                        else if ( (LA83_20==A_1) && (synpred2_InternalDialogParser())) {s = 36;}

                        else if ( (LA83_20==An) && (synpred2_InternalDialogParser())) {s = 37;}

                        else if ( (LA83_20==An_1) && (synpred2_InternalDialogParser())) {s = 38;}

                        else if ( (LA83_20==Any) && (synpred2_InternalDialogParser())) {s = 39;}

                        else if ( (LA83_20==Some) && (synpred2_InternalDialogParser())) {s = 40;}

                        else if ( (LA83_20==Another) && (synpred2_InternalDialogParser())) {s = 41;}

                        else if ( (LA83_20==The) && (synpred2_InternalDialogParser())) {s = 42;}

                        else if ( (LA83_20==The_1) && (synpred2_InternalDialogParser())) {s = 43;}

                         
                        input.seek(index83_20);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA83_22 = input.LA(1);

                         
                        int index83_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA83_22==Comma) && (synpred2_InternalDialogParser())) {s = 45;}

                        else if ( (LA83_22==LeftParenthesis) ) {s = 44;}

                        else if ( (LA83_22==RightParenthesis) && (synpred2_InternalDialogParser())) {s = 46;}

                        else if ( (LA83_22==EOF) && (synpred2_InternalDialogParser())) {s = 47;}

                        else if ( (LA83_22==With) && (synpred2_InternalDialogParser())) {s = 48;}

                        else if ( (LA83_22==Has) && (synpred2_InternalDialogParser())) {s = 49;}

                        else if ( (LA83_22==RULE_QNAME_TERMINAL) ) {s = 9;}

                        else if ( (LA83_22==RULE_ID) ) {s = 10;}

                        else if ( (LA83_22==Is) && (synpred2_InternalDialogParser())) {s = 50;}

                        else if ( (LA83_22==Of) && (synpred2_InternalDialogParser())) {s = 51;}

                        else if ( (LA83_22==False||LA83_22==Known||LA83_22==True||LA83_22==Not||LA83_22==PI||LA83_22==HyphenMinus||LA83_22==LeftSquareBracket||LA83_22==E_1||LA83_22==RULE_NUMBER||LA83_22==RULE_STRING) ) {s = 3;}

                         
                        input.seek(index83_22);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA83_10 = input.LA(1);

                         
                        int index83_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA83_10==RULE_QNAME_TERMINAL) ) {s = 21;}

                        else if ( (LA83_10==RULE_ID) ) {s = 22;}

                        else if ( (LA83_10==RULE_NUMBER) && (synpred2_InternalDialogParser())) {s = 23;}

                        else if ( (LA83_10==RULE_STRING) && (synpred2_InternalDialogParser())) {s = 24;}

                        else if ( (LA83_10==True) && (synpred2_InternalDialogParser())) {s = 25;}

                        else if ( (LA83_10==False) && (synpred2_InternalDialogParser())) {s = 26;}

                        else if ( (LA83_10==LeftSquareBracket) && (synpred2_InternalDialogParser())) {s = 27;}

                        else if ( (LA83_10==PI) && (synpred2_InternalDialogParser())) {s = 28;}

                        else if ( (LA83_10==E_1) && (synpred2_InternalDialogParser())) {s = 29;}

                        else if ( (LA83_10==Known) && (synpred2_InternalDialogParser())) {s = 30;}

                        else if ( (LA83_10==HyphenMinus) && (synpred2_InternalDialogParser())) {s = 31;}

                        else if ( (LA83_10==Not) && (synpred2_InternalDialogParser())) {s = 32;}

                        else if ( (LA83_10==LeftParenthesis) ) {s = 20;}

                        else if ( (LA83_10==EOF||LA83_10==With||LA83_10==Has||(LA83_10>=Is && LA83_10<=Of)||LA83_10==RightParenthesis||LA83_10==Comma) ) {s = 3;}

                         
                        input.seek(index83_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA83_9 = input.LA(1);

                         
                        int index83_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA83_9==EOF||LA83_9==With||LA83_9==Has||(LA83_9>=Is && LA83_9<=Of)||LA83_9==RightParenthesis||LA83_9==Comma) ) {s = 3;}

                        else if ( (LA83_9==LeftParenthesis) ) {s = 20;}

                        else if ( (LA83_9==RULE_QNAME_TERMINAL) ) {s = 21;}

                        else if ( (LA83_9==RULE_ID) ) {s = 22;}

                        else if ( (LA83_9==RULE_NUMBER) && (synpred2_InternalDialogParser())) {s = 23;}

                        else if ( (LA83_9==RULE_STRING) && (synpred2_InternalDialogParser())) {s = 24;}

                        else if ( (LA83_9==True) && (synpred2_InternalDialogParser())) {s = 25;}

                        else if ( (LA83_9==False) && (synpred2_InternalDialogParser())) {s = 26;}

                        else if ( (LA83_9==LeftSquareBracket) && (synpred2_InternalDialogParser())) {s = 27;}

                        else if ( (LA83_9==PI) && (synpred2_InternalDialogParser())) {s = 28;}

                        else if ( (LA83_9==E_1) && (synpred2_InternalDialogParser())) {s = 29;}

                        else if ( (LA83_9==Known) && (synpred2_InternalDialogParser())) {s = 30;}

                        else if ( (LA83_9==HyphenMinus) && (synpred2_InternalDialogParser())) {s = 31;}

                        else if ( (LA83_9==Not) && (synpred2_InternalDialogParser())) {s = 32;}

                         
                        input.seek(index83_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA83_2 = input.LA(1);

                         
                        int index83_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA83_2==EOF) && (synpred2_InternalDialogParser())) {s = 4;}

                        else if ( (LA83_2==RightParenthesis) && (synpred2_InternalDialogParser())) {s = 5;}

                        else if ( (LA83_2==Comma) && (synpred2_InternalDialogParser())) {s = 6;}

                        else if ( (LA83_2==With) && (synpred2_InternalDialogParser())) {s = 7;}

                        else if ( (LA83_2==Has) && (synpred2_InternalDialogParser())) {s = 8;}

                        else if ( (LA83_2==RULE_QNAME_TERMINAL) ) {s = 9;}

                        else if ( (LA83_2==RULE_ID) ) {s = 10;}

                        else if ( (LA83_2==Is) && (synpred2_InternalDialogParser())) {s = 11;}

                        else if ( (LA83_2==Of) && (synpred2_InternalDialogParser())) {s = 12;}

                        else if ( (LA83_2==Only) && (synpred2_InternalDialogParser())) {s = 13;}

                        else if ( (LA83_2==Always) && (synpred2_InternalDialogParser())) {s = 14;}

                        else if ( (LA83_2==Describes) && (synpred2_InternalDialogParser())) {s = 15;}

                        else if ( (LA83_2==Must) && (synpred2_InternalDialogParser())) {s = 16;}

                        else if ( (LA83_2==Can) && (synpred2_InternalDialogParser())) {s = 17;}

                        else if ( (LA83_2==RightCurlyBracket) && (synpred2_InternalDialogParser())) {s = 18;}

                        else if ( (LA83_2==RightSquareBracket) && (synpred2_InternalDialogParser())) {s = 19;}

                        else if ( (LA83_2==False||LA83_2==Known||LA83_2==True||LA83_2==Not||LA83_2==PI||LA83_2==LeftParenthesis||LA83_2==HyphenMinus||LA83_2==LeftSquareBracket||LA83_2==E_1||LA83_2==RULE_NUMBER||LA83_2==RULE_STRING) ) {s = 3;}

                         
                        input.seek(index83_2);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA83_21 = input.LA(1);

                         
                        int index83_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA83_21==RULE_QNAME_TERMINAL) ) {s = 9;}

                        else if ( (LA83_21==RULE_ID) ) {s = 10;}

                        else if ( (LA83_21==False||LA83_21==Known||LA83_21==True||LA83_21==Not||LA83_21==PI||LA83_21==HyphenMinus||LA83_21==LeftSquareBracket||LA83_21==E_1||LA83_21==RULE_NUMBER||LA83_21==RULE_STRING) ) {s = 3;}

                        else if ( (LA83_21==LeftParenthesis) ) {s = 44;}

                        else if ( (LA83_21==Comma) && (synpred2_InternalDialogParser())) {s = 45;}

                        else if ( (LA83_21==RightParenthesis) && (synpred2_InternalDialogParser())) {s = 46;}

                        else if ( (LA83_21==EOF) && (synpred2_InternalDialogParser())) {s = 47;}

                        else if ( (LA83_21==With) && (synpred2_InternalDialogParser())) {s = 48;}

                        else if ( (LA83_21==Has) && (synpred2_InternalDialogParser())) {s = 49;}

                        else if ( (LA83_21==Is) && (synpred2_InternalDialogParser())) {s = 50;}

                        else if ( (LA83_21==Of) && (synpred2_InternalDialogParser())) {s = 51;}

                         
                        input.seek(index83_21);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA83_0 = input.LA(1);

                         
                        int index83_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA83_0==RULE_STRING) && (synpred2_InternalDialogParser())) {s = 1;}

                        else if ( (LA83_0==RULE_ID) ) {s = 2;}

                        else if ( (LA83_0==EOF||LA83_0==Describes||LA83_0==Always||LA83_0==Must||LA83_0==Only||LA83_0==With||LA83_0==Can||LA83_0==Has||(LA83_0>=Is && LA83_0<=Of)||LA83_0==RightParenthesis||LA83_0==Comma||LA83_0==RightSquareBracket||LA83_0==RightCurlyBracket||LA83_0==RULE_QNAME_TERMINAL) ) {s = 3;}

                         
                        input.seek(index83_0);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA83_44 = input.LA(1);

                         
                        int index83_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA83_44==Alias) && (synpred2_InternalDialogParser())) {s = 52;}

                        else if ( (LA83_44==Note) && (synpred2_InternalDialogParser())) {s = 53;}

                        else if ( (LA83_44==Another||LA83_44==Some||LA83_44==The||LA83_44==Any||LA83_44==The_1||LA83_44==An||LA83_44==An_1||LA83_44==A||LA83_44==A_1||(LA83_44>=RULE_ID && LA83_44<=RULE_QNAME_TERMINAL)) ) {s = 3;}

                         
                        input.seek(index83_44);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_29s = "\1\43\11\4\2\uffff";
    static final String dfa_30s = "\1\u00c6\11\u00c5\2\uffff";
    static final String dfa_31s = "\12\uffff\1\1\1\2";
    static final String[] dfa_32s = {
            "\1\7\5\uffff\1\13\7\uffff\1\12\17\uffff\1\13\20\uffff\2\13\1\uffff\1\13\3\uffff\2\13\7\uffff\1\13\3\uffff\1\13\2\uffff\1\13\12\uffff\1\13\5\uffff\1\13\1\uffff\1\6\2\uffff\2\13\5\uffff\1\10\1\uffff\1\5\10\uffff\1\13\1\uffff\1\11\3\uffff\1\13\4\uffff\1\3\1\13\1\4\13\uffff\1\13\1\uffff\1\13\4\uffff\1\13\7\uffff\1\1\1\uffff\1\13\2\uffff\1\2\2\13\1\uffff\1\13\1\uffff\3\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\21\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\1\uffff\1\13\17\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\21\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\21\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\21\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\21\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\21\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\2\uffff\1\13\1\uffff\1\13\2\uffff\1\13\15\uffff\4\13\1\uffff\1\13\3\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\21\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\2\uffff\1\13\1\uffff\1\13\2\uffff\1\13\15\uffff\4\13\1\uffff\1\13\3\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\21\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "",
            ""
    };
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA137 extends DFA {

        public DFA137(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 137;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_6;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "5457:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression )";
        }
    }

    class DFA139 extends DFA {

        public DFA139(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 139;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_6;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "5547:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression )";
        }
    }

    class DFA141 extends DFA {

        public DFA141(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 141;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_6;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "5637:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression )";
        }
    }

    class DFA143 extends DFA {

        public DFA143(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 143;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_6;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "5727:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression )";
        }
    }
    static final String dfa_33s = "\75\uffff";
    static final String dfa_34s = "\1\45\74\uffff";
    static final String dfa_35s = "\1\34\1\uffff\2\0\36\uffff\1\0\32\uffff";
    static final String dfa_36s = "\1\u00c6\1\uffff\2\0\36\uffff\1\0\32\uffff";
    static final String dfa_37s = "\1\uffff\1\1\2\uffff\36\1\1\uffff\2\1\1\2\27\uffff";
    static final String dfa_38s = "\1\0\1\uffff\1\1\1\2\36\uffff\1\3\32\uffff}>";
    static final String[] dfa_39s = {
            "\1\45\4\uffff\1\45\1\uffff\1\12\5\uffff\1\44\27\uffff\1\27\20\uffff\1\30\1\20\1\uffff\1\32\3\uffff\1\31\1\22\3\uffff\1\45\3\uffff\1\43\3\uffff\1\34\2\uffff\1\25\6\uffff\1\45\3\uffff\1\33\5\uffff\1\41\1\uffff\1\11\2\uffff\1\17\1\26\5\uffff\1\13\1\45\1\10\5\uffff\1\45\2\uffff\1\37\1\uffff\1\14\1\uffff\2\45\1\24\2\45\1\uffff\1\45\1\6\1\21\1\7\6\uffff\1\45\1\uffff\1\45\1\uffff\1\45\1\40\1\45\1\1\3\45\1\uffff\1\42\1\uffff\1\45\1\uffff\3\45\1\uffff\1\4\1\uffff\1\35\1\uffff\1\45\1\5\1\23\1\36\1\uffff\1\16\1\uffff\1\3\1\2\1\15",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA182 extends DFA {

        public DFA182(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 182;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "8146:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA182_0 = input.LA(1);

                         
                        int index182_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA182_0==LeftParenthesis) && (synpred21_InternalDialogParser())) {s = 1;}

                        else if ( (LA182_0==RULE_QNAME_TERMINAL) ) {s = 2;}

                        else if ( (LA182_0==RULE_ID) ) {s = 3;}

                        else if ( (LA182_0==A) && (synpred21_InternalDialogParser())) {s = 4;}

                        else if ( (LA182_0==A_1) && (synpred21_InternalDialogParser())) {s = 5;}

                        else if ( (LA182_0==An) && (synpred21_InternalDialogParser())) {s = 6;}

                        else if ( (LA182_0==An_1) && (synpred21_InternalDialogParser())) {s = 7;}

                        else if ( (LA182_0==Any) && (synpred21_InternalDialogParser())) {s = 8;}

                        else if ( (LA182_0==Some) && (synpred21_InternalDialogParser())) {s = 9;}

                        else if ( (LA182_0==Another) && (synpred21_InternalDialogParser())) {s = 10;}

                        else if ( (LA182_0==The) && (synpred21_InternalDialogParser())) {s = 11;}

                        else if ( (LA182_0==The_1) && (synpred21_InternalDialogParser())) {s = 12;}

                        else if ( (LA182_0==RULE_STRING) && (synpred21_InternalDialogParser())) {s = 13;}

                        else if ( (LA182_0==RULE_NUMBER) && (synpred21_InternalDialogParser())) {s = 14;}

                        else if ( (LA182_0==True) && (synpred21_InternalDialogParser())) {s = 15;}

                        else if ( (LA182_0==False) && (synpred21_InternalDialogParser())) {s = 16;}

                        else if ( (LA182_0==PI) && (synpred21_InternalDialogParser())) {s = 17;}

                        else if ( (LA182_0==Known) && (synpred21_InternalDialogParser())) {s = 18;}

                        else if ( (LA182_0==E_1) && (synpred21_InternalDialogParser())) {s = 19;}

                        else if ( (LA182_0==HyphenMinusHyphenMinus) && (synpred21_InternalDialogParser())) {s = 20;}

                        else if ( (LA182_0==None) && (synpred21_InternalDialogParser())) {s = 21;}

                        else if ( (LA182_0==Type) && (synpred21_InternalDialogParser())) {s = 22;}

                        else if ( (LA182_0==Length) && (synpred21_InternalDialogParser())) {s = 23;}

                        else if ( (LA182_0==Count) && (synpred21_InternalDialogParser())) {s = 24;}

                        else if ( (LA182_0==Index) && (synpred21_InternalDialogParser())) {s = 25;}

                        else if ( (LA182_0==First) && (synpred21_InternalDialogParser())) {s = 26;}

                        else if ( (LA182_0==Last) && (synpred21_InternalDialogParser())) {s = 27;}

                        else if ( (LA182_0==Value) && (synpred21_InternalDialogParser())) {s = 28;}

                        else if ( (LA182_0==LeftSquareBracket) && (synpred21_InternalDialogParser())) {s = 29;}

                        else if ( (LA182_0==LeftCurlyBracket) && (synpred21_InternalDialogParser())) {s = 30;}

                        else if ( (LA182_0==Not) && (synpred21_InternalDialogParser())) {s = 31;}

                        else if ( (LA182_0==ExclamationMark) && (synpred21_InternalDialogParser())) {s = 32;}

                        else if ( (LA182_0==Only) && (synpred21_InternalDialogParser())) {s = 33;}

                        else if ( (LA182_0==HyphenMinus) ) {s = 34;}

                        else if ( (LA182_0==There) && (synpred21_InternalDialogParser())) {s = 35;}

                        else if ( (LA182_0==Element) && (synpred21_InternalDialogParser())) {s = 36;}

                        else if ( (LA182_0==EOF||LA182_0==Contains||LA182_0==Matching||LA182_0==Order||LA182_0==Does||LA182_0==And||LA182_0==Has||(LA182_0>=ExclamationMarkEqualsSign && LA182_0<=AmpersandAmpersand)||(LA182_0>=LessThanSignEqualsSign && LA182_0<=EqualsSignEqualsSign)||LA182_0==GreaterThanSignEqualsSign||LA182_0==Is||LA182_0==Or||LA182_0==VerticalLineVerticalLine||LA182_0==PercentSign||(LA182_0>=RightParenthesis && LA182_0<=PlusSign)||LA182_0==Solidus||(LA182_0>=LessThanSign && LA182_0<=GreaterThanSign)||LA182_0==CircumflexAccent) ) {s = 37;}

                         
                        input.seek(index182_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA182_2 = input.LA(1);

                         
                        int index182_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index182_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA182_3 = input.LA(1);

                         
                        int index182_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index182_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA182_34 = input.LA(1);

                         
                        int index182_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index182_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 182, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\100\uffff";
    static final String dfa_41s = "\1\45\77\uffff";
    static final String dfa_42s = "\1\34\1\uffff\2\0\36\uffff\1\0\35\uffff";
    static final String dfa_43s = "\1\u00c6\1\uffff\2\0\36\uffff\1\0\35\uffff";
    static final String dfa_44s = "\1\uffff\1\1\2\uffff\36\1\1\uffff\2\1\1\2\32\uffff";
    static final String dfa_45s = "\1\0\1\uffff\1\1\1\2\36\uffff\1\3\35\uffff}>";
    static final String[] dfa_46s = {
            "\1\45\4\uffff\1\45\1\uffff\1\12\5\uffff\1\44\27\uffff\1\27\20\uffff\1\30\1\20\1\uffff\1\32\3\uffff\1\31\1\22\3\uffff\1\45\3\uffff\1\43\3\uffff\1\34\2\uffff\1\25\6\uffff\1\45\3\uffff\1\33\5\uffff\1\41\1\uffff\1\11\2\uffff\1\17\1\26\1\uffff\1\45\3\uffff\1\13\1\45\1\10\5\uffff\1\45\2\uffff\1\37\1\uffff\1\14\1\uffff\2\45\1\24\2\45\1\uffff\1\45\1\6\1\21\1\7\6\uffff\1\45\1\uffff\1\45\1\uffff\1\45\1\40\1\45\1\1\4\45\1\42\1\uffff\1\45\1\uffff\3\45\1\uffff\1\4\1\uffff\1\35\2\45\1\5\1\23\1\36\1\uffff\1\16\1\uffff\1\3\1\2\1\15",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA188 extends DFA {

        public DFA188(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 188;
            this.eot = dfa_40;
            this.eof = dfa_41;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_45;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "8301:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA188_0 = input.LA(1);

                         
                        int index188_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA188_0==LeftParenthesis) && (synpred24_InternalDialogParser())) {s = 1;}

                        else if ( (LA188_0==RULE_QNAME_TERMINAL) ) {s = 2;}

                        else if ( (LA188_0==RULE_ID) ) {s = 3;}

                        else if ( (LA188_0==A) && (synpred24_InternalDialogParser())) {s = 4;}

                        else if ( (LA188_0==A_1) && (synpred24_InternalDialogParser())) {s = 5;}

                        else if ( (LA188_0==An) && (synpred24_InternalDialogParser())) {s = 6;}

                        else if ( (LA188_0==An_1) && (synpred24_InternalDialogParser())) {s = 7;}

                        else if ( (LA188_0==Any) && (synpred24_InternalDialogParser())) {s = 8;}

                        else if ( (LA188_0==Some) && (synpred24_InternalDialogParser())) {s = 9;}

                        else if ( (LA188_0==Another) && (synpred24_InternalDialogParser())) {s = 10;}

                        else if ( (LA188_0==The) && (synpred24_InternalDialogParser())) {s = 11;}

                        else if ( (LA188_0==The_1) && (synpred24_InternalDialogParser())) {s = 12;}

                        else if ( (LA188_0==RULE_STRING) && (synpred24_InternalDialogParser())) {s = 13;}

                        else if ( (LA188_0==RULE_NUMBER) && (synpred24_InternalDialogParser())) {s = 14;}

                        else if ( (LA188_0==True) && (synpred24_InternalDialogParser())) {s = 15;}

                        else if ( (LA188_0==False) && (synpred24_InternalDialogParser())) {s = 16;}

                        else if ( (LA188_0==PI) && (synpred24_InternalDialogParser())) {s = 17;}

                        else if ( (LA188_0==Known) && (synpred24_InternalDialogParser())) {s = 18;}

                        else if ( (LA188_0==E_1) && (synpred24_InternalDialogParser())) {s = 19;}

                        else if ( (LA188_0==HyphenMinusHyphenMinus) && (synpred24_InternalDialogParser())) {s = 20;}

                        else if ( (LA188_0==None) && (synpred24_InternalDialogParser())) {s = 21;}

                        else if ( (LA188_0==Type) && (synpred24_InternalDialogParser())) {s = 22;}

                        else if ( (LA188_0==Length) && (synpred24_InternalDialogParser())) {s = 23;}

                        else if ( (LA188_0==Count) && (synpred24_InternalDialogParser())) {s = 24;}

                        else if ( (LA188_0==Index) && (synpred24_InternalDialogParser())) {s = 25;}

                        else if ( (LA188_0==First) && (synpred24_InternalDialogParser())) {s = 26;}

                        else if ( (LA188_0==Last) && (synpred24_InternalDialogParser())) {s = 27;}

                        else if ( (LA188_0==Value) && (synpred24_InternalDialogParser())) {s = 28;}

                        else if ( (LA188_0==LeftSquareBracket) && (synpred24_InternalDialogParser())) {s = 29;}

                        else if ( (LA188_0==LeftCurlyBracket) && (synpred24_InternalDialogParser())) {s = 30;}

                        else if ( (LA188_0==Not) && (synpred24_InternalDialogParser())) {s = 31;}

                        else if ( (LA188_0==ExclamationMark) && (synpred24_InternalDialogParser())) {s = 32;}

                        else if ( (LA188_0==Only) && (synpred24_InternalDialogParser())) {s = 33;}

                        else if ( (LA188_0==HyphenMinus) ) {s = 34;}

                        else if ( (LA188_0==There) && (synpred24_InternalDialogParser())) {s = 35;}

                        else if ( (LA188_0==Element) && (synpred24_InternalDialogParser())) {s = 36;}

                        else if ( (LA188_0==EOF||LA188_0==Contains||LA188_0==Matching||LA188_0==Order||LA188_0==Does||LA188_0==With||LA188_0==And||LA188_0==Has||(LA188_0>=ExclamationMarkEqualsSign && LA188_0<=AmpersandAmpersand)||(LA188_0>=LessThanSignEqualsSign && LA188_0<=EqualsSignEqualsSign)||LA188_0==GreaterThanSignEqualsSign||LA188_0==Is||LA188_0==Or||LA188_0==VerticalLineVerticalLine||LA188_0==PercentSign||(LA188_0>=RightParenthesis && LA188_0<=Comma)||LA188_0==Solidus||(LA188_0>=LessThanSign && LA188_0<=GreaterThanSign)||(LA188_0>=RightSquareBracket && LA188_0<=CircumflexAccent)) ) {s = 37;}

                         
                        input.seek(index188_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA188_2 = input.LA(1);

                         
                        int index188_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index188_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA188_3 = input.LA(1);

                         
                        int index188_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index188_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA188_34 = input.LA(1);

                         
                        int index188_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index188_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 188, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_47s = {
            "\1\45\4\uffff\1\45\1\uffff\1\12\5\uffff\1\44\27\uffff\1\27\20\uffff\1\30\1\20\1\uffff\1\32\3\uffff\1\31\1\22\3\uffff\1\45\3\uffff\1\43\3\uffff\1\34\2\uffff\1\25\6\uffff\1\45\3\uffff\1\33\5\uffff\1\41\1\uffff\1\11\2\uffff\1\17\1\26\5\uffff\1\13\1\45\1\10\5\uffff\1\45\2\uffff\1\37\1\uffff\1\14\1\uffff\2\45\1\24\2\45\1\uffff\1\45\1\6\1\21\1\7\6\uffff\1\45\1\uffff\1\45\1\uffff\1\45\1\40\1\45\1\1\4\45\1\42\1\uffff\1\45\1\uffff\3\45\1\uffff\1\4\1\uffff\1\35\1\uffff\1\45\1\5\1\23\1\36\1\uffff\1\16\1\uffff\1\3\1\2\1\15",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA195 extends DFA {

        public DFA195(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 195;
            this.eot = dfa_33;
            this.eof = dfa_33;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "8465:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA195_0 = input.LA(1);

                         
                        int index195_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA195_0==LeftParenthesis) && (synpred27_InternalDialogParser())) {s = 1;}

                        else if ( (LA195_0==RULE_QNAME_TERMINAL) ) {s = 2;}

                        else if ( (LA195_0==RULE_ID) ) {s = 3;}

                        else if ( (LA195_0==A) && (synpred27_InternalDialogParser())) {s = 4;}

                        else if ( (LA195_0==A_1) && (synpred27_InternalDialogParser())) {s = 5;}

                        else if ( (LA195_0==An) && (synpred27_InternalDialogParser())) {s = 6;}

                        else if ( (LA195_0==An_1) && (synpred27_InternalDialogParser())) {s = 7;}

                        else if ( (LA195_0==Any) && (synpred27_InternalDialogParser())) {s = 8;}

                        else if ( (LA195_0==Some) && (synpred27_InternalDialogParser())) {s = 9;}

                        else if ( (LA195_0==Another) && (synpred27_InternalDialogParser())) {s = 10;}

                        else if ( (LA195_0==The) && (synpred27_InternalDialogParser())) {s = 11;}

                        else if ( (LA195_0==The_1) && (synpred27_InternalDialogParser())) {s = 12;}

                        else if ( (LA195_0==RULE_STRING) && (synpred27_InternalDialogParser())) {s = 13;}

                        else if ( (LA195_0==RULE_NUMBER) && (synpred27_InternalDialogParser())) {s = 14;}

                        else if ( (LA195_0==True) && (synpred27_InternalDialogParser())) {s = 15;}

                        else if ( (LA195_0==False) && (synpred27_InternalDialogParser())) {s = 16;}

                        else if ( (LA195_0==PI) && (synpred27_InternalDialogParser())) {s = 17;}

                        else if ( (LA195_0==Known) && (synpred27_InternalDialogParser())) {s = 18;}

                        else if ( (LA195_0==E_1) && (synpred27_InternalDialogParser())) {s = 19;}

                        else if ( (LA195_0==HyphenMinusHyphenMinus) && (synpred27_InternalDialogParser())) {s = 20;}

                        else if ( (LA195_0==None) && (synpred27_InternalDialogParser())) {s = 21;}

                        else if ( (LA195_0==Type) && (synpred27_InternalDialogParser())) {s = 22;}

                        else if ( (LA195_0==Length) && (synpred27_InternalDialogParser())) {s = 23;}

                        else if ( (LA195_0==Count) && (synpred27_InternalDialogParser())) {s = 24;}

                        else if ( (LA195_0==Index) && (synpred27_InternalDialogParser())) {s = 25;}

                        else if ( (LA195_0==First) && (synpred27_InternalDialogParser())) {s = 26;}

                        else if ( (LA195_0==Last) && (synpred27_InternalDialogParser())) {s = 27;}

                        else if ( (LA195_0==Value) && (synpred27_InternalDialogParser())) {s = 28;}

                        else if ( (LA195_0==LeftSquareBracket) && (synpred27_InternalDialogParser())) {s = 29;}

                        else if ( (LA195_0==LeftCurlyBracket) && (synpred27_InternalDialogParser())) {s = 30;}

                        else if ( (LA195_0==Not) && (synpred27_InternalDialogParser())) {s = 31;}

                        else if ( (LA195_0==ExclamationMark) && (synpred27_InternalDialogParser())) {s = 32;}

                        else if ( (LA195_0==Only) && (synpred27_InternalDialogParser())) {s = 33;}

                        else if ( (LA195_0==HyphenMinus) ) {s = 34;}

                        else if ( (LA195_0==There) && (synpred27_InternalDialogParser())) {s = 35;}

                        else if ( (LA195_0==Element) && (synpred27_InternalDialogParser())) {s = 36;}

                        else if ( (LA195_0==Contains||LA195_0==Matching||LA195_0==Order||LA195_0==Does||LA195_0==And||LA195_0==Has||(LA195_0>=ExclamationMarkEqualsSign && LA195_0<=AmpersandAmpersand)||(LA195_0>=LessThanSignEqualsSign && LA195_0<=EqualsSignEqualsSign)||LA195_0==GreaterThanSignEqualsSign||LA195_0==Is||LA195_0==Or||LA195_0==VerticalLineVerticalLine||LA195_0==PercentSign||(LA195_0>=RightParenthesis && LA195_0<=Comma)||LA195_0==Solidus||(LA195_0>=LessThanSign && LA195_0<=GreaterThanSign)||LA195_0==CircumflexAccent) ) {s = 37;}

                         
                        input.seek(index195_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA195_2 = input.LA(1);

                         
                        int index195_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index195_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA195_3 = input.LA(1);

                         
                        int index195_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index195_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA195_34 = input.LA(1);

                         
                        int index195_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index195_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 195, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_48s = "\1\11\11\uffff";
    static final String dfa_49s = "\1\34\11\uffff";
    static final String dfa_50s = "\1\u00c5\11\uffff";
    static final String dfa_51s = "\1\uffff\10\1\1\2";
    static final String dfa_52s = "\1\0\11\uffff}>";
    static final String[] dfa_53s = {
            "\1\11\4\uffff\1\11\36\uffff\1\11\35\uffff\1\11\10\uffff\1\11\10\uffff\1\11\21\uffff\1\5\4\uffff\1\11\5\uffff\1\2\1\6\6\uffff\2\11\1\uffff\2\11\1\uffff\1\11\10\uffff\1\3\1\11\1\1\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\3\11\1\4\3\11\1\uffff\4\11\4\uffff\1\11\6\uffff\1\10\1\7",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA205 extends DFA {

        public DFA205(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 205;
            this.eot = dfa_8;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "8510:3: ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA205_0 = input.LA(1);

                         
                        int index205_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA205_0==Of) && (synpred28_InternalDialogParser())) {s = 1;}

                        else if ( (LA205_0==For) && (synpred28_InternalDialogParser())) {s = 2;}

                        else if ( (LA205_0==In) && (synpred28_InternalDialogParser())) {s = 3;}

                        else if ( (LA205_0==Comma) && (synpred28_InternalDialogParser())) {s = 4;}

                        else if ( (LA205_0==With) && (synpred28_InternalDialogParser())) {s = 5;}

                        else if ( (LA205_0==Has) && (synpred28_InternalDialogParser())) {s = 6;}

                        else if ( (LA205_0==RULE_QNAME_TERMINAL) && (synpred28_InternalDialogParser())) {s = 7;}

                        else if ( (LA205_0==RULE_ID) && (synpred28_InternalDialogParser())) {s = 8;}

                        else if ( (LA205_0==EOF||LA205_0==Contains||LA205_0==Matching||LA205_0==Insert||LA205_0==Order||LA205_0==Where||LA205_0==Does||LA205_0==And||(LA205_0>=ExclamationMarkEqualsSign && LA205_0<=AmpersandAmpersand)||(LA205_0>=LessThanSignEqualsSign && LA205_0<=EqualsSignEqualsSign)||LA205_0==GreaterThanSignEqualsSign||LA205_0==Is||LA205_0==Or||LA205_0==VerticalLineVerticalLine||LA205_0==PercentSign||(LA205_0>=RightParenthesis && LA205_0<=PlusSign)||(LA205_0>=HyphenMinus && LA205_0<=Solidus)||(LA205_0>=LessThanSign && LA205_0<=QuestionMark)||LA205_0==CircumflexAccent) ) {s = 9;}

                         
                        input.seek(index205_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 205, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_54s = "\103\uffff";
    static final String dfa_55s = "\1\45\102\uffff";
    static final String dfa_56s = "\1\34\1\uffff\2\0\36\uffff\1\0\40\uffff";
    static final String dfa_57s = "\1\u00c6\1\uffff\2\0\36\uffff\1\0\40\uffff";
    static final String dfa_58s = "\1\uffff\1\1\2\uffff\36\1\1\uffff\2\1\1\2\35\uffff";
    static final String dfa_59s = "\1\0\1\uffff\1\1\1\2\36\uffff\1\3\40\uffff}>";
    static final String[] dfa_60s = {
            "\1\45\4\uffff\1\45\1\uffff\1\12\5\uffff\1\44\26\uffff\1\45\1\27\20\uffff\1\30\1\20\1\uffff\1\32\3\uffff\1\31\1\22\3\uffff\1\45\3\uffff\1\43\3\uffff\1\34\1\45\1\uffff\1\25\6\uffff\1\45\3\uffff\1\33\5\uffff\1\41\1\uffff\1\11\2\uffff\1\17\1\26\1\uffff\1\45\3\uffff\1\13\1\45\1\10\5\uffff\1\45\2\uffff\1\37\1\uffff\1\14\1\uffff\2\45\1\24\2\45\1\uffff\1\45\1\6\1\21\1\7\6\uffff\1\45\1\uffff\1\45\1\uffff\1\45\1\40\1\45\1\1\4\45\1\42\2\45\1\uffff\4\45\1\4\1\uffff\1\35\1\uffff\1\45\1\5\1\23\1\36\1\uffff\1\16\1\uffff\1\3\1\2\1\15",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[][] dfa_60 = unpackEncodedStringArray(dfa_60s);

    class DFA202 extends DFA {

        public DFA202(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 202;
            this.eot = dfa_54;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_59;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "8634:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA202_0 = input.LA(1);

                         
                        int index202_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA202_0==LeftParenthesis) && (synpred30_InternalDialogParser())) {s = 1;}

                        else if ( (LA202_0==RULE_QNAME_TERMINAL) ) {s = 2;}

                        else if ( (LA202_0==RULE_ID) ) {s = 3;}

                        else if ( (LA202_0==A) && (synpred30_InternalDialogParser())) {s = 4;}

                        else if ( (LA202_0==A_1) && (synpred30_InternalDialogParser())) {s = 5;}

                        else if ( (LA202_0==An) && (synpred30_InternalDialogParser())) {s = 6;}

                        else if ( (LA202_0==An_1) && (synpred30_InternalDialogParser())) {s = 7;}

                        else if ( (LA202_0==Any) && (synpred30_InternalDialogParser())) {s = 8;}

                        else if ( (LA202_0==Some) && (synpred30_InternalDialogParser())) {s = 9;}

                        else if ( (LA202_0==Another) && (synpred30_InternalDialogParser())) {s = 10;}

                        else if ( (LA202_0==The) && (synpred30_InternalDialogParser())) {s = 11;}

                        else if ( (LA202_0==The_1) && (synpred30_InternalDialogParser())) {s = 12;}

                        else if ( (LA202_0==RULE_STRING) && (synpred30_InternalDialogParser())) {s = 13;}

                        else if ( (LA202_0==RULE_NUMBER) && (synpred30_InternalDialogParser())) {s = 14;}

                        else if ( (LA202_0==True) && (synpred30_InternalDialogParser())) {s = 15;}

                        else if ( (LA202_0==False) && (synpred30_InternalDialogParser())) {s = 16;}

                        else if ( (LA202_0==PI) && (synpred30_InternalDialogParser())) {s = 17;}

                        else if ( (LA202_0==Known) && (synpred30_InternalDialogParser())) {s = 18;}

                        else if ( (LA202_0==E_1) && (synpred30_InternalDialogParser())) {s = 19;}

                        else if ( (LA202_0==HyphenMinusHyphenMinus) && (synpred30_InternalDialogParser())) {s = 20;}

                        else if ( (LA202_0==None) && (synpred30_InternalDialogParser())) {s = 21;}

                        else if ( (LA202_0==Type) && (synpred30_InternalDialogParser())) {s = 22;}

                        else if ( (LA202_0==Length) && (synpred30_InternalDialogParser())) {s = 23;}

                        else if ( (LA202_0==Count) && (synpred30_InternalDialogParser())) {s = 24;}

                        else if ( (LA202_0==Index) && (synpred30_InternalDialogParser())) {s = 25;}

                        else if ( (LA202_0==First) && (synpred30_InternalDialogParser())) {s = 26;}

                        else if ( (LA202_0==Last) && (synpred30_InternalDialogParser())) {s = 27;}

                        else if ( (LA202_0==Value) && (synpred30_InternalDialogParser())) {s = 28;}

                        else if ( (LA202_0==LeftSquareBracket) && (synpred30_InternalDialogParser())) {s = 29;}

                        else if ( (LA202_0==LeftCurlyBracket) && (synpred30_InternalDialogParser())) {s = 30;}

                        else if ( (LA202_0==Not) && (synpred30_InternalDialogParser())) {s = 31;}

                        else if ( (LA202_0==ExclamationMark) && (synpred30_InternalDialogParser())) {s = 32;}

                        else if ( (LA202_0==Only) && (synpred30_InternalDialogParser())) {s = 33;}

                        else if ( (LA202_0==HyphenMinus) ) {s = 34;}

                        else if ( (LA202_0==There) && (synpred30_InternalDialogParser())) {s = 35;}

                        else if ( (LA202_0==Element) && (synpred30_InternalDialogParser())) {s = 36;}

                        else if ( (LA202_0==EOF||LA202_0==Contains||LA202_0==Matching||LA202_0==Insert||LA202_0==Order||LA202_0==Where||LA202_0==Does||LA202_0==With||LA202_0==And||LA202_0==Has||(LA202_0>=ExclamationMarkEqualsSign && LA202_0<=AmpersandAmpersand)||(LA202_0>=LessThanSignEqualsSign && LA202_0<=EqualsSignEqualsSign)||LA202_0==GreaterThanSignEqualsSign||LA202_0==Is||LA202_0==Or||LA202_0==VerticalLineVerticalLine||LA202_0==PercentSign||(LA202_0>=RightParenthesis && LA202_0<=Comma)||(LA202_0>=FullStop && LA202_0<=Solidus)||(LA202_0>=LessThanSign && LA202_0<=QuestionMark)||LA202_0==CircumflexAccent) ) {s = 37;}

                         
                        input.seek(index202_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA202_2 = input.LA(1);

                         
                        int index202_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index202_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA202_3 = input.LA(1);

                         
                        int index202_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index202_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA202_34 = input.LA(1);

                         
                        int index202_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index202_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 202, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_61s = "\35\uffff";
    static final String dfa_62s = "\1\43\2\uffff\11\4\5\uffff\13\4\1\uffff";
    static final String dfa_63s = "\1\u00c6\2\uffff\11\u00c5\5\uffff\13\u00c5\1\uffff";
    static final String dfa_64s = "\1\uffff\1\1\1\2\11\uffff\1\4\1\5\1\6\1\7\1\10\13\uffff\1\3";
    static final String dfa_65s = "\35\uffff}>";
    static final String[] dfa_66s = {
            "\1\11\35\uffff\1\17\20\uffff\1\17\1\16\1\uffff\1\17\3\uffff\2\17\13\uffff\1\17\2\uffff\1\17\12\uffff\1\17\7\uffff\1\10\2\uffff\1\16\1\17\5\uffff\1\12\1\uffff\1\7\12\uffff\1\13\3\uffff\1\17\4\uffff\1\5\1\17\1\6\15\uffff\1\1\14\uffff\1\3\1\uffff\1\20\2\uffff\1\4\1\17\1\20\1\uffff\1\15\1\uffff\2\2\1\14",
            "",
            "",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\1\uffff\1\17\17\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\2\uffff\1\17\1\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\1\uffff\1\17\3\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\2\uffff\1\17\1\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\1\uffff\1\17\3\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "",
            "",
            "",
            "",
            "",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\21\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            ""
    };

    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA232 extends DFA {

        public DFA232(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 232;
            this.eot = dfa_61;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "9715:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )";
        }
    }

    class DFA239 extends DFA {

        public DFA239(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 239;
            this.eot = dfa_61;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "10089:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )";
        }
    }

    class DFA246 extends DFA {

        public DFA246(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 246;
            this.eot = dfa_61;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "10463:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )";
        }
    }

    class DFA253 extends DFA {

        public DFA253(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 253;
            this.eot = dfa_61;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "10837:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )";
        }
    }
    static final String dfa_67s = "\17\uffff";
    static final String dfa_68s = "\1\43\5\uffff\1\51\1\uffff\2\51\5\uffff";
    static final String dfa_69s = "\1\u00bf\5\uffff\1\u0080\1\uffff\2\143\5\uffff";
    static final String dfa_70s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\uffff\1\6\2\uffff\1\7\1\10\1\11\1\12\1\13";
    static final String dfa_71s = "\17\uffff}>";
    static final String[] dfa_72s = {
            "\1\15\35\uffff\1\12\20\uffff\1\13\2\uffff\1\15\3\uffff\1\14\1\2\13\uffff\1\16\2\uffff\1\5\12\uffff\1\15\7\uffff\1\15\3\uffff\1\7\5\uffff\1\10\1\uffff\1\15\12\uffff\1\11\3\uffff\1\4\4\uffff\1\15\1\1\1\15\32\uffff\1\15\4\uffff\1\6\1\3",
            "",
            "",
            "",
            "",
            "",
            "\1\15\5\uffff\1\15\13\uffff\1\15\1\uffff\1\15\5\uffff\1\15\20\uffff\2\15\7\uffff\1\15\1\uffff\3\15\1\uffff\1\15\34\uffff\1\7",
            "",
            "\1\15\5\uffff\1\15\13\uffff\1\15\1\uffff\1\15\3\uffff\1\12\1\uffff\1\15\20\uffff\2\15\3\uffff\1\14\3\uffff\1\15\1\uffff\3\15\1\uffff\1\15",
            "\1\15\5\uffff\1\15\13\uffff\1\15\1\uffff\1\15\3\uffff\1\12\1\uffff\1\15\20\uffff\2\15\3\uffff\1\14\3\uffff\1\15\1\uffff\3\15\1\uffff\1\15",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[][] dfa_72 = unpackEncodedStringArray(dfa_72s);

    class DFA266 extends DFA {

        public DFA266(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 266;
            this.eot = dfa_67;
            this.eof = dfa_67;
            this.min = dfa_68;
            this.max = dfa_69;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "11477:2: (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0104000000000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0002020800040000L,0x94100244062C0012L,0xCA021400708A0941L,0x0000000000000075L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000800000000L,0x1000000000000000L,0x4200000050080140L,0x0000000000000030L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x4480089920612BF0L,0x5024500000C00040L,0x4200100050090140L,0x0000000000000031L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004000001000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0004000000000000L,0x0000000000010000L,0x0105100000000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0105100000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0105100000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x8000000000000002L,0x0000084000000100L,0x0000000000008832L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000002L,0x0000084000000100L,0x0000000000008832L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000000L,0x0200000000010000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0001200000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0104000080000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x4480089920612BF0L,0x5024500000C00040L,0x4200300050890148L,0x0000000000000031L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x4480089920612BF0L,0x5024500000C00040L,0x4200100050890148L,0x0000000000000031L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x4480089920612BF0L,0x5024520000C00040L,0x4200100050890140L,0x0000000000000031L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0011000000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0040000000000000L,0x0400000000000000L,0x0000000000004004L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004004L,0x0000000000000030L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000030L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000800000000L,0x9000000004080000L,0xCA021000700A0140L,0x0000000000000074L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000800000000L,0x1000000000000000L,0x4200000050080140L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0001006000004004L,0x0000000000000030L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000800000002L,0x1000000000000000L,0x4201006050084144L,0x0000000000000030L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0001100000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0003000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x1002200000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x1000200000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0002000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0002400000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0002000000000000L,0x0000000000000044L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0003000000000000L,0x0000000000000046L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0040000000100002L,0x0500000000000000L,0x0000006000005004L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L,0x4000000000000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x4480089920612BF0L,0x5024700000C20040L,0x4200100050090140L,0x0000000000000031L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L,0x0800100000000000L,0x0000000000000041L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000010000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000800000000L,0x9000000004080000L,0xCA020000700A0140L,0x0000000000000074L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0001000000000002L,0x0000004000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0001000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004004L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000000L,0x0000000100040000L,0x0000000000000004L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0080000008000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000100L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000800000000L,0x9000000004080000L,0xCA00000070080140L,0x0000000000000074L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000050L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000800000000L,0x9000000004080000L,0xDA020000700A0140L,0x0000000000000074L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x1001000000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000800000000L,0x1000000000000000L,0x4201000050080140L,0x0000000000000030L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0002020800040000L,0x94102244062C0012L,0xCA021400708A0941L,0x0000000000000075L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000001L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000880000000L,0x1000000000000000L,0x4200400050080140L,0x0000000000000030L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000800000000L,0x1000000000000000L,0x4200400050080140L,0x0000000000000030L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000800000000L,0x1000008000000000L,0x4201000050080140L,0x0000000000000030L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0002020800000000L,0x94100244062C0002L,0xCA021400708A0141L,0x0000000000000075L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000002L,0x0000000040000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000800000000L,0x1000800000000000L,0x4200000050080540L,0x0000000000000030L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000800000002L,0x1000800000000000L,0x4201000050080540L,0x0000000000000030L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000028000000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000400080L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000010000002L,0x0001000000000000L,0x0040002002200000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L,0x0000000000020000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x00A0000009000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0002800000000000L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0008480000000000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000800000002L,0x1000000000000000L,0x4200005050086140L,0x0000000000000030L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0002020800000002L,0x94100244062C0002L,0xCA021400708A4141L,0x0000000000000075L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000800000002L,0x1000000000000000L,0x4200000050084140L,0x0000000000000030L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000800000002L,0x1000000000000000L,0x4200005050086144L,0x0000000000000030L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0002020800000002L,0x94100244062C0002L,0xCA021400708A4145L,0x0000000000000075L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000800000002L,0x1000000000000000L,0x4200000050084144L,0x0000000000000030L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000800000002L,0x1000000000000000L,0x4201005050086140L,0x0000000000000030L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000800000000L,0x1000000000000000L,0x4200000050084140L,0x0000000000000030L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0002020800000002L,0x94100244062C0002L,0xCA031400708A4141L,0x0000000000000075L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000800000002L,0x1000000000000000L,0x4201000050084140L,0x0000000000000030L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000800000002L,0x1000000000000000L,0x4201005050086144L,0x0000000000000030L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000800000000L,0x1000000000000000L,0x4200000050084144L,0x0000000000000030L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0002020800040002L,0x94100244062C0012L,0xCA031400708A4945L,0x0000000000000075L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000800000002L,0x1000000000000000L,0x4201000050084144L,0x0000000000000030L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0100000800000000L,0x94100244062C8002L,0xCA021400708A0141L,0x0000000000000075L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000800000000L,0x94100244062C0002L,0xCA021400708A0141L,0x0000000000000075L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000800000000L,0x90100240062C0002L,0xCA00100070880141L,0x0000000000000075L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0002020800000000L,0x94100244062C0012L,0xCA021400708A0141L,0x0000000000000075L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x6C80889920612BF0L,0x5024500BA0F00048L,0x4200100050090140L,0x0000000000000031L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L,0x0800000000000000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0002020800000000L,0x94100244062C0012L,0xDA031400708A0141L,0x0000000000000075L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0002020800000000L,0x94100244062C0012L,0xCA033400708A0141L,0x0000000000000075L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0801000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x2800820000000000L,0x0000000BA0300008L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0001000000000000L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x8400000000000000L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0002800000000000L,0x0000000000000004L});

}
