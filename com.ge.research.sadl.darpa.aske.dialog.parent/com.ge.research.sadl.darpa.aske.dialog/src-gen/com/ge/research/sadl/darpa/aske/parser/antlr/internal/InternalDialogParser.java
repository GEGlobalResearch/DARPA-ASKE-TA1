package com.ge.research.sadl.darpa.aske.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.ge.research.sadl.darpa.aske.services.DialogGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalDialogParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "NonNegativeInteger", "NonPositiveInteger", "NegativeInteger", "PositiveInteger", "AnySimpleType", "Base64Binary", "Relationship", "UnsignedByte", "Symmetrical", "UnsignedInt", "Deductions", "Annotation", "GYearMonth", "Transitive", "Construct", "Described", "Describes", "GMonthDay", "HexBinary", "Instances", "TopLevel", "Equation", "Explain", "External", "Contains", "DateTime", "Disjoint", "Distinct", "Duration", "Matching", "Property", "Another", "Boolean", "Classes", "Contain", "Decimal", "Default", "Element", "Exactly", "Integer", "Inverse", "Located", "Returns", "Seventh", "Subject", "Sublist", "Version", "Print", "Update", "Write", "Always", "AnyURI", "Before", "Delete", "Double", "Eighth", "Exists", "Fourth", "GMonth", "Import", "Insert", "Length", "Return", "Second", "Select", "Single", "String", "Unique", "Values", "Expr", "Graph", "Model", "Read", "Stage", "Test", "After", "Alias", "Class", "Count", "False", "Fifth", "First", "Float", "GYear", "Given", "Index", "Known", "Least", "Level", "Ninth", "Order", "Other", "Sixth", "Tenth", "There", "Third", "Types", "Using", "Value", "Where", "List", "None", "Rule", "What", "Byte", "Data", "Date", "Desc", "Does", "From", "GDay", "Last", "Long", "Most", "Must", "Note", "Only", "Same", "Some", "Then", "Time", "True", "Type", "With", "FullStopFullStopFullStop", "Ask", "The", "And", "Any", "Are", "Asc", "Ask_1", "Can", "For", "Has", "Int", "Not", "One", "The_1", "Uri", "ExclamationMarkEqualsSign", "AmpersandAmpersand", "HyphenMinusHyphenMinus", "LessThanSignEqualsSign", "EqualsSignEqualsSign", "EqualsSignGreaterThanSign", "GreaterThanSignEqualsSign", "An", "PI", "An_1", "As", "At", "Be", "By", "If", "In", "Is", "Of", "Or", "To", "VerticalLineVerticalLine", "ExclamationMark", "PercentSign", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "LessThanSign", "EqualsSign", "GreaterThanSign", "QuestionMark", "A", "E", "LeftSquareBracket", "RightSquareBracket", "CircumflexAccent", "A_1", "E_1", "LeftCurlyBracket", "RightCurlyBracket", "RULE_NUMBER", "RULE_WS", "RULE_ID", "RULE_QNAME_TERMINAL", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_ANY_OTHER"
    };
    public static final int Delete=57;
    public static final int Described=19;
    public static final int Ask_1=135;
    public static final int Or=162;
    public static final int EqualsSignGreaterThanSign=149;
    public static final int String=70;
    public static final int Insert=64;
    public static final int Must=118;
    public static final int LessThanSign=176;
    public static final int Print=51;
    public static final int Distinct=31;
    public static final int Decimal=39;
    public static final int Least=91;
    public static final int Stage=77;
    public static final int Then=123;
    public static final int Classes=37;
    public static final int GreaterThanSign=178;
    public static final int RULE_ID=191;
    public static final int GreaterThanSignEqualsSign=150;
    public static final int Describes=20;
    public static final int Float=86;
    public static final int Expr=73;
    public static final int Are=133;
    public static final int Note=119;
    public static final int Contains=28;
    public static final int Where=103;
    public static final int A=180;
    public static final int E=181;
    public static final int One=141;
    public static final int Transitive=17;
    public static final int An=151;
    public static final int The=130;
    public static final int Asc=134;
    public static final int As=154;
    public static final int At=155;
    public static final int Located=45;
    public static final int Ask=129;
    public static final int Disjoint=30;
    public static final int NegativeInteger=6;
    public static final int Solidus=174;
    public static final int RightCurlyBracket=188;
    public static final int FullStop=173;
    public static final int Be=156;
    public static final int UnsignedByte=11;
    public static final int Eighth=59;
    public static final int Length=65;
    public static final int Sixth=96;
    public static final int QuestionMark=179;
    public static final int Relationship=10;
    public static final int By=157;
    public static final int Select=68;
    public static final int After=79;
    public static final int Has=138;
    public static final int TopLevel=24;
    public static final int Other=95;
    public static final int HyphenMinusHyphenMinus=146;
    public static final int Types=100;
    public static final int Using=101;
    public static final int Index=89;
    public static final int Seventh=47;
    public static final int Desc=111;
    public static final int Last=115;
    public static final int There=98;
    public static final int Version=50;
    public static final int Test=78;
    public static final int List=104;
    public static final int First=85;
    public static final int To=163;
    public static final int Another=35;
    public static final int An_1=153;
    public static final int Same=121;
    public static final int For=137;
    public static final int RightParenthesis=168;
    public static final int Duration=32;
    public static final int Not=140;
    public static final int E_1=186;
    public static final int External=27;
    public static final int Long=116;
    public static final int Does=112;
    public static final int Unique=71;
    public static final int Class=81;
    public static final int Element=41;
    public static final int Time=124;
    public static final int What=107;
    public static final int With=127;
    public static final int RULE_SL_COMMENT=195;
    public static final int NonPositiveInteger=5;
    public static final int AmpersandAmpersand=145;
    public static final int Colon=175;
    public static final int EOF=-1;
    public static final int Asterisk=169;
    public static final int Return=66;
    public static final int NonNegativeInteger=4;
    public static final int LeftCurlyBracket=187;
    public static final int RULE_NUMBER=189;
    public static final int Subject=48;
    public static final int CircumflexAccent=184;
    public static final int Integer=43;
    public static final int Exactly=42;
    public static final int Exists=60;
    public static final int Base64Binary=9;
    public static final int Import=63;
    public static final int Values=72;
    public static final int Count=82;
    public static final int False=83;
    public static final int DateTime=29;
    public static final int The_1=142;
    public static final int LeftParenthesis=167;
    public static final int Inverse=44;
    public static final int Boolean=36;
    public static final int ExclamationMark=165;
    public static final int AnyURI=55;
    public static final int EqualsSignEqualsSign=148;
    public static final int Graph=74;
    public static final int Some=122;
    public static final int UnsignedInt=13;
    public static final int GYear=87;
    public static final int PlusSign=170;
    public static final int Byte=108;
    public static final int RULE_QNAME_TERMINAL=192;
    public static final int RULE_ML_COMMENT=194;
    public static final int Level=92;
    public static final int LeftSquareBracket=182;
    public static final int Always=54;
    public static final int Rule=106;
    public static final int If=158;
    public static final int HexBinary=22;
    public static final int Write=53;
    public static final int In=159;
    public static final int VerticalLineVerticalLine=164;
    public static final int Given=88;
    public static final int Is=160;
    public static final int Uri=143;
    public static final int Comma=171;
    public static final int HyphenMinus=172;
    public static final int Contain=38;
    public static final int LessThanSignEqualsSign=147;
    public static final int Property=34;
    public static final int Sublist=49;
    public static final int PositiveInteger=7;
    public static final int Default=40;
    public static final int Annotation=15;
    public static final int Instances=23;
    public static final int Type=126;
    public static final int Known=90;
    public static final int Model=75;
    public static final int ExclamationMarkEqualsSign=144;
    public static final int None=105;
    public static final int Most=117;
    public static final int GYearMonth=16;
    public static final int True=125;
    public static final int Update=52;
    public static final int FullStopFullStopFullStop=128;
    public static final int Matching=33;
    public static final int Read=76;
    public static final int Returns=46;
    public static final int PercentSign=166;
    public static final int Third=99;
    public static final int Fifth=84;
    public static final int Symmetrical=12;
    public static final int RightSquareBracket=183;
    public static final int Order=94;
    public static final int Double=58;
    public static final int Can=136;
    public static final int GMonthDay=21;
    public static final int A_1=185;
    public static final int And=131;
    public static final int Value=102;
    public static final int Before=56;
    public static final int AnySimpleType=8;
    public static final int RULE_STRING=193;
    public static final int Any=132;
    public static final int Int=139;
    public static final int EqualsSign=177;
    public static final int Ninth=93;
    public static final int GMonth=62;
    public static final int RULE_WS=190;
    public static final int Explain=26;
    public static final int Equation=25;
    public static final int Only=120;
    public static final int Data=109;
    public static final int From=113;
    public static final int RULE_ANY_OTHER=196;
    public static final int Date=110;
    public static final int Second=67;
    public static final int GDay=114;
    public static final int Single=69;
    public static final int Alias=80;
    public static final int Of=161;
    public static final int Construct=18;
    public static final int PI=152;
    public static final int Deductions=14;
    public static final int Fourth=61;
    public static final int Tenth=97;

    // delegates
    // delegators


        public InternalDialogParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalDialogParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalDialogParser.tokenNames; }
    public String getGrammarFileName() { return "InternalDialogParser.g"; }



     	private DialogGrammarAccess grammarAccess;

        public InternalDialogParser(TokenStream input, DialogGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "DialogModel";
       	}

       	@Override
       	protected DialogGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleDialogModel"
    // InternalDialogParser.g:58:1: entryRuleDialogModel returns [EObject current=null] : iv_ruleDialogModel= ruleDialogModel EOF ;
    public final EObject entryRuleDialogModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDialogModel = null;


        try {
            // InternalDialogParser.g:58:52: (iv_ruleDialogModel= ruleDialogModel EOF )
            // InternalDialogParser.g:59:2: iv_ruleDialogModel= ruleDialogModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDialogModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDialogModel=ruleDialogModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDialogModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDialogModel"


    // $ANTLR start "ruleDialogModel"
    // InternalDialogParser.g:65:1: ruleDialogModel returns [EObject current=null] : this_SadlModel_0= ruleSadlModel ;
    public final EObject ruleDialogModel() throws RecognitionException {
        EObject current = null;

        EObject this_SadlModel_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:71:2: (this_SadlModel_0= ruleSadlModel )
            // InternalDialogParser.g:72:2: this_SadlModel_0= ruleSadlModel
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getDialogModelAccess().getSadlModelParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_SadlModel_0=ruleSadlModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SadlModel_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDialogModel"


    // $ANTLR start "entryRuleSadlModelElement"
    // InternalDialogParser.g:83:1: entryRuleSadlModelElement returns [EObject current=null] : iv_ruleSadlModelElement= ruleSadlModelElement EOF ;
    public final EObject entryRuleSadlModelElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlModelElement = null;


        try {
            // InternalDialogParser.g:83:57: (iv_ruleSadlModelElement= ruleSadlModelElement EOF )
            // InternalDialogParser.g:84:2: iv_ruleSadlModelElement= ruleSadlModelElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlModelElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlModelElement=ruleSadlModelElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlModelElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlModelElement"


    // $ANTLR start "ruleSadlModelElement"
    // InternalDialogParser.g:90:1: ruleSadlModelElement returns [EObject current=null] : this_DialogStatement_0= ruleDialogStatement ;
    public final EObject ruleSadlModelElement() throws RecognitionException {
        EObject current = null;

        EObject this_DialogStatement_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:96:2: (this_DialogStatement_0= ruleDialogStatement )
            // InternalDialogParser.g:97:2: this_DialogStatement_0= ruleDialogStatement
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getSadlModelElementAccess().getDialogStatementParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_DialogStatement_0=ruleDialogStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_DialogStatement_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlModelElement"


    // $ANTLR start "entryRuleDialogStatement"
    // InternalDialogParser.g:108:1: entryRuleDialogStatement returns [EObject current=null] : iv_ruleDialogStatement= ruleDialogStatement EOF ;
    public final EObject entryRuleDialogStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDialogStatement = null;


        try {
            // InternalDialogParser.g:108:56: (iv_ruleDialogStatement= ruleDialogStatement EOF )
            // InternalDialogParser.g:109:2: iv_ruleDialogStatement= ruleDialogStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDialogStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDialogStatement=ruleDialogStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDialogStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDialogStatement"


    // $ANTLR start "ruleDialogStatement"
    // InternalDialogParser.g:115:1: ruleDialogStatement returns [EObject current=null] : (this_DialogQuestion_0= ruleDialogQuestion ruleEOS ) ;
    public final EObject ruleDialogStatement() throws RecognitionException {
        EObject current = null;

        EObject this_DialogQuestion_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:121:2: ( (this_DialogQuestion_0= ruleDialogQuestion ruleEOS ) )
            // InternalDialogParser.g:122:2: (this_DialogQuestion_0= ruleDialogQuestion ruleEOS )
            {
            // InternalDialogParser.g:122:2: (this_DialogQuestion_0= ruleDialogQuestion ruleEOS )
            // InternalDialogParser.g:123:3: this_DialogQuestion_0= ruleDialogQuestion ruleEOS
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDialogStatementAccess().getDialogQuestionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_3);
            this_DialogQuestion_0=ruleDialogQuestion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_DialogQuestion_0;
              			afterParserOrEnumRuleCall();
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDialogStatementAccess().getEOSParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            ruleEOS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDialogStatement"


    // $ANTLR start "entryRuleDialogQuestion"
    // InternalDialogParser.g:142:1: entryRuleDialogQuestion returns [EObject current=null] : iv_ruleDialogQuestion= ruleDialogQuestion EOF ;
    public final EObject entryRuleDialogQuestion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDialogQuestion = null;


        try {
            // InternalDialogParser.g:142:55: (iv_ruleDialogQuestion= ruleDialogQuestion EOF )
            // InternalDialogParser.g:143:2: iv_ruleDialogQuestion= ruleDialogQuestion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDialogQuestionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDialogQuestion=ruleDialogQuestion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDialogQuestion; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDialogQuestion"


    // $ANTLR start "ruleDialogQuestion"
    // InternalDialogParser.g:149:1: ruleDialogQuestion returns [EObject current=null] : (otherlv_0= What otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlTypeReference ) ) otherlv_4= QuestionMark ) ;
    public final EObject ruleDialogQuestion() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_article_2_0 = null;

        EObject lv_target_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:155:2: ( (otherlv_0= What otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlTypeReference ) ) otherlv_4= QuestionMark ) )
            // InternalDialogParser.g:156:2: (otherlv_0= What otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlTypeReference ) ) otherlv_4= QuestionMark )
            {
            // InternalDialogParser.g:156:2: (otherlv_0= What otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlTypeReference ) ) otherlv_4= QuestionMark )
            // InternalDialogParser.g:157:3: otherlv_0= What otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlTypeReference ) ) otherlv_4= QuestionMark
            {
            otherlv_0=(Token)match(input,What,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getDialogQuestionAccess().getWhatKeyword_0());
              		
            }
            otherlv_1=(Token)match(input,Is,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDialogQuestionAccess().getIsKeyword_1());
              		
            }
            // InternalDialogParser.g:165:3: ( (lv_article_2_0= ruleAnArticle ) )?
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==Another||LA1_0==Some||LA1_0==The||LA1_0==Any||LA1_0==The_1||LA1_0==An||LA1_0==An_1||LA1_0==A||LA1_0==A_1) ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // InternalDialogParser.g:166:4: (lv_article_2_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:166:4: (lv_article_2_0= ruleAnArticle )
                    // InternalDialogParser.g:167:5: lv_article_2_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDialogQuestionAccess().getArticleAnArticleParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_5);
                    lv_article_2_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDialogQuestionRule());
                      					}
                      					set(
                      						current,
                      						"article",
                      						lv_article_2_0,
                      						"com.ge.research.sadl.SADL.AnArticle");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalDialogParser.g:184:3: ( (lv_target_3_0= ruleSadlTypeReference ) )
            // InternalDialogParser.g:185:4: (lv_target_3_0= ruleSadlTypeReference )
            {
            // InternalDialogParser.g:185:4: (lv_target_3_0= ruleSadlTypeReference )
            // InternalDialogParser.g:186:5: lv_target_3_0= ruleSadlTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDialogQuestionAccess().getTargetSadlTypeReferenceParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_target_3_0=ruleSadlTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDialogQuestionRule());
              					}
              					set(
              						current,
              						"target",
              						lv_target_3_0,
              						"com.ge.research.sadl.SADL.SadlTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,QuestionMark,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDialogQuestionAccess().getQuestionMarkKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDialogQuestion"


    // $ANTLR start "entryRuleSadlModel"
    // InternalDialogParser.g:211:1: entryRuleSadlModel returns [EObject current=null] : iv_ruleSadlModel= ruleSadlModel EOF ;
    public final EObject entryRuleSadlModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlModel = null;


        try {
            // InternalDialogParser.g:211:50: (iv_ruleSadlModel= ruleSadlModel EOF )
            // InternalDialogParser.g:212:2: iv_ruleSadlModel= ruleSadlModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlModel=ruleSadlModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlModel"


    // $ANTLR start "ruleSadlModel"
    // InternalDialogParser.g:218:1: ruleSadlModel returns [EObject current=null] : (otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )* ) ;
    public final EObject ruleSadlModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_baseUri_1_0=null;
        Token otherlv_2=null;
        Token lv_alias_3_0=null;
        Token otherlv_4=null;
        Token lv_version_5_0=null;
        EObject lv_annotations_6_0 = null;

        EObject lv_imports_8_0 = null;

        EObject lv_elements_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:224:2: ( (otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )* ) )
            // InternalDialogParser.g:225:2: (otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )* )
            {
            // InternalDialogParser.g:225:2: (otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )* )
            // InternalDialogParser.g:226:3: otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )*
            {
            otherlv_0=(Token)match(input,Uri,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSadlModelAccess().getUriKeyword_0());
              		
            }
            // InternalDialogParser.g:230:3: ( (lv_baseUri_1_0= RULE_STRING ) )
            // InternalDialogParser.g:231:4: (lv_baseUri_1_0= RULE_STRING )
            {
            // InternalDialogParser.g:231:4: (lv_baseUri_1_0= RULE_STRING )
            // InternalDialogParser.g:232:5: lv_baseUri_1_0= RULE_STRING
            {
            lv_baseUri_1_0=(Token)match(input,RULE_STRING,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_baseUri_1_0, grammarAccess.getSadlModelAccess().getBaseUriSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlModelRule());
              					}
              					setWithLastConsumed(
              						current,
              						"baseUri",
              						lv_baseUri_1_0,
              						"com.ge.research.sadl.SADL.STRING");
              				
            }

            }


            }

            // InternalDialogParser.g:248:3: (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )?
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==Alias) ) {
                alt2=1;
            }
            switch (alt2) {
                case 1 :
                    // InternalDialogParser.g:249:4: otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) )
                    {
                    otherlv_2=(Token)match(input,Alias,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSadlModelAccess().getAliasKeyword_2_0());
                      			
                    }
                    // InternalDialogParser.g:253:4: ( (lv_alias_3_0= RULE_ID ) )
                    // InternalDialogParser.g:254:5: (lv_alias_3_0= RULE_ID )
                    {
                    // InternalDialogParser.g:254:5: (lv_alias_3_0= RULE_ID )
                    // InternalDialogParser.g:255:6: lv_alias_3_0= RULE_ID
                    {
                    lv_alias_3_0=(Token)match(input,RULE_ID,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_3_0, grammarAccess.getSadlModelAccess().getAliasIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlModelRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_3_0,
                      							"com.ge.research.sadl.SADL.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:272:3: (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==Version) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // InternalDialogParser.g:273:4: otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) )
                    {
                    otherlv_4=(Token)match(input,Version,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSadlModelAccess().getVersionKeyword_3_0());
                      			
                    }
                    // InternalDialogParser.g:277:4: ( (lv_version_5_0= RULE_STRING ) )
                    // InternalDialogParser.g:278:5: (lv_version_5_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:278:5: (lv_version_5_0= RULE_STRING )
                    // InternalDialogParser.g:279:6: lv_version_5_0= RULE_STRING
                    {
                    lv_version_5_0=(Token)match(input,RULE_STRING,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_version_5_0, grammarAccess.getSadlModelAccess().getVersionSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlModelRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"version",
                      							lv_version_5_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:296:3: ( (lv_annotations_6_0= ruleSadlAnnotation ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==LeftParenthesis||LA4_0==Comma) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // InternalDialogParser.g:297:4: (lv_annotations_6_0= ruleSadlAnnotation )
            	    {
            	    // InternalDialogParser.g:297:4: (lv_annotations_6_0= ruleSadlAnnotation )
            	    // InternalDialogParser.g:298:5: lv_annotations_6_0= ruleSadlAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlModelAccess().getAnnotationsSadlAnnotationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_annotations_6_0=ruleSadlAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_6_0,
            	      						"com.ge.research.sadl.SADL.SadlAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSadlModelAccess().getEOSParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_12);
            ruleEOS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:322:3: ( (lv_imports_8_0= ruleSadlImport ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==Import) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // InternalDialogParser.g:323:4: (lv_imports_8_0= ruleSadlImport )
            	    {
            	    // InternalDialogParser.g:323:4: (lv_imports_8_0= ruleSadlImport )
            	    // InternalDialogParser.g:324:5: lv_imports_8_0= ruleSadlImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlModelAccess().getImportsSadlImportParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_12);
            	    lv_imports_8_0=ruleSadlImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"imports",
            	      						lv_imports_8_0,
            	      						"com.ge.research.sadl.SADL.SadlImport");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            // InternalDialogParser.g:341:3: ( (lv_elements_9_0= ruleSadlModelElement ) )*
            loop6:
            do {
                int alt6=2;
                int LA6_0 = input.LA(1);

                if ( (LA6_0==What) ) {
                    alt6=1;
                }


                switch (alt6) {
            	case 1 :
            	    // InternalDialogParser.g:342:4: (lv_elements_9_0= ruleSadlModelElement )
            	    {
            	    // InternalDialogParser.g:342:4: (lv_elements_9_0= ruleSadlModelElement )
            	    // InternalDialogParser.g:343:5: lv_elements_9_0= ruleSadlModelElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlModelAccess().getElementsSadlModelElementParserRuleCall_7_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_13);
            	    lv_elements_9_0=ruleSadlModelElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"elements",
            	      						lv_elements_9_0,
            	      						"com.ge.research.sadl.darpa.aske.Dialog.SadlModelElement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlModel"


    // $ANTLR start "entryRuleSadlAnnotation"
    // InternalDialogParser.g:364:1: entryRuleSadlAnnotation returns [EObject current=null] : iv_ruleSadlAnnotation= ruleSadlAnnotation EOF ;
    public final EObject entryRuleSadlAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlAnnotation = null;


        try {
            // InternalDialogParser.g:364:55: (iv_ruleSadlAnnotation= ruleSadlAnnotation EOF )
            // InternalDialogParser.g:365:2: iv_ruleSadlAnnotation= ruleSadlAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlAnnotation=ruleSadlAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlAnnotation"


    // $ANTLR start "ruleSadlAnnotation"
    // InternalDialogParser.g:371:1: ruleSadlAnnotation returns [EObject current=null] : ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis ) ;
    public final EObject ruleSadlAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_type_2_1=null;
        Token lv_type_2_2=null;
        Token lv_contents_3_0=null;
        Token otherlv_4=null;
        Token lv_contents_5_0=null;
        Token otherlv_6=null;


        	enterRule();

        try {
            // InternalDialogParser.g:377:2: ( ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis ) )
            // InternalDialogParser.g:378:2: ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis )
            {
            // InternalDialogParser.g:378:2: ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis )
            // InternalDialogParser.g:379:3: (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis
            {
            // InternalDialogParser.g:379:3: (otherlv_0= Comma )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==Comma) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // InternalDialogParser.g:380:4: otherlv_0= Comma
                    {
                    otherlv_0=(Token)match(input,Comma,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSadlAnnotationAccess().getCommaKeyword_0());
                      			
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSadlAnnotationAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalDialogParser.g:389:3: ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) )
            // InternalDialogParser.g:390:4: ( (lv_type_2_1= Alias | lv_type_2_2= Note ) )
            {
            // InternalDialogParser.g:390:4: ( (lv_type_2_1= Alias | lv_type_2_2= Note ) )
            // InternalDialogParser.g:391:5: (lv_type_2_1= Alias | lv_type_2_2= Note )
            {
            // InternalDialogParser.g:391:5: (lv_type_2_1= Alias | lv_type_2_2= Note )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==Alias) ) {
                alt8=1;
            }
            else if ( (LA8_0==Note) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalDialogParser.g:392:6: lv_type_2_1= Alias
                    {
                    lv_type_2_1=(Token)match(input,Alias,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_2_1, grammarAccess.getSadlAnnotationAccess().getTypeAliasKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlAnnotationRule());
                      						}
                      						setWithLastConsumed(current, "type", lv_type_2_1, null);
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:403:6: lv_type_2_2= Note
                    {
                    lv_type_2_2=(Token)match(input,Note,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_2_2, grammarAccess.getSadlAnnotationAccess().getTypeNoteKeyword_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlAnnotationRule());
                      						}
                      						setWithLastConsumed(current, "type", lv_type_2_2, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalDialogParser.g:416:3: ( (lv_contents_3_0= RULE_STRING ) )
            // InternalDialogParser.g:417:4: (lv_contents_3_0= RULE_STRING )
            {
            // InternalDialogParser.g:417:4: (lv_contents_3_0= RULE_STRING )
            // InternalDialogParser.g:418:5: lv_contents_3_0= RULE_STRING
            {
            lv_contents_3_0=(Token)match(input,RULE_STRING,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_contents_3_0, grammarAccess.getSadlAnnotationAccess().getContentsSTRINGTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"contents",
              						lv_contents_3_0,
              						"com.ge.research.sadl.SADL.STRING");
              				
            }

            }


            }

            // InternalDialogParser.g:434:3: (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )*
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( (LA9_0==Comma) ) {
                    alt9=1;
                }


                switch (alt9) {
            	case 1 :
            	    // InternalDialogParser.g:435:4: otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) )
            	    {
            	    otherlv_4=(Token)match(input,Comma,FOLLOW_7); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getSadlAnnotationAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalDialogParser.g:439:4: ( (lv_contents_5_0= RULE_STRING ) )
            	    // InternalDialogParser.g:440:5: (lv_contents_5_0= RULE_STRING )
            	    {
            	    // InternalDialogParser.g:440:5: (lv_contents_5_0= RULE_STRING )
            	    // InternalDialogParser.g:441:6: lv_contents_5_0= RULE_STRING
            	    {
            	    lv_contents_5_0=(Token)match(input,RULE_STRING,FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_contents_5_0, grammarAccess.getSadlAnnotationAccess().getContentsSTRINGTerminalRuleCall_4_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getSadlAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"contents",
            	      							lv_contents_5_0,
            	      							"com.ge.research.sadl.SADL.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getSadlAnnotationAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlAnnotation"


    // $ANTLR start "entryRuleSadlImport"
    // InternalDialogParser.g:466:1: entryRuleSadlImport returns [EObject current=null] : iv_ruleSadlImport= ruleSadlImport EOF ;
    public final EObject entryRuleSadlImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlImport = null;


        try {
            // InternalDialogParser.g:466:51: (iv_ruleSadlImport= ruleSadlImport EOF )
            // InternalDialogParser.g:467:2: iv_ruleSadlImport= ruleSadlImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlImport=ruleSadlImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlImport"


    // $ANTLR start "ruleSadlImport"
    // InternalDialogParser.g:473:1: ruleSadlImport returns [EObject current=null] : (otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS ) ;
    public final EObject ruleSadlImport() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_alias_3_0=null;


        	enterRule();

        try {
            // InternalDialogParser.g:479:2: ( (otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS ) )
            // InternalDialogParser.g:480:2: (otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS )
            {
            // InternalDialogParser.g:480:2: (otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS )
            // InternalDialogParser.g:481:3: otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS
            {
            otherlv_0=(Token)match(input,Import,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSadlImportAccess().getImportKeyword_0());
              		
            }
            // InternalDialogParser.g:485:3: ( (otherlv_1= RULE_STRING ) )
            // InternalDialogParser.g:486:4: (otherlv_1= RULE_STRING )
            {
            // InternalDialogParser.g:486:4: (otherlv_1= RULE_STRING )
            // InternalDialogParser.g:487:5: otherlv_1= RULE_STRING
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlImportRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_STRING,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getSadlImportAccess().getImportedResourceSadlModelCrossReference_1_0());
              				
            }

            }


            }

            // InternalDialogParser.g:498:3: (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==As) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalDialogParser.g:499:4: otherlv_2= As ( (lv_alias_3_0= RULE_ID ) )
                    {
                    otherlv_2=(Token)match(input,As,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSadlImportAccess().getAsKeyword_2_0());
                      			
                    }
                    // InternalDialogParser.g:503:4: ( (lv_alias_3_0= RULE_ID ) )
                    // InternalDialogParser.g:504:5: (lv_alias_3_0= RULE_ID )
                    {
                    // InternalDialogParser.g:504:5: (lv_alias_3_0= RULE_ID )
                    // InternalDialogParser.g:505:6: lv_alias_3_0= RULE_ID
                    {
                    lv_alias_3_0=(Token)match(input,RULE_ID,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_3_0, grammarAccess.getSadlImportAccess().getAliasIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlImportRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_3_0,
                      							"com.ge.research.sadl.SADL.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSadlImportAccess().getEOSParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            ruleEOS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlImport"


    // $ANTLR start "ruleEquationSignature"
    // InternalDialogParser.g:534:1: ruleEquationSignature[EObject in_current] returns [EObject current=in_current] : ( ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon ) ;
    public final EObject ruleEquationSignature(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_name_0_0 = null;

        EObject lv_parameter_2_0 = null;

        EObject lv_parameter_4_0 = null;

        EObject lv_returnType_7_0 = null;

        EObject lv_returnType_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:540:2: ( ( ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon ) )
            // InternalDialogParser.g:541:2: ( ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon )
            {
            // InternalDialogParser.g:541:2: ( ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon )
            // InternalDialogParser.g:542:3: ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon
            {
            // InternalDialogParser.g:542:3: ( (lv_name_0_0= ruleSadlResource ) )
            // InternalDialogParser.g:543:4: (lv_name_0_0= ruleSadlResource )
            {
            // InternalDialogParser.g:543:4: (lv_name_0_0= ruleSadlResource )
            // InternalDialogParser.g:544:5: lv_name_0_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEquationSignatureAccess().getNameSadlResourceParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_14);
            lv_name_0_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEquationSignatureAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalDialogParser.g:565:3: ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( ((LA12_0>=NonNegativeInteger && LA12_0<=Base64Binary)||LA12_0==UnsignedByte||LA12_0==UnsignedInt||LA12_0==GYearMonth||(LA12_0>=GMonthDay && LA12_0<=HexBinary)||LA12_0==DateTime||LA12_0==Duration||LA12_0==Boolean||LA12_0==Decimal||LA12_0==Integer||LA12_0==AnyURI||LA12_0==Double||LA12_0==GMonth||LA12_0==String||(LA12_0>=Float && LA12_0<=GYear)||LA12_0==Byte||LA12_0==Date||LA12_0==GDay||LA12_0==Long||LA12_0==Time||LA12_0==FullStopFullStopFullStop||LA12_0==Int||LA12_0==HyphenMinusHyphenMinus||LA12_0==LeftParenthesis||LA12_0==LeftCurlyBracket||(LA12_0>=RULE_ID && LA12_0<=RULE_QNAME_TERMINAL)) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalDialogParser.g:566:4: ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )*
                    {
                    // InternalDialogParser.g:566:4: ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) )
                    // InternalDialogParser.g:567:5: (lv_parameter_2_0= ruleSadlParameterDeclaration )
                    {
                    // InternalDialogParser.g:567:5: (lv_parameter_2_0= ruleSadlParameterDeclaration )
                    // InternalDialogParser.g:568:6: lv_parameter_2_0= ruleSadlParameterDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEquationSignatureAccess().getParameterSadlParameterDeclarationParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_parameter_2_0=ruleSadlParameterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
                      						}
                      						add(
                      							current,
                      							"parameter",
                      							lv_parameter_2_0,
                      							"com.ge.research.sadl.SADL.SadlParameterDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:585:4: (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )*
                    loop11:
                    do {
                        int alt11=2;
                        int LA11_0 = input.LA(1);

                        if ( (LA11_0==Comma) ) {
                            alt11=1;
                        }


                        switch (alt11) {
                    	case 1 :
                    	    // InternalDialogParser.g:586:5: otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getEquationSignatureAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:590:5: ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) )
                    	    // InternalDialogParser.g:591:6: (lv_parameter_4_0= ruleSadlParameterDeclaration )
                    	    {
                    	    // InternalDialogParser.g:591:6: (lv_parameter_4_0= ruleSadlParameterDeclaration )
                    	    // InternalDialogParser.g:592:7: lv_parameter_4_0= ruleSadlParameterDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getEquationSignatureAccess().getParameterSadlParameterDeclarationParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_parameter_4_0=ruleSadlParameterDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameter",
                    	      								lv_parameter_4_0,
                    	      								"com.ge.research.sadl.SADL.SadlParameterDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop11;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getEquationSignatureAccess().getRightParenthesisKeyword_3());
              		
            }
            otherlv_6=(Token)match(input,Returns,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getEquationSignatureAccess().getReturnsKeyword_4());
              		
            }
            // InternalDialogParser.g:619:3: ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* )
            // InternalDialogParser.g:620:4: ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )*
            {
            // InternalDialogParser.g:620:4: ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) )
            // InternalDialogParser.g:621:5: (lv_returnType_7_0= ruleSadlReturnDeclaration )
            {
            // InternalDialogParser.g:621:5: (lv_returnType_7_0= ruleSadlReturnDeclaration )
            // InternalDialogParser.g:622:6: lv_returnType_7_0= ruleSadlReturnDeclaration
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getEquationSignatureAccess().getReturnTypeSadlReturnDeclarationParserRuleCall_5_0_0());
              					
            }
            pushFollow(FOLLOW_22);
            lv_returnType_7_0=ruleSadlReturnDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
              						}
              						add(
              							current,
              							"returnType",
              							lv_returnType_7_0,
              							"com.ge.research.sadl.SADL.SadlReturnDeclaration");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalDialogParser.g:639:4: (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==Comma) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // InternalDialogParser.g:640:5: otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) )
            	    {
            	    otherlv_8=(Token)match(input,Comma,FOLLOW_21); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_8, grammarAccess.getEquationSignatureAccess().getCommaKeyword_5_1_0());
            	      				
            	    }
            	    // InternalDialogParser.g:644:5: ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) )
            	    // InternalDialogParser.g:645:6: (lv_returnType_9_0= ruleSadlReturnDeclaration )
            	    {
            	    // InternalDialogParser.g:645:6: (lv_returnType_9_0= ruleSadlReturnDeclaration )
            	    // InternalDialogParser.g:646:7: lv_returnType_9_0= ruleSadlReturnDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getEquationSignatureAccess().getReturnTypeSadlReturnDeclarationParserRuleCall_5_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_returnType_9_0=ruleSadlReturnDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
            	      							}
            	      							add(
            	      								current,
            	      								"returnType",
            	      								lv_returnType_9_0,
            	      								"com.ge.research.sadl.SADL.SadlReturnDeclaration");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            }

            otherlv_10=(Token)match(input,Colon,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getEquationSignatureAccess().getColonKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEquationSignature"


    // $ANTLR start "entryRuleSadlParameterDeclaration"
    // InternalDialogParser.g:673:1: entryRuleSadlParameterDeclaration returns [EObject current=null] : iv_ruleSadlParameterDeclaration= ruleSadlParameterDeclaration EOF ;
    public final EObject entryRuleSadlParameterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlParameterDeclaration = null;


        try {
            // InternalDialogParser.g:673:65: (iv_ruleSadlParameterDeclaration= ruleSadlParameterDeclaration EOF )
            // InternalDialogParser.g:674:2: iv_ruleSadlParameterDeclaration= ruleSadlParameterDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlParameterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlParameterDeclaration=ruleSadlParameterDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlParameterDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlParameterDeclaration"


    // $ANTLR start "ruleSadlParameterDeclaration"
    // InternalDialogParser.g:680:1: ruleSadlParameterDeclaration returns [EObject current=null] : ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) | ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) ) ) ;
    public final EObject ruleSadlParameterDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_unknown_2_0=null;
        Token lv_ellipsis_3_0=null;
        EObject lv_type_0_0 = null;

        EObject lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:686:2: ( ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) | ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) ) ) )
            // InternalDialogParser.g:687:2: ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) | ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) ) )
            {
            // InternalDialogParser.g:687:2: ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) | ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) ) )
            int alt14=3;
            switch ( input.LA(1) ) {
            case NonNegativeInteger:
            case NonPositiveInteger:
            case NegativeInteger:
            case PositiveInteger:
            case AnySimpleType:
            case Base64Binary:
            case UnsignedByte:
            case UnsignedInt:
            case GYearMonth:
            case GMonthDay:
            case HexBinary:
            case DateTime:
            case Duration:
            case Boolean:
            case Decimal:
            case Integer:
            case AnyURI:
            case Double:
            case GMonth:
            case String:
            case Float:
            case GYear:
            case Byte:
            case Date:
            case GDay:
            case Long:
            case Time:
            case Int:
            case LeftParenthesis:
            case LeftCurlyBracket:
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt14=1;
                }
                break;
            case HyphenMinusHyphenMinus:
                {
                alt14=2;
                }
                break;
            case FullStopFullStopFullStop:
                {
                alt14=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }

            switch (alt14) {
                case 1 :
                    // InternalDialogParser.g:688:3: ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) )
                    {
                    // InternalDialogParser.g:688:3: ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) )
                    // InternalDialogParser.g:689:4: ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) )
                    {
                    // InternalDialogParser.g:689:4: ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:690:5: (lv_type_0_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:690:5: (lv_type_0_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:691:6: lv_type_0_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlParameterDeclarationAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_23);
                    lv_type_0_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlParameterDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_0_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:708:4: ( (lv_name_1_0= ruleSadlResource ) )
                    // InternalDialogParser.g:709:5: (lv_name_1_0= ruleSadlResource )
                    {
                    // InternalDialogParser.g:709:5: (lv_name_1_0= ruleSadlResource )
                    // InternalDialogParser.g:710:6: lv_name_1_0= ruleSadlResource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlParameterDeclarationAccess().getNameSadlResourceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_1_0=ruleSadlResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlParameterDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"com.ge.research.sadl.SADL.SadlResource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:729:3: ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) )
                    {
                    // InternalDialogParser.g:729:3: ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) )
                    // InternalDialogParser.g:730:4: (lv_unknown_2_0= HyphenMinusHyphenMinus )
                    {
                    // InternalDialogParser.g:730:4: (lv_unknown_2_0= HyphenMinusHyphenMinus )
                    // InternalDialogParser.g:731:5: lv_unknown_2_0= HyphenMinusHyphenMinus
                    {
                    lv_unknown_2_0=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_unknown_2_0, grammarAccess.getSadlParameterDeclarationAccess().getUnknownHyphenMinusHyphenMinusKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlParameterDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "unknown", lv_unknown_2_0, "--");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:744:3: ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) )
                    {
                    // InternalDialogParser.g:744:3: ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) )
                    // InternalDialogParser.g:745:4: (lv_ellipsis_3_0= FullStopFullStopFullStop )
                    {
                    // InternalDialogParser.g:745:4: (lv_ellipsis_3_0= FullStopFullStopFullStop )
                    // InternalDialogParser.g:746:5: lv_ellipsis_3_0= FullStopFullStopFullStop
                    {
                    lv_ellipsis_3_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ellipsis_3_0, grammarAccess.getSadlParameterDeclarationAccess().getEllipsisFullStopFullStopFullStopKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlParameterDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "ellipsis", lv_ellipsis_3_0, "...");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlParameterDeclaration"


    // $ANTLR start "entryRuleSadlReturnDeclaration"
    // InternalDialogParser.g:762:1: entryRuleSadlReturnDeclaration returns [EObject current=null] : iv_ruleSadlReturnDeclaration= ruleSadlReturnDeclaration EOF ;
    public final EObject entryRuleSadlReturnDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlReturnDeclaration = null;


        try {
            // InternalDialogParser.g:762:62: (iv_ruleSadlReturnDeclaration= ruleSadlReturnDeclaration EOF )
            // InternalDialogParser.g:763:2: iv_ruleSadlReturnDeclaration= ruleSadlReturnDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlReturnDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlReturnDeclaration=ruleSadlReturnDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlReturnDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlReturnDeclaration"


    // $ANTLR start "ruleSadlReturnDeclaration"
    // InternalDialogParser.g:769:1: ruleSadlReturnDeclaration returns [EObject current=null] : ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) | ( (lv_none_1_0= None ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) ) ;
    public final EObject ruleSadlReturnDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_none_1_0=null;
        Token lv_unknown_2_0=null;
        EObject lv_type_0_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:775:2: ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) | ( (lv_none_1_0= None ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) ) )
            // InternalDialogParser.g:776:2: ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) | ( (lv_none_1_0= None ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) )
            {
            // InternalDialogParser.g:776:2: ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) | ( (lv_none_1_0= None ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) )
            int alt15=3;
            switch ( input.LA(1) ) {
            case NonNegativeInteger:
            case NonPositiveInteger:
            case NegativeInteger:
            case PositiveInteger:
            case AnySimpleType:
            case Base64Binary:
            case UnsignedByte:
            case UnsignedInt:
            case GYearMonth:
            case GMonthDay:
            case HexBinary:
            case DateTime:
            case Duration:
            case Boolean:
            case Decimal:
            case Integer:
            case AnyURI:
            case Double:
            case GMonth:
            case String:
            case Float:
            case GYear:
            case Byte:
            case Date:
            case GDay:
            case Long:
            case Time:
            case Int:
            case LeftParenthesis:
            case LeftCurlyBracket:
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt15=1;
                }
                break;
            case None:
                {
                alt15=2;
                }
                break;
            case HyphenMinusHyphenMinus:
                {
                alt15=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalDialogParser.g:777:3: ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) )
                    {
                    // InternalDialogParser.g:777:3: ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:778:4: (lv_type_0_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:778:4: (lv_type_0_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:779:5: lv_type_0_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSadlReturnDeclarationAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_0_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSadlReturnDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_0_0,
                      						"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:797:3: ( (lv_none_1_0= None ) )
                    {
                    // InternalDialogParser.g:797:3: ( (lv_none_1_0= None ) )
                    // InternalDialogParser.g:798:4: (lv_none_1_0= None )
                    {
                    // InternalDialogParser.g:798:4: (lv_none_1_0= None )
                    // InternalDialogParser.g:799:5: lv_none_1_0= None
                    {
                    lv_none_1_0=(Token)match(input,None,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_none_1_0, grammarAccess.getSadlReturnDeclarationAccess().getNoneNoneKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlReturnDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "none", lv_none_1_0, "None");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:812:3: ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) )
                    {
                    // InternalDialogParser.g:812:3: ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) )
                    // InternalDialogParser.g:813:4: (lv_unknown_2_0= HyphenMinusHyphenMinus )
                    {
                    // InternalDialogParser.g:813:4: (lv_unknown_2_0= HyphenMinusHyphenMinus )
                    // InternalDialogParser.g:814:5: lv_unknown_2_0= HyphenMinusHyphenMinus
                    {
                    lv_unknown_2_0=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_unknown_2_0, grammarAccess.getSadlReturnDeclarationAccess().getUnknownHyphenMinusHyphenMinusKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlReturnDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "unknown", lv_unknown_2_0, "--");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlReturnDeclaration"


    // $ANTLR start "entryRuleSadlPropertyCondition"
    // InternalDialogParser.g:830:1: entryRuleSadlPropertyCondition returns [EObject current=null] : iv_ruleSadlPropertyCondition= ruleSadlPropertyCondition EOF ;
    public final EObject entryRuleSadlPropertyCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPropertyCondition = null;


        try {
            // InternalDialogParser.g:830:62: (iv_ruleSadlPropertyCondition= ruleSadlPropertyCondition EOF )
            // InternalDialogParser.g:831:2: iv_ruleSadlPropertyCondition= ruleSadlPropertyCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPropertyConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPropertyCondition=ruleSadlPropertyCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPropertyCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPropertyCondition"


    // $ANTLR start "ruleSadlPropertyCondition"
    // InternalDialogParser.g:837:1: ruleSadlPropertyCondition returns [EObject current=null] : ( ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) ) ) ;
    public final EObject ruleSadlPropertyCondition() throws RecognitionException {
        EObject current = null;

        EObject lv_cond_1_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:843:2: ( ( ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) ) ) )
            // InternalDialogParser.g:844:2: ( ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) ) )
            {
            // InternalDialogParser.g:844:2: ( ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) ) )
            // InternalDialogParser.g:845:3: ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) )
            {
            // InternalDialogParser.g:845:3: ( ( ruleQNAME ) )
            // InternalDialogParser.g:846:4: ( ruleQNAME )
            {
            // InternalDialogParser.g:846:4: ( ruleQNAME )
            // InternalDialogParser.g:847:5: ruleQNAME
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlPropertyConditionRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlPropertyConditionAccess().getPropertySadlResourceCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_24);
            ruleQNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:861:3: ( (lv_cond_1_0= ruleSadlCondition ) )
            // InternalDialogParser.g:862:4: (lv_cond_1_0= ruleSadlCondition )
            {
            // InternalDialogParser.g:862:4: (lv_cond_1_0= ruleSadlCondition )
            // InternalDialogParser.g:863:5: lv_cond_1_0= ruleSadlCondition
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlPropertyConditionAccess().getCondSadlConditionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_cond_1_0=ruleSadlCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSadlPropertyConditionRule());
              					}
              					add(
              						current,
              						"cond",
              						lv_cond_1_0,
              						"com.ge.research.sadl.SADL.SadlCondition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPropertyCondition"


    // $ANTLR start "entryRuleSadlPropertyInitializer"
    // InternalDialogParser.g:884:1: entryRuleSadlPropertyInitializer returns [EObject current=null] : iv_ruleSadlPropertyInitializer= ruleSadlPropertyInitializer EOF ;
    public final EObject entryRuleSadlPropertyInitializer() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPropertyInitializer = null;


        try {
            // InternalDialogParser.g:884:64: (iv_ruleSadlPropertyInitializer= ruleSadlPropertyInitializer EOF )
            // InternalDialogParser.g:885:2: iv_ruleSadlPropertyInitializer= ruleSadlPropertyInitializer EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPropertyInitializerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPropertyInitializer=ruleSadlPropertyInitializer();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPropertyInitializer; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPropertyInitializer"


    // $ANTLR start "ruleSadlPropertyInitializer"
    // InternalDialogParser.g:891:1: ruleSadlPropertyInitializer returns [EObject current=null] : ( ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) | ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) ) | ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) ) ) ;
    public final EObject ruleSadlPropertyInitializer() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        EObject lv_value_4_0 = null;

        EObject lv_value_6_0 = null;

        EObject lv_value_17_0 = null;

        EObject lv_value_19_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:897:2: ( ( ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) | ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) ) | ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) ) ) )
            // InternalDialogParser.g:898:2: ( ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) | ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) ) | ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) ) )
            {
            // InternalDialogParser.g:898:2: ( ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) | ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) ) | ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) ) )
            int alt22=3;
            switch ( input.LA(1) ) {
            case Comma:
                {
                switch ( input.LA(2) ) {
                case Is:
                    {
                    alt22=2;
                    }
                    break;
                case With:
                case Has:
                case RULE_ID:
                case RULE_QNAME_TERMINAL:
                    {
                    alt22=1;
                    }
                    break;
                case Of:
                    {
                    alt22=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 22, 1, input);

                    throw nvae;
                }

                }
                break;
            case With:
            case Has:
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt22=1;
                }
                break;
            case Is:
                {
                alt22=2;
                }
                break;
            case Of:
                {
                alt22=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalDialogParser.g:899:3: ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) )
                    {
                    // InternalDialogParser.g:899:3: ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) )
                    // InternalDialogParser.g:900:4: (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) )
                    {
                    // InternalDialogParser.g:900:4: (otherlv_0= Comma )?
                    int alt16=2;
                    int LA16_0 = input.LA(1);

                    if ( (LA16_0==Comma) ) {
                        alt16=1;
                    }
                    switch (alt16) {
                        case 1 :
                            // InternalDialogParser.g:901:5: otherlv_0= Comma
                            {
                            otherlv_0=(Token)match(input,Comma,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_0, grammarAccess.getSadlPropertyInitializerAccess().getCommaKeyword_0_0());
                              				
                            }

                            }
                            break;

                    }

                    // InternalDialogParser.g:906:4: (otherlv_1= With | otherlv_2= Has )?
                    int alt17=3;
                    int LA17_0 = input.LA(1);

                    if ( (LA17_0==With) ) {
                        alt17=1;
                    }
                    else if ( (LA17_0==Has) ) {
                        alt17=2;
                    }
                    switch (alt17) {
                        case 1 :
                            // InternalDialogParser.g:907:5: otherlv_1= With
                            {
                            otherlv_1=(Token)match(input,With,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getSadlPropertyInitializerAccess().getWithKeyword_0_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:912:5: otherlv_2= Has
                            {
                            otherlv_2=(Token)match(input,Has,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getSadlPropertyInitializerAccess().getHasKeyword_0_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalDialogParser.g:917:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:918:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:918:5: ( ruleQNAME )
                    // InternalDialogParser.g:919:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getPropertySadlResourceCrossReference_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_26);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:933:4: ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) )
                    int alt18=2;
                    int LA18_0 = input.LA(1);

                    if ( (LA18_0==False||LA18_0==Known||LA18_0==True||LA18_0==Not||LA18_0==PI||LA18_0==HyphenMinus||LA18_0==LeftSquareBracket||LA18_0==E_1||LA18_0==RULE_NUMBER||(LA18_0>=RULE_ID && LA18_0<=RULE_STRING)) ) {
                        alt18=1;
                    }
                    else if ( (LA18_0==LeftParenthesis) ) {
                        alt18=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 18, 0, input);

                        throw nvae;
                    }
                    switch (alt18) {
                        case 1 :
                            // InternalDialogParser.g:934:5: ( (lv_value_4_0= ruleSadlExplicitValue ) )
                            {
                            // InternalDialogParser.g:934:5: ( (lv_value_4_0= ruleSadlExplicitValue ) )
                            // InternalDialogParser.g:935:6: (lv_value_4_0= ruleSadlExplicitValue )
                            {
                            // InternalDialogParser.g:935:6: (lv_value_4_0= ruleSadlExplicitValue )
                            // InternalDialogParser.g:936:7: lv_value_4_0= ruleSadlExplicitValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlExplicitValueParserRuleCall_0_3_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_value_4_0=ruleSadlExplicitValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_4_0,
                              								"com.ge.research.sadl.SADL.SadlExplicitValue");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:954:5: (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis )
                            {
                            // InternalDialogParser.g:954:5: (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis )
                            // InternalDialogParser.g:955:6: otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis
                            {
                            otherlv_5=(Token)match(input,LeftParenthesis,FOLLOW_27); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getSadlPropertyInitializerAccess().getLeftParenthesisKeyword_0_3_1_0());
                              					
                            }
                            // InternalDialogParser.g:959:6: ( (lv_value_6_0= ruleSadlNestedInstance ) )
                            // InternalDialogParser.g:960:7: (lv_value_6_0= ruleSadlNestedInstance )
                            {
                            // InternalDialogParser.g:960:7: (lv_value_6_0= ruleSadlNestedInstance )
                            // InternalDialogParser.g:961:8: lv_value_6_0= ruleSadlNestedInstance
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlNestedInstanceParserRuleCall_0_3_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_28);
                            lv_value_6_0=ruleSadlNestedInstance();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
                              								}
                              								set(
                              									current,
                              									"value",
                              									lv_value_6_0,
                              									"com.ge.research.sadl.SADL.SadlNestedInstance");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_7=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getSadlPropertyInitializerAccess().getRightParenthesisKeyword_0_3_1_2());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:986:3: ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) )
                    {
                    // InternalDialogParser.g:986:3: ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) )
                    // InternalDialogParser.g:987:4: (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) )
                    {
                    // InternalDialogParser.g:987:4: (otherlv_8= Comma )?
                    int alt19=2;
                    int LA19_0 = input.LA(1);

                    if ( (LA19_0==Comma) ) {
                        alt19=1;
                    }
                    switch (alt19) {
                        case 1 :
                            // InternalDialogParser.g:988:5: otherlv_8= Comma
                            {
                            otherlv_8=(Token)match(input,Comma,FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getSadlPropertyInitializerAccess().getCommaKeyword_1_0());
                              				
                            }

                            }
                            break;

                    }

                    otherlv_9=(Token)match(input,Is,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSadlPropertyInitializerAccess().getIsKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:997:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:998:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:998:5: ( ruleQNAME )
                    // InternalDialogParser.g:999:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getPropertySadlResourceCrossReference_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,Of,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getSadlPropertyInitializerAccess().getOfKeyword_1_3());
                      			
                    }
                    // InternalDialogParser.g:1017:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:1018:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:1018:5: ( ruleQNAME )
                    // InternalDialogParser.g:1019:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getTypeSadlResourceCrossReference_1_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:1035:3: ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) )
                    {
                    // InternalDialogParser.g:1035:3: ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) )
                    // InternalDialogParser.g:1036:4: (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) )
                    {
                    // InternalDialogParser.g:1036:4: (otherlv_13= Comma )?
                    int alt20=2;
                    int LA20_0 = input.LA(1);

                    if ( (LA20_0==Comma) ) {
                        alt20=1;
                    }
                    switch (alt20) {
                        case 1 :
                            // InternalDialogParser.g:1037:5: otherlv_13= Comma
                            {
                            otherlv_13=(Token)match(input,Comma,FOLLOW_29); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_13, grammarAccess.getSadlPropertyInitializerAccess().getCommaKeyword_2_0());
                              				
                            }

                            }
                            break;

                    }

                    otherlv_14=(Token)match(input,Of,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getSadlPropertyInitializerAccess().getOfKeyword_2_1());
                      			
                    }
                    // InternalDialogParser.g:1046:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:1047:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:1047:5: ( ruleQNAME )
                    // InternalDialogParser.g:1048:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getPropertySadlResourceCrossReference_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_16=(Token)match(input,Is,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getSadlPropertyInitializerAccess().getIsKeyword_2_3());
                      			
                    }
                    // InternalDialogParser.g:1066:4: ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) )
                    int alt21=2;
                    int LA21_0 = input.LA(1);

                    if ( (LA21_0==False||LA21_0==Known||LA21_0==True||LA21_0==Not||LA21_0==PI||LA21_0==HyphenMinus||LA21_0==LeftSquareBracket||LA21_0==E_1||LA21_0==RULE_NUMBER||(LA21_0>=RULE_ID && LA21_0<=RULE_STRING)) ) {
                        alt21=1;
                    }
                    else if ( (LA21_0==LeftParenthesis) ) {
                        alt21=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 21, 0, input);

                        throw nvae;
                    }
                    switch (alt21) {
                        case 1 :
                            // InternalDialogParser.g:1067:5: ( (lv_value_17_0= ruleSadlExplicitValue ) )
                            {
                            // InternalDialogParser.g:1067:5: ( (lv_value_17_0= ruleSadlExplicitValue ) )
                            // InternalDialogParser.g:1068:6: (lv_value_17_0= ruleSadlExplicitValue )
                            {
                            // InternalDialogParser.g:1068:6: (lv_value_17_0= ruleSadlExplicitValue )
                            // InternalDialogParser.g:1069:7: lv_value_17_0= ruleSadlExplicitValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlExplicitValueParserRuleCall_2_4_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_value_17_0=ruleSadlExplicitValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_17_0,
                              								"com.ge.research.sadl.SADL.SadlExplicitValue");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:1087:5: (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis )
                            {
                            // InternalDialogParser.g:1087:5: (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis )
                            // InternalDialogParser.g:1088:6: otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis
                            {
                            otherlv_18=(Token)match(input,LeftParenthesis,FOLLOW_27); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_18, grammarAccess.getSadlPropertyInitializerAccess().getLeftParenthesisKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:1092:6: ( (lv_value_19_0= ruleSadlNestedInstance ) )
                            // InternalDialogParser.g:1093:7: (lv_value_19_0= ruleSadlNestedInstance )
                            {
                            // InternalDialogParser.g:1093:7: (lv_value_19_0= ruleSadlNestedInstance )
                            // InternalDialogParser.g:1094:8: lv_value_19_0= ruleSadlNestedInstance
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlNestedInstanceParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_28);
                            lv_value_19_0=ruleSadlNestedInstance();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
                              								}
                              								set(
                              									current,
                              									"value",
                              									lv_value_19_0,
                              									"com.ge.research.sadl.SADL.SadlNestedInstance");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_20=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_20, grammarAccess.getSadlPropertyInitializerAccess().getRightParenthesisKeyword_2_4_1_2());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPropertyInitializer"


    // $ANTLR start "entryRuleSadlNestedInstance"
    // InternalDialogParser.g:1122:1: entryRuleSadlNestedInstance returns [EObject current=null] : iv_ruleSadlNestedInstance= ruleSadlNestedInstance EOF ;
    public final EObject entryRuleSadlNestedInstance() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlNestedInstance = null;


        try {
            // InternalDialogParser.g:1122:59: (iv_ruleSadlNestedInstance= ruleSadlNestedInstance EOF )
            // InternalDialogParser.g:1123:2: iv_ruleSadlNestedInstance= ruleSadlNestedInstance EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlNestedInstanceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlNestedInstance=ruleSadlNestedInstance();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlNestedInstance; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlNestedInstance"


    // $ANTLR start "ruleSadlNestedInstance"
    // InternalDialogParser.g:1129:1: ruleSadlNestedInstance returns [EObject current=null] : ( () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) ) ) ;
    public final EObject ruleSadlNestedInstance() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_instance_1_0 = null;

        AntlrDatatypeRuleToken lv_article_3_0 = null;

        EObject lv_type_4_0 = null;

        EObject lv_propertyInitializers_5_0 = null;

        AntlrDatatypeRuleToken lv_article_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_instance_8_0 = null;

        EObject lv_propertyInitializers_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1135:2: ( ( () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) ) ) )
            // InternalDialogParser.g:1136:2: ( () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) ) )
            {
            // InternalDialogParser.g:1136:2: ( () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) ) )
            // InternalDialogParser.g:1137:3: () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) )
            {
            // InternalDialogParser.g:1137:3: ()
            // InternalDialogParser.g:1138:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSadlNestedInstanceAccess().getSadlNestedInstanceAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:1144:3: ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( ((LA26_0>=RULE_ID && LA26_0<=RULE_QNAME_TERMINAL)) ) {
                alt26=1;
            }
            else if ( (LA26_0==Another||LA26_0==Some||LA26_0==The||LA26_0==Any||LA26_0==The_1||LA26_0==An||LA26_0==An_1||LA26_0==A||LA26_0==A_1) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalDialogParser.g:1145:4: ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* )
                    {
                    // InternalDialogParser.g:1145:4: ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* )
                    // InternalDialogParser.g:1146:5: ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )*
                    {
                    // InternalDialogParser.g:1146:5: ( (lv_instance_1_0= ruleSadlResource ) )
                    // InternalDialogParser.g:1147:6: (lv_instance_1_0= ruleSadlResource )
                    {
                    // InternalDialogParser.g:1147:6: (lv_instance_1_0= ruleSadlResource )
                    // InternalDialogParser.g:1148:7: lv_instance_1_0= ruleSadlResource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getInstanceSadlResourceParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_4);
                    lv_instance_1_0=ruleSadlResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"instance",
                      								lv_instance_1_0,
                      								"com.ge.research.sadl.SADL.SadlResource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,Is,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getSadlNestedInstanceAccess().getIsKeyword_1_0_1());
                      				
                    }
                    // InternalDialogParser.g:1169:5: ( (lv_article_3_0= ruleAnArticle ) )
                    // InternalDialogParser.g:1170:6: (lv_article_3_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:1170:6: (lv_article_3_0= ruleAnArticle )
                    // InternalDialogParser.g:1171:7: lv_article_3_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getArticleAnArticleParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_5);
                    lv_article_3_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"article",
                      								lv_article_3_0,
                      								"com.ge.research.sadl.SADL.AnArticle");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:1188:5: ( (lv_type_4_0= ruleSadlTypeReference ) )
                    // InternalDialogParser.g:1189:6: (lv_type_4_0= ruleSadlTypeReference )
                    {
                    // InternalDialogParser.g:1189:6: (lv_type_4_0= ruleSadlTypeReference )
                    // InternalDialogParser.g:1190:7: lv_type_4_0= ruleSadlTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getTypeSadlTypeReferenceParserRuleCall_1_0_3_0());
                      						
                    }
                    pushFollow(FOLLOW_31);
                    lv_type_4_0=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_4_0,
                      								"com.ge.research.sadl.SADL.SadlTypeReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:1207:5: ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )*
                    loop23:
                    do {
                        int alt23=2;
                        int LA23_0 = input.LA(1);

                        if ( (LA23_0==With||LA23_0==Has||(LA23_0>=Is && LA23_0<=Of)||LA23_0==Comma||(LA23_0>=RULE_ID && LA23_0<=RULE_QNAME_TERMINAL)) ) {
                            alt23=1;
                        }


                        switch (alt23) {
                    	case 1 :
                    	    // InternalDialogParser.g:1208:6: (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer )
                    	    {
                    	    // InternalDialogParser.g:1208:6: (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer )
                    	    // InternalDialogParser.g:1209:7: lv_propertyInitializers_5_0= ruleSadlPropertyInitializer
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getPropertyInitializersSadlPropertyInitializerParserRuleCall_1_0_4_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_31);
                    	    lv_propertyInitializers_5_0=ruleSadlPropertyInitializer();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"propertyInitializers",
                    	      								lv_propertyInitializers_5_0,
                    	      								"com.ge.research.sadl.SADL.SadlPropertyInitializer");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop23;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:1228:4: ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* )
                    {
                    // InternalDialogParser.g:1228:4: ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* )
                    // InternalDialogParser.g:1229:5: ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )*
                    {
                    // InternalDialogParser.g:1229:5: ( (lv_article_6_0= ruleAnArticle ) )
                    // InternalDialogParser.g:1230:6: (lv_article_6_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:1230:6: (lv_article_6_0= ruleAnArticle )
                    // InternalDialogParser.g:1231:7: lv_article_6_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getArticleAnArticleParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_5);
                    lv_article_6_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"article",
                      								lv_article_6_0,
                      								"com.ge.research.sadl.SADL.AnArticle");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:1248:5: ( (lv_type_7_0= ruleSadlTypeReference ) )
                    // InternalDialogParser.g:1249:6: (lv_type_7_0= ruleSadlTypeReference )
                    {
                    // InternalDialogParser.g:1249:6: (lv_type_7_0= ruleSadlTypeReference )
                    // InternalDialogParser.g:1250:7: lv_type_7_0= ruleSadlTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getTypeSadlTypeReferenceParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_31);
                    lv_type_7_0=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_7_0,
                      								"com.ge.research.sadl.SADL.SadlTypeReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:1267:5: ( (lv_instance_8_0= ruleSadlResource ) )?
                    int alt24=2;
                    alt24 = dfa24.predict(input);
                    switch (alt24) {
                        case 1 :
                            // InternalDialogParser.g:1268:6: (lv_instance_8_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:1268:6: (lv_instance_8_0= ruleSadlResource )
                            // InternalDialogParser.g:1269:7: lv_instance_8_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getInstanceSadlResourceParserRuleCall_1_1_2_0());
                              						
                            }
                            pushFollow(FOLLOW_31);
                            lv_instance_8_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                              							}
                              							set(
                              								current,
                              								"instance",
                              								lv_instance_8_0,
                              								"com.ge.research.sadl.SADL.SadlResource");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:1286:5: ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )*
                    loop25:
                    do {
                        int alt25=2;
                        int LA25_0 = input.LA(1);

                        if ( (LA25_0==With||LA25_0==Has||(LA25_0>=Is && LA25_0<=Of)||LA25_0==Comma||(LA25_0>=RULE_ID && LA25_0<=RULE_QNAME_TERMINAL)) ) {
                            alt25=1;
                        }


                        switch (alt25) {
                    	case 1 :
                    	    // InternalDialogParser.g:1287:6: (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer )
                    	    {
                    	    // InternalDialogParser.g:1287:6: (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer )
                    	    // InternalDialogParser.g:1288:7: lv_propertyInitializers_9_0= ruleSadlPropertyInitializer
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getPropertyInitializersSadlPropertyInitializerParserRuleCall_1_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_31);
                    	    lv_propertyInitializers_9_0=ruleSadlPropertyInitializer();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"propertyInitializers",
                    	      								lv_propertyInitializers_9_0,
                    	      								"com.ge.research.sadl.SADL.SadlPropertyInitializer");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop25;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlNestedInstance"


    // $ANTLR start "entryRuleSadlResource"
    // InternalDialogParser.g:1311:1: entryRuleSadlResource returns [EObject current=null] : iv_ruleSadlResource= ruleSadlResource EOF ;
    public final EObject entryRuleSadlResource() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlResource = null;


        try {
            // InternalDialogParser.g:1311:53: (iv_ruleSadlResource= ruleSadlResource EOF )
            // InternalDialogParser.g:1312:2: iv_ruleSadlResource= ruleSadlResource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlResourceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlResource=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlResource; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlResource"


    // $ANTLR start "ruleSadlResource"
    // InternalDialogParser.g:1318:1: ruleSadlResource returns [EObject current=null] : ( ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )* ) ;
    public final EObject ruleSadlResource() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_1_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1324:2: ( ( ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )* ) )
            // InternalDialogParser.g:1325:2: ( ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )* )
            {
            // InternalDialogParser.g:1325:2: ( ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )* )
            // InternalDialogParser.g:1326:3: ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )*
            {
            // InternalDialogParser.g:1326:3: ( ( ruleQNAME ) )
            // InternalDialogParser.g:1327:4: ( ruleQNAME )
            {
            // InternalDialogParser.g:1327:4: ( ruleQNAME )
            // InternalDialogParser.g:1328:5: ruleQNAME
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlResourceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlResourceAccess().getNameSadlResourceCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_32);
            ruleQNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:1342:3: ( (lv_annotations_1_0= ruleSadlAnnotation ) )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==LeftParenthesis) ) {
                    int LA27_1 = input.LA(2);

                    if ( (LA27_1==Alias||LA27_1==Note) ) {
                        alt27=1;
                    }


                }
                else if ( (LA27_0==Comma) ) {
                    int LA27_2 = input.LA(2);

                    if ( (LA27_2==LeftParenthesis) ) {
                        int LA27_5 = input.LA(3);

                        if ( (LA27_5==Alias||LA27_5==Note) ) {
                            alt27=1;
                        }


                    }


                }


                switch (alt27) {
            	case 1 :
            	    // InternalDialogParser.g:1343:4: (lv_annotations_1_0= ruleSadlAnnotation )
            	    {
            	    // InternalDialogParser.g:1343:4: (lv_annotations_1_0= ruleSadlAnnotation )
            	    // InternalDialogParser.g:1344:5: lv_annotations_1_0= ruleSadlAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlResourceAccess().getAnnotationsSadlAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_32);
            	    lv_annotations_1_0=ruleSadlAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlResourceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"com.ge.research.sadl.SADL.SadlAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlResource"


    // $ANTLR start "entryRuleSadlDataTypeFacet"
    // InternalDialogParser.g:1365:1: entryRuleSadlDataTypeFacet returns [EObject current=null] : iv_ruleSadlDataTypeFacet= ruleSadlDataTypeFacet EOF ;
    public final EObject entryRuleSadlDataTypeFacet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlDataTypeFacet = null;


        try {
            // InternalDialogParser.g:1365:58: (iv_ruleSadlDataTypeFacet= ruleSadlDataTypeFacet EOF )
            // InternalDialogParser.g:1366:2: iv_ruleSadlDataTypeFacet= ruleSadlDataTypeFacet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlDataTypeFacetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlDataTypeFacet=ruleSadlDataTypeFacet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlDataTypeFacet; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlDataTypeFacet"


    // $ANTLR start "ruleSadlDataTypeFacet"
    // InternalDialogParser.g:1372:1: ruleSadlDataTypeFacet returns [EObject current=null] : ( ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) ) | ( (lv_regex_8_0= RULE_STRING ) ) | (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) ) | (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket ) ) ;
    public final EObject ruleSadlDataTypeFacet() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_minInclusive_2_0=null;
        Token otherlv_4=null;
        Token lv_maxInclusive_6_0=null;
        Token otherlv_7=null;
        Token lv_regex_8_0=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        Token lv_maxlen_13_2=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        AntlrDatatypeRuleToken lv_min_3_0 = null;

        AntlrDatatypeRuleToken lv_max_5_0 = null;

        AntlrDatatypeRuleToken lv_len_10_0 = null;

        AntlrDatatypeRuleToken lv_minlen_11_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_13_1 = null;

        AntlrDatatypeRuleToken lv_values_15_0 = null;

        AntlrDatatypeRuleToken lv_values_17_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1378:2: ( ( ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) ) | ( (lv_regex_8_0= RULE_STRING ) ) | (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) ) | (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket ) ) )
            // InternalDialogParser.g:1379:2: ( ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) ) | ( (lv_regex_8_0= RULE_STRING ) ) | (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) ) | (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket ) )
            {
            // InternalDialogParser.g:1379:2: ( ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) ) | ( (lv_regex_8_0= RULE_STRING ) ) | (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) ) | (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket ) )
            int alt36=4;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
            case LeftSquareBracket:
                {
                alt36=1;
                }
                break;
            case RULE_STRING:
                {
                alt36=2;
                }
                break;
            case Length:
                {
                alt36=3;
                }
                break;
            case LeftCurlyBracket:
                {
                alt36=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }

            switch (alt36) {
                case 1 :
                    // InternalDialogParser.g:1380:3: ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) )
                    {
                    // InternalDialogParser.g:1380:3: ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) )
                    // InternalDialogParser.g:1381:4: () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis )
                    {
                    // InternalDialogParser.g:1381:4: ()
                    // InternalDialogParser.g:1382:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlDataTypeFacetAccess().getSadlDataTypeFacetAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:1388:4: (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) )
                    int alt28=2;
                    int LA28_0 = input.LA(1);

                    if ( (LA28_0==LeftParenthesis) ) {
                        alt28=1;
                    }
                    else if ( (LA28_0==LeftSquareBracket) ) {
                        alt28=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 28, 0, input);

                        throw nvae;
                    }
                    switch (alt28) {
                        case 1 :
                            // InternalDialogParser.g:1389:5: otherlv_1= LeftParenthesis
                            {
                            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getSadlDataTypeFacetAccess().getLeftParenthesisKeyword_0_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:1394:5: ( (lv_minInclusive_2_0= LeftSquareBracket ) )
                            {
                            // InternalDialogParser.g:1394:5: ( (lv_minInclusive_2_0= LeftSquareBracket ) )
                            // InternalDialogParser.g:1395:6: (lv_minInclusive_2_0= LeftSquareBracket )
                            {
                            // InternalDialogParser.g:1395:6: (lv_minInclusive_2_0= LeftSquareBracket )
                            // InternalDialogParser.g:1396:7: lv_minInclusive_2_0= LeftSquareBracket
                            {
                            lv_minInclusive_2_0=(Token)match(input,LeftSquareBracket,FOLLOW_33); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_minInclusive_2_0, grammarAccess.getSadlDataTypeFacetAccess().getMinInclusiveLeftSquareBracketKeyword_0_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
                              							}
                              							setWithLastConsumed(current, "minInclusive", true, "[");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:1409:4: ( (lv_min_3_0= ruleFacetNumber ) )?
                    int alt29=2;
                    int LA29_0 = input.LA(1);

                    if ( (LA29_0==HyphenMinus||LA29_0==RULE_NUMBER) ) {
                        alt29=1;
                    }
                    switch (alt29) {
                        case 1 :
                            // InternalDialogParser.g:1410:5: (lv_min_3_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:1410:5: (lv_min_3_0= ruleFacetNumber )
                            // InternalDialogParser.g:1411:6: lv_min_3_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMinFacetNumberParserRuleCall_0_2_0());
                              					
                            }
                            pushFollow(FOLLOW_34);
                            lv_min_3_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                              						}
                              						set(
                              							current,
                              							"min",
                              							lv_min_3_0,
                              							"com.ge.research.sadl.SADL.FacetNumber");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,Comma,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSadlDataTypeFacetAccess().getCommaKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:1432:4: ( (lv_max_5_0= ruleFacetNumber ) )?
                    int alt30=2;
                    int LA30_0 = input.LA(1);

                    if ( (LA30_0==HyphenMinus||LA30_0==RULE_NUMBER) ) {
                        alt30=1;
                    }
                    switch (alt30) {
                        case 1 :
                            // InternalDialogParser.g:1433:5: (lv_max_5_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:1433:5: (lv_max_5_0= ruleFacetNumber )
                            // InternalDialogParser.g:1434:6: lv_max_5_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMaxFacetNumberParserRuleCall_0_4_0());
                              					
                            }
                            pushFollow(FOLLOW_36);
                            lv_max_5_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                              						}
                              						set(
                              							current,
                              							"max",
                              							lv_max_5_0,
                              							"com.ge.research.sadl.SADL.FacetNumber");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:1451:4: ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis )
                    int alt31=2;
                    int LA31_0 = input.LA(1);

                    if ( (LA31_0==RightSquareBracket) ) {
                        alt31=1;
                    }
                    else if ( (LA31_0==RightParenthesis) ) {
                        alt31=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 31, 0, input);

                        throw nvae;
                    }
                    switch (alt31) {
                        case 1 :
                            // InternalDialogParser.g:1452:5: ( (lv_maxInclusive_6_0= RightSquareBracket ) )
                            {
                            // InternalDialogParser.g:1452:5: ( (lv_maxInclusive_6_0= RightSquareBracket ) )
                            // InternalDialogParser.g:1453:6: (lv_maxInclusive_6_0= RightSquareBracket )
                            {
                            // InternalDialogParser.g:1453:6: (lv_maxInclusive_6_0= RightSquareBracket )
                            // InternalDialogParser.g:1454:7: lv_maxInclusive_6_0= RightSquareBracket
                            {
                            lv_maxInclusive_6_0=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_maxInclusive_6_0, grammarAccess.getSadlDataTypeFacetAccess().getMaxInclusiveRightSquareBracketKeyword_0_5_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
                              							}
                              							setWithLastConsumed(current, "maxInclusive", true, "]");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:1467:5: otherlv_7= RightParenthesis
                            {
                            otherlv_7=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getSadlDataTypeFacetAccess().getRightParenthesisKeyword_0_5_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:1474:3: ( (lv_regex_8_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:1474:3: ( (lv_regex_8_0= RULE_STRING ) )
                    // InternalDialogParser.g:1475:4: (lv_regex_8_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:1475:4: (lv_regex_8_0= RULE_STRING )
                    // InternalDialogParser.g:1476:5: lv_regex_8_0= RULE_STRING
                    {
                    lv_regex_8_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_regex_8_0, grammarAccess.getSadlDataTypeFacetAccess().getRegexSTRINGTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"regex",
                      						lv_regex_8_0,
                      						"com.ge.research.sadl.SADL.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:1493:3: (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) )
                    {
                    // InternalDialogParser.g:1493:3: (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) )
                    // InternalDialogParser.g:1494:4: otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) )
                    {
                    otherlv_9=(Token)match(input,Length,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSadlDataTypeFacetAccess().getLengthKeyword_2_0());
                      			
                    }
                    // InternalDialogParser.g:1498:4: ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) )
                    int alt33=2;
                    alt33 = dfa33.predict(input);
                    switch (alt33) {
                        case 1 :
                            // InternalDialogParser.g:1499:5: ( (lv_len_10_0= ruleFacetNumber ) )
                            {
                            // InternalDialogParser.g:1499:5: ( (lv_len_10_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:1500:6: (lv_len_10_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:1500:6: (lv_len_10_0= ruleFacetNumber )
                            // InternalDialogParser.g:1501:7: lv_len_10_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getLenFacetNumberParserRuleCall_2_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_len_10_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                              							}
                              							set(
                              								current,
                              								"len",
                              								lv_len_10_0,
                              								"com.ge.research.sadl.SADL.FacetNumber");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:1519:5: ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) )
                            {
                            // InternalDialogParser.g:1519:5: ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) )
                            // InternalDialogParser.g:1520:6: ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) )
                            {
                            // InternalDialogParser.g:1520:6: ( (lv_minlen_11_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:1521:7: (lv_minlen_11_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:1521:7: (lv_minlen_11_0= ruleFacetNumber )
                            // InternalDialogParser.g:1522:8: lv_minlen_11_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMinlenFacetNumberParserRuleCall_2_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_38);
                            lv_minlen_11_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                              								}
                              								set(
                              									current,
                              									"minlen",
                              									lv_minlen_11_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_12=(Token)match(input,HyphenMinus,FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getSadlDataTypeFacetAccess().getHyphenMinusKeyword_2_1_1_1());
                              					
                            }
                            // InternalDialogParser.g:1543:6: ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) )
                            // InternalDialogParser.g:1544:7: ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) )
                            {
                            // InternalDialogParser.g:1544:7: ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) )
                            // InternalDialogParser.g:1545:8: (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk )
                            {
                            // InternalDialogParser.g:1545:8: (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk )
                            int alt32=2;
                            int LA32_0 = input.LA(1);

                            if ( (LA32_0==HyphenMinus||LA32_0==RULE_NUMBER) ) {
                                alt32=1;
                            }
                            else if ( (LA32_0==Asterisk) ) {
                                alt32=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 32, 0, input);

                                throw nvae;
                            }
                            switch (alt32) {
                                case 1 :
                                    // InternalDialogParser.g:1546:9: lv_maxlen_13_1= ruleFacetNumber
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMaxlenFacetNumberParserRuleCall_2_1_1_2_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_maxlen_13_1=ruleFacetNumber();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                                      									}
                                      									set(
                                      										current,
                                      										"maxlen",
                                      										lv_maxlen_13_1,
                                      										"com.ge.research.sadl.SADL.FacetNumber");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:1562:9: lv_maxlen_13_2= Asterisk
                                    {
                                    lv_maxlen_13_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_maxlen_13_2, grammarAccess.getSadlDataTypeFacetAccess().getMaxlenAsteriskKeyword_2_1_1_2_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
                                      									}
                                      									setWithLastConsumed(current, "maxlen", lv_maxlen_13_2, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:1579:3: (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:1579:3: (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket )
                    // InternalDialogParser.g:1580:4: otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket
                    {
                    otherlv_14=(Token)match(input,LeftCurlyBracket,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getSadlDataTypeFacetAccess().getLeftCurlyBracketKeyword_3_0());
                      			
                    }
                    // InternalDialogParser.g:1584:4: ( (lv_values_15_0= ruleFacetValue ) )
                    // InternalDialogParser.g:1585:5: (lv_values_15_0= ruleFacetValue )
                    {
                    // InternalDialogParser.g:1585:5: (lv_values_15_0= ruleFacetValue )
                    // InternalDialogParser.g:1586:6: lv_values_15_0= ruleFacetValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getValuesFacetValueParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_41);
                    lv_values_15_0=ruleFacetValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                      						}
                      						add(
                      							current,
                      							"values",
                      							lv_values_15_0,
                      							"com.ge.research.sadl.SADL.FacetValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:1603:4: ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )*
                    loop35:
                    do {
                        int alt35=2;
                        int LA35_0 = input.LA(1);

                        if ( ((LA35_0>=Comma && LA35_0<=HyphenMinus)||LA35_0==RULE_NUMBER||LA35_0==RULE_STRING) ) {
                            alt35=1;
                        }


                        switch (alt35) {
                    	case 1 :
                    	    // InternalDialogParser.g:1604:5: (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) )
                    	    {
                    	    // InternalDialogParser.g:1604:5: (otherlv_16= Comma )?
                    	    int alt34=2;
                    	    int LA34_0 = input.LA(1);

                    	    if ( (LA34_0==Comma) ) {
                    	        alt34=1;
                    	    }
                    	    switch (alt34) {
                    	        case 1 :
                    	            // InternalDialogParser.g:1605:6: otherlv_16= Comma
                    	            {
                    	            otherlv_16=(Token)match(input,Comma,FOLLOW_40); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_16, grammarAccess.getSadlDataTypeFacetAccess().getCommaKeyword_3_2_0());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    // InternalDialogParser.g:1610:5: ( (lv_values_17_0= ruleFacetValue ) )
                    	    // InternalDialogParser.g:1611:6: (lv_values_17_0= ruleFacetValue )
                    	    {
                    	    // InternalDialogParser.g:1611:6: (lv_values_17_0= ruleFacetValue )
                    	    // InternalDialogParser.g:1612:7: lv_values_17_0= ruleFacetValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getValuesFacetValueParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_41);
                    	    lv_values_17_0=ruleFacetValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"values",
                    	      								lv_values_17_0,
                    	      								"com.ge.research.sadl.SADL.FacetValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop35;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getSadlDataTypeFacetAccess().getRightCurlyBracketKeyword_3_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlDataTypeFacet"


    // $ANTLR start "entryRuleFacetNumber"
    // InternalDialogParser.g:1639:1: entryRuleFacetNumber returns [String current=null] : iv_ruleFacetNumber= ruleFacetNumber EOF ;
    public final String entryRuleFacetNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFacetNumber = null;


        try {
            // InternalDialogParser.g:1639:51: (iv_ruleFacetNumber= ruleFacetNumber EOF )
            // InternalDialogParser.g:1640:2: iv_ruleFacetNumber= ruleFacetNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFacetNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFacetNumber=ruleFacetNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFacetNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFacetNumber"


    // $ANTLR start "ruleFacetNumber"
    // InternalDialogParser.g:1646:1: ruleFacetNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber ) ;
    public final AntlrDatatypeRuleToken ruleFacetNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_AnyNumber_1 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1652:2: ( ( (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber ) )
            // InternalDialogParser.g:1653:2: ( (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber )
            {
            // InternalDialogParser.g:1653:2: ( (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber )
            // InternalDialogParser.g:1654:3: (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber
            {
            // InternalDialogParser.g:1654:3: (kw= HyphenMinus )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==HyphenMinus) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalDialogParser.g:1655:4: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getFacetNumberAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFacetNumberAccess().getAnyNumberParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_AnyNumber_1=ruleAnyNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_AnyNumber_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFacetNumber"


    // $ANTLR start "entryRuleFacetValue"
    // InternalDialogParser.g:1675:1: entryRuleFacetValue returns [String current=null] : iv_ruleFacetValue= ruleFacetValue EOF ;
    public final String entryRuleFacetValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFacetValue = null;


        try {
            // InternalDialogParser.g:1675:50: (iv_ruleFacetValue= ruleFacetValue EOF )
            // InternalDialogParser.g:1676:2: iv_ruleFacetValue= ruleFacetValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFacetValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFacetValue=ruleFacetValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFacetValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFacetValue"


    // $ANTLR start "ruleFacetValue"
    // InternalDialogParser.g:1682:1: ruleFacetValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_FacetNumber_1= ruleFacetNumber ) ;
    public final AntlrDatatypeRuleToken ruleFacetValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        AntlrDatatypeRuleToken this_FacetNumber_1 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1688:2: ( (this_STRING_0= RULE_STRING | this_FacetNumber_1= ruleFacetNumber ) )
            // InternalDialogParser.g:1689:2: (this_STRING_0= RULE_STRING | this_FacetNumber_1= ruleFacetNumber )
            {
            // InternalDialogParser.g:1689:2: (this_STRING_0= RULE_STRING | this_FacetNumber_1= ruleFacetNumber )
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==RULE_STRING) ) {
                alt38=1;
            }
            else if ( (LA38_0==HyphenMinus||LA38_0==RULE_NUMBER) ) {
                alt38=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }
            switch (alt38) {
                case 1 :
                    // InternalDialogParser.g:1690:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getFacetValueAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:1698:3: this_FacetNumber_1= ruleFacetNumber
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFacetValueAccess().getFacetNumberParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FacetNumber_1=ruleFacetNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FacetNumber_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFacetValue"


    // $ANTLR start "entryRuleSadlTypeReference"
    // InternalDialogParser.g:1712:1: entryRuleSadlTypeReference returns [EObject current=null] : iv_ruleSadlTypeReference= ruleSadlTypeReference EOF ;
    public final EObject entryRuleSadlTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlTypeReference = null;


        try {
            // InternalDialogParser.g:1712:58: (iv_ruleSadlTypeReference= ruleSadlTypeReference EOF )
            // InternalDialogParser.g:1713:2: iv_ruleSadlTypeReference= ruleSadlTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlTypeReference=ruleSadlTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlTypeReference"


    // $ANTLR start "ruleSadlTypeReference"
    // InternalDialogParser.g:1719:1: ruleSadlTypeReference returns [EObject current=null] : this_SadlUnionType_0= ruleSadlUnionType ;
    public final EObject ruleSadlTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_SadlUnionType_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1725:2: (this_SadlUnionType_0= ruleSadlUnionType )
            // InternalDialogParser.g:1726:2: this_SadlUnionType_0= ruleSadlUnionType
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getSadlTypeReferenceAccess().getSadlUnionTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_SadlUnionType_0=ruleSadlUnionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SadlUnionType_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlTypeReference"


    // $ANTLR start "entryRuleSadlUnionType"
    // InternalDialogParser.g:1737:1: entryRuleSadlUnionType returns [EObject current=null] : iv_ruleSadlUnionType= ruleSadlUnionType EOF ;
    public final EObject entryRuleSadlUnionType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlUnionType = null;


        try {
            // InternalDialogParser.g:1737:54: (iv_ruleSadlUnionType= ruleSadlUnionType EOF )
            // InternalDialogParser.g:1738:2: iv_ruleSadlUnionType= ruleSadlUnionType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlUnionTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlUnionType=ruleSadlUnionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlUnionType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlUnionType"


    // $ANTLR start "ruleSadlUnionType"
    // InternalDialogParser.g:1744:1: ruleSadlUnionType returns [EObject current=null] : (this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )* ) ;
    public final EObject ruleSadlUnionType() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_SadlIntersectionType_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1750:2: ( (this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )* ) )
            // InternalDialogParser.g:1751:2: (this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )* )
            {
            // InternalDialogParser.g:1751:2: (this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )* )
            // InternalDialogParser.g:1752:3: this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSadlUnionTypeAccess().getSadlIntersectionTypeParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_43);
            this_SadlIntersectionType_0=ruleSadlIntersectionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SadlIntersectionType_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:1760:3: ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==Or) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalDialogParser.g:1761:4: () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) )
            	    {
            	    // InternalDialogParser.g:1761:4: ()
            	    // InternalDialogParser.g:1762:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getSadlUnionTypeAccess().getSadlUnionTypeLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    otherlv_2=(Token)match(input,Or,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getSadlUnionTypeAccess().getOrKeyword_1_1());
            	      			
            	    }
            	    // InternalDialogParser.g:1772:4: ( (lv_right_3_0= ruleSadlIntersectionType ) )
            	    // InternalDialogParser.g:1773:5: (lv_right_3_0= ruleSadlIntersectionType )
            	    {
            	    // InternalDialogParser.g:1773:5: (lv_right_3_0= ruleSadlIntersectionType )
            	    // InternalDialogParser.g:1774:6: lv_right_3_0= ruleSadlIntersectionType
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSadlUnionTypeAccess().getRightSadlIntersectionTypeParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_43);
            	    lv_right_3_0=ruleSadlIntersectionType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSadlUnionTypeRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.SadlIntersectionType");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlUnionType"


    // $ANTLR start "entryRuleSadlIntersectionType"
    // InternalDialogParser.g:1796:1: entryRuleSadlIntersectionType returns [EObject current=null] : iv_ruleSadlIntersectionType= ruleSadlIntersectionType EOF ;
    public final EObject entryRuleSadlIntersectionType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlIntersectionType = null;


        try {
            // InternalDialogParser.g:1796:61: (iv_ruleSadlIntersectionType= ruleSadlIntersectionType EOF )
            // InternalDialogParser.g:1797:2: iv_ruleSadlIntersectionType= ruleSadlIntersectionType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlIntersectionTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlIntersectionType=ruleSadlIntersectionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlIntersectionType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlIntersectionType"


    // $ANTLR start "ruleSadlIntersectionType"
    // InternalDialogParser.g:1803:1: ruleSadlIntersectionType returns [EObject current=null] : (this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )* ) ;
    public final EObject ruleSadlIntersectionType() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_SadlPrimaryTypeReference_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1809:2: ( (this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )* ) )
            // InternalDialogParser.g:1810:2: (this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )* )
            {
            // InternalDialogParser.g:1810:2: (this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )* )
            // InternalDialogParser.g:1811:3: this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSadlIntersectionTypeAccess().getSadlPrimaryTypeReferenceParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_44);
            this_SadlPrimaryTypeReference_0=ruleSadlPrimaryTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SadlPrimaryTypeReference_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:1819:3: ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==And) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalDialogParser.g:1820:4: () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) )
            	    {
            	    // InternalDialogParser.g:1820:4: ()
            	    // InternalDialogParser.g:1821:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getSadlIntersectionTypeAccess().getSadlIntersectionTypeLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    otherlv_2=(Token)match(input,And,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getSadlIntersectionTypeAccess().getAndKeyword_1_1());
            	      			
            	    }
            	    // InternalDialogParser.g:1831:4: ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) )
            	    // InternalDialogParser.g:1832:5: (lv_right_3_0= ruleSadlPrimaryTypeReference )
            	    {
            	    // InternalDialogParser.g:1832:5: (lv_right_3_0= ruleSadlPrimaryTypeReference )
            	    // InternalDialogParser.g:1833:6: lv_right_3_0= ruleSadlPrimaryTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSadlIntersectionTypeAccess().getRightSadlPrimaryTypeReferenceParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_right_3_0=ruleSadlPrimaryTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSadlIntersectionTypeRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlIntersectionType"


    // $ANTLR start "entryRuleSadlPrimaryTypeReference"
    // InternalDialogParser.g:1855:1: entryRuleSadlPrimaryTypeReference returns [EObject current=null] : iv_ruleSadlPrimaryTypeReference= ruleSadlPrimaryTypeReference EOF ;
    public final EObject entryRuleSadlPrimaryTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPrimaryTypeReference = null;


        try {
            // InternalDialogParser.g:1855:65: (iv_ruleSadlPrimaryTypeReference= ruleSadlPrimaryTypeReference EOF )
            // InternalDialogParser.g:1856:2: iv_ruleSadlPrimaryTypeReference= ruleSadlPrimaryTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPrimaryTypeReference=ruleSadlPrimaryTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPrimaryTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPrimaryTypeReference"


    // $ANTLR start "ruleSadlPrimaryTypeReference"
    // InternalDialogParser.g:1862:1: ruleSadlPrimaryTypeReference returns [EObject current=null] : ( ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? ) | ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? ) | (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis ) | (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket ) ) ;
    public final EObject ruleSadlPrimaryTypeReference() throws RecognitionException {
        EObject current = null;

        Token lv_list_2_0=null;
        Token lv_list_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Enumerator lv_primitiveType_4_0 = null;

        EObject this_SadlPropertyCondition_7 = null;

        EObject this_SadlTypeReference_10 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1868:2: ( ( ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? ) | ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? ) | (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis ) | (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket ) ) )
            // InternalDialogParser.g:1869:2: ( ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? ) | ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? ) | (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis ) | (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket ) )
            {
            // InternalDialogParser.g:1869:2: ( ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? ) | ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? ) | (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis ) | (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket ) )
            int alt43=4;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt43=1;
                }
                break;
            case NonNegativeInteger:
            case NonPositiveInteger:
            case NegativeInteger:
            case PositiveInteger:
            case AnySimpleType:
            case Base64Binary:
            case UnsignedByte:
            case UnsignedInt:
            case GYearMonth:
            case GMonthDay:
            case HexBinary:
            case DateTime:
            case Duration:
            case Boolean:
            case Decimal:
            case Integer:
            case AnyURI:
            case Double:
            case GMonth:
            case String:
            case Float:
            case GYear:
            case Byte:
            case Date:
            case GDay:
            case Long:
            case Time:
            case Int:
                {
                alt43=2;
                }
                break;
            case LeftParenthesis:
                {
                alt43=3;
                }
                break;
            case LeftCurlyBracket:
                {
                alt43=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }

            switch (alt43) {
                case 1 :
                    // InternalDialogParser.g:1870:3: ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? )
                    {
                    // InternalDialogParser.g:1870:3: ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? )
                    // InternalDialogParser.g:1871:4: () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )?
                    {
                    // InternalDialogParser.g:1871:4: ()
                    // InternalDialogParser.g:1872:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlSimpleTypeReferenceAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:1878:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:1879:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:1879:5: ( ruleQNAME )
                    // InternalDialogParser.g:1880:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPrimaryTypeReferenceRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getTypeSadlResourceCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_45);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:1894:4: ( (lv_list_2_0= List ) )?
                    int alt41=2;
                    int LA41_0 = input.LA(1);

                    if ( (LA41_0==List) ) {
                        alt41=1;
                    }
                    switch (alt41) {
                        case 1 :
                            // InternalDialogParser.g:1895:5: (lv_list_2_0= List )
                            {
                            // InternalDialogParser.g:1895:5: (lv_list_2_0= List )
                            // InternalDialogParser.g:1896:6: lv_list_2_0= List
                            {
                            lv_list_2_0=(Token)match(input,List,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_list_2_0, grammarAccess.getSadlPrimaryTypeReferenceAccess().getListListKeyword_0_2_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getSadlPrimaryTypeReferenceRule());
                              						}
                              						setWithLastConsumed(current, "list", true, "List");
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:1910:3: ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? )
                    {
                    // InternalDialogParser.g:1910:3: ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? )
                    // InternalDialogParser.g:1911:4: () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )?
                    {
                    // InternalDialogParser.g:1911:4: ()
                    // InternalDialogParser.g:1912:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlPrimitiveDataTypeAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:1918:4: ( (lv_primitiveType_4_0= ruleSadlDataType ) )
                    // InternalDialogParser.g:1919:5: (lv_primitiveType_4_0= ruleSadlDataType )
                    {
                    // InternalDialogParser.g:1919:5: (lv_primitiveType_4_0= ruleSadlDataType )
                    // InternalDialogParser.g:1920:6: lv_primitiveType_4_0= ruleSadlDataType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getPrimitiveTypeSadlDataTypeEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_45);
                    lv_primitiveType_4_0=ruleSadlDataType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPrimaryTypeReferenceRule());
                      						}
                      						set(
                      							current,
                      							"primitiveType",
                      							lv_primitiveType_4_0,
                      							"com.ge.research.sadl.SADL.SadlDataType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:1937:4: ( (lv_list_5_0= List ) )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==List) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            // InternalDialogParser.g:1938:5: (lv_list_5_0= List )
                            {
                            // InternalDialogParser.g:1938:5: (lv_list_5_0= List )
                            // InternalDialogParser.g:1939:6: lv_list_5_0= List
                            {
                            lv_list_5_0=(Token)match(input,List,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_list_5_0, grammarAccess.getSadlPrimaryTypeReferenceAccess().getListListKeyword_1_2_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getSadlPrimaryTypeReferenceRule());
                              						}
                              						setWithLastConsumed(current, "list", true, "List");
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:1953:3: (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis )
                    {
                    // InternalDialogParser.g:1953:3: (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis )
                    // InternalDialogParser.g:1954:4: otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSadlPrimaryTypeReferenceAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlPropertyConditionParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_28);
                    this_SadlPropertyCondition_7=ruleSadlPropertyCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SadlPropertyCondition_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_8=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSadlPrimaryTypeReferenceAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:1972:3: (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:1972:3: (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket )
                    // InternalDialogParser.g:1973:4: otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket
                    {
                    otherlv_9=(Token)match(input,LeftCurlyBracket,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSadlPrimaryTypeReferenceAccess().getLeftCurlyBracketKeyword_3_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlTypeReferenceParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_46);
                    this_SadlTypeReference_10=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SadlTypeReference_10;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_11=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getSadlPrimaryTypeReferenceAccess().getRightCurlyBracketKeyword_3_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPrimaryTypeReference"


    // $ANTLR start "entryRuleSadlPropertyDeclarationInClass"
    // InternalDialogParser.g:1994:1: entryRuleSadlPropertyDeclarationInClass returns [EObject current=null] : iv_ruleSadlPropertyDeclarationInClass= ruleSadlPropertyDeclarationInClass EOF ;
    public final EObject entryRuleSadlPropertyDeclarationInClass() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPropertyDeclarationInClass = null;


        try {
            // InternalDialogParser.g:1994:71: (iv_ruleSadlPropertyDeclarationInClass= ruleSadlPropertyDeclarationInClass EOF )
            // InternalDialogParser.g:1995:2: iv_ruleSadlPropertyDeclarationInClass= ruleSadlPropertyDeclarationInClass EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPropertyDeclarationInClassRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPropertyDeclarationInClass=ruleSadlPropertyDeclarationInClass();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPropertyDeclarationInClass; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPropertyDeclarationInClass"


    // $ANTLR start "ruleSadlPropertyDeclarationInClass"
    // InternalDialogParser.g:2001:1: ruleSadlPropertyDeclarationInClass returns [EObject current=null] : ( (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )* ) ;
    public final EObject ruleSadlPropertyDeclarationInClass() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_nameDeclarations_3_0 = null;

        EObject lv_restrictions_4_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2007:2: ( ( (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )* ) )
            // InternalDialogParser.g:2008:2: ( (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )* )
            {
            // InternalDialogParser.g:2008:2: ( (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )* )
            // InternalDialogParser.g:2009:3: (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )*
            {
            // InternalDialogParser.g:2009:3: (otherlv_0= Comma )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==Comma) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalDialogParser.g:2010:4: otherlv_0= Comma
                    {
                    otherlv_0=(Token)match(input,Comma,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSadlPropertyDeclarationInClassAccess().getCommaKeyword_0());
                      			
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,Described,FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSadlPropertyDeclarationInClassAccess().getDescribedKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,By,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSadlPropertyDeclarationInClassAccess().getByKeyword_2());
              		
            }
            // InternalDialogParser.g:2023:3: ( (lv_nameDeclarations_3_0= ruleSadlResource ) )
            // InternalDialogParser.g:2024:4: (lv_nameDeclarations_3_0= ruleSadlResource )
            {
            // InternalDialogParser.g:2024:4: (lv_nameDeclarations_3_0= ruleSadlResource )
            // InternalDialogParser.g:2025:5: lv_nameDeclarations_3_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlPropertyDeclarationInClassAccess().getNameDeclarationsSadlResourceParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_49);
            lv_nameDeclarations_3_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSadlPropertyDeclarationInClassRule());
              					}
              					add(
              						current,
              						"nameDeclarations",
              						lv_nameDeclarations_3_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:2042:3: ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==Describes||LA45_0==Always||LA45_0==Must||LA45_0==Only||LA45_0==With||LA45_0==Can||LA45_0==Has||(LA45_0>=Is && LA45_0<=Of)) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalDialogParser.g:2043:4: (lv_restrictions_4_0= ruleSadlPropertyRestriction )
            	    {
            	    // InternalDialogParser.g:2043:4: (lv_restrictions_4_0= ruleSadlPropertyRestriction )
            	    // InternalDialogParser.g:2044:5: lv_restrictions_4_0= ruleSadlPropertyRestriction
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlPropertyDeclarationInClassAccess().getRestrictionsSadlPropertyRestrictionParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_49);
            	    lv_restrictions_4_0=ruleSadlPropertyRestriction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlPropertyDeclarationInClassRule());
            	      					}
            	      					add(
            	      						current,
            	      						"restrictions",
            	      						lv_restrictions_4_0,
            	      						"com.ge.research.sadl.SADL.SadlPropertyRestriction");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPropertyDeclarationInClass"


    // $ANTLR start "entryRuleSadlPropertyRestriction"
    // InternalDialogParser.g:2065:1: entryRuleSadlPropertyRestriction returns [EObject current=null] : iv_ruleSadlPropertyRestriction= ruleSadlPropertyRestriction EOF ;
    public final EObject entryRuleSadlPropertyRestriction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPropertyRestriction = null;


        try {
            // InternalDialogParser.g:2065:64: (iv_ruleSadlPropertyRestriction= ruleSadlPropertyRestriction EOF )
            // InternalDialogParser.g:2066:2: iv_ruleSadlPropertyRestriction= ruleSadlPropertyRestriction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPropertyRestrictionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPropertyRestriction=ruleSadlPropertyRestriction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPropertyRestriction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPropertyRestriction"


    // $ANTLR start "ruleSadlPropertyRestriction"
    // InternalDialogParser.g:2072:1: ruleSadlPropertyRestriction returns [EObject current=null] : (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) ) ;
    public final EObject ruleSadlPropertyRestriction() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_singleValued_9_0=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_typeonly_14_1=null;
        Token lv_typeonly_14_2=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token lv_level_38_0=null;
        Token otherlv_39=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token lv_inverse_45_0=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token otherlv_50=null;
        Token otherlv_51=null;
        Token otherlv_52=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_59=null;
        Token otherlv_60=null;
        Token otherlv_61=null;
        Token otherlv_62=null;
        Token otherlv_63=null;
        Token otherlv_65=null;
        Token otherlv_67=null;
        EObject this_SadlCondition_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_range_15_0 = null;

        EObject lv_facet_16_0 = null;

        EObject lv_defValue_40_0 = null;

        EObject lv_values_53_0 = null;

        EObject lv_values_55_0 = null;

        EObject lv_values_64_0 = null;

        EObject lv_values_66_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2078:2: ( (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) ) )
            // InternalDialogParser.g:2079:2: (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) )
            {
            // InternalDialogParser.g:2079:2: (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) )
            int alt56=11;
            alt56 = dfa56.predict(input);
            switch (alt56) {
                case 1 :
                    // InternalDialogParser.g:2080:3: this_SadlCondition_0= ruleSadlCondition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getSadlConditionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlCondition_0=ruleSadlCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlCondition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:2089:3: ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) )
                    {
                    // InternalDialogParser.g:2089:3: ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) )
                    // InternalDialogParser.g:2090:4: () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) )
                    {
                    // InternalDialogParser.g:2090:4: ()
                    // InternalDialogParser.g:2091:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlTypeAssociationAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:2097:4: (otherlv_2= Describes | otherlv_3= Of )
                    int alt46=2;
                    int LA46_0 = input.LA(1);

                    if ( (LA46_0==Describes) ) {
                        alt46=1;
                    }
                    else if ( (LA46_0==Of) ) {
                        alt46=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 46, 0, input);

                        throw nvae;
                    }
                    switch (alt46) {
                        case 1 :
                            // InternalDialogParser.g:2098:5: otherlv_2= Describes
                            {
                            otherlv_2=(Token)match(input,Describes,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getSadlPropertyRestrictionAccess().getDescribesKeyword_1_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2103:5: otherlv_3= Of
                            {
                            otherlv_3=(Token)match(input,Of,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalDialogParser.g:2108:4: ( (lv_domain_4_0= ruleSadlTypeReference ) )
                    // InternalDialogParser.g:2109:5: (lv_domain_4_0= ruleSadlTypeReference )
                    {
                    // InternalDialogParser.g:2109:5: (lv_domain_4_0= ruleSadlTypeReference )
                    // InternalDialogParser.g:2110:6: lv_domain_4_0= ruleSadlTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getDomainSadlTypeReferenceParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_domain_4_0=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      						set(
                      							current,
                      							"domain",
                      							lv_domain_4_0,
                      							"com.ge.research.sadl.SADL.SadlTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:2129:3: ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) )
                    {
                    // InternalDialogParser.g:2129:3: ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) )
                    // InternalDialogParser.g:2130:4: () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) )
                    {
                    // InternalDialogParser.g:2130:4: ()
                    // InternalDialogParser.g:2131:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlRangeRestrictionAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:2137:4: (otherlv_6= Has | otherlv_7= With )
                    int alt47=2;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==Has) ) {
                        alt47=1;
                    }
                    else if ( (LA47_0==With) ) {
                        alt47=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 47, 0, input);

                        throw nvae;
                    }
                    switch (alt47) {
                        case 1 :
                            // InternalDialogParser.g:2138:5: otherlv_6= Has
                            {
                            otherlv_6=(Token)match(input,Has,FOLLOW_50); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getSadlPropertyRestrictionAccess().getHasKeyword_2_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2143:5: otherlv_7= With
                            {
                            otherlv_7=(Token)match(input,With,FOLLOW_50); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getSadlPropertyRestrictionAccess().getWithKeyword_2_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalDialogParser.g:2148:4: ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values )
                    int alt48=2;
                    int LA48_0 = input.LA(1);

                    if ( (LA48_0==A_1) ) {
                        alt48=1;
                    }
                    else if ( (LA48_0==Values) ) {
                        alt48=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 48, 0, input);

                        throw nvae;
                    }
                    switch (alt48) {
                        case 1 :
                            // InternalDialogParser.g:2149:5: (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value )
                            {
                            // InternalDialogParser.g:2149:5: (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value )
                            // InternalDialogParser.g:2150:6: otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value
                            {
                            otherlv_8=(Token)match(input,A_1,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getSadlPropertyRestrictionAccess().getAKeyword_2_2_0_0());
                              					
                            }
                            // InternalDialogParser.g:2154:6: ( (lv_singleValued_9_0= Single ) )
                            // InternalDialogParser.g:2155:7: (lv_singleValued_9_0= Single )
                            {
                            // InternalDialogParser.g:2155:7: (lv_singleValued_9_0= Single )
                            // InternalDialogParser.g:2156:8: lv_singleValued_9_0= Single
                            {
                            lv_singleValued_9_0=(Token)match(input,Single,FOLLOW_52); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_singleValued_9_0, grammarAccess.getSadlPropertyRestrictionAccess().getSingleValuedSingleKeyword_2_2_0_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                              								}
                              								setWithLastConsumed(current, "singleValued", true, "single");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,Value,FOLLOW_29); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSadlPropertyRestrictionAccess().getValueKeyword_2_2_0_2());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2174:5: otherlv_11= Values
                            {
                            otherlv_11=(Token)match(input,Values,FOLLOW_29); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_11, grammarAccess.getSadlPropertyRestrictionAccess().getValuesKeyword_2_2_1());
                              				
                            }

                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,Of,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_2_3());
                      			
                    }
                    otherlv_13=(Token)match(input,Type,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getSadlPropertyRestrictionAccess().getTypeKeyword_2_4());
                      			
                    }
                    // InternalDialogParser.g:2187:4: ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) )
                    int alt51=2;
                    int LA51_0 = input.LA(1);

                    if ( (LA51_0==Class||LA51_0==Data) ) {
                        alt51=1;
                    }
                    else if ( ((LA51_0>=NonNegativeInteger && LA51_0<=Base64Binary)||LA51_0==UnsignedByte||LA51_0==UnsignedInt||LA51_0==GYearMonth||(LA51_0>=GMonthDay && LA51_0<=HexBinary)||LA51_0==DateTime||LA51_0==Duration||LA51_0==Boolean||LA51_0==Decimal||LA51_0==Integer||LA51_0==AnyURI||LA51_0==Double||LA51_0==GMonth||LA51_0==String||(LA51_0>=Float && LA51_0<=GYear)||LA51_0==Byte||LA51_0==Date||LA51_0==GDay||LA51_0==Long||LA51_0==Time||LA51_0==Int||LA51_0==LeftParenthesis||LA51_0==LeftCurlyBracket||(LA51_0>=RULE_ID && LA51_0<=RULE_QNAME_TERMINAL)) ) {
                        alt51=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 51, 0, input);

                        throw nvae;
                    }
                    switch (alt51) {
                        case 1 :
                            // InternalDialogParser.g:2188:5: ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) )
                            {
                            // InternalDialogParser.g:2188:5: ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) )
                            // InternalDialogParser.g:2189:6: ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) )
                            {
                            // InternalDialogParser.g:2189:6: ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) )
                            // InternalDialogParser.g:2190:7: (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data )
                            {
                            // InternalDialogParser.g:2190:7: (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data )
                            int alt49=2;
                            int LA49_0 = input.LA(1);

                            if ( (LA49_0==Class) ) {
                                alt49=1;
                            }
                            else if ( (LA49_0==Data) ) {
                                alt49=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 49, 0, input);

                                throw nvae;
                            }
                            switch (alt49) {
                                case 1 :
                                    // InternalDialogParser.g:2191:8: lv_typeonly_14_1= Class
                                    {
                                    lv_typeonly_14_1=(Token)match(input,Class,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_typeonly_14_1, grammarAccess.getSadlPropertyRestrictionAccess().getTypeonlyClassKeyword_2_5_0_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                                      								}
                                      								setWithLastConsumed(current, "typeonly", lv_typeonly_14_1, null);
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:2202:8: lv_typeonly_14_2= Data
                                    {
                                    lv_typeonly_14_2=(Token)match(input,Data,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_typeonly_14_2, grammarAccess.getSadlPropertyRestrictionAccess().getTypeonlyDataKeyword_2_5_0_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                                      								}
                                      								setWithLastConsumed(current, "typeonly", lv_typeonly_14_2, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2216:5: ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? )
                            {
                            // InternalDialogParser.g:2216:5: ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? )
                            // InternalDialogParser.g:2217:6: ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )?
                            {
                            // InternalDialogParser.g:2217:6: ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) )
                            // InternalDialogParser.g:2218:7: (lv_range_15_0= ruleSadlPrimaryTypeReference )
                            {
                            // InternalDialogParser.g:2218:7: (lv_range_15_0= ruleSadlPrimaryTypeReference )
                            // InternalDialogParser.g:2219:8: lv_range_15_0= ruleSadlPrimaryTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getRangeSadlPrimaryTypeReferenceParserRuleCall_2_5_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_55);
                            lv_range_15_0=ruleSadlPrimaryTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                              								}
                              								set(
                              									current,
                              									"range",
                              									lv_range_15_0,
                              									"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:2236:6: ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )?
                            int alt50=2;
                            int LA50_0 = input.LA(1);

                            if ( (LA50_0==Length||LA50_0==LeftParenthesis||LA50_0==LeftSquareBracket||LA50_0==LeftCurlyBracket||LA50_0==RULE_STRING) ) {
                                alt50=1;
                            }
                            switch (alt50) {
                                case 1 :
                                    // InternalDialogParser.g:2237:7: (lv_facet_16_0= ruleSadlDataTypeFacet )
                                    {
                                    // InternalDialogParser.g:2237:7: (lv_facet_16_0= ruleSadlDataTypeFacet )
                                    // InternalDialogParser.g:2238:8: lv_facet_16_0= ruleSadlDataTypeFacet
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getFacetSadlDataTypeFacetParserRuleCall_2_5_1_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_facet_16_0=ruleSadlDataTypeFacet();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                                      								}
                                      								set(
                                      									current,
                                      									"facet",
                                      									lv_facet_16_0,
                                      									"com.ge.research.sadl.SADL.SadlDataTypeFacet");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:2259:3: ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) )
                    {
                    // InternalDialogParser.g:2259:3: ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) )
                    // InternalDialogParser.g:2260:4: () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) )
                    {
                    // InternalDialogParser.g:2260:4: ()
                    // InternalDialogParser.g:2261:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsInverseOfAction_3_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_18=(Token)match(input,Is,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_3_1());
                      			
                    }
                    otherlv_19=(Token)match(input,The_1,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getSadlPropertyRestrictionAccess().getTheKeyword_3_2());
                      			
                    }
                    otherlv_20=(Token)match(input,Inverse,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getSadlPropertyRestrictionAccess().getInverseKeyword_3_3());
                      			
                    }
                    otherlv_21=(Token)match(input,Of,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_3_4());
                      			
                    }
                    // InternalDialogParser.g:2283:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:2284:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:2284:5: ( ruleQNAME )
                    // InternalDialogParser.g:2285:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getOtherPropertySadlResourceCrossReference_3_5_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:2301:3: ( () otherlv_24= Is otherlv_25= Transitive )
                    {
                    // InternalDialogParser.g:2301:3: ( () otherlv_24= Is otherlv_25= Transitive )
                    // InternalDialogParser.g:2302:4: () otherlv_24= Is otherlv_25= Transitive
                    {
                    // InternalDialogParser.g:2302:4: ()
                    // InternalDialogParser.g:2303:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsTransitiveAction_4_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_24=(Token)match(input,Is,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_4_1());
                      			
                    }
                    otherlv_25=(Token)match(input,Transitive,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getSadlPropertyRestrictionAccess().getTransitiveKeyword_4_2());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:2319:3: ( () otherlv_27= Is otherlv_28= Symmetrical )
                    {
                    // InternalDialogParser.g:2319:3: ( () otherlv_27= Is otherlv_28= Symmetrical )
                    // InternalDialogParser.g:2320:4: () otherlv_27= Is otherlv_28= Symmetrical
                    {
                    // InternalDialogParser.g:2320:4: ()
                    // InternalDialogParser.g:2321:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsSymmetricalAction_5_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_27=(Token)match(input,Is,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_5_1());
                      			
                    }
                    otherlv_28=(Token)match(input,Symmetrical,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getSadlPropertyRestrictionAccess().getSymmetricalKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:2337:3: ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation )
                    {
                    // InternalDialogParser.g:2337:3: ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation )
                    // InternalDialogParser.g:2338:4: () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation
                    {
                    // InternalDialogParser.g:2338:4: ()
                    // InternalDialogParser.g:2339:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsAnnotationAction_6_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_30=(Token)match(input,Is,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_6_1());
                      			
                    }
                    otherlv_31=(Token)match(input,A_1,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getSadlPropertyRestrictionAccess().getAKeyword_6_2());
                      			
                    }
                    otherlv_32=(Token)match(input,Type,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getSadlPropertyRestrictionAccess().getTypeKeyword_6_3());
                      			
                    }
                    otherlv_33=(Token)match(input,Of,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_6_4());
                      			
                    }
                    otherlv_34=(Token)match(input,Annotation,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getSadlPropertyRestrictionAccess().getAnnotationKeyword_6_5());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:2367:3: ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) )
                    {
                    // InternalDialogParser.g:2367:3: ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) )
                    // InternalDialogParser.g:2368:4: () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) )
                    {
                    // InternalDialogParser.g:2368:4: ()
                    // InternalDialogParser.g:2369:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlDefaultValueAction_7_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_36=(Token)match(input,Has,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getSadlPropertyRestrictionAccess().getHasKeyword_7_1());
                      			
                    }
                    // InternalDialogParser.g:2379:4: (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )?
                    int alt52=2;
                    int LA52_0 = input.LA(1);

                    if ( (LA52_0==Level) ) {
                        alt52=1;
                    }
                    switch (alt52) {
                        case 1 :
                            // InternalDialogParser.g:2380:5: otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) )
                            {
                            otherlv_37=(Token)match(input,Level,FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_37, grammarAccess.getSadlPropertyRestrictionAccess().getLevelKeyword_7_2_0());
                              				
                            }
                            // InternalDialogParser.g:2384:5: ( (lv_level_38_0= RULE_NUMBER ) )
                            // InternalDialogParser.g:2385:6: (lv_level_38_0= RULE_NUMBER )
                            {
                            // InternalDialogParser.g:2385:6: (lv_level_38_0= RULE_NUMBER )
                            // InternalDialogParser.g:2386:7: lv_level_38_0= RULE_NUMBER
                            {
                            lv_level_38_0=(Token)match(input,RULE_NUMBER,FOLLOW_63); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_level_38_0, grammarAccess.getSadlPropertyRestrictionAccess().getLevelNUMBERTerminalRuleCall_7_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"level",
                              								lv_level_38_0,
                              								"com.ge.research.sadl.SADL.NUMBER");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_39=(Token)match(input,Default,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getSadlPropertyRestrictionAccess().getDefaultKeyword_7_3());
                      			
                    }
                    // InternalDialogParser.g:2407:4: ( (lv_defValue_40_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:2408:5: (lv_defValue_40_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:2408:5: (lv_defValue_40_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:2409:6: lv_defValue_40_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getDefValueSadlExplicitValueParserRuleCall_7_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_defValue_40_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      						set(
                      							current,
                      							"defValue",
                      							lv_defValue_40_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalDialogParser.g:2428:3: ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? )
                    {
                    // InternalDialogParser.g:2428:3: ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? )
                    // InternalDialogParser.g:2429:4: () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )?
                    {
                    // InternalDialogParser.g:2429:4: ()
                    // InternalDialogParser.g:2430:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsFunctionalAction_8_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_42=(Token)match(input,Has,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getSadlPropertyRestrictionAccess().getHasKeyword_8_1());
                      			
                    }
                    otherlv_43=(Token)match(input,A_1,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getSadlPropertyRestrictionAccess().getAKeyword_8_2());
                      			
                    }
                    otherlv_44=(Token)match(input,Single,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_44, grammarAccess.getSadlPropertyRestrictionAccess().getSingleKeyword_8_3());
                      			
                    }
                    // InternalDialogParser.g:2448:4: ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )?
                    int alt53=3;
                    int LA53_0 = input.LA(1);

                    if ( (LA53_0==Subject) ) {
                        alt53=1;
                    }
                    else if ( (LA53_0==Value) ) {
                        alt53=2;
                    }
                    switch (alt53) {
                        case 1 :
                            // InternalDialogParser.g:2449:5: ( (lv_inverse_45_0= Subject ) )
                            {
                            // InternalDialogParser.g:2449:5: ( (lv_inverse_45_0= Subject ) )
                            // InternalDialogParser.g:2450:6: (lv_inverse_45_0= Subject )
                            {
                            // InternalDialogParser.g:2450:6: (lv_inverse_45_0= Subject )
                            // InternalDialogParser.g:2451:7: lv_inverse_45_0= Subject
                            {
                            lv_inverse_45_0=(Token)match(input,Subject,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_inverse_45_0, grammarAccess.getSadlPropertyRestrictionAccess().getInverseSubjectKeyword_8_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                              							}
                              							setWithLastConsumed(current, "inverse", true, "subject");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2464:5: otherlv_46= Value
                            {
                            otherlv_46=(Token)match(input,Value,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_46, grammarAccess.getSadlPropertyRestrictionAccess().getValueKeyword_8_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalDialogParser.g:2471:3: ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:2471:3: ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket )
                    // InternalDialogParser.g:2472:4: () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket
                    {
                    // InternalDialogParser.g:2472:4: ()
                    // InternalDialogParser.g:2473:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlMustBeOneOfAction_9_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_48=(Token)match(input,Must,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getSadlPropertyRestrictionAccess().getMustKeyword_9_1());
                      			
                    }
                    otherlv_49=(Token)match(input,Be,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getSadlPropertyRestrictionAccess().getBeKeyword_9_2());
                      			
                    }
                    otherlv_50=(Token)match(input,One,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_50, grammarAccess.getSadlPropertyRestrictionAccess().getOneKeyword_9_3());
                      			
                    }
                    otherlv_51=(Token)match(input,Of,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_9_4());
                      			
                    }
                    otherlv_52=(Token)match(input,LeftCurlyBracket,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_52, grammarAccess.getSadlPropertyRestrictionAccess().getLeftCurlyBracketKeyword_9_5());
                      			
                    }
                    // InternalDialogParser.g:2499:4: ( (lv_values_53_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:2500:5: (lv_values_53_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:2500:5: (lv_values_53_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:2501:6: lv_values_53_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_9_6_0());
                      					
                    }
                    pushFollow(FOLLOW_69);
                    lv_values_53_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      						add(
                      							current,
                      							"values",
                      							lv_values_53_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:2518:4: (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )*
                    loop54:
                    do {
                        int alt54=2;
                        int LA54_0 = input.LA(1);

                        if ( (LA54_0==Comma) ) {
                            alt54=1;
                        }


                        switch (alt54) {
                    	case 1 :
                    	    // InternalDialogParser.g:2519:5: otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) )
                    	    {
                    	    otherlv_54=(Token)match(input,Comma,FOLLOW_64); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_54, grammarAccess.getSadlPropertyRestrictionAccess().getCommaKeyword_9_7_0());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:2523:5: ( (lv_values_55_0= ruleSadlExplicitValue ) )
                    	    // InternalDialogParser.g:2524:6: (lv_values_55_0= ruleSadlExplicitValue )
                    	    {
                    	    // InternalDialogParser.g:2524:6: (lv_values_55_0= ruleSadlExplicitValue )
                    	    // InternalDialogParser.g:2525:7: lv_values_55_0= ruleSadlExplicitValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_9_7_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_69);
                    	    lv_values_55_0=ruleSadlExplicitValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"values",
                    	      								lv_values_55_0,
                    	      								"com.ge.research.sadl.SADL.SadlExplicitValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop54;
                        }
                    } while (true);

                    otherlv_56=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getSadlPropertyRestrictionAccess().getRightCurlyBracketKeyword_9_8());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalDialogParser.g:2549:3: ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:2549:3: ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket )
                    // InternalDialogParser.g:2550:4: () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket
                    {
                    // InternalDialogParser.g:2550:4: ()
                    // InternalDialogParser.g:2551:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlCanOnlyBeOneOfAction_10_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_58=(Token)match(input,Can,FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_58, grammarAccess.getSadlPropertyRestrictionAccess().getCanKeyword_10_1());
                      			
                    }
                    otherlv_59=(Token)match(input,Only,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_59, grammarAccess.getSadlPropertyRestrictionAccess().getOnlyKeyword_10_2());
                      			
                    }
                    otherlv_60=(Token)match(input,Be,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_60, grammarAccess.getSadlPropertyRestrictionAccess().getBeKeyword_10_3());
                      			
                    }
                    otherlv_61=(Token)match(input,One,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_61, grammarAccess.getSadlPropertyRestrictionAccess().getOneKeyword_10_4());
                      			
                    }
                    otherlv_62=(Token)match(input,Of,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_62, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_10_5());
                      			
                    }
                    otherlv_63=(Token)match(input,LeftCurlyBracket,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_63, grammarAccess.getSadlPropertyRestrictionAccess().getLeftCurlyBracketKeyword_10_6());
                      			
                    }
                    // InternalDialogParser.g:2581:4: ( (lv_values_64_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:2582:5: (lv_values_64_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:2582:5: (lv_values_64_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:2583:6: lv_values_64_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_10_7_0());
                      					
                    }
                    pushFollow(FOLLOW_69);
                    lv_values_64_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      						add(
                      							current,
                      							"values",
                      							lv_values_64_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:2600:4: (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )*
                    loop55:
                    do {
                        int alt55=2;
                        int LA55_0 = input.LA(1);

                        if ( (LA55_0==Comma) ) {
                            alt55=1;
                        }


                        switch (alt55) {
                    	case 1 :
                    	    // InternalDialogParser.g:2601:5: otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) )
                    	    {
                    	    otherlv_65=(Token)match(input,Comma,FOLLOW_64); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_65, grammarAccess.getSadlPropertyRestrictionAccess().getCommaKeyword_10_8_0());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:2605:5: ( (lv_values_66_0= ruleSadlExplicitValue ) )
                    	    // InternalDialogParser.g:2606:6: (lv_values_66_0= ruleSadlExplicitValue )
                    	    {
                    	    // InternalDialogParser.g:2606:6: (lv_values_66_0= ruleSadlExplicitValue )
                    	    // InternalDialogParser.g:2607:7: lv_values_66_0= ruleSadlExplicitValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_10_8_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_69);
                    	    lv_values_66_0=ruleSadlExplicitValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"values",
                    	      								lv_values_66_0,
                    	      								"com.ge.research.sadl.SADL.SadlExplicitValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop55;
                        }
                    } while (true);

                    otherlv_67=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_67, grammarAccess.getSadlPropertyRestrictionAccess().getRightCurlyBracketKeyword_10_9());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPropertyRestriction"


    // $ANTLR start "entryRuleSadlCondition"
    // InternalDialogParser.g:2634:1: entryRuleSadlCondition returns [EObject current=null] : iv_ruleSadlCondition= ruleSadlCondition EOF ;
    public final EObject entryRuleSadlCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlCondition = null;


        try {
            // InternalDialogParser.g:2634:54: (iv_ruleSadlCondition= ruleSadlCondition EOF )
            // InternalDialogParser.g:2635:2: iv_ruleSadlCondition= ruleSadlCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlCondition=ruleSadlCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlCondition"


    // $ANTLR start "ruleSadlCondition"
    // InternalDialogParser.g:2641:1: ruleSadlCondition returns [EObject current=null] : (this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition | this_SadlHasValueCondition_1= ruleSadlHasValueCondition | this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition ) ;
    public final EObject ruleSadlCondition() throws RecognitionException {
        EObject current = null;

        EObject this_SadlAllValuesCondition_0 = null;

        EObject this_SadlHasValueCondition_1 = null;

        EObject this_SadlCardinalityCondition_2 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2647:2: ( (this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition | this_SadlHasValueCondition_1= ruleSadlHasValueCondition | this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition ) )
            // InternalDialogParser.g:2648:2: (this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition | this_SadlHasValueCondition_1= ruleSadlHasValueCondition | this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition )
            {
            // InternalDialogParser.g:2648:2: (this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition | this_SadlHasValueCondition_1= ruleSadlHasValueCondition | this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition )
            int alt57=3;
            switch ( input.LA(1) ) {
            case Only:
                {
                alt57=1;
                }
                break;
            case Always:
                {
                alt57=2;
                }
                break;
            case With:
            case Has:
                {
                alt57=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }

            switch (alt57) {
                case 1 :
                    // InternalDialogParser.g:2649:3: this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlConditionAccess().getSadlAllValuesConditionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlAllValuesCondition_0=ruleSadlAllValuesCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlAllValuesCondition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:2658:3: this_SadlHasValueCondition_1= ruleSadlHasValueCondition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlConditionAccess().getSadlHasValueConditionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlHasValueCondition_1=ruleSadlHasValueCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlHasValueCondition_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:2667:3: this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlConditionAccess().getSadlCardinalityConditionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlCardinalityCondition_2=ruleSadlCardinalityCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlCardinalityCondition_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlCondition"


    // $ANTLR start "entryRuleSadlAllValuesCondition"
    // InternalDialogParser.g:2679:1: entryRuleSadlAllValuesCondition returns [EObject current=null] : iv_ruleSadlAllValuesCondition= ruleSadlAllValuesCondition EOF ;
    public final EObject entryRuleSadlAllValuesCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlAllValuesCondition = null;


        try {
            // InternalDialogParser.g:2679:63: (iv_ruleSadlAllValuesCondition= ruleSadlAllValuesCondition EOF )
            // InternalDialogParser.g:2680:2: iv_ruleSadlAllValuesCondition= ruleSadlAllValuesCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlAllValuesConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlAllValuesCondition=ruleSadlAllValuesCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlAllValuesCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlAllValuesCondition"


    // $ANTLR start "ruleSadlAllValuesCondition"
    // InternalDialogParser.g:2686:1: ruleSadlAllValuesCondition returns [EObject current=null] : (otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )? ) ;
    public final EObject ruleSadlAllValuesCondition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_type_6_0 = null;

        EObject lv_facet_7_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2692:2: ( (otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )? ) )
            // InternalDialogParser.g:2693:2: (otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )? )
            {
            // InternalDialogParser.g:2693:2: (otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )? )
            // InternalDialogParser.g:2694:3: otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )?
            {
            otherlv_0=(Token)match(input,Only,FOLLOW_71); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSadlAllValuesConditionAccess().getOnlyKeyword_0());
              		
            }
            // InternalDialogParser.g:2698:3: (otherlv_1= Has | otherlv_2= With )
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==Has) ) {
                alt58=1;
            }
            else if ( (LA58_0==With) ) {
                alt58=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }
            switch (alt58) {
                case 1 :
                    // InternalDialogParser.g:2699:4: otherlv_1= Has
                    {
                    otherlv_1=(Token)match(input,Has,FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSadlAllValuesConditionAccess().getHasKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:2704:4: otherlv_2= With
                    {
                    otherlv_2=(Token)match(input,With,FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSadlAllValuesConditionAccess().getWithKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,Values,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getSadlAllValuesConditionAccess().getValuesKeyword_2());
              		
            }
            otherlv_4=(Token)match(input,Of,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSadlAllValuesConditionAccess().getOfKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,Type,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getSadlAllValuesConditionAccess().getTypeKeyword_4());
              		
            }
            // InternalDialogParser.g:2721:3: ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) )
            // InternalDialogParser.g:2722:4: (lv_type_6_0= ruleSadlPrimaryTypeReference )
            {
            // InternalDialogParser.g:2722:4: (lv_type_6_0= ruleSadlPrimaryTypeReference )
            // InternalDialogParser.g:2723:5: lv_type_6_0= ruleSadlPrimaryTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlAllValuesConditionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_55);
            lv_type_6_0=ruleSadlPrimaryTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSadlAllValuesConditionRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_6_0,
              						"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:2740:3: ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==Length||LA59_0==LeftParenthesis||LA59_0==LeftSquareBracket||LA59_0==LeftCurlyBracket||LA59_0==RULE_STRING) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalDialogParser.g:2741:4: (lv_facet_7_0= ruleSadlDataTypeFacet )
                    {
                    // InternalDialogParser.g:2741:4: (lv_facet_7_0= ruleSadlDataTypeFacet )
                    // InternalDialogParser.g:2742:5: lv_facet_7_0= ruleSadlDataTypeFacet
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSadlAllValuesConditionAccess().getFacetSadlDataTypeFacetParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_facet_7_0=ruleSadlDataTypeFacet();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSadlAllValuesConditionRule());
                      					}
                      					set(
                      						current,
                      						"facet",
                      						lv_facet_7_0,
                      						"com.ge.research.sadl.SADL.SadlDataTypeFacet");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlAllValuesCondition"


    // $ANTLR start "entryRuleSadlHasValueCondition"
    // InternalDialogParser.g:2763:1: entryRuleSadlHasValueCondition returns [EObject current=null] : iv_ruleSadlHasValueCondition= ruleSadlHasValueCondition EOF ;
    public final EObject entryRuleSadlHasValueCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlHasValueCondition = null;


        try {
            // InternalDialogParser.g:2763:62: (iv_ruleSadlHasValueCondition= ruleSadlHasValueCondition EOF )
            // InternalDialogParser.g:2764:2: iv_ruleSadlHasValueCondition= ruleSadlHasValueCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlHasValueConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlHasValueCondition=ruleSadlHasValueCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlHasValueCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlHasValueCondition"


    // $ANTLR start "ruleSadlHasValueCondition"
    // InternalDialogParser.g:2770:1: ruleSadlHasValueCondition returns [EObject current=null] : (otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) ;
    public final EObject ruleSadlHasValueCondition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_restriction_4_0 = null;

        EObject lv_restriction_6_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2776:2: ( (otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) )
            // InternalDialogParser.g:2777:2: (otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) )
            {
            // InternalDialogParser.g:2777:2: (otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) )
            // InternalDialogParser.g:2778:3: otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) )
            {
            otherlv_0=(Token)match(input,Always,FOLLOW_71); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSadlHasValueConditionAccess().getAlwaysKeyword_0());
              		
            }
            // InternalDialogParser.g:2782:3: (otherlv_1= Has | otherlv_2= With )
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==Has) ) {
                alt60=1;
            }
            else if ( (LA60_0==With) ) {
                alt60=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }
            switch (alt60) {
                case 1 :
                    // InternalDialogParser.g:2783:4: otherlv_1= Has
                    {
                    otherlv_1=(Token)match(input,Has,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSadlHasValueConditionAccess().getHasKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:2788:4: otherlv_2= With
                    {
                    otherlv_2=(Token)match(input,With,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSadlHasValueConditionAccess().getWithKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,Value,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getSadlHasValueConditionAccess().getValueKeyword_2());
              		
            }
            // InternalDialogParser.g:2797:3: ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) )
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==False||LA61_0==Known||LA61_0==True||LA61_0==Not||LA61_0==PI||LA61_0==HyphenMinus||LA61_0==LeftSquareBracket||LA61_0==E_1||LA61_0==RULE_NUMBER||(LA61_0>=RULE_ID && LA61_0<=RULE_STRING)) ) {
                alt61=1;
            }
            else if ( (LA61_0==LeftParenthesis) ) {
                alt61=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }
            switch (alt61) {
                case 1 :
                    // InternalDialogParser.g:2798:4: ( (lv_restriction_4_0= ruleSadlExplicitValue ) )
                    {
                    // InternalDialogParser.g:2798:4: ( (lv_restriction_4_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:2799:5: (lv_restriction_4_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:2799:5: (lv_restriction_4_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:2800:6: lv_restriction_4_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlHasValueConditionAccess().getRestrictionSadlExplicitValueParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_restriction_4_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlHasValueConditionRule());
                      						}
                      						set(
                      							current,
                      							"restriction",
                      							lv_restriction_4_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:2818:4: (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis )
                    {
                    // InternalDialogParser.g:2818:4: (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis )
                    // InternalDialogParser.g:2819:5: otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,LeftParenthesis,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSadlHasValueConditionAccess().getLeftParenthesisKeyword_3_1_0());
                      				
                    }
                    // InternalDialogParser.g:2823:5: ( (lv_restriction_6_0= ruleSadlNestedInstance ) )
                    // InternalDialogParser.g:2824:6: (lv_restriction_6_0= ruleSadlNestedInstance )
                    {
                    // InternalDialogParser.g:2824:6: (lv_restriction_6_0= ruleSadlNestedInstance )
                    // InternalDialogParser.g:2825:7: lv_restriction_6_0= ruleSadlNestedInstance
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlHasValueConditionAccess().getRestrictionSadlNestedInstanceParserRuleCall_3_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_28);
                    lv_restriction_6_0=ruleSadlNestedInstance();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlHasValueConditionRule());
                      							}
                      							set(
                      								current,
                      								"restriction",
                      								lv_restriction_6_0,
                      								"com.ge.research.sadl.SADL.SadlNestedInstance");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSadlHasValueConditionAccess().getRightParenthesisKeyword_3_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlHasValueCondition"


    // $ANTLR start "entryRuleSadlCardinalityCondition"
    // InternalDialogParser.g:2852:1: entryRuleSadlCardinalityCondition returns [EObject current=null] : iv_ruleSadlCardinalityCondition= ruleSadlCardinalityCondition EOF ;
    public final EObject entryRuleSadlCardinalityCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlCardinalityCondition = null;


        try {
            // InternalDialogParser.g:2852:65: (iv_ruleSadlCardinalityCondition= ruleSadlCardinalityCondition EOF )
            // InternalDialogParser.g:2853:2: iv_ruleSadlCardinalityCondition= ruleSadlCardinalityCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlCardinalityConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlCardinalityCondition=ruleSadlCardinalityCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlCardinalityCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlCardinalityCondition"


    // $ANTLR start "ruleSadlCardinalityCondition"
    // InternalDialogParser.g:2859:1: ruleSadlCardinalityCondition returns [EObject current=null] : ( (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )? ) ;
    public final EObject ruleSadlCardinalityCondition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_operator_3_1=null;
        Token lv_operator_3_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_cardinality_5_0 = null;

        EObject lv_type_10_0 = null;

        EObject lv_facet_11_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2865:2: ( ( (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )? ) )
            // InternalDialogParser.g:2866:2: ( (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )? )
            {
            // InternalDialogParser.g:2866:2: ( (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )? )
            // InternalDialogParser.g:2867:3: (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )?
            {
            // InternalDialogParser.g:2867:3: (otherlv_0= Has | otherlv_1= With )
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==Has) ) {
                alt62=1;
            }
            else if ( (LA62_0==With) ) {
                alt62=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }
            switch (alt62) {
                case 1 :
                    // InternalDialogParser.g:2868:4: otherlv_0= Has
                    {
                    otherlv_0=(Token)match(input,Has,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSadlCardinalityConditionAccess().getHasKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:2873:4: otherlv_1= With
                    {
                    otherlv_1=(Token)match(input,With,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSadlCardinalityConditionAccess().getWithKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:2878:3: ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )?
            int alt64=3;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==At) ) {
                alt64=1;
            }
            else if ( (LA64_0==Exactly) ) {
                alt64=2;
            }
            switch (alt64) {
                case 1 :
                    // InternalDialogParser.g:2879:4: (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) )
                    {
                    // InternalDialogParser.g:2879:4: (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) )
                    // InternalDialogParser.g:2880:5: otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) )
                    {
                    otherlv_2=(Token)match(input,At,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getSadlCardinalityConditionAccess().getAtKeyword_1_0_0());
                      				
                    }
                    // InternalDialogParser.g:2884:5: ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) )
                    // InternalDialogParser.g:2885:6: ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) )
                    {
                    // InternalDialogParser.g:2885:6: ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) )
                    // InternalDialogParser.g:2886:7: (lv_operator_3_1= Least | lv_operator_3_2= Most )
                    {
                    // InternalDialogParser.g:2886:7: (lv_operator_3_1= Least | lv_operator_3_2= Most )
                    int alt63=2;
                    int LA63_0 = input.LA(1);

                    if ( (LA63_0==Least) ) {
                        alt63=1;
                    }
                    else if ( (LA63_0==Most) ) {
                        alt63=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 63, 0, input);

                        throw nvae;
                    }
                    switch (alt63) {
                        case 1 :
                            // InternalDialogParser.g:2887:8: lv_operator_3_1= Least
                            {
                            lv_operator_3_1=(Token)match(input,Least,FOLLOW_73); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_operator_3_1, grammarAccess.getSadlCardinalityConditionAccess().getOperatorLeastKeyword_1_0_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlCardinalityConditionRule());
                              								}
                              								setWithLastConsumed(current, "operator", lv_operator_3_1, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2898:8: lv_operator_3_2= Most
                            {
                            lv_operator_3_2=(Token)match(input,Most,FOLLOW_73); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_operator_3_2, grammarAccess.getSadlCardinalityConditionAccess().getOperatorMostKeyword_1_0_1_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlCardinalityConditionRule());
                              								}
                              								setWithLastConsumed(current, "operator", lv_operator_3_2, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:2913:4: otherlv_4= Exactly
                    {
                    otherlv_4=(Token)match(input,Exactly,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSadlCardinalityConditionAccess().getExactlyKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:2918:3: ( (lv_cardinality_5_0= ruleCardinalityValue ) )
            // InternalDialogParser.g:2919:4: (lv_cardinality_5_0= ruleCardinalityValue )
            {
            // InternalDialogParser.g:2919:4: (lv_cardinality_5_0= ruleCardinalityValue )
            // InternalDialogParser.g:2920:5: lv_cardinality_5_0= ruleCardinalityValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlCardinalityConditionAccess().getCardinalityCardinalityValueParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_75);
            lv_cardinality_5_0=ruleCardinalityValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSadlCardinalityConditionRule());
              					}
              					set(
              						current,
              						"cardinality",
              						lv_cardinality_5_0,
              						"com.ge.research.sadl.SADL.CardinalityValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:2937:3: (otherlv_6= Value | otherlv_7= Values )
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==Value) ) {
                alt65=1;
            }
            else if ( (LA65_0==Values) ) {
                alt65=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }
            switch (alt65) {
                case 1 :
                    // InternalDialogParser.g:2938:4: otherlv_6= Value
                    {
                    otherlv_6=(Token)match(input,Value,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSadlCardinalityConditionAccess().getValueKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:2943:4: otherlv_7= Values
                    {
                    otherlv_7=(Token)match(input,Values,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getSadlCardinalityConditionAccess().getValuesKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:2948:3: (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==Of) ) {
                int LA67_1 = input.LA(2);

                if ( (LA67_1==Type) ) {
                    alt67=1;
                }
            }
            switch (alt67) {
                case 1 :
                    // InternalDialogParser.g:2949:4: otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )?
                    {
                    otherlv_8=(Token)match(input,Of,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSadlCardinalityConditionAccess().getOfKeyword_4_0());
                      			
                    }
                    otherlv_9=(Token)match(input,Type,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSadlCardinalityConditionAccess().getTypeKeyword_4_1());
                      			
                    }
                    // InternalDialogParser.g:2957:4: ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:2958:5: (lv_type_10_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:2958:5: (lv_type_10_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:2959:6: lv_type_10_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlCardinalityConditionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_55);
                    lv_type_10_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlCardinalityConditionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_10_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:2976:4: ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )?
                    int alt66=2;
                    int LA66_0 = input.LA(1);

                    if ( (LA66_0==Length||LA66_0==LeftParenthesis||LA66_0==LeftSquareBracket||LA66_0==LeftCurlyBracket||LA66_0==RULE_STRING) ) {
                        alt66=1;
                    }
                    switch (alt66) {
                        case 1 :
                            // InternalDialogParser.g:2977:5: (lv_facet_11_0= ruleSadlDataTypeFacet )
                            {
                            // InternalDialogParser.g:2977:5: (lv_facet_11_0= ruleSadlDataTypeFacet )
                            // InternalDialogParser.g:2978:6: lv_facet_11_0= ruleSadlDataTypeFacet
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSadlCardinalityConditionAccess().getFacetSadlDataTypeFacetParserRuleCall_4_3_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_facet_11_0=ruleSadlDataTypeFacet();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSadlCardinalityConditionRule());
                              						}
                              						set(
                              							current,
                              							"facet",
                              							lv_facet_11_0,
                              							"com.ge.research.sadl.SADL.SadlDataTypeFacet");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlCardinalityCondition"


    // $ANTLR start "entryRuleCardinalityValue"
    // InternalDialogParser.g:3000:1: entryRuleCardinalityValue returns [String current=null] : iv_ruleCardinalityValue= ruleCardinalityValue EOF ;
    public final String entryRuleCardinalityValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCardinalityValue = null;


        try {
            // InternalDialogParser.g:3000:56: (iv_ruleCardinalityValue= ruleCardinalityValue EOF )
            // InternalDialogParser.g:3001:2: iv_ruleCardinalityValue= ruleCardinalityValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCardinalityValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCardinalityValue=ruleCardinalityValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCardinalityValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCardinalityValue"


    // $ANTLR start "ruleCardinalityValue"
    // InternalDialogParser.g:3007:1: ruleCardinalityValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_NUMBER_0= RULE_NUMBER | kw= One ) ;
    public final AntlrDatatypeRuleToken ruleCardinalityValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_NUMBER_0=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:3013:2: ( (this_NUMBER_0= RULE_NUMBER | kw= One ) )
            // InternalDialogParser.g:3014:2: (this_NUMBER_0= RULE_NUMBER | kw= One )
            {
            // InternalDialogParser.g:3014:2: (this_NUMBER_0= RULE_NUMBER | kw= One )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==RULE_NUMBER) ) {
                alt68=1;
            }
            else if ( (LA68_0==One) ) {
                alt68=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalDialogParser.g:3015:3: this_NUMBER_0= RULE_NUMBER
                    {
                    this_NUMBER_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_NUMBER_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_NUMBER_0, grammarAccess.getCardinalityValueAccess().getNUMBERTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3023:3: kw= One
                    {
                    kw=(Token)match(input,One,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCardinalityValueAccess().getOneKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCardinalityValue"


    // $ANTLR start "entryRuleSadlExplicitValue"
    // InternalDialogParser.g:3032:1: entryRuleSadlExplicitValue returns [EObject current=null] : iv_ruleSadlExplicitValue= ruleSadlExplicitValue EOF ;
    public final EObject entryRuleSadlExplicitValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlExplicitValue = null;


        try {
            // InternalDialogParser.g:3032:58: (iv_ruleSadlExplicitValue= ruleSadlExplicitValue EOF )
            // InternalDialogParser.g:3033:2: iv_ruleSadlExplicitValue= ruleSadlExplicitValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlExplicitValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlExplicitValue=ruleSadlExplicitValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlExplicitValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlExplicitValue"


    // $ANTLR start "ruleSadlExplicitValue"
    // InternalDialogParser.g:3039:1: ruleSadlExplicitValue returns [EObject current=null] : (this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral | ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) ) ) ;
    public final EObject ruleSadlExplicitValue() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_1=null;
        Token lv_operator_2_2=null;
        EObject this_SadlExplicitValueLiteral_0 = null;

        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3045:2: ( (this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral | ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) ) ) )
            // InternalDialogParser.g:3046:2: (this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral | ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) ) )
            {
            // InternalDialogParser.g:3046:2: (this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral | ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) ) )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==False||LA70_0==Known||LA70_0==True||LA70_0==PI||LA70_0==LeftSquareBracket||LA70_0==E_1||LA70_0==RULE_NUMBER||(LA70_0>=RULE_ID && LA70_0<=RULE_STRING)) ) {
                alt70=1;
            }
            else if ( (LA70_0==HyphenMinus) && (synpred1_InternalDialogParser())) {
                alt70=2;
            }
            else if ( (LA70_0==Not) && (synpred1_InternalDialogParser())) {
                alt70=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }
            switch (alt70) {
                case 1 :
                    // InternalDialogParser.g:3047:3: this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlExplicitValueAccess().getSadlExplicitValueLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlExplicitValueLiteral_0=ruleSadlExplicitValueLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlExplicitValueLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3056:3: ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) )
                    {
                    // InternalDialogParser.g:3056:3: ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) )
                    // InternalDialogParser.g:3057:4: ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) )
                    {
                    // InternalDialogParser.g:3076:4: ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) )
                    // InternalDialogParser.g:3077:5: () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) )
                    {
                    // InternalDialogParser.g:3077:5: ()
                    // InternalDialogParser.g:3078:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSadlExplicitValueAccess().getSadlUnaryExpressionAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalDialogParser.g:3084:5: ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) )
                    // InternalDialogParser.g:3085:6: ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) )
                    {
                    // InternalDialogParser.g:3085:6: ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) )
                    // InternalDialogParser.g:3086:7: (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not )
                    {
                    // InternalDialogParser.g:3086:7: (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not )
                    int alt69=2;
                    int LA69_0 = input.LA(1);

                    if ( (LA69_0==HyphenMinus) ) {
                        alt69=1;
                    }
                    else if ( (LA69_0==Not) ) {
                        alt69=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 69, 0, input);

                        throw nvae;
                    }
                    switch (alt69) {
                        case 1 :
                            // InternalDialogParser.g:3087:8: lv_operator_2_1= HyphenMinus
                            {
                            lv_operator_2_1=(Token)match(input,HyphenMinus,FOLLOW_77); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_operator_2_1, grammarAccess.getSadlExplicitValueAccess().getOperatorHyphenMinusKeyword_1_0_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlExplicitValueRule());
                              								}
                              								setWithLastConsumed(current, "operator", lv_operator_2_1, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3098:8: lv_operator_2_2= Not
                            {
                            lv_operator_2_2=(Token)match(input,Not,FOLLOW_77); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_operator_2_2, grammarAccess.getSadlExplicitValueAccess().getOperatorNotKeyword_1_0_1_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlExplicitValueRule());
                              								}
                              								setWithLastConsumed(current, "operator", lv_operator_2_2, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:3111:5: ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) )
                    // InternalDialogParser.g:3112:6: (lv_value_3_0= ruleSadlExplicitValueLiteral )
                    {
                    // InternalDialogParser.g:3112:6: (lv_value_3_0= ruleSadlExplicitValueLiteral )
                    // InternalDialogParser.g:3113:7: lv_value_3_0= ruleSadlExplicitValueLiteral
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlExplicitValueAccess().getValueSadlExplicitValueLiteralParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleSadlExplicitValueLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlExplicitValueRule());
                      							}
                      							set(
                      								current,
                      								"value",
                      								lv_value_3_0,
                      								"com.ge.research.sadl.SADL.SadlExplicitValueLiteral");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlExplicitValue"


    // $ANTLR start "entryRuleSadlExplicitValueLiteral"
    // InternalDialogParser.g:3136:1: entryRuleSadlExplicitValueLiteral returns [EObject current=null] : iv_ruleSadlExplicitValueLiteral= ruleSadlExplicitValueLiteral EOF ;
    public final EObject entryRuleSadlExplicitValueLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlExplicitValueLiteral = null;


        try {
            // InternalDialogParser.g:3136:65: (iv_ruleSadlExplicitValueLiteral= ruleSadlExplicitValueLiteral EOF )
            // InternalDialogParser.g:3137:2: iv_ruleSadlExplicitValueLiteral= ruleSadlExplicitValueLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlExplicitValueLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlExplicitValueLiteral=ruleSadlExplicitValueLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlExplicitValueLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlExplicitValueLiteral"


    // $ANTLR start "ruleSadlExplicitValueLiteral"
    // InternalDialogParser.g:3143:1: ruleSadlExplicitValueLiteral returns [EObject current=null] : (this_SadlResource_0= ruleSadlResource | ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? ) | ( () ( (lv_literalString_5_0= RULE_STRING ) ) ) | ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) ) | this_SadlValueList_9= ruleSadlValueList | ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) ) ) ;
    public final EObject ruleSadlExplicitValueLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_literalString_5_0=null;
        Token lv_truethy_7_0=null;
        Token otherlv_8=null;
        Token lv_term_11_1=null;
        Token lv_term_11_2=null;
        Token lv_term_11_3=null;
        EObject this_SadlResource_0 = null;

        AntlrDatatypeRuleToken lv_literalNumber_2_0 = null;

        AntlrDatatypeRuleToken lv_unit_3_0 = null;

        EObject this_SadlValueList_9 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3149:2: ( (this_SadlResource_0= ruleSadlResource | ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? ) | ( () ( (lv_literalString_5_0= RULE_STRING ) ) ) | ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) ) | this_SadlValueList_9= ruleSadlValueList | ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) ) ) )
            // InternalDialogParser.g:3150:2: (this_SadlResource_0= ruleSadlResource | ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? ) | ( () ( (lv_literalString_5_0= RULE_STRING ) ) ) | ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) ) | this_SadlValueList_9= ruleSadlValueList | ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) ) )
            {
            // InternalDialogParser.g:3150:2: (this_SadlResource_0= ruleSadlResource | ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? ) | ( () ( (lv_literalString_5_0= RULE_STRING ) ) ) | ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) ) | this_SadlValueList_9= ruleSadlValueList | ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) ) )
            int alt74=6;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt74=1;
                }
                break;
            case RULE_NUMBER:
                {
                alt74=2;
                }
                break;
            case RULE_STRING:
                {
                alt74=3;
                }
                break;
            case False:
            case True:
                {
                alt74=4;
                }
                break;
            case LeftSquareBracket:
                {
                alt74=5;
                }
                break;
            case Known:
            case PI:
            case E_1:
                {
                alt74=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }

            switch (alt74) {
                case 1 :
                    // InternalDialogParser.g:3151:3: this_SadlResource_0= ruleSadlResource
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getSadlResourceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlResource_0=ruleSadlResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlResource_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3160:3: ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? )
                    {
                    // InternalDialogParser.g:3160:3: ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? )
                    // InternalDialogParser.g:3161:4: () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )?
                    {
                    // InternalDialogParser.g:3161:4: ()
                    // InternalDialogParser.g:3162:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlNumberLiteralAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:3168:4: ( (lv_literalNumber_2_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:3169:5: (lv_literalNumber_2_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:3169:5: (lv_literalNumber_2_0= ruleAnyNumber )
                    // InternalDialogParser.g:3170:6: lv_literalNumber_2_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getLiteralNumberAnyNumberParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_78);
                    lv_literalNumber_2_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlExplicitValueLiteralRule());
                      						}
                      						set(
                      							current,
                      							"literalNumber",
                      							lv_literalNumber_2_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:3187:4: ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )?
                    int alt71=2;
                    alt71 = dfa71.predict(input);
                    switch (alt71) {
                        case 1 :
                            // InternalDialogParser.g:3188:5: ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT )
                            {
                            // InternalDialogParser.g:3189:5: (lv_unit_3_0= ruleUNIT )
                            // InternalDialogParser.g:3190:6: lv_unit_3_0= ruleUNIT
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getUnitUNITParserRuleCall_1_2_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_unit_3_0=ruleUNIT();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSadlExplicitValueLiteralRule());
                              						}
                              						set(
                              							current,
                              							"unit",
                              							lv_unit_3_0,
                              							"com.ge.research.sadl.SADL.UNIT");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:3209:3: ( () ( (lv_literalString_5_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:3209:3: ( () ( (lv_literalString_5_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:3210:4: () ( (lv_literalString_5_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:3210:4: ()
                    // InternalDialogParser.g:3211:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlStringLiteralAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:3217:4: ( (lv_literalString_5_0= RULE_STRING ) )
                    // InternalDialogParser.g:3218:5: (lv_literalString_5_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:3218:5: (lv_literalString_5_0= RULE_STRING )
                    // InternalDialogParser.g:3219:6: lv_literalString_5_0= RULE_STRING
                    {
                    lv_literalString_5_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_literalString_5_0, grammarAccess.getSadlExplicitValueLiteralAccess().getLiteralStringSTRINGTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"literalString",
                      							lv_literalString_5_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:3237:3: ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) )
                    {
                    // InternalDialogParser.g:3237:3: ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) )
                    // InternalDialogParser.g:3238:4: () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False )
                    {
                    // InternalDialogParser.g:3238:4: ()
                    // InternalDialogParser.g:3239:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlBooleanLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:3245:4: ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False )
                    int alt72=2;
                    int LA72_0 = input.LA(1);

                    if ( (LA72_0==True) ) {
                        alt72=1;
                    }
                    else if ( (LA72_0==False) ) {
                        alt72=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 72, 0, input);

                        throw nvae;
                    }
                    switch (alt72) {
                        case 1 :
                            // InternalDialogParser.g:3246:5: ( (lv_truethy_7_0= True ) )
                            {
                            // InternalDialogParser.g:3246:5: ( (lv_truethy_7_0= True ) )
                            // InternalDialogParser.g:3247:6: (lv_truethy_7_0= True )
                            {
                            // InternalDialogParser.g:3247:6: (lv_truethy_7_0= True )
                            // InternalDialogParser.g:3248:7: lv_truethy_7_0= True
                            {
                            lv_truethy_7_0=(Token)match(input,True,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_truethy_7_0, grammarAccess.getSadlExplicitValueLiteralAccess().getTruethyTrueKeyword_3_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                              							}
                              							setWithLastConsumed(current, "truethy", true, "true");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3261:5: otherlv_8= False
                            {
                            otherlv_8=(Token)match(input,False,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getSadlExplicitValueLiteralAccess().getFalseKeyword_3_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:3268:3: this_SadlValueList_9= ruleSadlValueList
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getSadlValueListParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlValueList_9=ruleSadlValueList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlValueList_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:3277:3: ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) )
                    {
                    // InternalDialogParser.g:3277:3: ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) )
                    // InternalDialogParser.g:3278:4: () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) )
                    {
                    // InternalDialogParser.g:3278:4: ()
                    // InternalDialogParser.g:3279:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlConstantLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:3285:4: ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) )
                    // InternalDialogParser.g:3286:5: ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) )
                    {
                    // InternalDialogParser.g:3286:5: ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) )
                    // InternalDialogParser.g:3287:6: (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known )
                    {
                    // InternalDialogParser.g:3287:6: (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known )
                    int alt73=3;
                    switch ( input.LA(1) ) {
                    case PI:
                        {
                        alt73=1;
                        }
                        break;
                    case E_1:
                        {
                        alt73=2;
                        }
                        break;
                    case Known:
                        {
                        alt73=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 73, 0, input);

                        throw nvae;
                    }

                    switch (alt73) {
                        case 1 :
                            // InternalDialogParser.g:3288:7: lv_term_11_1= PI
                            {
                            lv_term_11_1=(Token)match(input,PI,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_term_11_1, grammarAccess.getSadlExplicitValueLiteralAccess().getTermPIKeyword_5_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                              							}
                              							setWithLastConsumed(current, "term", lv_term_11_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3299:7: lv_term_11_2= E_1
                            {
                            lv_term_11_2=(Token)match(input,E_1,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_term_11_2, grammarAccess.getSadlExplicitValueLiteralAccess().getTermEKeyword_5_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                              							}
                              							setWithLastConsumed(current, "term", lv_term_11_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:3310:7: lv_term_11_3= Known
                            {
                            lv_term_11_3=(Token)match(input,Known,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_term_11_3, grammarAccess.getSadlExplicitValueLiteralAccess().getTermKnownKeyword_5_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                              							}
                              							setWithLastConsumed(current, "term", lv_term_11_3, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlExplicitValueLiteral"


    // $ANTLR start "entryRuleUNIT"
    // InternalDialogParser.g:3328:1: entryRuleUNIT returns [String current=null] : iv_ruleUNIT= ruleUNIT EOF ;
    public final String entryRuleUNIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUNIT = null;


        try {
            // InternalDialogParser.g:3328:44: (iv_ruleUNIT= ruleUNIT EOF )
            // InternalDialogParser.g:3329:2: iv_ruleUNIT= ruleUNIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUNITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUNIT=ruleUNIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUNIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUNIT"


    // $ANTLR start "ruleUNIT"
    // InternalDialogParser.g:3335:1: ruleUNIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleUNIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_ID_1=null;


        	enterRule();

        try {
            // InternalDialogParser.g:3341:2: ( (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) )
            // InternalDialogParser.g:3342:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            {
            // InternalDialogParser.g:3342:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==RULE_STRING) ) {
                alt75=1;
            }
            else if ( (LA75_0==RULE_ID) ) {
                alt75=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }
            switch (alt75) {
                case 1 :
                    // InternalDialogParser.g:3343:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getUNITAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3351:3: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_1, grammarAccess.getUNITAccess().getIDTerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUNIT"


    // $ANTLR start "entryRuleSadlValueList"
    // InternalDialogParser.g:3362:1: entryRuleSadlValueList returns [EObject current=null] : iv_ruleSadlValueList= ruleSadlValueList EOF ;
    public final EObject entryRuleSadlValueList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlValueList = null;


        try {
            // InternalDialogParser.g:3362:54: (iv_ruleSadlValueList= ruleSadlValueList EOF )
            // InternalDialogParser.g:3363:2: iv_ruleSadlValueList= ruleSadlValueList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlValueListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlValueList=ruleSadlValueList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlValueList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlValueList"


    // $ANTLR start "ruleSadlValueList"
    // InternalDialogParser.g:3369:1: ruleSadlValueList returns [EObject current=null] : ( () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket ) ;
    public final EObject ruleSadlValueList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_explicitValues_2_0 = null;

        EObject lv_explicitValues_4_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3375:2: ( ( () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket ) )
            // InternalDialogParser.g:3376:2: ( () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket )
            {
            // InternalDialogParser.g:3376:2: ( () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket )
            // InternalDialogParser.g:3377:3: () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket
            {
            // InternalDialogParser.g:3377:3: ()
            // InternalDialogParser.g:3378:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSadlValueListAccess().getSadlValueListAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_79); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSadlValueListAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalDialogParser.g:3388:3: ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==False||LA77_0==Known||LA77_0==True||LA77_0==Not||LA77_0==PI||LA77_0==HyphenMinus||LA77_0==LeftSquareBracket||LA77_0==E_1||LA77_0==RULE_NUMBER||(LA77_0>=RULE_ID && LA77_0<=RULE_STRING)) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalDialogParser.g:3389:4: ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )*
                    {
                    // InternalDialogParser.g:3389:4: ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:3390:5: (lv_explicitValues_2_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:3390:5: (lv_explicitValues_2_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:3391:6: lv_explicitValues_2_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlValueListAccess().getExplicitValuesSadlExplicitValueParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_80);
                    lv_explicitValues_2_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlValueListRule());
                      						}
                      						add(
                      							current,
                      							"explicitValues",
                      							lv_explicitValues_2_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:3408:4: (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )*
                    loop76:
                    do {
                        int alt76=2;
                        int LA76_0 = input.LA(1);

                        if ( (LA76_0==Comma) ) {
                            alt76=1;
                        }


                        switch (alt76) {
                    	case 1 :
                    	    // InternalDialogParser.g:3409:5: otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_64); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getSadlValueListAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:3413:5: ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) )
                    	    // InternalDialogParser.g:3414:6: (lv_explicitValues_4_0= ruleSadlExplicitValue )
                    	    {
                    	    // InternalDialogParser.g:3414:6: (lv_explicitValues_4_0= ruleSadlExplicitValue )
                    	    // InternalDialogParser.g:3415:7: lv_explicitValues_4_0= ruleSadlExplicitValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlValueListAccess().getExplicitValuesSadlExplicitValueParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_80);
                    	    lv_explicitValues_4_0=ruleSadlExplicitValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlValueListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"explicitValues",
                    	      								lv_explicitValues_4_0,
                    	      								"com.ge.research.sadl.SADL.SadlExplicitValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop76;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getSadlValueListAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlValueList"


    // $ANTLR start "entryRuleAnArticle"
    // InternalDialogParser.g:3442:1: entryRuleAnArticle returns [String current=null] : iv_ruleAnArticle= ruleAnArticle EOF ;
    public final String entryRuleAnArticle() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAnArticle = null;


        try {
            // InternalDialogParser.g:3442:49: (iv_ruleAnArticle= ruleAnArticle EOF )
            // InternalDialogParser.g:3443:2: iv_ruleAnArticle= ruleAnArticle EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnArticleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnArticle=ruleAnArticle();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnArticle.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnArticle"


    // $ANTLR start "ruleAnArticle"
    // InternalDialogParser.g:3449:1: ruleAnArticle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IndefiniteArticle_0= ruleIndefiniteArticle | this_DefiniteArticle_1= ruleDefiniteArticle ) ;
    public final AntlrDatatypeRuleToken ruleAnArticle() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IndefiniteArticle_0 = null;

        AntlrDatatypeRuleToken this_DefiniteArticle_1 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3455:2: ( (this_IndefiniteArticle_0= ruleIndefiniteArticle | this_DefiniteArticle_1= ruleDefiniteArticle ) )
            // InternalDialogParser.g:3456:2: (this_IndefiniteArticle_0= ruleIndefiniteArticle | this_DefiniteArticle_1= ruleDefiniteArticle )
            {
            // InternalDialogParser.g:3456:2: (this_IndefiniteArticle_0= ruleIndefiniteArticle | this_DefiniteArticle_1= ruleDefiniteArticle )
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==Another||LA78_0==Some||LA78_0==Any||LA78_0==An||LA78_0==An_1||LA78_0==A||LA78_0==A_1) ) {
                alt78=1;
            }
            else if ( (LA78_0==The||LA78_0==The_1) ) {
                alt78=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;
            }
            switch (alt78) {
                case 1 :
                    // InternalDialogParser.g:3457:3: this_IndefiniteArticle_0= ruleIndefiniteArticle
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnArticleAccess().getIndefiniteArticleParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IndefiniteArticle_0=ruleIndefiniteArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_IndefiniteArticle_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3468:3: this_DefiniteArticle_1= ruleDefiniteArticle
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnArticleAccess().getDefiniteArticleParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DefiniteArticle_1=ruleDefiniteArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_DefiniteArticle_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnArticle"


    // $ANTLR start "entryRuleIndefiniteArticle"
    // InternalDialogParser.g:3482:1: entryRuleIndefiniteArticle returns [String current=null] : iv_ruleIndefiniteArticle= ruleIndefiniteArticle EOF ;
    public final String entryRuleIndefiniteArticle() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIndefiniteArticle = null;


        try {
            // InternalDialogParser.g:3482:57: (iv_ruleIndefiniteArticle= ruleIndefiniteArticle EOF )
            // InternalDialogParser.g:3483:2: iv_ruleIndefiniteArticle= ruleIndefiniteArticle EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIndefiniteArticleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIndefiniteArticle=ruleIndefiniteArticle();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIndefiniteArticle.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIndefiniteArticle"


    // $ANTLR start "ruleIndefiniteArticle"
    // InternalDialogParser.g:3489:1: ruleIndefiniteArticle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= A | kw= A_1 | kw= An | kw= An_1 | kw= Any | kw= Some | kw= Another ) ;
    public final AntlrDatatypeRuleToken ruleIndefiniteArticle() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:3495:2: ( (kw= A | kw= A_1 | kw= An | kw= An_1 | kw= Any | kw= Some | kw= Another ) )
            // InternalDialogParser.g:3496:2: (kw= A | kw= A_1 | kw= An | kw= An_1 | kw= Any | kw= Some | kw= Another )
            {
            // InternalDialogParser.g:3496:2: (kw= A | kw= A_1 | kw= An | kw= An_1 | kw= Any | kw= Some | kw= Another )
            int alt79=7;
            switch ( input.LA(1) ) {
            case A:
                {
                alt79=1;
                }
                break;
            case A_1:
                {
                alt79=2;
                }
                break;
            case An:
                {
                alt79=3;
                }
                break;
            case An_1:
                {
                alt79=4;
                }
                break;
            case Any:
                {
                alt79=5;
                }
                break;
            case Some:
                {
                alt79=6;
                }
                break;
            case Another:
                {
                alt79=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;
            }

            switch (alt79) {
                case 1 :
                    // InternalDialogParser.g:3497:3: kw= A
                    {
                    kw=(Token)match(input,A,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3503:3: kw= A_1
                    {
                    kw=(Token)match(input,A_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:3509:3: kw= An
                    {
                    kw=(Token)match(input,An,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:3515:3: kw= An_1
                    {
                    kw=(Token)match(input,An_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:3521:3: kw= Any
                    {
                    kw=(Token)match(input,Any,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnyKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:3527:3: kw= Some
                    {
                    kw=(Token)match(input,Some,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getSomeKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:3533:3: kw= Another
                    {
                    kw=(Token)match(input,Another,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnotherKeyword_6());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIndefiniteArticle"


    // $ANTLR start "entryRuleDefiniteArticle"
    // InternalDialogParser.g:3542:1: entryRuleDefiniteArticle returns [String current=null] : iv_ruleDefiniteArticle= ruleDefiniteArticle EOF ;
    public final String entryRuleDefiniteArticle() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDefiniteArticle = null;


        try {
            // InternalDialogParser.g:3542:55: (iv_ruleDefiniteArticle= ruleDefiniteArticle EOF )
            // InternalDialogParser.g:3543:2: iv_ruleDefiniteArticle= ruleDefiniteArticle EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefiniteArticleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefiniteArticle=ruleDefiniteArticle();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefiniteArticle.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefiniteArticle"


    // $ANTLR start "ruleDefiniteArticle"
    // InternalDialogParser.g:3549:1: ruleDefiniteArticle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= The | kw= The_1 ) ;
    public final AntlrDatatypeRuleToken ruleDefiniteArticle() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:3555:2: ( (kw= The | kw= The_1 ) )
            // InternalDialogParser.g:3556:2: (kw= The | kw= The_1 )
            {
            // InternalDialogParser.g:3556:2: (kw= The | kw= The_1 )
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==The) ) {
                alt80=1;
            }
            else if ( (LA80_0==The_1) ) {
                alt80=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 80, 0, input);

                throw nvae;
            }
            switch (alt80) {
                case 1 :
                    // InternalDialogParser.g:3557:3: kw= The
                    {
                    kw=(Token)match(input,The,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDefiniteArticleAccess().getTheKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3563:3: kw= The_1
                    {
                    kw=(Token)match(input,The_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDefiniteArticleAccess().getTheKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefiniteArticle"


    // $ANTLR start "entryRuleOrdinal"
    // InternalDialogParser.g:3572:1: entryRuleOrdinal returns [String current=null] : iv_ruleOrdinal= ruleOrdinal EOF ;
    public final String entryRuleOrdinal() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOrdinal = null;


        try {
            // InternalDialogParser.g:3572:47: (iv_ruleOrdinal= ruleOrdinal EOF )
            // InternalDialogParser.g:3573:2: iv_ruleOrdinal= ruleOrdinal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrdinalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrdinal=ruleOrdinal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrdinal.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrdinal"


    // $ANTLR start "ruleOrdinal"
    // InternalDialogParser.g:3579:1: ruleOrdinal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= First | kw= Second | kw= Other | kw= Third | kw= Fourth | kw= Fifth | kw= Sixth | kw= Seventh | kw= Eighth | kw= Ninth | kw= Tenth ) ;
    public final AntlrDatatypeRuleToken ruleOrdinal() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:3585:2: ( (kw= First | kw= Second | kw= Other | kw= Third | kw= Fourth | kw= Fifth | kw= Sixth | kw= Seventh | kw= Eighth | kw= Ninth | kw= Tenth ) )
            // InternalDialogParser.g:3586:2: (kw= First | kw= Second | kw= Other | kw= Third | kw= Fourth | kw= Fifth | kw= Sixth | kw= Seventh | kw= Eighth | kw= Ninth | kw= Tenth )
            {
            // InternalDialogParser.g:3586:2: (kw= First | kw= Second | kw= Other | kw= Third | kw= Fourth | kw= Fifth | kw= Sixth | kw= Seventh | kw= Eighth | kw= Ninth | kw= Tenth )
            int alt81=11;
            switch ( input.LA(1) ) {
            case First:
                {
                alt81=1;
                }
                break;
            case Second:
                {
                alt81=2;
                }
                break;
            case Other:
                {
                alt81=3;
                }
                break;
            case Third:
                {
                alt81=4;
                }
                break;
            case Fourth:
                {
                alt81=5;
                }
                break;
            case Fifth:
                {
                alt81=6;
                }
                break;
            case Sixth:
                {
                alt81=7;
                }
                break;
            case Seventh:
                {
                alt81=8;
                }
                break;
            case Eighth:
                {
                alt81=9;
                }
                break;
            case Ninth:
                {
                alt81=10;
                }
                break;
            case Tenth:
                {
                alt81=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 81, 0, input);

                throw nvae;
            }

            switch (alt81) {
                case 1 :
                    // InternalDialogParser.g:3587:3: kw= First
                    {
                    kw=(Token)match(input,First,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getFirstKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3593:3: kw= Second
                    {
                    kw=(Token)match(input,Second,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getSecondKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:3599:3: kw= Other
                    {
                    kw=(Token)match(input,Other,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getOtherKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:3605:3: kw= Third
                    {
                    kw=(Token)match(input,Third,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getThirdKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:3611:3: kw= Fourth
                    {
                    kw=(Token)match(input,Fourth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getFourthKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:3617:3: kw= Fifth
                    {
                    kw=(Token)match(input,Fifth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getFifthKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:3623:3: kw= Sixth
                    {
                    kw=(Token)match(input,Sixth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getSixthKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:3629:3: kw= Seventh
                    {
                    kw=(Token)match(input,Seventh,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getSeventhKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalDialogParser.g:3635:3: kw= Eighth
                    {
                    kw=(Token)match(input,Eighth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getEighthKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalDialogParser.g:3641:3: kw= Ninth
                    {
                    kw=(Token)match(input,Ninth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getNinthKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalDialogParser.g:3647:3: kw= Tenth
                    {
                    kw=(Token)match(input,Tenth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getTenthKeyword_10());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrdinal"


    // $ANTLR start "entryRuleNamedStructureAnnotation"
    // InternalDialogParser.g:3656:1: entryRuleNamedStructureAnnotation returns [EObject current=null] : iv_ruleNamedStructureAnnotation= ruleNamedStructureAnnotation EOF ;
    public final EObject entryRuleNamedStructureAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedStructureAnnotation = null;


        try {
            // InternalDialogParser.g:3656:65: (iv_ruleNamedStructureAnnotation= ruleNamedStructureAnnotation EOF )
            // InternalDialogParser.g:3657:2: iv_ruleNamedStructureAnnotation= ruleNamedStructureAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedStructureAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedStructureAnnotation=ruleNamedStructureAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedStructureAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedStructureAnnotation"


    // $ANTLR start "ruleNamedStructureAnnotation"
    // InternalDialogParser.g:3663:1: ruleNamedStructureAnnotation returns [EObject current=null] : ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis ) ;
    public final EObject ruleNamedStructureAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_type_2_0 = null;

        EObject lv_contents_3_0 = null;

        EObject lv_contents_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3669:2: ( ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis ) )
            // InternalDialogParser.g:3670:2: ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis )
            {
            // InternalDialogParser.g:3670:2: ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis )
            // InternalDialogParser.g:3671:3: (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis
            {
            // InternalDialogParser.g:3671:3: (otherlv_0= Comma )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==Comma) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalDialogParser.g:3672:4: otherlv_0= Comma
                    {
                    otherlv_0=(Token)match(input,Comma,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getNamedStructureAnnotationAccess().getCommaKeyword_0());
                      			
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNamedStructureAnnotationAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalDialogParser.g:3681:3: ( (lv_type_2_0= ruleSadlResource ) )
            // InternalDialogParser.g:3682:4: (lv_type_2_0= ruleSadlResource )
            {
            // InternalDialogParser.g:3682:4: (lv_type_2_0= ruleSadlResource )
            // InternalDialogParser.g:3683:5: lv_type_2_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedStructureAnnotationAccess().getTypeSadlResourceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_64);
            lv_type_2_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedStructureAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:3700:3: ( (lv_contents_3_0= ruleSadlExplicitValue ) )
            // InternalDialogParser.g:3701:4: (lv_contents_3_0= ruleSadlExplicitValue )
            {
            // InternalDialogParser.g:3701:4: (lv_contents_3_0= ruleSadlExplicitValue )
            // InternalDialogParser.g:3702:5: lv_contents_3_0= ruleSadlExplicitValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedStructureAnnotationAccess().getContentsSadlExplicitValueParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_contents_3_0=ruleSadlExplicitValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedStructureAnnotationRule());
              					}
              					add(
              						current,
              						"contents",
              						lv_contents_3_0,
              						"com.ge.research.sadl.SADL.SadlExplicitValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:3719:3: (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==Comma) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    // InternalDialogParser.g:3720:4: otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) )
            	    {
            	    otherlv_4=(Token)match(input,Comma,FOLLOW_64); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getNamedStructureAnnotationAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalDialogParser.g:3724:4: ( (lv_contents_5_0= ruleSadlExplicitValue ) )
            	    // InternalDialogParser.g:3725:5: (lv_contents_5_0= ruleSadlExplicitValue )
            	    {
            	    // InternalDialogParser.g:3725:5: (lv_contents_5_0= ruleSadlExplicitValue )
            	    // InternalDialogParser.g:3726:6: lv_contents_5_0= ruleSadlExplicitValue
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNamedStructureAnnotationAccess().getContentsSadlExplicitValueParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_16);
            	    lv_contents_5_0=ruleSadlExplicitValue();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNamedStructureAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"contents",
            	      							lv_contents_5_0,
            	      							"com.ge.research.sadl.SADL.SadlExplicitValue");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getNamedStructureAnnotationAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedStructureAnnotation"


    // $ANTLR start "entryRuleConstructExpression"
    // InternalDialogParser.g:3752:1: entryRuleConstructExpression returns [EObject current=null] : iv_ruleConstructExpression= ruleConstructExpression EOF ;
    public final EObject entryRuleConstructExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstructExpression = null;


        try {
            // InternalDialogParser.g:3752:60: (iv_ruleConstructExpression= ruleConstructExpression EOF )
            // InternalDialogParser.g:3753:2: iv_ruleConstructExpression= ruleConstructExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstructExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstructExpression=ruleConstructExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstructExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstructExpression"


    // $ANTLR start "ruleConstructExpression"
    // InternalDialogParser.g:3759:1: ruleConstructExpression returns [EObject current=null] : ( () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) ) ;
    public final EObject ruleConstructExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_subj_2_0 = null;

        EObject lv_pred_4_0 = null;

        EObject lv_obj_6_0 = null;

        EObject lv_whereExpression_8_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3765:2: ( ( () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) ) )
            // InternalDialogParser.g:3766:2: ( () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )
            {
            // InternalDialogParser.g:3766:2: ( () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )
            // InternalDialogParser.g:3767:3: () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) )
            {
            // InternalDialogParser.g:3767:3: ()
            // InternalDialogParser.g:3768:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConstructExpressionAccess().getConstructExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Construct,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConstructExpressionAccess().getConstructKeyword_1());
              		
            }
            // InternalDialogParser.g:3778:3: ( (lv_subj_2_0= ruleSadlResource ) )
            // InternalDialogParser.g:3779:4: (lv_subj_2_0= ruleSadlResource )
            {
            // InternalDialogParser.g:3779:4: (lv_subj_2_0= ruleSadlResource )
            // InternalDialogParser.g:3780:5: lv_subj_2_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstructExpressionAccess().getSubjSadlResourceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_81);
            lv_subj_2_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
              					}
              					set(
              						current,
              						"subj",
              						lv_subj_2_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:3797:3: (otherlv_3= Comma )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==Comma) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalDialogParser.g:3798:4: otherlv_3= Comma
                    {
                    otherlv_3=(Token)match(input,Comma,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getConstructExpressionAccess().getCommaKeyword_3());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:3803:3: ( (lv_pred_4_0= ruleSadlResource ) )
            // InternalDialogParser.g:3804:4: (lv_pred_4_0= ruleSadlResource )
            {
            // InternalDialogParser.g:3804:4: (lv_pred_4_0= ruleSadlResource )
            // InternalDialogParser.g:3805:5: lv_pred_4_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstructExpressionAccess().getPredSadlResourceParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_81);
            lv_pred_4_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
              					}
              					set(
              						current,
              						"pred",
              						lv_pred_4_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:3822:3: (otherlv_5= Comma )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==Comma) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalDialogParser.g:3823:4: otherlv_5= Comma
                    {
                    otherlv_5=(Token)match(input,Comma,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getConstructExpressionAccess().getCommaKeyword_5());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:3828:3: ( (lv_obj_6_0= ruleSadlResource ) )
            // InternalDialogParser.g:3829:4: (lv_obj_6_0= ruleSadlResource )
            {
            // InternalDialogParser.g:3829:4: (lv_obj_6_0= ruleSadlResource )
            // InternalDialogParser.g:3830:5: lv_obj_6_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstructExpressionAccess().getObjSadlResourceParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_82);
            lv_obj_6_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
              					}
              					set(
              						current,
              						"obj",
              						lv_obj_6_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,Where,FOLLOW_83); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getConstructExpressionAccess().getWhereKeyword_7());
              		
            }
            // InternalDialogParser.g:3851:3: ( (lv_whereExpression_8_0= ruleExpression ) )
            // InternalDialogParser.g:3852:4: (lv_whereExpression_8_0= ruleExpression )
            {
            // InternalDialogParser.g:3852:4: (lv_whereExpression_8_0= ruleExpression )
            // InternalDialogParser.g:3853:5: lv_whereExpression_8_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstructExpressionAccess().getWhereExpressionExpressionParserRuleCall_8_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_whereExpression_8_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
              					}
              					set(
              						current,
              						"whereExpression",
              						lv_whereExpression_8_0,
              						"com.ge.research.sadl.SADL.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstructExpression"


    // $ANTLR start "entryRuleAskExpression"
    // InternalDialogParser.g:3874:1: entryRuleAskExpression returns [EObject current=null] : iv_ruleAskExpression= ruleAskExpression EOF ;
    public final EObject entryRuleAskExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAskExpression = null;


        try {
            // InternalDialogParser.g:3874:54: (iv_ruleAskExpression= ruleAskExpression EOF )
            // InternalDialogParser.g:3875:2: iv_ruleAskExpression= ruleAskExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAskExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAskExpression=ruleAskExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAskExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAskExpression"


    // $ANTLR start "ruleAskExpression"
    // InternalDialogParser.g:3881:1: ruleAskExpression returns [EObject current=null] : ( () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) ) ) ;
    public final EObject ruleAskExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_whereExpression_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3887:2: ( ( () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) ) ) )
            // InternalDialogParser.g:3888:2: ( () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) ) )
            {
            // InternalDialogParser.g:3888:2: ( () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) ) )
            // InternalDialogParser.g:3889:3: () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) )
            {
            // InternalDialogParser.g:3889:3: ()
            // InternalDialogParser.g:3890:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAskExpressionAccess().getAskExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Ask_1,FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAskExpressionAccess().getAskKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,Where,FOLLOW_83); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAskExpressionAccess().getWhereKeyword_2());
              		
            }
            // InternalDialogParser.g:3904:3: ( (lv_whereExpression_3_0= ruleExpression ) )
            // InternalDialogParser.g:3905:4: (lv_whereExpression_3_0= ruleExpression )
            {
            // InternalDialogParser.g:3905:4: (lv_whereExpression_3_0= ruleExpression )
            // InternalDialogParser.g:3906:5: lv_whereExpression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAskExpressionAccess().getWhereExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_whereExpression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAskExpressionRule());
              					}
              					set(
              						current,
              						"whereExpression",
              						lv_whereExpression_3_0,
              						"com.ge.research.sadl.SADL.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAskExpression"


    // $ANTLR start "entryRuleUpdateExpression"
    // InternalDialogParser.g:3927:1: entryRuleUpdateExpression returns [EObject current=null] : iv_ruleUpdateExpression= ruleUpdateExpression EOF ;
    public final EObject entryRuleUpdateExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUpdateExpression = null;


        try {
            // InternalDialogParser.g:3927:57: (iv_ruleUpdateExpression= ruleUpdateExpression EOF )
            // InternalDialogParser.g:3928:2: iv_ruleUpdateExpression= ruleUpdateExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUpdateExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUpdateExpression=ruleUpdateExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUpdateExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUpdateExpression"


    // $ANTLR start "ruleUpdateExpression"
    // InternalDialogParser.g:3934:1: ruleUpdateExpression returns [EObject current=null] : ( () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )? ) ;
    public final EObject ruleUpdateExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_dData_2_0=null;
        Token otherlv_4=null;
        Token lv_iData_5_0=null;
        Token otherlv_7=null;
        EObject lv_deleteExpression_3_0 = null;

        EObject lv_insertExpression_6_0 = null;

        EObject lv_whereExpression_8_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3940:2: ( ( () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )? ) )
            // InternalDialogParser.g:3941:2: ( () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )? )
            {
            // InternalDialogParser.g:3941:2: ( () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )? )
            // InternalDialogParser.g:3942:3: () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )?
            {
            // InternalDialogParser.g:3942:3: ()
            // InternalDialogParser.g:3943:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getUpdateExpressionAccess().getUpdateExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:3949:3: (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==Delete) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalDialogParser.g:3950:4: otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) )
                    {
                    otherlv_1=(Token)match(input,Delete,FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getUpdateExpressionAccess().getDeleteKeyword_1_0());
                      			
                    }
                    // InternalDialogParser.g:3954:4: ( (lv_dData_2_0= Data ) )?
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( (LA86_0==Data) ) {
                        alt86=1;
                    }
                    switch (alt86) {
                        case 1 :
                            // InternalDialogParser.g:3955:5: (lv_dData_2_0= Data )
                            {
                            // InternalDialogParser.g:3955:5: (lv_dData_2_0= Data )
                            // InternalDialogParser.g:3956:6: lv_dData_2_0= Data
                            {
                            lv_dData_2_0=(Token)match(input,Data,FOLLOW_83); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_dData_2_0, grammarAccess.getUpdateExpressionAccess().getDDataDataKeyword_1_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUpdateExpressionRule());
                              						}
                              						setWithLastConsumed(current, "dData", lv_dData_2_0, "data");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:3968:4: ( (lv_deleteExpression_3_0= ruleExpression ) )
                    // InternalDialogParser.g:3969:5: (lv_deleteExpression_3_0= ruleExpression )
                    {
                    // InternalDialogParser.g:3969:5: (lv_deleteExpression_3_0= ruleExpression )
                    // InternalDialogParser.g:3970:6: lv_deleteExpression_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUpdateExpressionAccess().getDeleteExpressionExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_85);
                    lv_deleteExpression_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUpdateExpressionRule());
                      						}
                      						set(
                      							current,
                      							"deleteExpression",
                      							lv_deleteExpression_3_0,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:3988:3: (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==Insert) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalDialogParser.g:3989:4: otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) )
                    {
                    otherlv_4=(Token)match(input,Insert,FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getUpdateExpressionAccess().getInsertKeyword_2_0());
                      			
                    }
                    // InternalDialogParser.g:3993:4: ( (lv_iData_5_0= Data ) )?
                    int alt88=2;
                    int LA88_0 = input.LA(1);

                    if ( (LA88_0==Data) ) {
                        alt88=1;
                    }
                    switch (alt88) {
                        case 1 :
                            // InternalDialogParser.g:3994:5: (lv_iData_5_0= Data )
                            {
                            // InternalDialogParser.g:3994:5: (lv_iData_5_0= Data )
                            // InternalDialogParser.g:3995:6: lv_iData_5_0= Data
                            {
                            lv_iData_5_0=(Token)match(input,Data,FOLLOW_83); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_iData_5_0, grammarAccess.getUpdateExpressionAccess().getIDataDataKeyword_2_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUpdateExpressionRule());
                              						}
                              						setWithLastConsumed(current, "iData", lv_iData_5_0, "data");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:4007:4: ( (lv_insertExpression_6_0= ruleExpression ) )
                    // InternalDialogParser.g:4008:5: (lv_insertExpression_6_0= ruleExpression )
                    {
                    // InternalDialogParser.g:4008:5: (lv_insertExpression_6_0= ruleExpression )
                    // InternalDialogParser.g:4009:6: lv_insertExpression_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUpdateExpressionAccess().getInsertExpressionExpressionParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_86);
                    lv_insertExpression_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUpdateExpressionRule());
                      						}
                      						set(
                      							current,
                      							"insertExpression",
                      							lv_insertExpression_6_0,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:4027:3: (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==Where) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalDialogParser.g:4028:4: otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) )
                    {
                    otherlv_7=(Token)match(input,Where,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getUpdateExpressionAccess().getWhereKeyword_3_0());
                      			
                    }
                    // InternalDialogParser.g:4032:4: ( (lv_whereExpression_8_0= ruleExpression ) )
                    // InternalDialogParser.g:4033:5: (lv_whereExpression_8_0= ruleExpression )
                    {
                    // InternalDialogParser.g:4033:5: (lv_whereExpression_8_0= ruleExpression )
                    // InternalDialogParser.g:4034:6: lv_whereExpression_8_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUpdateExpressionAccess().getWhereExpressionExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_whereExpression_8_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUpdateExpressionRule());
                      						}
                      						set(
                      							current,
                      							"whereExpression",
                      							lv_whereExpression_8_0,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUpdateExpression"


    // $ANTLR start "entryRuleExpression"
    // InternalDialogParser.g:4056:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalDialogParser.g:4056:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalDialogParser.g:4057:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalDialogParser.g:4063:1: ruleExpression returns [EObject current=null] : this_SelectExpression_0= norm3_SelectExpression ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_SelectExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4069:2: (this_SelectExpression_0= norm3_SelectExpression )
            // InternalDialogParser.g:4070:2: this_SelectExpression_0= norm3_SelectExpression
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getSelectExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_SelectExpression_0=norm3_SelectExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SelectExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleNestedExpression"
    // InternalDialogParser.g:4081:1: entryRuleNestedExpression returns [EObject current=null] : iv_ruleNestedExpression= ruleNestedExpression EOF ;
    public final EObject entryRuleNestedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNestedExpression = null;


        try {
            // InternalDialogParser.g:4081:57: (iv_ruleNestedExpression= ruleNestedExpression EOF )
            // InternalDialogParser.g:4082:2: iv_ruleNestedExpression= ruleNestedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNestedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNestedExpression=ruleNestedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNestedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNestedExpression"


    // $ANTLR start "ruleNestedExpression"
    // InternalDialogParser.g:4088:1: ruleNestedExpression returns [EObject current=null] : this_SelectExpression_0= norm1_SelectExpression ;
    public final EObject ruleNestedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_SelectExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4094:2: (this_SelectExpression_0= norm1_SelectExpression )
            // InternalDialogParser.g:4095:2: this_SelectExpression_0= norm1_SelectExpression
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getNestedExpressionAccess().getSelectExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_SelectExpression_0=norm1_SelectExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SelectExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNestedExpression"


    // $ANTLR start "entryRuleSelectExpression"
    // InternalDialogParser.g:4106:1: entryRuleSelectExpression returns [EObject current=null] : iv_ruleSelectExpression= ruleSelectExpression EOF ;
    public final EObject entryRuleSelectExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelectExpression = null;


        try {
            // InternalDialogParser.g:4106:57: (iv_ruleSelectExpression= ruleSelectExpression EOF )
            // InternalDialogParser.g:4107:2: iv_ruleSelectExpression= ruleSelectExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelectExpression=ruleSelectExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelectExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelectExpression"


    // $ANTLR start "ruleSelectExpression"
    // InternalDialogParser.g:4113:1: ruleSelectExpression returns [EObject current=null] : ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= ruleExpressionParameterized ) ;
    public final EObject ruleSelectExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_distinct_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_orderby_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_selectFrom_4_0 = null;

        EObject lv_selectFrom_6_0 = null;

        EObject lv_whereExpression_8_0 = null;

        EObject lv_orderList_11_0 = null;

        EObject lv_orderList_13_0 = null;

        EObject this_ExpressionParameterized_14 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4119:2: ( ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= ruleExpressionParameterized ) )
            // InternalDialogParser.g:4120:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= ruleExpressionParameterized )
            {
            // InternalDialogParser.g:4120:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= ruleExpressionParameterized )
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==Select) && (synpred3_InternalDialogParser())) {
                alt98=1;
            }
            else if ( (LA98_0==Another||LA98_0==Element||LA98_0==Sublist||LA98_0==Length||(LA98_0>=Count && LA98_0<=False)||LA98_0==First||(LA98_0>=Index && LA98_0<=Known)||LA98_0==There||LA98_0==Value||LA98_0==None||LA98_0==Last||LA98_0==Only||LA98_0==Some||(LA98_0>=True && LA98_0<=Type)||LA98_0==The||LA98_0==Any||LA98_0==Not||LA98_0==The_1||LA98_0==HyphenMinusHyphenMinus||(LA98_0>=An && LA98_0<=An_1)||LA98_0==ExclamationMark||LA98_0==LeftParenthesis||LA98_0==HyphenMinus||LA98_0==A||LA98_0==LeftSquareBracket||(LA98_0>=A_1 && LA98_0<=LeftCurlyBracket)||LA98_0==RULE_NUMBER||(LA98_0>=RULE_ID && LA98_0<=RULE_STRING)) ) {
                alt98=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 98, 0, input);

                throw nvae;
            }
            switch (alt98) {
                case 1 :
                    // InternalDialogParser.g:4121:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    {
                    // InternalDialogParser.g:4121:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    // InternalDialogParser.g:4122:4: ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    {
                    // InternalDialogParser.g:4123:4: ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    // InternalDialogParser.g:4124:5: () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    {
                    // InternalDialogParser.g:4124:5: ()
                    // InternalDialogParser.g:4125:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,Select,FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
                      				
                    }
                    // InternalDialogParser.g:4135:5: ( (lv_distinct_2_0= Distinct ) )?
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( (LA91_0==Distinct) ) {
                        alt91=1;
                    }
                    switch (alt91) {
                        case 1 :
                            // InternalDialogParser.g:4136:6: (lv_distinct_2_0= Distinct )
                            {
                            // InternalDialogParser.g:4136:6: (lv_distinct_2_0= Distinct )
                            // InternalDialogParser.g:4137:7: lv_distinct_2_0= Distinct
                            {
                            lv_distinct_2_0=(Token)match(input,Distinct,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSelectExpressionRule());
                              							}
                              							setWithLastConsumed(current, "distinct", true, "distinct");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:4149:5: (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) )
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( (LA94_0==Asterisk) ) {
                        alt94=1;
                    }
                    else if ( ((LA94_0>=RULE_ID && LA94_0<=RULE_QNAME_TERMINAL)) ) {
                        alt94=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 94, 0, input);

                        throw nvae;
                    }
                    switch (alt94) {
                        case 1 :
                            // InternalDialogParser.g:4150:6: otherlv_3= Asterisk
                            {
                            otherlv_3=(Token)match(input,Asterisk,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:4155:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            {
                            // InternalDialogParser.g:4155:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            // InternalDialogParser.g:4156:7: ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            {
                            // InternalDialogParser.g:4156:7: ( (lv_selectFrom_4_0= ruleSadlResource ) )
                            // InternalDialogParser.g:4157:8: (lv_selectFrom_4_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:4157:8: (lv_selectFrom_4_0= ruleSadlResource )
                            // InternalDialogParser.g:4158:9: lv_selectFrom_4_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
                              								
                            }
                            pushFollow(FOLLOW_89);
                            lv_selectFrom_4_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              									}
                              									add(
                              										current,
                              										"selectFrom",
                              										lv_selectFrom_4_0,
                              										"com.ge.research.sadl.SADL.SadlResource");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalDialogParser.g:4175:7: ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            loop93:
                            do {
                                int alt93=2;
                                int LA93_0 = input.LA(1);

                                if ( (LA93_0==Comma||(LA93_0>=RULE_ID && LA93_0<=RULE_QNAME_TERMINAL)) ) {
                                    alt93=1;
                                }


                                switch (alt93) {
                            	case 1 :
                            	    // InternalDialogParser.g:4176:8: (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    {
                            	    // InternalDialogParser.g:4176:8: (otherlv_5= Comma )?
                            	    int alt92=2;
                            	    int LA92_0 = input.LA(1);

                            	    if ( (LA92_0==Comma) ) {
                            	        alt92=1;
                            	    }
                            	    switch (alt92) {
                            	        case 1 :
                            	            // InternalDialogParser.g:4177:9: otherlv_5= Comma
                            	            {
                            	            otherlv_5=(Token)match(input,Comma,FOLLOW_23); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:4182:8: ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:4183:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:4183:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:4184:10: lv_selectFrom_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_89);
                            	    lv_selectFrom_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"selectFrom",
                            	      											lv_selectFrom_6_0,
                            	      											"com.ge.research.sadl.SADL.SadlResource");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop93;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,Where,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
                      				
                    }
                    // InternalDialogParser.g:4208:5: ( (lv_whereExpression_8_0= ruleExpressionParameterized ) )
                    // InternalDialogParser.g:4209:6: (lv_whereExpression_8_0= ruleExpressionParameterized )
                    {
                    // InternalDialogParser.g:4209:6: (lv_whereExpression_8_0= ruleExpressionParameterized )
                    // InternalDialogParser.g:4210:7: lv_whereExpression_8_0= ruleExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
                      						
                    }
                    pushFollow(FOLLOW_91);
                    lv_whereExpression_8_0=ruleExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                      							}
                      							set(
                      								current,
                      								"whereExpression",
                      								lv_whereExpression_8_0,
                      								"com.ge.research.sadl.SADL.ExpressionParameterized");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:4227:5: ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( (LA97_0==Order) ) {
                        alt97=1;
                    }
                    switch (alt97) {
                        case 1 :
                            // InternalDialogParser.g:4228:6: ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            {
                            // InternalDialogParser.g:4228:6: ( (lv_orderby_9_0= Order ) )
                            // InternalDialogParser.g:4229:7: (lv_orderby_9_0= Order )
                            {
                            // InternalDialogParser.g:4229:7: (lv_orderby_9_0= Order )
                            // InternalDialogParser.g:4230:8: lv_orderby_9_0= Order
                            {
                            lv_orderby_9_0=(Token)match(input,Order,FOLLOW_48); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSelectExpressionRule());
                              								}
                              								setWithLastConsumed(current, "orderby", lv_orderby_9_0, "order");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,By,FOLLOW_92); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
                              					
                            }
                            // InternalDialogParser.g:4246:6: ( (lv_orderList_11_0= ruleOrderElement ) )
                            // InternalDialogParser.g:4247:7: (lv_orderList_11_0= ruleOrderElement )
                            {
                            // InternalDialogParser.g:4247:7: (lv_orderList_11_0= ruleOrderElement )
                            // InternalDialogParser.g:4248:8: lv_orderList_11_0= ruleOrderElement
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
                              							
                            }
                            pushFollow(FOLLOW_93);
                            lv_orderList_11_0=ruleOrderElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              								}
                              								add(
                              									current,
                              									"orderList",
                              									lv_orderList_11_0,
                              									"com.ge.research.sadl.SADL.OrderElement");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:4265:6: ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            loop96:
                            do {
                                int alt96=2;
                                int LA96_0 = input.LA(1);

                                if ( (LA96_0==Comma) && (synpred4_InternalDialogParser())) {
                                    alt96=1;
                                }
                                else if ( (LA96_0==Asc) && (synpred4_InternalDialogParser())) {
                                    alt96=1;
                                }
                                else if ( (LA96_0==Desc) && (synpred4_InternalDialogParser())) {
                                    alt96=1;
                                }
                                else if ( (LA96_0==RULE_QNAME_TERMINAL) && (synpred4_InternalDialogParser())) {
                                    alt96=1;
                                }
                                else if ( (LA96_0==RULE_ID) && (synpred4_InternalDialogParser())) {
                                    alt96=1;
                                }


                                switch (alt96) {
                            	case 1 :
                            	    // InternalDialogParser.g:4266:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    {
                            	    // InternalDialogParser.g:4267:7: ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    // InternalDialogParser.g:4268:8: (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    {
                            	    // InternalDialogParser.g:4268:8: (otherlv_12= Comma )?
                            	    int alt95=2;
                            	    int LA95_0 = input.LA(1);

                            	    if ( (LA95_0==Comma) ) {
                            	        alt95=1;
                            	    }
                            	    switch (alt95) {
                            	        case 1 :
                            	            // InternalDialogParser.g:4269:9: otherlv_12= Comma
                            	            {
                            	            otherlv_12=(Token)match(input,Comma,FOLLOW_92); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:4274:8: ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    // InternalDialogParser.g:4275:9: (lv_orderList_13_0= ruleOrderElement )
                            	    {
                            	    // InternalDialogParser.g:4275:9: (lv_orderList_13_0= ruleOrderElement )
                            	    // InternalDialogParser.g:4276:10: lv_orderList_13_0= ruleOrderElement
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_93);
                            	    lv_orderList_13_0=ruleOrderElement();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"orderList",
                            	      											lv_orderList_13_0,
                            	      											"com.ge.research.sadl.SADL.OrderElement");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop96;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4299:3: this_ExpressionParameterized_14= ruleExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionParameterized_14=ruleExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionParameterized_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelectExpression"


    // $ANTLR start "norm1_SelectExpression"
    // InternalDialogParser.g:4312:1: norm1_SelectExpression returns [EObject current=null] : ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm1_ExpressionParameterized ) ;
    public final EObject norm1_SelectExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_distinct_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_orderby_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_selectFrom_4_0 = null;

        EObject lv_selectFrom_6_0 = null;

        EObject lv_whereExpression_8_0 = null;

        EObject lv_orderList_11_0 = null;

        EObject lv_orderList_13_0 = null;

        EObject this_ExpressionParameterized_14 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4318:2: ( ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm1_ExpressionParameterized ) )
            // InternalDialogParser.g:4319:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm1_ExpressionParameterized )
            {
            // InternalDialogParser.g:4319:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm1_ExpressionParameterized )
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==Select) && (synpred5_InternalDialogParser())) {
                alt106=1;
            }
            else if ( (LA106_0==Another||LA106_0==Element||LA106_0==Sublist||LA106_0==Length||(LA106_0>=Count && LA106_0<=False)||LA106_0==First||(LA106_0>=Index && LA106_0<=Known)||LA106_0==There||LA106_0==Value||LA106_0==None||LA106_0==Last||LA106_0==Only||LA106_0==Some||(LA106_0>=True && LA106_0<=Type)||LA106_0==The||LA106_0==Any||LA106_0==Not||LA106_0==The_1||LA106_0==HyphenMinusHyphenMinus||(LA106_0>=An && LA106_0<=An_1)||LA106_0==ExclamationMark||LA106_0==LeftParenthesis||LA106_0==HyphenMinus||LA106_0==A||LA106_0==LeftSquareBracket||(LA106_0>=A_1 && LA106_0<=LeftCurlyBracket)||LA106_0==RULE_NUMBER||(LA106_0>=RULE_ID && LA106_0<=RULE_STRING)) ) {
                alt106=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 106, 0, input);

                throw nvae;
            }
            switch (alt106) {
                case 1 :
                    // InternalDialogParser.g:4320:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    {
                    // InternalDialogParser.g:4320:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    // InternalDialogParser.g:4321:4: ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    {
                    // InternalDialogParser.g:4322:4: ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    // InternalDialogParser.g:4323:5: () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    {
                    // InternalDialogParser.g:4323:5: ()
                    // InternalDialogParser.g:4324:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,Select,FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
                      				
                    }
                    // InternalDialogParser.g:4334:5: ( (lv_distinct_2_0= Distinct ) )?
                    int alt99=2;
                    int LA99_0 = input.LA(1);

                    if ( (LA99_0==Distinct) ) {
                        alt99=1;
                    }
                    switch (alt99) {
                        case 1 :
                            // InternalDialogParser.g:4335:6: (lv_distinct_2_0= Distinct )
                            {
                            // InternalDialogParser.g:4335:6: (lv_distinct_2_0= Distinct )
                            // InternalDialogParser.g:4336:7: lv_distinct_2_0= Distinct
                            {
                            lv_distinct_2_0=(Token)match(input,Distinct,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSelectExpressionRule());
                              							}
                              							setWithLastConsumed(current, "distinct", true, "distinct");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:4348:5: (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) )
                    int alt102=2;
                    int LA102_0 = input.LA(1);

                    if ( (LA102_0==Asterisk) ) {
                        alt102=1;
                    }
                    else if ( ((LA102_0>=RULE_ID && LA102_0<=RULE_QNAME_TERMINAL)) ) {
                        alt102=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 102, 0, input);

                        throw nvae;
                    }
                    switch (alt102) {
                        case 1 :
                            // InternalDialogParser.g:4349:6: otherlv_3= Asterisk
                            {
                            otherlv_3=(Token)match(input,Asterisk,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:4354:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            {
                            // InternalDialogParser.g:4354:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            // InternalDialogParser.g:4355:7: ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            {
                            // InternalDialogParser.g:4355:7: ( (lv_selectFrom_4_0= ruleSadlResource ) )
                            // InternalDialogParser.g:4356:8: (lv_selectFrom_4_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:4356:8: (lv_selectFrom_4_0= ruleSadlResource )
                            // InternalDialogParser.g:4357:9: lv_selectFrom_4_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
                              								
                            }
                            pushFollow(FOLLOW_89);
                            lv_selectFrom_4_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              									}
                              									add(
                              										current,
                              										"selectFrom",
                              										lv_selectFrom_4_0,
                              										"com.ge.research.sadl.SADL.SadlResource");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalDialogParser.g:4374:7: ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            loop101:
                            do {
                                int alt101=2;
                                int LA101_0 = input.LA(1);

                                if ( (LA101_0==Comma||(LA101_0>=RULE_ID && LA101_0<=RULE_QNAME_TERMINAL)) ) {
                                    alt101=1;
                                }


                                switch (alt101) {
                            	case 1 :
                            	    // InternalDialogParser.g:4375:8: (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    {
                            	    // InternalDialogParser.g:4375:8: (otherlv_5= Comma )?
                            	    int alt100=2;
                            	    int LA100_0 = input.LA(1);

                            	    if ( (LA100_0==Comma) ) {
                            	        alt100=1;
                            	    }
                            	    switch (alt100) {
                            	        case 1 :
                            	            // InternalDialogParser.g:4376:9: otherlv_5= Comma
                            	            {
                            	            otherlv_5=(Token)match(input,Comma,FOLLOW_23); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:4381:8: ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:4382:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:4382:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:4383:10: lv_selectFrom_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_89);
                            	    lv_selectFrom_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"selectFrom",
                            	      											lv_selectFrom_6_0,
                            	      											"com.ge.research.sadl.SADL.SadlResource");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop101;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,Where,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
                      				
                    }
                    // InternalDialogParser.g:4407:5: ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) )
                    // InternalDialogParser.g:4408:6: (lv_whereExpression_8_0= norm1_ExpressionParameterized )
                    {
                    // InternalDialogParser.g:4408:6: (lv_whereExpression_8_0= norm1_ExpressionParameterized )
                    // InternalDialogParser.g:4409:7: lv_whereExpression_8_0= norm1_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
                      						
                    }
                    pushFollow(FOLLOW_91);
                    lv_whereExpression_8_0=norm1_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                      							}
                      							set(
                      								current,
                      								"whereExpression",
                      								lv_whereExpression_8_0,
                      								"com.ge.research.sadl.SADL.ExpressionParameterized");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:4426:5: ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    int alt105=2;
                    int LA105_0 = input.LA(1);

                    if ( (LA105_0==Order) ) {
                        alt105=1;
                    }
                    switch (alt105) {
                        case 1 :
                            // InternalDialogParser.g:4427:6: ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            {
                            // InternalDialogParser.g:4427:6: ( (lv_orderby_9_0= Order ) )
                            // InternalDialogParser.g:4428:7: (lv_orderby_9_0= Order )
                            {
                            // InternalDialogParser.g:4428:7: (lv_orderby_9_0= Order )
                            // InternalDialogParser.g:4429:8: lv_orderby_9_0= Order
                            {
                            lv_orderby_9_0=(Token)match(input,Order,FOLLOW_48); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSelectExpressionRule());
                              								}
                              								setWithLastConsumed(current, "orderby", lv_orderby_9_0, "order");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,By,FOLLOW_92); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
                              					
                            }
                            // InternalDialogParser.g:4445:6: ( (lv_orderList_11_0= ruleOrderElement ) )
                            // InternalDialogParser.g:4446:7: (lv_orderList_11_0= ruleOrderElement )
                            {
                            // InternalDialogParser.g:4446:7: (lv_orderList_11_0= ruleOrderElement )
                            // InternalDialogParser.g:4447:8: lv_orderList_11_0= ruleOrderElement
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
                              							
                            }
                            pushFollow(FOLLOW_93);
                            lv_orderList_11_0=ruleOrderElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              								}
                              								add(
                              									current,
                              									"orderList",
                              									lv_orderList_11_0,
                              									"com.ge.research.sadl.SADL.OrderElement");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:4464:6: ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            loop104:
                            do {
                                int alt104=2;
                                int LA104_0 = input.LA(1);

                                if ( (LA104_0==Comma) ) {
                                    int LA104_2 = input.LA(2);

                                    if ( (LA104_2==RULE_QNAME_TERMINAL) ) {
                                        int LA104_7 = input.LA(3);

                                        if ( (synpred6_InternalDialogParser()) ) {
                                            alt104=1;
                                        }


                                    }
                                    else if ( (LA104_2==RULE_ID) ) {
                                        int LA104_8 = input.LA(3);

                                        if ( (synpred6_InternalDialogParser()) ) {
                                            alt104=1;
                                        }


                                    }
                                    else if ( (LA104_2==Asc) && (synpred6_InternalDialogParser())) {
                                        alt104=1;
                                    }
                                    else if ( (LA104_2==Desc) && (synpred6_InternalDialogParser())) {
                                        alt104=1;
                                    }


                                }
                                else if ( (LA104_0==Asc) && (synpred6_InternalDialogParser())) {
                                    alt104=1;
                                }
                                else if ( (LA104_0==Desc) && (synpred6_InternalDialogParser())) {
                                    alt104=1;
                                }
                                else if ( (LA104_0==RULE_QNAME_TERMINAL) && (synpred6_InternalDialogParser())) {
                                    alt104=1;
                                }
                                else if ( (LA104_0==RULE_ID) && (synpred6_InternalDialogParser())) {
                                    alt104=1;
                                }


                                switch (alt104) {
                            	case 1 :
                            	    // InternalDialogParser.g:4465:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    {
                            	    // InternalDialogParser.g:4466:7: ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    // InternalDialogParser.g:4467:8: (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    {
                            	    // InternalDialogParser.g:4467:8: (otherlv_12= Comma )?
                            	    int alt103=2;
                            	    int LA103_0 = input.LA(1);

                            	    if ( (LA103_0==Comma) ) {
                            	        alt103=1;
                            	    }
                            	    switch (alt103) {
                            	        case 1 :
                            	            // InternalDialogParser.g:4468:9: otherlv_12= Comma
                            	            {
                            	            otherlv_12=(Token)match(input,Comma,FOLLOW_92); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:4473:8: ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    // InternalDialogParser.g:4474:9: (lv_orderList_13_0= ruleOrderElement )
                            	    {
                            	    // InternalDialogParser.g:4474:9: (lv_orderList_13_0= ruleOrderElement )
                            	    // InternalDialogParser.g:4475:10: lv_orderList_13_0= ruleOrderElement
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_93);
                            	    lv_orderList_13_0=ruleOrderElement();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"orderList",
                            	      											lv_orderList_13_0,
                            	      											"com.ge.research.sadl.SADL.OrderElement");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop104;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4498:3: this_ExpressionParameterized_14= norm1_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionParameterized_14=norm1_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionParameterized_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_SelectExpression"


    // $ANTLR start "norm2_SelectExpression"
    // InternalDialogParser.g:4511:1: norm2_SelectExpression returns [EObject current=null] : ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm2_ExpressionParameterized ) ;
    public final EObject norm2_SelectExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_distinct_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_orderby_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_selectFrom_4_0 = null;

        EObject lv_selectFrom_6_0 = null;

        EObject lv_whereExpression_8_0 = null;

        EObject lv_orderList_11_0 = null;

        EObject lv_orderList_13_0 = null;

        EObject this_ExpressionParameterized_14 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4517:2: ( ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm2_ExpressionParameterized ) )
            // InternalDialogParser.g:4518:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm2_ExpressionParameterized )
            {
            // InternalDialogParser.g:4518:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm2_ExpressionParameterized )
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==Select) && (synpred7_InternalDialogParser())) {
                alt114=1;
            }
            else if ( (LA114_0==Another||LA114_0==Element||LA114_0==Sublist||LA114_0==Length||(LA114_0>=Count && LA114_0<=False)||LA114_0==First||(LA114_0>=Index && LA114_0<=Known)||LA114_0==There||LA114_0==Value||LA114_0==None||LA114_0==Last||LA114_0==Only||LA114_0==Some||(LA114_0>=True && LA114_0<=Type)||LA114_0==The||LA114_0==Any||LA114_0==Not||LA114_0==The_1||LA114_0==HyphenMinusHyphenMinus||(LA114_0>=An && LA114_0<=An_1)||LA114_0==ExclamationMark||LA114_0==LeftParenthesis||LA114_0==HyphenMinus||LA114_0==A||LA114_0==LeftSquareBracket||(LA114_0>=A_1 && LA114_0<=LeftCurlyBracket)||LA114_0==RULE_NUMBER||(LA114_0>=RULE_ID && LA114_0<=RULE_STRING)) ) {
                alt114=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;
            }
            switch (alt114) {
                case 1 :
                    // InternalDialogParser.g:4519:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    {
                    // InternalDialogParser.g:4519:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    // InternalDialogParser.g:4520:4: ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    {
                    // InternalDialogParser.g:4521:4: ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    // InternalDialogParser.g:4522:5: () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    {
                    // InternalDialogParser.g:4522:5: ()
                    // InternalDialogParser.g:4523:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,Select,FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
                      				
                    }
                    // InternalDialogParser.g:4533:5: ( (lv_distinct_2_0= Distinct ) )?
                    int alt107=2;
                    int LA107_0 = input.LA(1);

                    if ( (LA107_0==Distinct) ) {
                        alt107=1;
                    }
                    switch (alt107) {
                        case 1 :
                            // InternalDialogParser.g:4534:6: (lv_distinct_2_0= Distinct )
                            {
                            // InternalDialogParser.g:4534:6: (lv_distinct_2_0= Distinct )
                            // InternalDialogParser.g:4535:7: lv_distinct_2_0= Distinct
                            {
                            lv_distinct_2_0=(Token)match(input,Distinct,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSelectExpressionRule());
                              							}
                              							setWithLastConsumed(current, "distinct", true, "distinct");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:4547:5: (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) )
                    int alt110=2;
                    int LA110_0 = input.LA(1);

                    if ( (LA110_0==Asterisk) ) {
                        alt110=1;
                    }
                    else if ( ((LA110_0>=RULE_ID && LA110_0<=RULE_QNAME_TERMINAL)) ) {
                        alt110=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 110, 0, input);

                        throw nvae;
                    }
                    switch (alt110) {
                        case 1 :
                            // InternalDialogParser.g:4548:6: otherlv_3= Asterisk
                            {
                            otherlv_3=(Token)match(input,Asterisk,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:4553:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            {
                            // InternalDialogParser.g:4553:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            // InternalDialogParser.g:4554:7: ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            {
                            // InternalDialogParser.g:4554:7: ( (lv_selectFrom_4_0= ruleSadlResource ) )
                            // InternalDialogParser.g:4555:8: (lv_selectFrom_4_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:4555:8: (lv_selectFrom_4_0= ruleSadlResource )
                            // InternalDialogParser.g:4556:9: lv_selectFrom_4_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
                              								
                            }
                            pushFollow(FOLLOW_89);
                            lv_selectFrom_4_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              									}
                              									add(
                              										current,
                              										"selectFrom",
                              										lv_selectFrom_4_0,
                              										"com.ge.research.sadl.SADL.SadlResource");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalDialogParser.g:4573:7: ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            loop109:
                            do {
                                int alt109=2;
                                int LA109_0 = input.LA(1);

                                if ( (LA109_0==Comma||(LA109_0>=RULE_ID && LA109_0<=RULE_QNAME_TERMINAL)) ) {
                                    alt109=1;
                                }


                                switch (alt109) {
                            	case 1 :
                            	    // InternalDialogParser.g:4574:8: (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    {
                            	    // InternalDialogParser.g:4574:8: (otherlv_5= Comma )?
                            	    int alt108=2;
                            	    int LA108_0 = input.LA(1);

                            	    if ( (LA108_0==Comma) ) {
                            	        alt108=1;
                            	    }
                            	    switch (alt108) {
                            	        case 1 :
                            	            // InternalDialogParser.g:4575:9: otherlv_5= Comma
                            	            {
                            	            otherlv_5=(Token)match(input,Comma,FOLLOW_23); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:4580:8: ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:4581:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:4581:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:4582:10: lv_selectFrom_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_89);
                            	    lv_selectFrom_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"selectFrom",
                            	      											lv_selectFrom_6_0,
                            	      											"com.ge.research.sadl.SADL.SadlResource");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop109;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,Where,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
                      				
                    }
                    // InternalDialogParser.g:4606:5: ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) )
                    // InternalDialogParser.g:4607:6: (lv_whereExpression_8_0= norm2_ExpressionParameterized )
                    {
                    // InternalDialogParser.g:4607:6: (lv_whereExpression_8_0= norm2_ExpressionParameterized )
                    // InternalDialogParser.g:4608:7: lv_whereExpression_8_0= norm2_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
                      						
                    }
                    pushFollow(FOLLOW_91);
                    lv_whereExpression_8_0=norm2_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                      							}
                      							set(
                      								current,
                      								"whereExpression",
                      								lv_whereExpression_8_0,
                      								"com.ge.research.sadl.SADL.ExpressionParameterized");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:4625:5: ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    int alt113=2;
                    int LA113_0 = input.LA(1);

                    if ( (LA113_0==Order) ) {
                        alt113=1;
                    }
                    switch (alt113) {
                        case 1 :
                            // InternalDialogParser.g:4626:6: ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            {
                            // InternalDialogParser.g:4626:6: ( (lv_orderby_9_0= Order ) )
                            // InternalDialogParser.g:4627:7: (lv_orderby_9_0= Order )
                            {
                            // InternalDialogParser.g:4627:7: (lv_orderby_9_0= Order )
                            // InternalDialogParser.g:4628:8: lv_orderby_9_0= Order
                            {
                            lv_orderby_9_0=(Token)match(input,Order,FOLLOW_48); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSelectExpressionRule());
                              								}
                              								setWithLastConsumed(current, "orderby", lv_orderby_9_0, "order");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,By,FOLLOW_92); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
                              					
                            }
                            // InternalDialogParser.g:4644:6: ( (lv_orderList_11_0= ruleOrderElement ) )
                            // InternalDialogParser.g:4645:7: (lv_orderList_11_0= ruleOrderElement )
                            {
                            // InternalDialogParser.g:4645:7: (lv_orderList_11_0= ruleOrderElement )
                            // InternalDialogParser.g:4646:8: lv_orderList_11_0= ruleOrderElement
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
                              							
                            }
                            pushFollow(FOLLOW_93);
                            lv_orderList_11_0=ruleOrderElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              								}
                              								add(
                              									current,
                              									"orderList",
                              									lv_orderList_11_0,
                              									"com.ge.research.sadl.SADL.OrderElement");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:4663:6: ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            loop112:
                            do {
                                int alt112=2;
                                int LA112_0 = input.LA(1);

                                if ( (LA112_0==Comma) && (synpred8_InternalDialogParser())) {
                                    alt112=1;
                                }
                                else if ( (LA112_0==Asc) && (synpred8_InternalDialogParser())) {
                                    alt112=1;
                                }
                                else if ( (LA112_0==Desc) && (synpred8_InternalDialogParser())) {
                                    alt112=1;
                                }
                                else if ( (LA112_0==RULE_QNAME_TERMINAL) && (synpred8_InternalDialogParser())) {
                                    alt112=1;
                                }
                                else if ( (LA112_0==RULE_ID) && (synpred8_InternalDialogParser())) {
                                    alt112=1;
                                }


                                switch (alt112) {
                            	case 1 :
                            	    // InternalDialogParser.g:4664:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    {
                            	    // InternalDialogParser.g:4665:7: ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    // InternalDialogParser.g:4666:8: (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    {
                            	    // InternalDialogParser.g:4666:8: (otherlv_12= Comma )?
                            	    int alt111=2;
                            	    int LA111_0 = input.LA(1);

                            	    if ( (LA111_0==Comma) ) {
                            	        alt111=1;
                            	    }
                            	    switch (alt111) {
                            	        case 1 :
                            	            // InternalDialogParser.g:4667:9: otherlv_12= Comma
                            	            {
                            	            otherlv_12=(Token)match(input,Comma,FOLLOW_92); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:4672:8: ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    // InternalDialogParser.g:4673:9: (lv_orderList_13_0= ruleOrderElement )
                            	    {
                            	    // InternalDialogParser.g:4673:9: (lv_orderList_13_0= ruleOrderElement )
                            	    // InternalDialogParser.g:4674:10: lv_orderList_13_0= ruleOrderElement
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_93);
                            	    lv_orderList_13_0=ruleOrderElement();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"orderList",
                            	      											lv_orderList_13_0,
                            	      											"com.ge.research.sadl.SADL.OrderElement");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop112;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4697:3: this_ExpressionParameterized_14= norm2_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionParameterized_14=norm2_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionParameterized_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_SelectExpression"


    // $ANTLR start "norm3_SelectExpression"
    // InternalDialogParser.g:4710:1: norm3_SelectExpression returns [EObject current=null] : ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm3_ExpressionParameterized ) ;
    public final EObject norm3_SelectExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_distinct_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_orderby_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_selectFrom_4_0 = null;

        EObject lv_selectFrom_6_0 = null;

        EObject lv_whereExpression_8_0 = null;

        EObject lv_orderList_11_0 = null;

        EObject lv_orderList_13_0 = null;

        EObject this_ExpressionParameterized_14 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4716:2: ( ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm3_ExpressionParameterized ) )
            // InternalDialogParser.g:4717:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm3_ExpressionParameterized )
            {
            // InternalDialogParser.g:4717:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm3_ExpressionParameterized )
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==Select) && (synpred9_InternalDialogParser())) {
                alt122=1;
            }
            else if ( (LA122_0==Another||LA122_0==Element||LA122_0==Sublist||LA122_0==Length||(LA122_0>=Count && LA122_0<=False)||LA122_0==First||(LA122_0>=Index && LA122_0<=Known)||LA122_0==There||LA122_0==Value||LA122_0==None||LA122_0==Last||LA122_0==Only||LA122_0==Some||(LA122_0>=True && LA122_0<=Type)||LA122_0==The||LA122_0==Any||LA122_0==Not||LA122_0==The_1||LA122_0==HyphenMinusHyphenMinus||(LA122_0>=An && LA122_0<=An_1)||LA122_0==ExclamationMark||LA122_0==LeftParenthesis||LA122_0==HyphenMinus||LA122_0==A||LA122_0==LeftSquareBracket||(LA122_0>=A_1 && LA122_0<=LeftCurlyBracket)||LA122_0==RULE_NUMBER||(LA122_0>=RULE_ID && LA122_0<=RULE_STRING)) ) {
                alt122=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }
            switch (alt122) {
                case 1 :
                    // InternalDialogParser.g:4718:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    {
                    // InternalDialogParser.g:4718:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    // InternalDialogParser.g:4719:4: ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    {
                    // InternalDialogParser.g:4720:4: ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    // InternalDialogParser.g:4721:5: () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    {
                    // InternalDialogParser.g:4721:5: ()
                    // InternalDialogParser.g:4722:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,Select,FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
                      				
                    }
                    // InternalDialogParser.g:4732:5: ( (lv_distinct_2_0= Distinct ) )?
                    int alt115=2;
                    int LA115_0 = input.LA(1);

                    if ( (LA115_0==Distinct) ) {
                        alt115=1;
                    }
                    switch (alt115) {
                        case 1 :
                            // InternalDialogParser.g:4733:6: (lv_distinct_2_0= Distinct )
                            {
                            // InternalDialogParser.g:4733:6: (lv_distinct_2_0= Distinct )
                            // InternalDialogParser.g:4734:7: lv_distinct_2_0= Distinct
                            {
                            lv_distinct_2_0=(Token)match(input,Distinct,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSelectExpressionRule());
                              							}
                              							setWithLastConsumed(current, "distinct", true, "distinct");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:4746:5: (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) )
                    int alt118=2;
                    int LA118_0 = input.LA(1);

                    if ( (LA118_0==Asterisk) ) {
                        alt118=1;
                    }
                    else if ( ((LA118_0>=RULE_ID && LA118_0<=RULE_QNAME_TERMINAL)) ) {
                        alt118=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 118, 0, input);

                        throw nvae;
                    }
                    switch (alt118) {
                        case 1 :
                            // InternalDialogParser.g:4747:6: otherlv_3= Asterisk
                            {
                            otherlv_3=(Token)match(input,Asterisk,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:4752:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            {
                            // InternalDialogParser.g:4752:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            // InternalDialogParser.g:4753:7: ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            {
                            // InternalDialogParser.g:4753:7: ( (lv_selectFrom_4_0= ruleSadlResource ) )
                            // InternalDialogParser.g:4754:8: (lv_selectFrom_4_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:4754:8: (lv_selectFrom_4_0= ruleSadlResource )
                            // InternalDialogParser.g:4755:9: lv_selectFrom_4_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
                              								
                            }
                            pushFollow(FOLLOW_89);
                            lv_selectFrom_4_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              									}
                              									add(
                              										current,
                              										"selectFrom",
                              										lv_selectFrom_4_0,
                              										"com.ge.research.sadl.SADL.SadlResource");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalDialogParser.g:4772:7: ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            loop117:
                            do {
                                int alt117=2;
                                int LA117_0 = input.LA(1);

                                if ( (LA117_0==Comma||(LA117_0>=RULE_ID && LA117_0<=RULE_QNAME_TERMINAL)) ) {
                                    alt117=1;
                                }


                                switch (alt117) {
                            	case 1 :
                            	    // InternalDialogParser.g:4773:8: (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    {
                            	    // InternalDialogParser.g:4773:8: (otherlv_5= Comma )?
                            	    int alt116=2;
                            	    int LA116_0 = input.LA(1);

                            	    if ( (LA116_0==Comma) ) {
                            	        alt116=1;
                            	    }
                            	    switch (alt116) {
                            	        case 1 :
                            	            // InternalDialogParser.g:4774:9: otherlv_5= Comma
                            	            {
                            	            otherlv_5=(Token)match(input,Comma,FOLLOW_23); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:4779:8: ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:4780:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:4780:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:4781:10: lv_selectFrom_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_89);
                            	    lv_selectFrom_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"selectFrom",
                            	      											lv_selectFrom_6_0,
                            	      											"com.ge.research.sadl.SADL.SadlResource");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop117;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,Where,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
                      				
                    }
                    // InternalDialogParser.g:4805:5: ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) )
                    // InternalDialogParser.g:4806:6: (lv_whereExpression_8_0= norm3_ExpressionParameterized )
                    {
                    // InternalDialogParser.g:4806:6: (lv_whereExpression_8_0= norm3_ExpressionParameterized )
                    // InternalDialogParser.g:4807:7: lv_whereExpression_8_0= norm3_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
                      						
                    }
                    pushFollow(FOLLOW_91);
                    lv_whereExpression_8_0=norm3_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                      							}
                      							set(
                      								current,
                      								"whereExpression",
                      								lv_whereExpression_8_0,
                      								"com.ge.research.sadl.SADL.ExpressionParameterized");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:4824:5: ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    int alt121=2;
                    int LA121_0 = input.LA(1);

                    if ( (LA121_0==Order) ) {
                        alt121=1;
                    }
                    switch (alt121) {
                        case 1 :
                            // InternalDialogParser.g:4825:6: ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            {
                            // InternalDialogParser.g:4825:6: ( (lv_orderby_9_0= Order ) )
                            // InternalDialogParser.g:4826:7: (lv_orderby_9_0= Order )
                            {
                            // InternalDialogParser.g:4826:7: (lv_orderby_9_0= Order )
                            // InternalDialogParser.g:4827:8: lv_orderby_9_0= Order
                            {
                            lv_orderby_9_0=(Token)match(input,Order,FOLLOW_48); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSelectExpressionRule());
                              								}
                              								setWithLastConsumed(current, "orderby", lv_orderby_9_0, "order");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,By,FOLLOW_92); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
                              					
                            }
                            // InternalDialogParser.g:4843:6: ( (lv_orderList_11_0= ruleOrderElement ) )
                            // InternalDialogParser.g:4844:7: (lv_orderList_11_0= ruleOrderElement )
                            {
                            // InternalDialogParser.g:4844:7: (lv_orderList_11_0= ruleOrderElement )
                            // InternalDialogParser.g:4845:8: lv_orderList_11_0= ruleOrderElement
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
                              							
                            }
                            pushFollow(FOLLOW_93);
                            lv_orderList_11_0=ruleOrderElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              								}
                              								add(
                              									current,
                              									"orderList",
                              									lv_orderList_11_0,
                              									"com.ge.research.sadl.SADL.OrderElement");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:4862:6: ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            loop120:
                            do {
                                int alt120=2;
                                int LA120_0 = input.LA(1);

                                if ( (LA120_0==Comma) && (synpred10_InternalDialogParser())) {
                                    alt120=1;
                                }
                                else if ( (LA120_0==Asc) && (synpred10_InternalDialogParser())) {
                                    alt120=1;
                                }
                                else if ( (LA120_0==Desc) && (synpred10_InternalDialogParser())) {
                                    alt120=1;
                                }
                                else if ( (LA120_0==RULE_QNAME_TERMINAL) && (synpred10_InternalDialogParser())) {
                                    alt120=1;
                                }
                                else if ( (LA120_0==RULE_ID) && (synpred10_InternalDialogParser())) {
                                    alt120=1;
                                }


                                switch (alt120) {
                            	case 1 :
                            	    // InternalDialogParser.g:4863:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    {
                            	    // InternalDialogParser.g:4864:7: ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    // InternalDialogParser.g:4865:8: (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    {
                            	    // InternalDialogParser.g:4865:8: (otherlv_12= Comma )?
                            	    int alt119=2;
                            	    int LA119_0 = input.LA(1);

                            	    if ( (LA119_0==Comma) ) {
                            	        alt119=1;
                            	    }
                            	    switch (alt119) {
                            	        case 1 :
                            	            // InternalDialogParser.g:4866:9: otherlv_12= Comma
                            	            {
                            	            otherlv_12=(Token)match(input,Comma,FOLLOW_92); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:4871:8: ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    // InternalDialogParser.g:4872:9: (lv_orderList_13_0= ruleOrderElement )
                            	    {
                            	    // InternalDialogParser.g:4872:9: (lv_orderList_13_0= ruleOrderElement )
                            	    // InternalDialogParser.g:4873:10: lv_orderList_13_0= ruleOrderElement
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_93);
                            	    lv_orderList_13_0=ruleOrderElement();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"orderList",
                            	      											lv_orderList_13_0,
                            	      											"com.ge.research.sadl.SADL.OrderElement");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop120;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4896:3: this_ExpressionParameterized_14= norm3_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionParameterized_14=norm3_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionParameterized_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_SelectExpression"


    // $ANTLR start "entryRuleOrderElement"
    // InternalDialogParser.g:4908:1: entryRuleOrderElement returns [EObject current=null] : iv_ruleOrderElement= ruleOrderElement EOF ;
    public final EObject entryRuleOrderElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrderElement = null;


        try {
            // InternalDialogParser.g:4908:53: (iv_ruleOrderElement= ruleOrderElement EOF )
            // InternalDialogParser.g:4909:2: iv_ruleOrderElement= ruleOrderElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrderElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrderElement=ruleOrderElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrderElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrderElement"


    // $ANTLR start "ruleOrderElement"
    // InternalDialogParser.g:4915:1: ruleOrderElement returns [EObject current=null] : ( (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) ) ) ;
    public final EObject ruleOrderElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_desc_1_0=null;
        EObject lv_orderBy_2_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4921:2: ( ( (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) ) ) )
            // InternalDialogParser.g:4922:2: ( (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) ) )
            {
            // InternalDialogParser.g:4922:2: ( (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) ) )
            // InternalDialogParser.g:4923:3: (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) )
            {
            // InternalDialogParser.g:4923:3: (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )?
            int alt123=3;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==Asc) ) {
                alt123=1;
            }
            else if ( (LA123_0==Desc) ) {
                alt123=2;
            }
            switch (alt123) {
                case 1 :
                    // InternalDialogParser.g:4924:4: otherlv_0= Asc
                    {
                    otherlv_0=(Token)match(input,Asc,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getOrderElementAccess().getAscKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4929:4: ( (lv_desc_1_0= Desc ) )
                    {
                    // InternalDialogParser.g:4929:4: ( (lv_desc_1_0= Desc ) )
                    // InternalDialogParser.g:4930:5: (lv_desc_1_0= Desc )
                    {
                    // InternalDialogParser.g:4930:5: (lv_desc_1_0= Desc )
                    // InternalDialogParser.g:4931:6: lv_desc_1_0= Desc
                    {
                    lv_desc_1_0=(Token)match(input,Desc,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_desc_1_0, grammarAccess.getOrderElementAccess().getDescDescKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getOrderElementRule());
                      						}
                      						setWithLastConsumed(current, "desc", true, "desc");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:4944:3: ( (lv_orderBy_2_0= ruleSadlResource ) )
            // InternalDialogParser.g:4945:4: (lv_orderBy_2_0= ruleSadlResource )
            {
            // InternalDialogParser.g:4945:4: (lv_orderBy_2_0= ruleSadlResource )
            // InternalDialogParser.g:4946:5: lv_orderBy_2_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOrderElementAccess().getOrderBySadlResourceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_orderBy_2_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOrderElementRule());
              					}
              					set(
              						current,
              						"orderBy",
              						lv_orderBy_2_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrderElement"


    // $ANTLR start "entryRuleExpressionParameterized"
    // InternalDialogParser.g:4967:1: entryRuleExpressionParameterized returns [EObject current=null] : iv_ruleExpressionParameterized= ruleExpressionParameterized EOF ;
    public final EObject entryRuleExpressionParameterized() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionParameterized = null;


        try {
            // InternalDialogParser.g:4967:64: (iv_ruleExpressionParameterized= ruleExpressionParameterized EOF )
            // InternalDialogParser.g:4968:2: iv_ruleExpressionParameterized= ruleExpressionParameterized EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionParameterizedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionParameterized=ruleExpressionParameterized();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionParameterized; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionParameterized"


    // $ANTLR start "ruleExpressionParameterized"
    // InternalDialogParser.g:4974:1: ruleExpressionParameterized returns [EObject current=null] : ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression ) ;
    public final EObject ruleExpressionParameterized() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_list_4_0 = null;

        EObject lv_where_6_0 = null;

        EObject this_OrExpression_7 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4980:2: ( ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression ) )
            // InternalDialogParser.g:4981:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression )
            {
            // InternalDialogParser.g:4981:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression )
            int alt125=2;
            alt125 = dfa125.predict(input);
            switch (alt125) {
                case 1 :
                    // InternalDialogParser.g:4982:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) )
                    {
                    // InternalDialogParser.g:4982:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) )
                    // InternalDialogParser.g:4983:4: () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) )
                    {
                    // InternalDialogParser.g:4983:4: ()
                    // InternalDialogParser.g:4984:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:4990:4: ( ruleAnArticle )?
                    int alt124=2;
                    int LA124_0 = input.LA(1);

                    if ( (LA124_0==Another||LA124_0==Some||LA124_0==The||LA124_0==Any||LA124_0==The_1||LA124_0==An||LA124_0==An_1||LA124_0==A||LA124_0==A_1) ) {
                        alt124=1;
                    }
                    switch (alt124) {
                        case 1 :
                            // InternalDialogParser.g:4991:5: ruleAnArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_94);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,Sublist,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,Of,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:5007:4: ( (lv_list_4_0= ruleOrExpression ) )
                    // InternalDialogParser.g:5008:5: (lv_list_4_0= ruleOrExpression )
                    {
                    // InternalDialogParser.g:5008:5: (lv_list_4_0= ruleOrExpression )
                    // InternalDialogParser.g:5009:6: lv_list_4_0= ruleOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_95);
                    lv_list_4_0=ruleOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"list",
                      							lv_list_4_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,Matching,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
                      			
                    }
                    // InternalDialogParser.g:5030:4: ( (lv_where_6_0= ruleOrExpression ) )
                    // InternalDialogParser.g:5031:5: (lv_where_6_0= ruleOrExpression )
                    {
                    // InternalDialogParser.g:5031:5: (lv_where_6_0= ruleOrExpression )
                    // InternalDialogParser.g:5032:6: lv_where_6_0= ruleOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_6_0=ruleOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_6_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5051:3: this_OrExpression_7= ruleOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OrExpression_7=ruleOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OrExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionParameterized"


    // $ANTLR start "norm1_ExpressionParameterized"
    // InternalDialogParser.g:5064:1: norm1_ExpressionParameterized returns [EObject current=null] : ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression ) ;
    public final EObject norm1_ExpressionParameterized() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_list_4_0 = null;

        EObject lv_where_6_0 = null;

        EObject this_OrExpression_7 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5070:2: ( ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression ) )
            // InternalDialogParser.g:5071:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression )
            {
            // InternalDialogParser.g:5071:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression )
            int alt127=2;
            alt127 = dfa127.predict(input);
            switch (alt127) {
                case 1 :
                    // InternalDialogParser.g:5072:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) )
                    {
                    // InternalDialogParser.g:5072:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) )
                    // InternalDialogParser.g:5073:4: () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) )
                    {
                    // InternalDialogParser.g:5073:4: ()
                    // InternalDialogParser.g:5074:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:5080:4: ( ruleAnArticle )?
                    int alt126=2;
                    int LA126_0 = input.LA(1);

                    if ( (LA126_0==Another||LA126_0==Some||LA126_0==The||LA126_0==Any||LA126_0==The_1||LA126_0==An||LA126_0==An_1||LA126_0==A||LA126_0==A_1) ) {
                        alt126=1;
                    }
                    switch (alt126) {
                        case 1 :
                            // InternalDialogParser.g:5081:5: ruleAnArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_94);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,Sublist,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,Of,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:5097:4: ( (lv_list_4_0= norm1_OrExpression ) )
                    // InternalDialogParser.g:5098:5: (lv_list_4_0= norm1_OrExpression )
                    {
                    // InternalDialogParser.g:5098:5: (lv_list_4_0= norm1_OrExpression )
                    // InternalDialogParser.g:5099:6: lv_list_4_0= norm1_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_95);
                    lv_list_4_0=norm1_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"list",
                      							lv_list_4_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,Matching,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
                      			
                    }
                    // InternalDialogParser.g:5120:4: ( (lv_where_6_0= norm1_OrExpression ) )
                    // InternalDialogParser.g:5121:5: (lv_where_6_0= norm1_OrExpression )
                    {
                    // InternalDialogParser.g:5121:5: (lv_where_6_0= norm1_OrExpression )
                    // InternalDialogParser.g:5122:6: lv_where_6_0= norm1_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_6_0=norm1_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_6_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5141:3: this_OrExpression_7= norm1_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OrExpression_7=norm1_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OrExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_ExpressionParameterized"


    // $ANTLR start "norm2_ExpressionParameterized"
    // InternalDialogParser.g:5154:1: norm2_ExpressionParameterized returns [EObject current=null] : ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression ) ;
    public final EObject norm2_ExpressionParameterized() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_list_4_0 = null;

        EObject lv_where_6_0 = null;

        EObject this_OrExpression_7 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5160:2: ( ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression ) )
            // InternalDialogParser.g:5161:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression )
            {
            // InternalDialogParser.g:5161:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression )
            int alt129=2;
            alt129 = dfa129.predict(input);
            switch (alt129) {
                case 1 :
                    // InternalDialogParser.g:5162:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) )
                    {
                    // InternalDialogParser.g:5162:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) )
                    // InternalDialogParser.g:5163:4: () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) )
                    {
                    // InternalDialogParser.g:5163:4: ()
                    // InternalDialogParser.g:5164:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:5170:4: ( ruleAnArticle )?
                    int alt128=2;
                    int LA128_0 = input.LA(1);

                    if ( (LA128_0==Another||LA128_0==Some||LA128_0==The||LA128_0==Any||LA128_0==The_1||LA128_0==An||LA128_0==An_1||LA128_0==A||LA128_0==A_1) ) {
                        alt128=1;
                    }
                    switch (alt128) {
                        case 1 :
                            // InternalDialogParser.g:5171:5: ruleAnArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_94);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,Sublist,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,Of,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:5187:4: ( (lv_list_4_0= norm2_OrExpression ) )
                    // InternalDialogParser.g:5188:5: (lv_list_4_0= norm2_OrExpression )
                    {
                    // InternalDialogParser.g:5188:5: (lv_list_4_0= norm2_OrExpression )
                    // InternalDialogParser.g:5189:6: lv_list_4_0= norm2_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_95);
                    lv_list_4_0=norm2_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"list",
                      							lv_list_4_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,Matching,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
                      			
                    }
                    // InternalDialogParser.g:5210:4: ( (lv_where_6_0= norm2_OrExpression ) )
                    // InternalDialogParser.g:5211:5: (lv_where_6_0= norm2_OrExpression )
                    {
                    // InternalDialogParser.g:5211:5: (lv_where_6_0= norm2_OrExpression )
                    // InternalDialogParser.g:5212:6: lv_where_6_0= norm2_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_6_0=norm2_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_6_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5231:3: this_OrExpression_7= norm2_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OrExpression_7=norm2_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OrExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_ExpressionParameterized"


    // $ANTLR start "norm3_ExpressionParameterized"
    // InternalDialogParser.g:5244:1: norm3_ExpressionParameterized returns [EObject current=null] : ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression ) ;
    public final EObject norm3_ExpressionParameterized() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_list_4_0 = null;

        EObject lv_where_6_0 = null;

        EObject this_OrExpression_7 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5250:2: ( ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression ) )
            // InternalDialogParser.g:5251:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression )
            {
            // InternalDialogParser.g:5251:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression )
            int alt131=2;
            alt131 = dfa131.predict(input);
            switch (alt131) {
                case 1 :
                    // InternalDialogParser.g:5252:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) )
                    {
                    // InternalDialogParser.g:5252:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) )
                    // InternalDialogParser.g:5253:4: () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) )
                    {
                    // InternalDialogParser.g:5253:4: ()
                    // InternalDialogParser.g:5254:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:5260:4: ( ruleAnArticle )?
                    int alt130=2;
                    int LA130_0 = input.LA(1);

                    if ( (LA130_0==Another||LA130_0==Some||LA130_0==The||LA130_0==Any||LA130_0==The_1||LA130_0==An||LA130_0==An_1||LA130_0==A||LA130_0==A_1) ) {
                        alt130=1;
                    }
                    switch (alt130) {
                        case 1 :
                            // InternalDialogParser.g:5261:5: ruleAnArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_94);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,Sublist,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,Of,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:5277:4: ( (lv_list_4_0= norm3_OrExpression ) )
                    // InternalDialogParser.g:5278:5: (lv_list_4_0= norm3_OrExpression )
                    {
                    // InternalDialogParser.g:5278:5: (lv_list_4_0= norm3_OrExpression )
                    // InternalDialogParser.g:5279:6: lv_list_4_0= norm3_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_95);
                    lv_list_4_0=norm3_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"list",
                      							lv_list_4_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,Matching,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
                      			
                    }
                    // InternalDialogParser.g:5300:4: ( (lv_where_6_0= norm3_OrExpression ) )
                    // InternalDialogParser.g:5301:5: (lv_where_6_0= norm3_OrExpression )
                    {
                    // InternalDialogParser.g:5301:5: (lv_where_6_0= norm3_OrExpression )
                    // InternalDialogParser.g:5302:6: lv_where_6_0= norm3_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_6_0=norm3_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_6_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5321:3: this_OrExpression_7= norm3_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OrExpression_7=norm3_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OrExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_ExpressionParameterized"


    // $ANTLR start "entryRuleOrExpression"
    // InternalDialogParser.g:5333:1: entryRuleOrExpression returns [EObject current=null] : iv_ruleOrExpression= ruleOrExpression EOF ;
    public final EObject entryRuleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpression = null;


        try {
            // InternalDialogParser.g:5333:53: (iv_ruleOrExpression= ruleOrExpression EOF )
            // InternalDialogParser.g:5334:2: iv_ruleOrExpression= ruleOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrExpression=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrExpression"


    // $ANTLR start "ruleOrExpression"
    // InternalDialogParser.g:5340:1: ruleOrExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* ) ;
    public final EObject ruleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5346:2: ( (this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* ) )
            // InternalDialogParser.g:5347:2: (this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* )
            {
            // InternalDialogParser.g:5347:2: (this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* )
            // InternalDialogParser.g:5348:3: this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_96);
            this_AndExpression_0=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:5356:3: ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )*
            loop132:
            do {
                int alt132=2;
                int LA132_0 = input.LA(1);

                if ( (LA132_0==Or||LA132_0==VerticalLineVerticalLine) ) {
                    alt132=1;
                }


                switch (alt132) {
            	case 1 :
            	    // InternalDialogParser.g:5357:4: () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) )
            	    {
            	    // InternalDialogParser.g:5357:4: ()
            	    // InternalDialogParser.g:5358:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:5364:4: ( (lv_op_2_0= ruleOpOr ) )
            	    // InternalDialogParser.g:5365:5: (lv_op_2_0= ruleOpOr )
            	    {
            	    // InternalDialogParser.g:5365:5: (lv_op_2_0= ruleOpOr )
            	    // InternalDialogParser.g:5366:6: lv_op_2_0= ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_op_2_0=ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpOr");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:5383:4: ( (lv_right_3_0= ruleAndExpression ) )
            	    // InternalDialogParser.g:5384:5: (lv_right_3_0= ruleAndExpression )
            	    {
            	    // InternalDialogParser.g:5384:5: (lv_right_3_0= ruleAndExpression )
            	    // InternalDialogParser.g:5385:6: lv_right_3_0= ruleAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_96);
            	    lv_right_3_0=ruleAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop132;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrExpression"


    // $ANTLR start "norm1_OrExpression"
    // InternalDialogParser.g:5408:1: norm1_OrExpression returns [EObject current=null] : (this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )* ) ;
    public final EObject norm1_OrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5414:2: ( (this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )* ) )
            // InternalDialogParser.g:5415:2: (this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )* )
            {
            // InternalDialogParser.g:5415:2: (this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )* )
            // InternalDialogParser.g:5416:3: this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_96);
            this_AndExpression_0=norm1_AndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:5424:3: ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==Or||LA133_0==VerticalLineVerticalLine) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // InternalDialogParser.g:5425:4: () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) )
            	    {
            	    // InternalDialogParser.g:5425:4: ()
            	    // InternalDialogParser.g:5426:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:5432:4: ( (lv_op_2_0= ruleOpOr ) )
            	    // InternalDialogParser.g:5433:5: (lv_op_2_0= ruleOpOr )
            	    {
            	    // InternalDialogParser.g:5433:5: (lv_op_2_0= ruleOpOr )
            	    // InternalDialogParser.g:5434:6: lv_op_2_0= ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_op_2_0=ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpOr");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:5451:4: ( (lv_right_3_0= norm1_AndExpression ) )
            	    // InternalDialogParser.g:5452:5: (lv_right_3_0= norm1_AndExpression )
            	    {
            	    // InternalDialogParser.g:5452:5: (lv_right_3_0= norm1_AndExpression )
            	    // InternalDialogParser.g:5453:6: lv_right_3_0= norm1_AndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_96);
            	    lv_right_3_0=norm1_AndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_OrExpression"


    // $ANTLR start "norm2_OrExpression"
    // InternalDialogParser.g:5476:1: norm2_OrExpression returns [EObject current=null] : (this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )* ) ;
    public final EObject norm2_OrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5482:2: ( (this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )* ) )
            // InternalDialogParser.g:5483:2: (this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )* )
            {
            // InternalDialogParser.g:5483:2: (this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )* )
            // InternalDialogParser.g:5484:3: this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_96);
            this_AndExpression_0=norm2_AndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:5492:3: ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )*
            loop134:
            do {
                int alt134=2;
                int LA134_0 = input.LA(1);

                if ( (LA134_0==Or||LA134_0==VerticalLineVerticalLine) ) {
                    alt134=1;
                }


                switch (alt134) {
            	case 1 :
            	    // InternalDialogParser.g:5493:4: () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) )
            	    {
            	    // InternalDialogParser.g:5493:4: ()
            	    // InternalDialogParser.g:5494:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:5500:4: ( (lv_op_2_0= ruleOpOr ) )
            	    // InternalDialogParser.g:5501:5: (lv_op_2_0= ruleOpOr )
            	    {
            	    // InternalDialogParser.g:5501:5: (lv_op_2_0= ruleOpOr )
            	    // InternalDialogParser.g:5502:6: lv_op_2_0= ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_op_2_0=ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpOr");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:5519:4: ( (lv_right_3_0= norm2_AndExpression ) )
            	    // InternalDialogParser.g:5520:5: (lv_right_3_0= norm2_AndExpression )
            	    {
            	    // InternalDialogParser.g:5520:5: (lv_right_3_0= norm2_AndExpression )
            	    // InternalDialogParser.g:5521:6: lv_right_3_0= norm2_AndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_96);
            	    lv_right_3_0=norm2_AndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop134;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_OrExpression"


    // $ANTLR start "norm3_OrExpression"
    // InternalDialogParser.g:5544:1: norm3_OrExpression returns [EObject current=null] : (this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )* ) ;
    public final EObject norm3_OrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5550:2: ( (this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )* ) )
            // InternalDialogParser.g:5551:2: (this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )* )
            {
            // InternalDialogParser.g:5551:2: (this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )* )
            // InternalDialogParser.g:5552:3: this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_96);
            this_AndExpression_0=norm3_AndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:5560:3: ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )*
            loop135:
            do {
                int alt135=2;
                int LA135_0 = input.LA(1);

                if ( (LA135_0==Or||LA135_0==VerticalLineVerticalLine) ) {
                    alt135=1;
                }


                switch (alt135) {
            	case 1 :
            	    // InternalDialogParser.g:5561:4: () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) )
            	    {
            	    // InternalDialogParser.g:5561:4: ()
            	    // InternalDialogParser.g:5562:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:5568:4: ( (lv_op_2_0= ruleOpOr ) )
            	    // InternalDialogParser.g:5569:5: (lv_op_2_0= ruleOpOr )
            	    {
            	    // InternalDialogParser.g:5569:5: (lv_op_2_0= ruleOpOr )
            	    // InternalDialogParser.g:5570:6: lv_op_2_0= ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_83);
            	    lv_op_2_0=ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpOr");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:5587:4: ( (lv_right_3_0= norm3_AndExpression ) )
            	    // InternalDialogParser.g:5588:5: (lv_right_3_0= norm3_AndExpression )
            	    {
            	    // InternalDialogParser.g:5588:5: (lv_right_3_0= norm3_AndExpression )
            	    // InternalDialogParser.g:5589:6: lv_right_3_0= norm3_AndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_96);
            	    lv_right_3_0=norm3_AndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop135;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_OrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalDialogParser.g:5611:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalDialogParser.g:5611:44: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalDialogParser.g:5612:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalDialogParser.g:5618:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Or | kw= VerticalLineVerticalLine ) ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:5624:2: ( (kw= Or | kw= VerticalLineVerticalLine ) )
            // InternalDialogParser.g:5625:2: (kw= Or | kw= VerticalLineVerticalLine )
            {
            // InternalDialogParser.g:5625:2: (kw= Or | kw= VerticalLineVerticalLine )
            int alt136=2;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==Or) ) {
                alt136=1;
            }
            else if ( (LA136_0==VerticalLineVerticalLine) ) {
                alt136=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 136, 0, input);

                throw nvae;
            }
            switch (alt136) {
                case 1 :
                    // InternalDialogParser.g:5626:3: kw= Or
                    {
                    kw=(Token)match(input,Or,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOrAccess().getOrKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5632:3: kw= VerticalLineVerticalLine
                    {
                    kw=(Token)match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleAndExpression"
    // InternalDialogParser.g:5641:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndExpression = null;


        try {
            // InternalDialogParser.g:5641:54: (iv_ruleAndExpression= ruleAndExpression EOF )
            // InternalDialogParser.g:5642:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndExpression=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndExpression"


    // $ANTLR start "ruleAndExpression"
    // InternalDialogParser.g:5648:1: ruleAndExpression returns [EObject current=null] : (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5654:2: ( (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* ) )
            // InternalDialogParser.g:5655:2: (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* )
            {
            // InternalDialogParser.g:5655:2: (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* )
            // InternalDialogParser.g:5656:3: this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_97);
            this_EqualityExpression_0=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:5664:3: ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )*
            loop137:
            do {
                int alt137=2;
                int LA137_0 = input.LA(1);

                if ( (LA137_0==And||LA137_0==AmpersandAmpersand) ) {
                    alt137=1;
                }


                switch (alt137) {
            	case 1 :
            	    // InternalDialogParser.g:5665:4: () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) )
            	    {
            	    // InternalDialogParser.g:5665:4: ()
            	    // InternalDialogParser.g:5666:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:5672:4: ( (lv_op_2_0= ruleOpAnd ) )
            	    // InternalDialogParser.g:5673:5: (lv_op_2_0= ruleOpAnd )
            	    {
            	    // InternalDialogParser.g:5673:5: (lv_op_2_0= ruleOpAnd )
            	    // InternalDialogParser.g:5674:6: lv_op_2_0= ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_op_2_0=ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:5691:4: ( (lv_right_3_0= ruleEqualityExpression ) )
            	    // InternalDialogParser.g:5692:5: (lv_right_3_0= ruleEqualityExpression )
            	    {
            	    // InternalDialogParser.g:5692:5: (lv_right_3_0= ruleEqualityExpression )
            	    // InternalDialogParser.g:5693:6: lv_right_3_0= ruleEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_right_3_0=ruleEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop137;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndExpression"


    // $ANTLR start "norm1_AndExpression"
    // InternalDialogParser.g:5716:1: norm1_AndExpression returns [EObject current=null] : (this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )* ) ;
    public final EObject norm1_AndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5722:2: ( (this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )* ) )
            // InternalDialogParser.g:5723:2: (this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )* )
            {
            // InternalDialogParser.g:5723:2: (this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )* )
            // InternalDialogParser.g:5724:3: this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_97);
            this_EqualityExpression_0=norm1_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:5732:3: ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )*
            loop138:
            do {
                int alt138=2;
                int LA138_0 = input.LA(1);

                if ( (LA138_0==And||LA138_0==AmpersandAmpersand) ) {
                    alt138=1;
                }


                switch (alt138) {
            	case 1 :
            	    // InternalDialogParser.g:5733:4: () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) )
            	    {
            	    // InternalDialogParser.g:5733:4: ()
            	    // InternalDialogParser.g:5734:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:5740:4: ( (lv_op_2_0= ruleOpAnd ) )
            	    // InternalDialogParser.g:5741:5: (lv_op_2_0= ruleOpAnd )
            	    {
            	    // InternalDialogParser.g:5741:5: (lv_op_2_0= ruleOpAnd )
            	    // InternalDialogParser.g:5742:6: lv_op_2_0= ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_op_2_0=ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:5759:4: ( (lv_right_3_0= norm1_EqualityExpression ) )
            	    // InternalDialogParser.g:5760:5: (lv_right_3_0= norm1_EqualityExpression )
            	    {
            	    // InternalDialogParser.g:5760:5: (lv_right_3_0= norm1_EqualityExpression )
            	    // InternalDialogParser.g:5761:6: lv_right_3_0= norm1_EqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_right_3_0=norm1_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop138;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_AndExpression"


    // $ANTLR start "norm2_AndExpression"
    // InternalDialogParser.g:5784:1: norm2_AndExpression returns [EObject current=null] : (this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )* ) ;
    public final EObject norm2_AndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5790:2: ( (this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )* ) )
            // InternalDialogParser.g:5791:2: (this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )* )
            {
            // InternalDialogParser.g:5791:2: (this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )* )
            // InternalDialogParser.g:5792:3: this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_97);
            this_EqualityExpression_0=norm2_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:5800:3: ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )*
            loop139:
            do {
                int alt139=2;
                int LA139_0 = input.LA(1);

                if ( (LA139_0==And||LA139_0==AmpersandAmpersand) ) {
                    alt139=1;
                }


                switch (alt139) {
            	case 1 :
            	    // InternalDialogParser.g:5801:4: () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) )
            	    {
            	    // InternalDialogParser.g:5801:4: ()
            	    // InternalDialogParser.g:5802:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:5808:4: ( (lv_op_2_0= ruleOpAnd ) )
            	    // InternalDialogParser.g:5809:5: (lv_op_2_0= ruleOpAnd )
            	    {
            	    // InternalDialogParser.g:5809:5: (lv_op_2_0= ruleOpAnd )
            	    // InternalDialogParser.g:5810:6: lv_op_2_0= ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_op_2_0=ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:5827:4: ( (lv_right_3_0= norm2_EqualityExpression ) )
            	    // InternalDialogParser.g:5828:5: (lv_right_3_0= norm2_EqualityExpression )
            	    {
            	    // InternalDialogParser.g:5828:5: (lv_right_3_0= norm2_EqualityExpression )
            	    // InternalDialogParser.g:5829:6: lv_right_3_0= norm2_EqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_right_3_0=norm2_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop139;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_AndExpression"


    // $ANTLR start "norm3_AndExpression"
    // InternalDialogParser.g:5852:1: norm3_AndExpression returns [EObject current=null] : (this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )* ) ;
    public final EObject norm3_AndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5858:2: ( (this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )* ) )
            // InternalDialogParser.g:5859:2: (this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )* )
            {
            // InternalDialogParser.g:5859:2: (this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )* )
            // InternalDialogParser.g:5860:3: this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_97);
            this_EqualityExpression_0=norm3_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:5868:3: ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )*
            loop140:
            do {
                int alt140=2;
                int LA140_0 = input.LA(1);

                if ( (LA140_0==And||LA140_0==AmpersandAmpersand) ) {
                    alt140=1;
                }


                switch (alt140) {
            	case 1 :
            	    // InternalDialogParser.g:5869:4: () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) )
            	    {
            	    // InternalDialogParser.g:5869:4: ()
            	    // InternalDialogParser.g:5870:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:5876:4: ( (lv_op_2_0= ruleOpAnd ) )
            	    // InternalDialogParser.g:5877:5: (lv_op_2_0= ruleOpAnd )
            	    {
            	    // InternalDialogParser.g:5877:5: (lv_op_2_0= ruleOpAnd )
            	    // InternalDialogParser.g:5878:6: lv_op_2_0= ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_83);
            	    lv_op_2_0=ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:5895:4: ( (lv_right_3_0= norm3_EqualityExpression ) )
            	    // InternalDialogParser.g:5896:5: (lv_right_3_0= norm3_EqualityExpression )
            	    {
            	    // InternalDialogParser.g:5896:5: (lv_right_3_0= norm3_EqualityExpression )
            	    // InternalDialogParser.g:5897:6: lv_right_3_0= norm3_EqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_right_3_0=norm3_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop140;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_AndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // InternalDialogParser.g:5919:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalDialogParser.g:5919:45: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalDialogParser.g:5920:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalDialogParser.g:5926:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= And | kw= AmpersandAmpersand ) ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:5932:2: ( (kw= And | kw= AmpersandAmpersand ) )
            // InternalDialogParser.g:5933:2: (kw= And | kw= AmpersandAmpersand )
            {
            // InternalDialogParser.g:5933:2: (kw= And | kw= AmpersandAmpersand )
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==And) ) {
                alt141=1;
            }
            else if ( (LA141_0==AmpersandAmpersand) ) {
                alt141=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 141, 0, input);

                throw nvae;
            }
            switch (alt141) {
                case 1 :
                    // InternalDialogParser.g:5934:3: kw= And
                    {
                    kw=(Token)match(input,And,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAndAccess().getAndKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5940:3: kw= AmpersandAmpersand
                    {
                    kw=(Token)match(input,AmpersandAmpersand,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleEqualityExpression"
    // InternalDialogParser.g:5949:1: entryRuleEqualityExpression returns [EObject current=null] : iv_ruleEqualityExpression= ruleEqualityExpression EOF ;
    public final EObject entryRuleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpression = null;


        try {
            // InternalDialogParser.g:5949:59: (iv_ruleEqualityExpression= ruleEqualityExpression EOF )
            // InternalDialogParser.g:5950:2: iv_ruleEqualityExpression= ruleEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpression=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityExpression"


    // $ANTLR start "ruleEqualityExpression"
    // InternalDialogParser.g:5956:1: ruleEqualityExpression returns [EObject current=null] : (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )* ) ;
    public final EObject ruleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5962:2: ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )* ) )
            // InternalDialogParser.g:5963:2: (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )* )
            {
            // InternalDialogParser.g:5963:2: (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )* )
            // InternalDialogParser.g:5964:3: this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_98);
            this_RelationalExpression_0=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:5972:3: ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )*
            loop142:
            do {
                int alt142=2;
                int LA142_0 = input.LA(1);

                if ( (LA142_0==Contains||LA142_0==Does||LA142_0==ExclamationMarkEqualsSign||LA142_0==EqualsSignEqualsSign||LA142_0==Is||LA142_0==EqualsSign) ) {
                    alt142=1;
                }


                switch (alt142) {
            	case 1 :
            	    // InternalDialogParser.g:5973:4: () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) )
            	    {
            	    // InternalDialogParser.g:5973:4: ()
            	    // InternalDialogParser.g:5974:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:5980:4: ( (lv_op_2_0= ruleInfixOperator ) )
            	    // InternalDialogParser.g:5981:5: (lv_op_2_0= ruleInfixOperator )
            	    {
            	    // InternalDialogParser.g:5981:5: (lv_op_2_0= ruleInfixOperator )
            	    // InternalDialogParser.g:5982:6: lv_op_2_0= ruleInfixOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_op_2_0=ruleInfixOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.InfixOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:5999:4: ( (lv_right_3_0= ruleRelationalExpression ) )
            	    // InternalDialogParser.g:6000:5: (lv_right_3_0= ruleRelationalExpression )
            	    {
            	    // InternalDialogParser.g:6000:5: (lv_right_3_0= ruleRelationalExpression )
            	    // InternalDialogParser.g:6001:6: lv_right_3_0= ruleRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_right_3_0=ruleRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.RelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop142;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityExpression"


    // $ANTLR start "norm1_EqualityExpression"
    // InternalDialogParser.g:6024:1: norm1_EqualityExpression returns [EObject current=null] : (this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )* ) ;
    public final EObject norm1_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6030:2: ( (this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )* ) )
            // InternalDialogParser.g:6031:2: (this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )* )
            {
            // InternalDialogParser.g:6031:2: (this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )* )
            // InternalDialogParser.g:6032:3: this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_98);
            this_RelationalExpression_0=norm1_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6040:3: ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )*
            loop143:
            do {
                int alt143=2;
                int LA143_0 = input.LA(1);

                if ( (LA143_0==Contains||LA143_0==Does||LA143_0==ExclamationMarkEqualsSign||LA143_0==EqualsSignEqualsSign||LA143_0==Is||LA143_0==EqualsSign) ) {
                    alt143=1;
                }


                switch (alt143) {
            	case 1 :
            	    // InternalDialogParser.g:6041:4: () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) )
            	    {
            	    // InternalDialogParser.g:6041:4: ()
            	    // InternalDialogParser.g:6042:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:6048:4: ( (lv_op_2_0= ruleInfixOperator ) )
            	    // InternalDialogParser.g:6049:5: (lv_op_2_0= ruleInfixOperator )
            	    {
            	    // InternalDialogParser.g:6049:5: (lv_op_2_0= ruleInfixOperator )
            	    // InternalDialogParser.g:6050:6: lv_op_2_0= ruleInfixOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_op_2_0=ruleInfixOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.InfixOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6067:4: ( (lv_right_3_0= norm1_RelationalExpression ) )
            	    // InternalDialogParser.g:6068:5: (lv_right_3_0= norm1_RelationalExpression )
            	    {
            	    // InternalDialogParser.g:6068:5: (lv_right_3_0= norm1_RelationalExpression )
            	    // InternalDialogParser.g:6069:6: lv_right_3_0= norm1_RelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_right_3_0=norm1_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.RelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop143;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_EqualityExpression"


    // $ANTLR start "norm2_EqualityExpression"
    // InternalDialogParser.g:6092:1: norm2_EqualityExpression returns [EObject current=null] : (this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )* ) ;
    public final EObject norm2_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6098:2: ( (this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )* ) )
            // InternalDialogParser.g:6099:2: (this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )* )
            {
            // InternalDialogParser.g:6099:2: (this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )* )
            // InternalDialogParser.g:6100:3: this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_98);
            this_RelationalExpression_0=norm2_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6108:3: ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )*
            loop144:
            do {
                int alt144=2;
                int LA144_0 = input.LA(1);

                if ( (LA144_0==Contains||LA144_0==Does||LA144_0==ExclamationMarkEqualsSign||LA144_0==EqualsSignEqualsSign||LA144_0==Is||LA144_0==EqualsSign) ) {
                    alt144=1;
                }


                switch (alt144) {
            	case 1 :
            	    // InternalDialogParser.g:6109:4: () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) )
            	    {
            	    // InternalDialogParser.g:6109:4: ()
            	    // InternalDialogParser.g:6110:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:6116:4: ( (lv_op_2_0= ruleInfixOperator ) )
            	    // InternalDialogParser.g:6117:5: (lv_op_2_0= ruleInfixOperator )
            	    {
            	    // InternalDialogParser.g:6117:5: (lv_op_2_0= ruleInfixOperator )
            	    // InternalDialogParser.g:6118:6: lv_op_2_0= ruleInfixOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_op_2_0=ruleInfixOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.InfixOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6135:4: ( (lv_right_3_0= norm2_RelationalExpression ) )
            	    // InternalDialogParser.g:6136:5: (lv_right_3_0= norm2_RelationalExpression )
            	    {
            	    // InternalDialogParser.g:6136:5: (lv_right_3_0= norm2_RelationalExpression )
            	    // InternalDialogParser.g:6137:6: lv_right_3_0= norm2_RelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_right_3_0=norm2_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.RelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop144;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_EqualityExpression"


    // $ANTLR start "norm3_EqualityExpression"
    // InternalDialogParser.g:6160:1: norm3_EqualityExpression returns [EObject current=null] : (this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )* ) ;
    public final EObject norm3_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6166:2: ( (this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )* ) )
            // InternalDialogParser.g:6167:2: (this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )* )
            {
            // InternalDialogParser.g:6167:2: (this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )* )
            // InternalDialogParser.g:6168:3: this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_98);
            this_RelationalExpression_0=norm3_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6176:3: ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )*
            loop145:
            do {
                int alt145=2;
                int LA145_0 = input.LA(1);

                if ( (LA145_0==Contains||LA145_0==Does||LA145_0==ExclamationMarkEqualsSign||LA145_0==EqualsSignEqualsSign||LA145_0==Is||LA145_0==EqualsSign) ) {
                    alt145=1;
                }


                switch (alt145) {
            	case 1 :
            	    // InternalDialogParser.g:6177:4: () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) )
            	    {
            	    // InternalDialogParser.g:6177:4: ()
            	    // InternalDialogParser.g:6178:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:6184:4: ( (lv_op_2_0= ruleInfixOperator ) )
            	    // InternalDialogParser.g:6185:5: (lv_op_2_0= ruleInfixOperator )
            	    {
            	    // InternalDialogParser.g:6185:5: (lv_op_2_0= ruleInfixOperator )
            	    // InternalDialogParser.g:6186:6: lv_op_2_0= ruleInfixOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_83);
            	    lv_op_2_0=ruleInfixOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.InfixOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6203:4: ( (lv_right_3_0= norm3_RelationalExpression ) )
            	    // InternalDialogParser.g:6204:5: (lv_right_3_0= norm3_RelationalExpression )
            	    {
            	    // InternalDialogParser.g:6204:5: (lv_right_3_0= norm3_RelationalExpression )
            	    // InternalDialogParser.g:6205:6: lv_right_3_0= norm3_RelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_right_3_0=norm3_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.RelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop145;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_EqualityExpression"


    // $ANTLR start "entryRuleInfixOperator"
    // InternalDialogParser.g:6227:1: entryRuleInfixOperator returns [String current=null] : iv_ruleInfixOperator= ruleInfixOperator EOF ;
    public final String entryRuleInfixOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInfixOperator = null;


        try {
            // InternalDialogParser.g:6227:53: (iv_ruleInfixOperator= ruleInfixOperator EOF )
            // InternalDialogParser.g:6228:2: iv_ruleInfixOperator= ruleInfixOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInfixOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInfixOperator=ruleInfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInfixOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInfixOperator"


    // $ANTLR start "ruleInfixOperator"
    // InternalDialogParser.g:6234:1: ruleInfixOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSign | (kw= Is ( (kw= Not )? kw= Unique kw= In )? ) | kw= Contains | (kw= Does kw= Not kw= Contain ) ) ;
    public final AntlrDatatypeRuleToken ruleInfixOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:6240:2: ( (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSign | (kw= Is ( (kw= Not )? kw= Unique kw= In )? ) | kw= Contains | (kw= Does kw= Not kw= Contain ) ) )
            // InternalDialogParser.g:6241:2: (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSign | (kw= Is ( (kw= Not )? kw= Unique kw= In )? ) | kw= Contains | (kw= Does kw= Not kw= Contain ) )
            {
            // InternalDialogParser.g:6241:2: (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSign | (kw= Is ( (kw= Not )? kw= Unique kw= In )? ) | kw= Contains | (kw= Does kw= Not kw= Contain ) )
            int alt148=6;
            switch ( input.LA(1) ) {
            case EqualsSignEqualsSign:
                {
                alt148=1;
                }
                break;
            case ExclamationMarkEqualsSign:
                {
                alt148=2;
                }
                break;
            case EqualsSign:
                {
                alt148=3;
                }
                break;
            case Is:
                {
                alt148=4;
                }
                break;
            case Contains:
                {
                alt148=5;
                }
                break;
            case Does:
                {
                alt148=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 148, 0, input);

                throw nvae;
            }

            switch (alt148) {
                case 1 :
                    // InternalDialogParser.g:6242:3: kw= EqualsSignEqualsSign
                    {
                    kw=(Token)match(input,EqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6248:3: kw= ExclamationMarkEqualsSign
                    {
                    kw=(Token)match(input,ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:6254:3: kw= EqualsSign
                    {
                    kw=(Token)match(input,EqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:6260:3: (kw= Is ( (kw= Not )? kw= Unique kw= In )? )
                    {
                    // InternalDialogParser.g:6260:3: (kw= Is ( (kw= Not )? kw= Unique kw= In )? )
                    // InternalDialogParser.g:6261:4: kw= Is ( (kw= Not )? kw= Unique kw= In )?
                    {
                    kw=(Token)match(input,Is,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getIsKeyword_3_0());
                      			
                    }
                    // InternalDialogParser.g:6266:4: ( (kw= Not )? kw= Unique kw= In )?
                    int alt147=2;
                    int LA147_0 = input.LA(1);

                    if ( (LA147_0==Not) ) {
                        int LA147_1 = input.LA(2);

                        if ( (LA147_1==Unique) ) {
                            alt147=1;
                        }
                    }
                    else if ( (LA147_0==Unique) ) {
                        alt147=1;
                    }
                    switch (alt147) {
                        case 1 :
                            // InternalDialogParser.g:6267:5: (kw= Not )? kw= Unique kw= In
                            {
                            // InternalDialogParser.g:6267:5: (kw= Not )?
                            int alt146=2;
                            int LA146_0 = input.LA(1);

                            if ( (LA146_0==Not) ) {
                                alt146=1;
                            }
                            switch (alt146) {
                                case 1 :
                                    // InternalDialogParser.g:6268:6: kw= Not
                                    {
                                    kw=(Token)match(input,Not,FOLLOW_100); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(kw);
                                      						newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getNotKeyword_3_1_0());
                                      					
                                    }

                                    }
                                    break;

                            }

                            kw=(Token)match(input,Unique,FOLLOW_101); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getUniqueKeyword_3_1_1());
                              				
                            }
                            kw=(Token)match(input,In,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getInKeyword_3_1_2());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:6287:3: kw= Contains
                    {
                    kw=(Token)match(input,Contains,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getContainsKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:6293:3: (kw= Does kw= Not kw= Contain )
                    {
                    // InternalDialogParser.g:6293:3: (kw= Does kw= Not kw= Contain )
                    // InternalDialogParser.g:6294:4: kw= Does kw= Not kw= Contain
                    {
                    kw=(Token)match(input,Does,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getDoesKeyword_5_0());
                      			
                    }
                    kw=(Token)match(input,Not,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getNotKeyword_5_1());
                      			
                    }
                    kw=(Token)match(input,Contain,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getContainKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInfixOperator"


    // $ANTLR start "entryRuleRelationalExpression"
    // InternalDialogParser.g:6314:1: entryRuleRelationalExpression returns [EObject current=null] : iv_ruleRelationalExpression= ruleRelationalExpression EOF ;
    public final EObject entryRuleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationalExpression = null;


        try {
            // InternalDialogParser.g:6314:61: (iv_ruleRelationalExpression= ruleRelationalExpression EOF )
            // InternalDialogParser.g:6315:2: iv_ruleRelationalExpression= ruleRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationalExpression=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationalExpression"


    // $ANTLR start "ruleRelationalExpression"
    // InternalDialogParser.g:6321:1: ruleRelationalExpression returns [EObject current=null] : (this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )* ) ;
    public final EObject ruleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Addition_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6327:2: ( (this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )* ) )
            // InternalDialogParser.g:6328:2: (this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )* )
            {
            // InternalDialogParser.g:6328:2: (this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )* )
            // InternalDialogParser.g:6329:3: this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_104);
            this_Addition_0=ruleAddition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Addition_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6337:3: ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )*
            loop149:
            do {
                int alt149=2;
                int LA149_0 = input.LA(1);

                if ( (LA149_0==GreaterThanSignEqualsSign) && (synpred11_InternalDialogParser())) {
                    alt149=1;
                }
                else if ( (LA149_0==LessThanSignEqualsSign) && (synpred11_InternalDialogParser())) {
                    alt149=1;
                }
                else if ( (LA149_0==GreaterThanSign) && (synpred11_InternalDialogParser())) {
                    alt149=1;
                }
                else if ( (LA149_0==LessThanSign) && (synpred11_InternalDialogParser())) {
                    alt149=1;
                }


                switch (alt149) {
            	case 1 :
            	    // InternalDialogParser.g:6338:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) )
            	    {
            	    // InternalDialogParser.g:6339:4: ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) )
            	    // InternalDialogParser.g:6340:5: () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) )
            	    {
            	    // InternalDialogParser.g:6340:5: ()
            	    // InternalDialogParser.g:6341:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalDialogParser.g:6347:5: ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) )
            	    // InternalDialogParser.g:6348:6: ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare )
            	    {
            	    // InternalDialogParser.g:6352:6: (lv_op_2_0= ruleOpCompare )
            	    // InternalDialogParser.g:6353:7: lv_op_2_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_op_2_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"op",
            	      								lv_op_2_0,
            	      								"com.ge.research.sadl.SADL.OpCompare");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6370:5: ( (lv_right_3_0= ruleAddition ) )
            	    // InternalDialogParser.g:6371:6: (lv_right_3_0= ruleAddition )
            	    {
            	    // InternalDialogParser.g:6371:6: (lv_right_3_0= ruleAddition )
            	    // InternalDialogParser.g:6372:7: lv_right_3_0= ruleAddition
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_104);
            	    lv_right_3_0=ruleAddition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"com.ge.research.sadl.SADL.Addition");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop149;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationalExpression"


    // $ANTLR start "norm1_RelationalExpression"
    // InternalDialogParser.g:6396:1: norm1_RelationalExpression returns [EObject current=null] : (this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )* ) ;
    public final EObject norm1_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Addition_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6402:2: ( (this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )* ) )
            // InternalDialogParser.g:6403:2: (this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )* )
            {
            // InternalDialogParser.g:6403:2: (this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )* )
            // InternalDialogParser.g:6404:3: this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_104);
            this_Addition_0=norm1_Addition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Addition_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6412:3: ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )*
            loop150:
            do {
                int alt150=2;
                int LA150_0 = input.LA(1);

                if ( (LA150_0==GreaterThanSignEqualsSign) && (synpred13_InternalDialogParser())) {
                    alt150=1;
                }
                else if ( (LA150_0==LessThanSignEqualsSign) && (synpred13_InternalDialogParser())) {
                    alt150=1;
                }
                else if ( (LA150_0==GreaterThanSign) && (synpred13_InternalDialogParser())) {
                    alt150=1;
                }
                else if ( (LA150_0==LessThanSign) && (synpred13_InternalDialogParser())) {
                    alt150=1;
                }


                switch (alt150) {
            	case 1 :
            	    // InternalDialogParser.g:6413:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) )
            	    {
            	    // InternalDialogParser.g:6414:4: ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) )
            	    // InternalDialogParser.g:6415:5: () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) )
            	    {
            	    // InternalDialogParser.g:6415:5: ()
            	    // InternalDialogParser.g:6416:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalDialogParser.g:6422:5: ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) )
            	    // InternalDialogParser.g:6423:6: ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare )
            	    {
            	    // InternalDialogParser.g:6427:6: (lv_op_2_0= ruleOpCompare )
            	    // InternalDialogParser.g:6428:7: lv_op_2_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_op_2_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"op",
            	      								lv_op_2_0,
            	      								"com.ge.research.sadl.SADL.OpCompare");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6445:5: ( (lv_right_3_0= norm1_Addition ) )
            	    // InternalDialogParser.g:6446:6: (lv_right_3_0= norm1_Addition )
            	    {
            	    // InternalDialogParser.g:6446:6: (lv_right_3_0= norm1_Addition )
            	    // InternalDialogParser.g:6447:7: lv_right_3_0= norm1_Addition
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_104);
            	    lv_right_3_0=norm1_Addition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"com.ge.research.sadl.SADL.Addition");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop150;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_RelationalExpression"


    // $ANTLR start "norm2_RelationalExpression"
    // InternalDialogParser.g:6471:1: norm2_RelationalExpression returns [EObject current=null] : (this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )* ) ;
    public final EObject norm2_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Addition_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6477:2: ( (this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )* ) )
            // InternalDialogParser.g:6478:2: (this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )* )
            {
            // InternalDialogParser.g:6478:2: (this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )* )
            // InternalDialogParser.g:6479:3: this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_104);
            this_Addition_0=norm2_Addition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Addition_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6487:3: ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )*
            loop151:
            do {
                int alt151=2;
                int LA151_0 = input.LA(1);

                if ( (LA151_0==GreaterThanSignEqualsSign) && (synpred15_InternalDialogParser())) {
                    alt151=1;
                }
                else if ( (LA151_0==LessThanSignEqualsSign) && (synpred15_InternalDialogParser())) {
                    alt151=1;
                }
                else if ( (LA151_0==GreaterThanSign) && (synpred15_InternalDialogParser())) {
                    alt151=1;
                }
                else if ( (LA151_0==LessThanSign) && (synpred15_InternalDialogParser())) {
                    alt151=1;
                }


                switch (alt151) {
            	case 1 :
            	    // InternalDialogParser.g:6488:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) )
            	    {
            	    // InternalDialogParser.g:6489:4: ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) )
            	    // InternalDialogParser.g:6490:5: () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) )
            	    {
            	    // InternalDialogParser.g:6490:5: ()
            	    // InternalDialogParser.g:6491:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalDialogParser.g:6497:5: ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) )
            	    // InternalDialogParser.g:6498:6: ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare )
            	    {
            	    // InternalDialogParser.g:6502:6: (lv_op_2_0= ruleOpCompare )
            	    // InternalDialogParser.g:6503:7: lv_op_2_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_op_2_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"op",
            	      								lv_op_2_0,
            	      								"com.ge.research.sadl.SADL.OpCompare");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6520:5: ( (lv_right_3_0= norm2_Addition ) )
            	    // InternalDialogParser.g:6521:6: (lv_right_3_0= norm2_Addition )
            	    {
            	    // InternalDialogParser.g:6521:6: (lv_right_3_0= norm2_Addition )
            	    // InternalDialogParser.g:6522:7: lv_right_3_0= norm2_Addition
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_104);
            	    lv_right_3_0=norm2_Addition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"com.ge.research.sadl.SADL.Addition");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop151;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_RelationalExpression"


    // $ANTLR start "norm3_RelationalExpression"
    // InternalDialogParser.g:6546:1: norm3_RelationalExpression returns [EObject current=null] : (this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )* ) ;
    public final EObject norm3_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Addition_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6552:2: ( (this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )* ) )
            // InternalDialogParser.g:6553:2: (this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )* )
            {
            // InternalDialogParser.g:6553:2: (this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )* )
            // InternalDialogParser.g:6554:3: this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_104);
            this_Addition_0=norm3_Addition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Addition_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6562:3: ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )*
            loop152:
            do {
                int alt152=2;
                int LA152_0 = input.LA(1);

                if ( (LA152_0==GreaterThanSignEqualsSign) && (synpred17_InternalDialogParser())) {
                    alt152=1;
                }
                else if ( (LA152_0==LessThanSignEqualsSign) && (synpred17_InternalDialogParser())) {
                    alt152=1;
                }
                else if ( (LA152_0==GreaterThanSign) && (synpred17_InternalDialogParser())) {
                    alt152=1;
                }
                else if ( (LA152_0==LessThanSign) && (synpred17_InternalDialogParser())) {
                    alt152=1;
                }


                switch (alt152) {
            	case 1 :
            	    // InternalDialogParser.g:6563:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) )
            	    {
            	    // InternalDialogParser.g:6564:4: ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) )
            	    // InternalDialogParser.g:6565:5: () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) )
            	    {
            	    // InternalDialogParser.g:6565:5: ()
            	    // InternalDialogParser.g:6566:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalDialogParser.g:6572:5: ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) )
            	    // InternalDialogParser.g:6573:6: ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare )
            	    {
            	    // InternalDialogParser.g:6577:6: (lv_op_2_0= ruleOpCompare )
            	    // InternalDialogParser.g:6578:7: lv_op_2_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_83);
            	    lv_op_2_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"op",
            	      								lv_op_2_0,
            	      								"com.ge.research.sadl.SADL.OpCompare");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6595:5: ( (lv_right_3_0= norm3_Addition ) )
            	    // InternalDialogParser.g:6596:6: (lv_right_3_0= norm3_Addition )
            	    {
            	    // InternalDialogParser.g:6596:6: (lv_right_3_0= norm3_Addition )
            	    // InternalDialogParser.g:6597:7: lv_right_3_0= norm3_Addition
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_104);
            	    lv_right_3_0=norm3_Addition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"com.ge.research.sadl.SADL.Addition");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop152;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_RelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // InternalDialogParser.g:6620:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalDialogParser.g:6620:49: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalDialogParser.g:6621:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalDialogParser.g:6627:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:6633:2: ( (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign ) )
            // InternalDialogParser.g:6634:2: (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign )
            {
            // InternalDialogParser.g:6634:2: (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign )
            int alt153=4;
            switch ( input.LA(1) ) {
            case GreaterThanSignEqualsSign:
                {
                alt153=1;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt153=2;
                }
                break;
            case GreaterThanSign:
                {
                alt153=3;
                }
                break;
            case LessThanSign:
                {
                alt153=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 153, 0, input);

                throw nvae;
            }

            switch (alt153) {
                case 1 :
                    // InternalDialogParser.g:6635:3: kw= GreaterThanSignEqualsSign
                    {
                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6641:3: kw= LessThanSignEqualsSign
                    {
                    kw=(Token)match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:6647:3: kw= GreaterThanSign
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:6653:3: kw= LessThanSign
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleAddition"
    // InternalDialogParser.g:6662:1: entryRuleAddition returns [EObject current=null] : iv_ruleAddition= ruleAddition EOF ;
    public final EObject entryRuleAddition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAddition = null;


        try {
            // InternalDialogParser.g:6662:49: (iv_ruleAddition= ruleAddition EOF )
            // InternalDialogParser.g:6663:2: iv_ruleAddition= ruleAddition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAddition=ruleAddition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddition"


    // $ANTLR start "ruleAddition"
    // InternalDialogParser.g:6669:1: ruleAddition returns [EObject current=null] : (this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* ) ;
    public final EObject ruleAddition() throws RecognitionException {
        EObject current = null;

        EObject this_Multiplication_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6675:2: ( (this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* ) )
            // InternalDialogParser.g:6676:2: (this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* )
            {
            // InternalDialogParser.g:6676:2: (this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* )
            // InternalDialogParser.g:6677:3: this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_105);
            this_Multiplication_0=ruleMultiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Multiplication_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6685:3: ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )*
            loop154:
            do {
                int alt154=2;
                int LA154_0 = input.LA(1);

                if ( (LA154_0==PlusSign||LA154_0==HyphenMinus) ) {
                    alt154=1;
                }


                switch (alt154) {
            	case 1 :
            	    // InternalDialogParser.g:6686:4: () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) )
            	    {
            	    // InternalDialogParser.g:6686:4: ()
            	    // InternalDialogParser.g:6687:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:6693:4: ( (lv_op_2_0= ruleAddOp ) )
            	    // InternalDialogParser.g:6694:5: (lv_op_2_0= ruleAddOp )
            	    {
            	    // InternalDialogParser.g:6694:5: (lv_op_2_0= ruleAddOp )
            	    // InternalDialogParser.g:6695:6: lv_op_2_0= ruleAddOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_op_2_0=ruleAddOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.AddOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6712:4: ( (lv_right_3_0= ruleMultiplication ) )
            	    // InternalDialogParser.g:6713:5: (lv_right_3_0= ruleMultiplication )
            	    {
            	    // InternalDialogParser.g:6713:5: (lv_right_3_0= ruleMultiplication )
            	    // InternalDialogParser.g:6714:6: lv_right_3_0= ruleMultiplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_right_3_0=ruleMultiplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Multiplication");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop154;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddition"


    // $ANTLR start "norm1_Addition"
    // InternalDialogParser.g:6737:1: norm1_Addition returns [EObject current=null] : (this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )* ) ;
    public final EObject norm1_Addition() throws RecognitionException {
        EObject current = null;

        EObject this_Multiplication_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6743:2: ( (this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )* ) )
            // InternalDialogParser.g:6744:2: (this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )* )
            {
            // InternalDialogParser.g:6744:2: (this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )* )
            // InternalDialogParser.g:6745:3: this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_105);
            this_Multiplication_0=norm1_Multiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Multiplication_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6753:3: ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )*
            loop155:
            do {
                int alt155=2;
                int LA155_0 = input.LA(1);

                if ( (LA155_0==PlusSign||LA155_0==HyphenMinus) ) {
                    alt155=1;
                }


                switch (alt155) {
            	case 1 :
            	    // InternalDialogParser.g:6754:4: () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) )
            	    {
            	    // InternalDialogParser.g:6754:4: ()
            	    // InternalDialogParser.g:6755:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:6761:4: ( (lv_op_2_0= ruleAddOp ) )
            	    // InternalDialogParser.g:6762:5: (lv_op_2_0= ruleAddOp )
            	    {
            	    // InternalDialogParser.g:6762:5: (lv_op_2_0= ruleAddOp )
            	    // InternalDialogParser.g:6763:6: lv_op_2_0= ruleAddOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_op_2_0=ruleAddOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.AddOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6780:4: ( (lv_right_3_0= norm1_Multiplication ) )
            	    // InternalDialogParser.g:6781:5: (lv_right_3_0= norm1_Multiplication )
            	    {
            	    // InternalDialogParser.g:6781:5: (lv_right_3_0= norm1_Multiplication )
            	    // InternalDialogParser.g:6782:6: lv_right_3_0= norm1_Multiplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_right_3_0=norm1_Multiplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Multiplication");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop155;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_Addition"


    // $ANTLR start "norm2_Addition"
    // InternalDialogParser.g:6805:1: norm2_Addition returns [EObject current=null] : (this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )* ) ;
    public final EObject norm2_Addition() throws RecognitionException {
        EObject current = null;

        EObject this_Multiplication_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6811:2: ( (this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )* ) )
            // InternalDialogParser.g:6812:2: (this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )* )
            {
            // InternalDialogParser.g:6812:2: (this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )* )
            // InternalDialogParser.g:6813:3: this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_105);
            this_Multiplication_0=norm2_Multiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Multiplication_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6821:3: ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )*
            loop156:
            do {
                int alt156=2;
                int LA156_0 = input.LA(1);

                if ( (LA156_0==PlusSign||LA156_0==HyphenMinus) ) {
                    alt156=1;
                }


                switch (alt156) {
            	case 1 :
            	    // InternalDialogParser.g:6822:4: () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) )
            	    {
            	    // InternalDialogParser.g:6822:4: ()
            	    // InternalDialogParser.g:6823:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:6829:4: ( (lv_op_2_0= ruleAddOp ) )
            	    // InternalDialogParser.g:6830:5: (lv_op_2_0= ruleAddOp )
            	    {
            	    // InternalDialogParser.g:6830:5: (lv_op_2_0= ruleAddOp )
            	    // InternalDialogParser.g:6831:6: lv_op_2_0= ruleAddOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_op_2_0=ruleAddOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.AddOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6848:4: ( (lv_right_3_0= norm2_Multiplication ) )
            	    // InternalDialogParser.g:6849:5: (lv_right_3_0= norm2_Multiplication )
            	    {
            	    // InternalDialogParser.g:6849:5: (lv_right_3_0= norm2_Multiplication )
            	    // InternalDialogParser.g:6850:6: lv_right_3_0= norm2_Multiplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_right_3_0=norm2_Multiplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Multiplication");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop156;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_Addition"


    // $ANTLR start "norm3_Addition"
    // InternalDialogParser.g:6873:1: norm3_Addition returns [EObject current=null] : (this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )* ) ;
    public final EObject norm3_Addition() throws RecognitionException {
        EObject current = null;

        EObject this_Multiplication_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6879:2: ( (this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )* ) )
            // InternalDialogParser.g:6880:2: (this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )* )
            {
            // InternalDialogParser.g:6880:2: (this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )* )
            // InternalDialogParser.g:6881:3: this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_105);
            this_Multiplication_0=norm3_Multiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Multiplication_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6889:3: ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )*
            loop157:
            do {
                int alt157=2;
                int LA157_0 = input.LA(1);

                if ( (LA157_0==PlusSign||LA157_0==HyphenMinus) ) {
                    alt157=1;
                }


                switch (alt157) {
            	case 1 :
            	    // InternalDialogParser.g:6890:4: () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) )
            	    {
            	    // InternalDialogParser.g:6890:4: ()
            	    // InternalDialogParser.g:6891:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:6897:4: ( (lv_op_2_0= ruleAddOp ) )
            	    // InternalDialogParser.g:6898:5: (lv_op_2_0= ruleAddOp )
            	    {
            	    // InternalDialogParser.g:6898:5: (lv_op_2_0= ruleAddOp )
            	    // InternalDialogParser.g:6899:6: lv_op_2_0= ruleAddOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_83);
            	    lv_op_2_0=ruleAddOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.AddOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:6916:4: ( (lv_right_3_0= norm3_Multiplication ) )
            	    // InternalDialogParser.g:6917:5: (lv_right_3_0= norm3_Multiplication )
            	    {
            	    // InternalDialogParser.g:6917:5: (lv_right_3_0= norm3_Multiplication )
            	    // InternalDialogParser.g:6918:6: lv_right_3_0= norm3_Multiplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_right_3_0=norm3_Multiplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Multiplication");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop157;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_Addition"


    // $ANTLR start "entryRuleAddOp"
    // InternalDialogParser.g:6940:1: entryRuleAddOp returns [String current=null] : iv_ruleAddOp= ruleAddOp EOF ;
    public final String entryRuleAddOp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAddOp = null;


        try {
            // InternalDialogParser.g:6940:45: (iv_ruleAddOp= ruleAddOp EOF )
            // InternalDialogParser.g:6941:2: iv_ruleAddOp= ruleAddOp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddOpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAddOp=ruleAddOp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddOp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddOp"


    // $ANTLR start "ruleAddOp"
    // InternalDialogParser.g:6947:1: ruleAddOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PlusSign | kw= HyphenMinus ) ;
    public final AntlrDatatypeRuleToken ruleAddOp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:6953:2: ( (kw= PlusSign | kw= HyphenMinus ) )
            // InternalDialogParser.g:6954:2: (kw= PlusSign | kw= HyphenMinus )
            {
            // InternalDialogParser.g:6954:2: (kw= PlusSign | kw= HyphenMinus )
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==PlusSign) ) {
                alt158=1;
            }
            else if ( (LA158_0==HyphenMinus) ) {
                alt158=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 158, 0, input);

                throw nvae;
            }
            switch (alt158) {
                case 1 :
                    // InternalDialogParser.g:6955:3: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAddOpAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6961:3: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAddOpAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddOp"


    // $ANTLR start "entryRuleMultiplication"
    // InternalDialogParser.g:6970:1: entryRuleMultiplication returns [EObject current=null] : iv_ruleMultiplication= ruleMultiplication EOF ;
    public final EObject entryRuleMultiplication() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplication = null;


        try {
            // InternalDialogParser.g:6970:55: (iv_ruleMultiplication= ruleMultiplication EOF )
            // InternalDialogParser.g:6971:2: iv_ruleMultiplication= ruleMultiplication EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplication=ruleMultiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplication; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplication"


    // $ANTLR start "ruleMultiplication"
    // InternalDialogParser.g:6977:1: ruleMultiplication returns [EObject current=null] : (this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )* ) ;
    public final EObject ruleMultiplication() throws RecognitionException {
        EObject current = null;

        EObject this_Power_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6983:2: ( (this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )* ) )
            // InternalDialogParser.g:6984:2: (this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )* )
            {
            // InternalDialogParser.g:6984:2: (this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )* )
            // InternalDialogParser.g:6985:3: this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_106);
            this_Power_0=rulePower();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Power_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:6993:3: ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )*
            loop159:
            do {
                int alt159=2;
                int LA159_0 = input.LA(1);

                if ( (LA159_0==PercentSign||LA159_0==Asterisk||LA159_0==Solidus) ) {
                    alt159=1;
                }


                switch (alt159) {
            	case 1 :
            	    // InternalDialogParser.g:6994:4: () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) )
            	    {
            	    // InternalDialogParser.g:6994:4: ()
            	    // InternalDialogParser.g:6995:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7001:4: ( (lv_op_2_0= ruleMultiOp ) )
            	    // InternalDialogParser.g:7002:5: (lv_op_2_0= ruleMultiOp )
            	    {
            	    // InternalDialogParser.g:7002:5: (lv_op_2_0= ruleMultiOp )
            	    // InternalDialogParser.g:7003:6: lv_op_2_0= ruleMultiOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_op_2_0=ruleMultiOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.MultiOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7020:4: ( (lv_right_3_0= rulePower ) )
            	    // InternalDialogParser.g:7021:5: (lv_right_3_0= rulePower )
            	    {
            	    // InternalDialogParser.g:7021:5: (lv_right_3_0= rulePower )
            	    // InternalDialogParser.g:7022:6: lv_right_3_0= rulePower
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_106);
            	    lv_right_3_0=rulePower();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Power");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop159;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplication"


    // $ANTLR start "norm1_Multiplication"
    // InternalDialogParser.g:7045:1: norm1_Multiplication returns [EObject current=null] : (this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )* ) ;
    public final EObject norm1_Multiplication() throws RecognitionException {
        EObject current = null;

        EObject this_Power_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7051:2: ( (this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )* ) )
            // InternalDialogParser.g:7052:2: (this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )* )
            {
            // InternalDialogParser.g:7052:2: (this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )* )
            // InternalDialogParser.g:7053:3: this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_106);
            this_Power_0=norm1_Power();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Power_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7061:3: ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )*
            loop160:
            do {
                int alt160=2;
                int LA160_0 = input.LA(1);

                if ( (LA160_0==PercentSign||LA160_0==Asterisk||LA160_0==Solidus) ) {
                    alt160=1;
                }


                switch (alt160) {
            	case 1 :
            	    // InternalDialogParser.g:7062:4: () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) )
            	    {
            	    // InternalDialogParser.g:7062:4: ()
            	    // InternalDialogParser.g:7063:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7069:4: ( (lv_op_2_0= ruleMultiOp ) )
            	    // InternalDialogParser.g:7070:5: (lv_op_2_0= ruleMultiOp )
            	    {
            	    // InternalDialogParser.g:7070:5: (lv_op_2_0= ruleMultiOp )
            	    // InternalDialogParser.g:7071:6: lv_op_2_0= ruleMultiOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_op_2_0=ruleMultiOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.MultiOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7088:4: ( (lv_right_3_0= norm1_Power ) )
            	    // InternalDialogParser.g:7089:5: (lv_right_3_0= norm1_Power )
            	    {
            	    // InternalDialogParser.g:7089:5: (lv_right_3_0= norm1_Power )
            	    // InternalDialogParser.g:7090:6: lv_right_3_0= norm1_Power
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_106);
            	    lv_right_3_0=norm1_Power();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Power");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop160;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_Multiplication"


    // $ANTLR start "norm2_Multiplication"
    // InternalDialogParser.g:7113:1: norm2_Multiplication returns [EObject current=null] : (this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )* ) ;
    public final EObject norm2_Multiplication() throws RecognitionException {
        EObject current = null;

        EObject this_Power_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7119:2: ( (this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )* ) )
            // InternalDialogParser.g:7120:2: (this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )* )
            {
            // InternalDialogParser.g:7120:2: (this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )* )
            // InternalDialogParser.g:7121:3: this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_106);
            this_Power_0=norm2_Power();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Power_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7129:3: ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )*
            loop161:
            do {
                int alt161=2;
                int LA161_0 = input.LA(1);

                if ( (LA161_0==PercentSign||LA161_0==Asterisk||LA161_0==Solidus) ) {
                    alt161=1;
                }


                switch (alt161) {
            	case 1 :
            	    // InternalDialogParser.g:7130:4: () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) )
            	    {
            	    // InternalDialogParser.g:7130:4: ()
            	    // InternalDialogParser.g:7131:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7137:4: ( (lv_op_2_0= ruleMultiOp ) )
            	    // InternalDialogParser.g:7138:5: (lv_op_2_0= ruleMultiOp )
            	    {
            	    // InternalDialogParser.g:7138:5: (lv_op_2_0= ruleMultiOp )
            	    // InternalDialogParser.g:7139:6: lv_op_2_0= ruleMultiOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_90);
            	    lv_op_2_0=ruleMultiOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.MultiOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7156:4: ( (lv_right_3_0= norm2_Power ) )
            	    // InternalDialogParser.g:7157:5: (lv_right_3_0= norm2_Power )
            	    {
            	    // InternalDialogParser.g:7157:5: (lv_right_3_0= norm2_Power )
            	    // InternalDialogParser.g:7158:6: lv_right_3_0= norm2_Power
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_106);
            	    lv_right_3_0=norm2_Power();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Power");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop161;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_Multiplication"


    // $ANTLR start "norm3_Multiplication"
    // InternalDialogParser.g:7181:1: norm3_Multiplication returns [EObject current=null] : (this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )* ) ;
    public final EObject norm3_Multiplication() throws RecognitionException {
        EObject current = null;

        EObject this_Power_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7187:2: ( (this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )* ) )
            // InternalDialogParser.g:7188:2: (this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )* )
            {
            // InternalDialogParser.g:7188:2: (this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )* )
            // InternalDialogParser.g:7189:3: this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_106);
            this_Power_0=norm3_Power();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Power_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7197:3: ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )*
            loop162:
            do {
                int alt162=2;
                int LA162_0 = input.LA(1);

                if ( (LA162_0==PercentSign||LA162_0==Asterisk||LA162_0==Solidus) ) {
                    alt162=1;
                }


                switch (alt162) {
            	case 1 :
            	    // InternalDialogParser.g:7198:4: () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) )
            	    {
            	    // InternalDialogParser.g:7198:4: ()
            	    // InternalDialogParser.g:7199:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7205:4: ( (lv_op_2_0= ruleMultiOp ) )
            	    // InternalDialogParser.g:7206:5: (lv_op_2_0= ruleMultiOp )
            	    {
            	    // InternalDialogParser.g:7206:5: (lv_op_2_0= ruleMultiOp )
            	    // InternalDialogParser.g:7207:6: lv_op_2_0= ruleMultiOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_83);
            	    lv_op_2_0=ruleMultiOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.MultiOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7224:4: ( (lv_right_3_0= norm3_Power ) )
            	    // InternalDialogParser.g:7225:5: (lv_right_3_0= norm3_Power )
            	    {
            	    // InternalDialogParser.g:7225:5: (lv_right_3_0= norm3_Power )
            	    // InternalDialogParser.g:7226:6: lv_right_3_0= norm3_Power
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_106);
            	    lv_right_3_0=norm3_Power();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Power");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop162;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_Multiplication"


    // $ANTLR start "entryRuleMultiOp"
    // InternalDialogParser.g:7248:1: entryRuleMultiOp returns [String current=null] : iv_ruleMultiOp= ruleMultiOp EOF ;
    public final String entryRuleMultiOp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMultiOp = null;


        try {
            // InternalDialogParser.g:7248:47: (iv_ruleMultiOp= ruleMultiOp EOF )
            // InternalDialogParser.g:7249:2: iv_ruleMultiOp= ruleMultiOp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiOpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiOp=ruleMultiOp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiOp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiOp"


    // $ANTLR start "ruleMultiOp"
    // InternalDialogParser.g:7255:1: ruleMultiOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Asterisk | kw= Solidus | kw= PercentSign ) ;
    public final AntlrDatatypeRuleToken ruleMultiOp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:7261:2: ( (kw= Asterisk | kw= Solidus | kw= PercentSign ) )
            // InternalDialogParser.g:7262:2: (kw= Asterisk | kw= Solidus | kw= PercentSign )
            {
            // InternalDialogParser.g:7262:2: (kw= Asterisk | kw= Solidus | kw= PercentSign )
            int alt163=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt163=1;
                }
                break;
            case Solidus:
                {
                alt163=2;
                }
                break;
            case PercentSign:
                {
                alt163=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 163, 0, input);

                throw nvae;
            }

            switch (alt163) {
                case 1 :
                    // InternalDialogParser.g:7263:3: kw= Asterisk
                    {
                    kw=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiOpAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:7269:3: kw= Solidus
                    {
                    kw=(Token)match(input,Solidus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiOpAccess().getSolidusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:7275:3: kw= PercentSign
                    {
                    kw=(Token)match(input,PercentSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiOpAccess().getPercentSignKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiOp"


    // $ANTLR start "entryRulePower"
    // InternalDialogParser.g:7284:1: entryRulePower returns [EObject current=null] : iv_rulePower= rulePower EOF ;
    public final EObject entryRulePower() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePower = null;


        try {
            // InternalDialogParser.g:7284:46: (iv_rulePower= rulePower EOF )
            // InternalDialogParser.g:7285:2: iv_rulePower= rulePower EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPowerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePower=rulePower();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePower; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePower"


    // $ANTLR start "rulePower"
    // InternalDialogParser.g:7291:1: rulePower returns [EObject current=null] : (this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )* ) ;
    public final EObject rulePower() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_PropOfSubject_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7297:2: ( (this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )* ) )
            // InternalDialogParser.g:7298:2: (this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )* )
            {
            // InternalDialogParser.g:7298:2: (this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )* )
            // InternalDialogParser.g:7299:3: this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_107);
            this_PropOfSubject_0=rulePropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PropOfSubject_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7307:3: ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )*
            loop164:
            do {
                int alt164=2;
                int LA164_0 = input.LA(1);

                if ( (LA164_0==CircumflexAccent) ) {
                    alt164=1;
                }


                switch (alt164) {
            	case 1 :
            	    // InternalDialogParser.g:7308:4: () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) )
            	    {
            	    // InternalDialogParser.g:7308:4: ()
            	    // InternalDialogParser.g:7309:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7315:4: ( (lv_op_2_0= CircumflexAccent ) )
            	    // InternalDialogParser.g:7316:5: (lv_op_2_0= CircumflexAccent )
            	    {
            	    // InternalDialogParser.g:7316:5: (lv_op_2_0= CircumflexAccent )
            	    // InternalDialogParser.g:7317:6: lv_op_2_0= CircumflexAccent
            	    {
            	    lv_op_2_0=(Token)match(input,CircumflexAccent,FOLLOW_90); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getPowerRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7329:4: ( (lv_right_3_0= rulePropOfSubject ) )
            	    // InternalDialogParser.g:7330:5: (lv_right_3_0= rulePropOfSubject )
            	    {
            	    // InternalDialogParser.g:7330:5: (lv_right_3_0= rulePropOfSubject )
            	    // InternalDialogParser.g:7331:6: lv_right_3_0= rulePropOfSubject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_right_3_0=rulePropOfSubject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPowerRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.PropOfSubject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop164;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePower"


    // $ANTLR start "norm1_Power"
    // InternalDialogParser.g:7354:1: norm1_Power returns [EObject current=null] : (this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )* ) ;
    public final EObject norm1_Power() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_PropOfSubject_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7360:2: ( (this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )* ) )
            // InternalDialogParser.g:7361:2: (this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )* )
            {
            // InternalDialogParser.g:7361:2: (this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )* )
            // InternalDialogParser.g:7362:3: this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_107);
            this_PropOfSubject_0=norm1_PropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PropOfSubject_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7370:3: ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )*
            loop165:
            do {
                int alt165=2;
                int LA165_0 = input.LA(1);

                if ( (LA165_0==CircumflexAccent) ) {
                    alt165=1;
                }


                switch (alt165) {
            	case 1 :
            	    // InternalDialogParser.g:7371:4: () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) )
            	    {
            	    // InternalDialogParser.g:7371:4: ()
            	    // InternalDialogParser.g:7372:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7378:4: ( (lv_op_2_0= CircumflexAccent ) )
            	    // InternalDialogParser.g:7379:5: (lv_op_2_0= CircumflexAccent )
            	    {
            	    // InternalDialogParser.g:7379:5: (lv_op_2_0= CircumflexAccent )
            	    // InternalDialogParser.g:7380:6: lv_op_2_0= CircumflexAccent
            	    {
            	    lv_op_2_0=(Token)match(input,CircumflexAccent,FOLLOW_90); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getPowerRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7392:4: ( (lv_right_3_0= norm1_PropOfSubject ) )
            	    // InternalDialogParser.g:7393:5: (lv_right_3_0= norm1_PropOfSubject )
            	    {
            	    // InternalDialogParser.g:7393:5: (lv_right_3_0= norm1_PropOfSubject )
            	    // InternalDialogParser.g:7394:6: lv_right_3_0= norm1_PropOfSubject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_right_3_0=norm1_PropOfSubject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPowerRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.PropOfSubject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop165;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_Power"


    // $ANTLR start "norm2_Power"
    // InternalDialogParser.g:7417:1: norm2_Power returns [EObject current=null] : (this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )* ) ;
    public final EObject norm2_Power() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_PropOfSubject_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7423:2: ( (this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )* ) )
            // InternalDialogParser.g:7424:2: (this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )* )
            {
            // InternalDialogParser.g:7424:2: (this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )* )
            // InternalDialogParser.g:7425:3: this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_107);
            this_PropOfSubject_0=norm2_PropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PropOfSubject_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7433:3: ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )*
            loop166:
            do {
                int alt166=2;
                int LA166_0 = input.LA(1);

                if ( (LA166_0==CircumflexAccent) ) {
                    alt166=1;
                }


                switch (alt166) {
            	case 1 :
            	    // InternalDialogParser.g:7434:4: () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) )
            	    {
            	    // InternalDialogParser.g:7434:4: ()
            	    // InternalDialogParser.g:7435:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7441:4: ( (lv_op_2_0= CircumflexAccent ) )
            	    // InternalDialogParser.g:7442:5: (lv_op_2_0= CircumflexAccent )
            	    {
            	    // InternalDialogParser.g:7442:5: (lv_op_2_0= CircumflexAccent )
            	    // InternalDialogParser.g:7443:6: lv_op_2_0= CircumflexAccent
            	    {
            	    lv_op_2_0=(Token)match(input,CircumflexAccent,FOLLOW_90); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getPowerRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7455:4: ( (lv_right_3_0= norm2_PropOfSubject ) )
            	    // InternalDialogParser.g:7456:5: (lv_right_3_0= norm2_PropOfSubject )
            	    {
            	    // InternalDialogParser.g:7456:5: (lv_right_3_0= norm2_PropOfSubject )
            	    // InternalDialogParser.g:7457:6: lv_right_3_0= norm2_PropOfSubject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_right_3_0=norm2_PropOfSubject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPowerRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.PropOfSubject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop166;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_Power"


    // $ANTLR start "norm3_Power"
    // InternalDialogParser.g:7480:1: norm3_Power returns [EObject current=null] : (this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )* ) ;
    public final EObject norm3_Power() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_PropOfSubject_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7486:2: ( (this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )* ) )
            // InternalDialogParser.g:7487:2: (this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )* )
            {
            // InternalDialogParser.g:7487:2: (this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )* )
            // InternalDialogParser.g:7488:3: this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_107);
            this_PropOfSubject_0=norm3_PropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PropOfSubject_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7496:3: ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )*
            loop167:
            do {
                int alt167=2;
                int LA167_0 = input.LA(1);

                if ( (LA167_0==CircumflexAccent) ) {
                    alt167=1;
                }


                switch (alt167) {
            	case 1 :
            	    // InternalDialogParser.g:7497:4: () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) )
            	    {
            	    // InternalDialogParser.g:7497:4: ()
            	    // InternalDialogParser.g:7498:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7504:4: ( (lv_op_2_0= CircumflexAccent ) )
            	    // InternalDialogParser.g:7505:5: (lv_op_2_0= CircumflexAccent )
            	    {
            	    // InternalDialogParser.g:7505:5: (lv_op_2_0= CircumflexAccent )
            	    // InternalDialogParser.g:7506:6: lv_op_2_0= CircumflexAccent
            	    {
            	    lv_op_2_0=(Token)match(input,CircumflexAccent,FOLLOW_83); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getPowerRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7518:4: ( (lv_right_3_0= norm3_PropOfSubject ) )
            	    // InternalDialogParser.g:7519:5: (lv_right_3_0= norm3_PropOfSubject )
            	    {
            	    // InternalDialogParser.g:7519:5: (lv_right_3_0= norm3_PropOfSubject )
            	    // InternalDialogParser.g:7520:6: lv_right_3_0= norm3_PropOfSubject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_right_3_0=norm3_PropOfSubject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPowerRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.PropOfSubject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop167;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_Power"


    // $ANTLR start "entryRulePropOfSubject"
    // InternalDialogParser.g:7542:1: entryRulePropOfSubject returns [EObject current=null] : iv_rulePropOfSubject= rulePropOfSubject EOF ;
    public final EObject entryRulePropOfSubject() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropOfSubject = null;


        try {
            // InternalDialogParser.g:7542:54: (iv_rulePropOfSubject= rulePropOfSubject EOF )
            // InternalDialogParser.g:7543:2: iv_rulePropOfSubject= rulePropOfSubject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropOfSubjectRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropOfSubject=rulePropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropOfSubject; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropOfSubject"


    // $ANTLR start "rulePropOfSubject"
    // InternalDialogParser.g:7549:1: rulePropOfSubject returns [EObject current=null] : (this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )? ) ;
    public final EObject rulePropOfSubject() throws RecognitionException {
        EObject current = null;

        Token lv_of_2_1=null;
        Token lv_of_2_2=null;
        Token lv_of_2_3=null;
        Token otherlv_5=null;
        EObject this_ElementInList_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_prop_6_0 = null;

        EObject lv_right_7_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7555:2: ( (this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )? ) )
            // InternalDialogParser.g:7556:2: (this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )? )
            {
            // InternalDialogParser.g:7556:2: (this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )? )
            // InternalDialogParser.g:7557:3: this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_108);
            this_ElementInList_0=ruleElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementInList_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7565:3: ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )?
            int alt173=2;
            int LA173_0 = input.LA(1);

            if ( (LA173_0==Of) && (synpred19_InternalDialogParser())) {
                alt173=1;
            }
            else if ( (LA173_0==For) && (synpred19_InternalDialogParser())) {
                alt173=1;
            }
            else if ( (LA173_0==In) && (synpred19_InternalDialogParser())) {
                alt173=1;
            }
            else if ( (LA173_0==Has) && (synpred19_InternalDialogParser())) {
                alt173=1;
            }
            else if ( (LA173_0==RULE_QNAME_TERMINAL) && (synpred19_InternalDialogParser())) {
                alt173=1;
            }
            else if ( (LA173_0==RULE_ID) && (synpred19_InternalDialogParser())) {
                alt173=1;
            }
            switch (alt173) {
                case 1 :
                    // InternalDialogParser.g:7566:4: ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ )
                    {
                    // InternalDialogParser.g:7567:4: ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ )
                    int alt172=2;
                    int LA172_0 = input.LA(1);

                    if ( (LA172_0==For||LA172_0==In||LA172_0==Of) ) {
                        alt172=1;
                    }
                    else if ( (LA172_0==Has||(LA172_0>=RULE_ID && LA172_0<=RULE_QNAME_TERMINAL)) ) {
                        alt172=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 172, 0, input);

                        throw nvae;
                    }
                    switch (alt172) {
                        case 1 :
                            // InternalDialogParser.g:7568:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )
                            {
                            // InternalDialogParser.g:7568:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )
                            // InternalDialogParser.g:7569:6: () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) )
                            {
                            // InternalDialogParser.g:7569:6: ()
                            // InternalDialogParser.g:7570:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:7576:6: ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) )
                            // InternalDialogParser.g:7577:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            {
                            // InternalDialogParser.g:7577:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            // InternalDialogParser.g:7578:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            {
                            // InternalDialogParser.g:7578:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            int alt168=3;
                            switch ( input.LA(1) ) {
                            case Of:
                                {
                                alt168=1;
                                }
                                break;
                            case For:
                                {
                                alt168=2;
                                }
                                break;
                            case In:
                                {
                                alt168=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 168, 0, input);

                                throw nvae;
                            }

                            switch (alt168) {
                                case 1 :
                                    // InternalDialogParser.g:7579:9: lv_of_2_1= Of
                                    {
                                    lv_of_2_1=(Token)match(input,Of,FOLLOW_90); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_1, null);
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:7590:9: lv_of_2_2= For
                                    {
                                    lv_of_2_2=(Token)match(input,For,FOLLOW_90); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_2, null);
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalDialogParser.g:7601:9: lv_of_2_3= In
                                    {
                                    lv_of_2_3=(Token)match(input,In,FOLLOW_90); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_3, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalDialogParser.g:7614:6: ( (lv_right_3_0= rulePropOfSubject ) )
                            // InternalDialogParser.g:7615:7: (lv_right_3_0= rulePropOfSubject )
                            {
                            // InternalDialogParser.g:7615:7: (lv_right_3_0= rulePropOfSubject )
                            // InternalDialogParser.g:7616:8: lv_right_3_0= rulePropOfSubject
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_3_0=rulePropOfSubject();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_3_0,
                              									"com.ge.research.sadl.SADL.PropOfSubject");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:7635:5: ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+
                            {
                            // InternalDialogParser.g:7635:5: ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+
                            int cnt171=0;
                            loop171:
                            do {
                                int alt171=2;
                                int LA171_0 = input.LA(1);

                                if ( (LA171_0==Has) && (synpred20_InternalDialogParser())) {
                                    alt171=1;
                                }
                                else if ( (LA171_0==RULE_QNAME_TERMINAL) && (synpred20_InternalDialogParser())) {
                                    alt171=1;
                                }
                                else if ( (LA171_0==RULE_ID) && (synpred20_InternalDialogParser())) {
                                    alt171=1;
                                }


                                switch (alt171) {
                            	case 1 :
                            	    // InternalDialogParser.g:7636:6: ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? )
                            	    {
                            	    // InternalDialogParser.g:7637:6: ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? )
                            	    // InternalDialogParser.g:7638:7: () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )?
                            	    {
                            	    // InternalDialogParser.g:7638:7: ()
                            	    // InternalDialogParser.g:7639:8: 
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								current = forceCreateModelElementAndSet(
                            	      									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
                            	      									current);
                            	      							
                            	    }

                            	    }

                            	    // InternalDialogParser.g:7645:7: (otherlv_5= Has )?
                            	    int alt169=2;
                            	    int LA169_0 = input.LA(1);

                            	    if ( (LA169_0==Has) ) {
                            	        alt169=1;
                            	    }
                            	    switch (alt169) {
                            	        case 1 :
                            	            // InternalDialogParser.g:7646:8: otherlv_5= Has
                            	            {
                            	            otherlv_5=(Token)match(input,Has,FOLLOW_23); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_5, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:7651:7: ( (lv_prop_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:7652:8: (lv_prop_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:7652:8: (lv_prop_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:7653:9: lv_prop_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_109);
                            	    lv_prop_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	      									}
                            	      									set(
                            	      										current,
                            	      										"prop",
                            	      										lv_prop_6_0,
                            	      										"com.ge.research.sadl.SADL.SadlResource");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }

                            	    // InternalDialogParser.g:7670:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )?
                            	    int alt170=2;
                            	    alt170 = dfa170.predict(input);
                            	    switch (alt170) {
                            	        case 1 :
                            	            // InternalDialogParser.g:7671:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList )
                            	            {
                            	            // InternalDialogParser.g:7672:8: (lv_right_7_0= ruleElementInList )
                            	            // InternalDialogParser.g:7673:9: lv_right_7_0= ruleElementInList
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
                            	              								
                            	            }
                            	            pushFollow(FOLLOW_110);
                            	            lv_right_7_0=ruleElementInList();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									set(
                            	              										current,
                            	              										"right",
                            	              										lv_right_7_0,
                            	              										"com.ge.research.sadl.SADL.ElementInList");
                            	              									afterParserOrEnumRuleCall();
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt171 >= 1 ) break loop171;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(171, input);
                                        throw eee;
                                }
                                cnt171++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropOfSubject"


    // $ANTLR start "norm1_PropOfSubject"
    // InternalDialogParser.g:7699:1: norm1_PropOfSubject returns [EObject current=null] : (this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )? ) ;
    public final EObject norm1_PropOfSubject() throws RecognitionException {
        EObject current = null;

        Token lv_of_2_1=null;
        Token lv_of_2_2=null;
        Token lv_of_2_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_ElementInList_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_prop_7_0 = null;

        EObject lv_right_8_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7705:2: ( (this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )? ) )
            // InternalDialogParser.g:7706:2: (this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )? )
            {
            // InternalDialogParser.g:7706:2: (this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )? )
            // InternalDialogParser.g:7707:3: this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_111);
            this_ElementInList_0=norm1_ElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementInList_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7715:3: ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )?
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==Of) && (synpred22_InternalDialogParser())) {
                alt179=1;
            }
            else if ( (LA179_0==For) && (synpred22_InternalDialogParser())) {
                alt179=1;
            }
            else if ( (LA179_0==In) && (synpred22_InternalDialogParser())) {
                alt179=1;
            }
            else if ( (LA179_0==With) && (synpred22_InternalDialogParser())) {
                alt179=1;
            }
            else if ( (LA179_0==Has) && (synpred22_InternalDialogParser())) {
                alt179=1;
            }
            else if ( (LA179_0==RULE_QNAME_TERMINAL) && (synpred22_InternalDialogParser())) {
                alt179=1;
            }
            else if ( (LA179_0==RULE_ID) && (synpred22_InternalDialogParser())) {
                alt179=1;
            }
            switch (alt179) {
                case 1 :
                    // InternalDialogParser.g:7716:4: ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ )
                    {
                    // InternalDialogParser.g:7717:4: ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ )
                    int alt178=2;
                    int LA178_0 = input.LA(1);

                    if ( (LA178_0==For||LA178_0==In||LA178_0==Of) ) {
                        alt178=1;
                    }
                    else if ( (LA178_0==With||LA178_0==Has||(LA178_0>=RULE_ID && LA178_0<=RULE_QNAME_TERMINAL)) ) {
                        alt178=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 178, 0, input);

                        throw nvae;
                    }
                    switch (alt178) {
                        case 1 :
                            // InternalDialogParser.g:7718:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )
                            {
                            // InternalDialogParser.g:7718:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )
                            // InternalDialogParser.g:7719:6: () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) )
                            {
                            // InternalDialogParser.g:7719:6: ()
                            // InternalDialogParser.g:7720:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:7726:6: ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) )
                            // InternalDialogParser.g:7727:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            {
                            // InternalDialogParser.g:7727:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            // InternalDialogParser.g:7728:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            {
                            // InternalDialogParser.g:7728:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            int alt174=3;
                            switch ( input.LA(1) ) {
                            case Of:
                                {
                                alt174=1;
                                }
                                break;
                            case For:
                                {
                                alt174=2;
                                }
                                break;
                            case In:
                                {
                                alt174=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 174, 0, input);

                                throw nvae;
                            }

                            switch (alt174) {
                                case 1 :
                                    // InternalDialogParser.g:7729:9: lv_of_2_1= Of
                                    {
                                    lv_of_2_1=(Token)match(input,Of,FOLLOW_90); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_1, null);
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:7740:9: lv_of_2_2= For
                                    {
                                    lv_of_2_2=(Token)match(input,For,FOLLOW_90); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_2, null);
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalDialogParser.g:7751:9: lv_of_2_3= In
                                    {
                                    lv_of_2_3=(Token)match(input,In,FOLLOW_90); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_3, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalDialogParser.g:7764:6: ( (lv_right_3_0= norm1_PropOfSubject ) )
                            // InternalDialogParser.g:7765:7: (lv_right_3_0= norm1_PropOfSubject )
                            {
                            // InternalDialogParser.g:7765:7: (lv_right_3_0= norm1_PropOfSubject )
                            // InternalDialogParser.g:7766:8: lv_right_3_0= norm1_PropOfSubject
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_3_0=norm1_PropOfSubject();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_3_0,
                              									"com.ge.research.sadl.SADL.PropOfSubject");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:7785:5: ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+
                            {
                            // InternalDialogParser.g:7785:5: ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+
                            int cnt177=0;
                            loop177:
                            do {
                                int alt177=2;
                                int LA177_0 = input.LA(1);

                                if ( (LA177_0==With) && (synpred23_InternalDialogParser())) {
                                    alt177=1;
                                }
                                else if ( (LA177_0==Has) && (synpred23_InternalDialogParser())) {
                                    alt177=1;
                                }
                                else if ( (LA177_0==RULE_QNAME_TERMINAL) && (synpred23_InternalDialogParser())) {
                                    alt177=1;
                                }
                                else if ( (LA177_0==RULE_ID) && (synpred23_InternalDialogParser())) {
                                    alt177=1;
                                }


                                switch (alt177) {
                            	case 1 :
                            	    // InternalDialogParser.g:7786:6: ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? )
                            	    {
                            	    // InternalDialogParser.g:7787:6: ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? )
                            	    // InternalDialogParser.g:7788:7: () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )?
                            	    {
                            	    // InternalDialogParser.g:7788:7: ()
                            	    // InternalDialogParser.g:7789:8: 
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								current = forceCreateModelElementAndSet(
                            	      									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
                            	      									current);
                            	      							
                            	    }

                            	    }

                            	    // InternalDialogParser.g:7795:7: (otherlv_5= With | otherlv_6= Has )?
                            	    int alt175=3;
                            	    int LA175_0 = input.LA(1);

                            	    if ( (LA175_0==With) ) {
                            	        alt175=1;
                            	    }
                            	    else if ( (LA175_0==Has) ) {
                            	        alt175=2;
                            	    }
                            	    switch (alt175) {
                            	        case 1 :
                            	            // InternalDialogParser.g:7796:8: otherlv_5= With
                            	            {
                            	            otherlv_5=(Token)match(input,With,FOLLOW_23); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_5, grammarAccess.getPropOfSubjectAccess().getWithKeyword_1_0_1_0_2_0_0());
                            	              							
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // InternalDialogParser.g:7801:8: otherlv_6= Has
                            	            {
                            	            otherlv_6=(Token)match(input,Has,FOLLOW_23); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_6, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:7806:7: ( (lv_prop_7_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:7807:8: (lv_prop_7_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:7807:8: (lv_prop_7_0= ruleSadlResource )
                            	    // InternalDialogParser.g:7808:9: lv_prop_7_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_112);
                            	    lv_prop_7_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	      									}
                            	      									set(
                            	      										current,
                            	      										"prop",
                            	      										lv_prop_7_0,
                            	      										"com.ge.research.sadl.SADL.SadlResource");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }

                            	    // InternalDialogParser.g:7825:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )?
                            	    int alt176=2;
                            	    alt176 = dfa176.predict(input);
                            	    switch (alt176) {
                            	        case 1 :
                            	            // InternalDialogParser.g:7826:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList )
                            	            {
                            	            // InternalDialogParser.g:7827:8: (lv_right_8_0= norm1_ElementInList )
                            	            // InternalDialogParser.g:7828:9: lv_right_8_0= norm1_ElementInList
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
                            	              								
                            	            }
                            	            pushFollow(FOLLOW_113);
                            	            lv_right_8_0=norm1_ElementInList();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									set(
                            	              										current,
                            	              										"right",
                            	              										lv_right_8_0,
                            	              										"com.ge.research.sadl.SADL.ElementInList");
                            	              									afterParserOrEnumRuleCall();
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt177 >= 1 ) break loop177;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(177, input);
                                        throw eee;
                                }
                                cnt177++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_PropOfSubject"


    // $ANTLR start "norm2_PropOfSubject"
    // InternalDialogParser.g:7854:1: norm2_PropOfSubject returns [EObject current=null] : (this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )? ) ;
    public final EObject norm2_PropOfSubject() throws RecognitionException {
        EObject current = null;

        Token lv_of_2_1=null;
        Token lv_of_2_2=null;
        Token lv_of_2_3=null;
        Token lv_comma_5_0=null;
        Token otherlv_6=null;
        EObject this_ElementInList_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_prop_7_0 = null;

        EObject lv_right_8_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7860:2: ( (this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )? ) )
            // InternalDialogParser.g:7861:2: (this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )? )
            {
            // InternalDialogParser.g:7861:2: (this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )? )
            // InternalDialogParser.g:7862:3: this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_114);
            this_ElementInList_0=norm2_ElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementInList_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7870:3: ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )?
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( (LA186_0==Of) && (synpred25_InternalDialogParser())) {
                alt186=1;
            }
            else if ( (LA186_0==For) && (synpred25_InternalDialogParser())) {
                alt186=1;
            }
            else if ( (LA186_0==In) && (synpred25_InternalDialogParser())) {
                alt186=1;
            }
            else if ( (LA186_0==Comma) && (synpred25_InternalDialogParser())) {
                alt186=1;
            }
            else if ( (LA186_0==Has) && (synpred25_InternalDialogParser())) {
                alt186=1;
            }
            else if ( (LA186_0==RULE_QNAME_TERMINAL) && (synpred25_InternalDialogParser())) {
                alt186=1;
            }
            else if ( (LA186_0==RULE_ID) && (synpred25_InternalDialogParser())) {
                alt186=1;
            }
            switch (alt186) {
                case 1 :
                    // InternalDialogParser.g:7871:4: ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ )
                    {
                    // InternalDialogParser.g:7872:4: ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ )
                    int alt185=2;
                    int LA185_0 = input.LA(1);

                    if ( (LA185_0==For||LA185_0==In||LA185_0==Of) ) {
                        alt185=1;
                    }
                    else if ( (LA185_0==Has||LA185_0==Comma||(LA185_0>=RULE_ID && LA185_0<=RULE_QNAME_TERMINAL)) ) {
                        alt185=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 185, 0, input);

                        throw nvae;
                    }
                    switch (alt185) {
                        case 1 :
                            // InternalDialogParser.g:7873:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )
                            {
                            // InternalDialogParser.g:7873:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )
                            // InternalDialogParser.g:7874:6: () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) )
                            {
                            // InternalDialogParser.g:7874:6: ()
                            // InternalDialogParser.g:7875:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:7881:6: ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) )
                            // InternalDialogParser.g:7882:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            {
                            // InternalDialogParser.g:7882:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            // InternalDialogParser.g:7883:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            {
                            // InternalDialogParser.g:7883:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            int alt180=3;
                            switch ( input.LA(1) ) {
                            case Of:
                                {
                                alt180=1;
                                }
                                break;
                            case For:
                                {
                                alt180=2;
                                }
                                break;
                            case In:
                                {
                                alt180=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 180, 0, input);

                                throw nvae;
                            }

                            switch (alt180) {
                                case 1 :
                                    // InternalDialogParser.g:7884:9: lv_of_2_1= Of
                                    {
                                    lv_of_2_1=(Token)match(input,Of,FOLLOW_90); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_1, null);
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:7895:9: lv_of_2_2= For
                                    {
                                    lv_of_2_2=(Token)match(input,For,FOLLOW_90); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_2, null);
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalDialogParser.g:7906:9: lv_of_2_3= In
                                    {
                                    lv_of_2_3=(Token)match(input,In,FOLLOW_90); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_3, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalDialogParser.g:7919:6: ( (lv_right_3_0= norm2_PropOfSubject ) )
                            // InternalDialogParser.g:7920:7: (lv_right_3_0= norm2_PropOfSubject )
                            {
                            // InternalDialogParser.g:7920:7: (lv_right_3_0= norm2_PropOfSubject )
                            // InternalDialogParser.g:7921:8: lv_right_3_0= norm2_PropOfSubject
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_3_0=norm2_PropOfSubject();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_3_0,
                              									"com.ge.research.sadl.SADL.PropOfSubject");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:7940:5: ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+
                            {
                            // InternalDialogParser.g:7940:5: ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+
                            int cnt184=0;
                            loop184:
                            do {
                                int alt184=2;
                                int LA184_0 = input.LA(1);

                                if ( (LA184_0==Comma) && (synpred26_InternalDialogParser())) {
                                    alt184=1;
                                }
                                else if ( (LA184_0==Has) && (synpred26_InternalDialogParser())) {
                                    alt184=1;
                                }
                                else if ( (LA184_0==RULE_QNAME_TERMINAL) && (synpred26_InternalDialogParser())) {
                                    alt184=1;
                                }
                                else if ( (LA184_0==RULE_ID) && (synpred26_InternalDialogParser())) {
                                    alt184=1;
                                }


                                switch (alt184) {
                            	case 1 :
                            	    // InternalDialogParser.g:7941:6: ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? )
                            	    {
                            	    // InternalDialogParser.g:7942:6: ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? )
                            	    // InternalDialogParser.g:7943:7: () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )?
                            	    {
                            	    // InternalDialogParser.g:7943:7: ()
                            	    // InternalDialogParser.g:7944:8: 
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								current = forceCreateModelElementAndSet(
                            	      									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
                            	      									current);
                            	      							
                            	    }

                            	    }

                            	    // InternalDialogParser.g:7950:7: ( (lv_comma_5_0= Comma ) )?
                            	    int alt181=2;
                            	    int LA181_0 = input.LA(1);

                            	    if ( (LA181_0==Comma) ) {
                            	        alt181=1;
                            	    }
                            	    switch (alt181) {
                            	        case 1 :
                            	            // InternalDialogParser.g:7951:8: (lv_comma_5_0= Comma )
                            	            {
                            	            // InternalDialogParser.g:7951:8: (lv_comma_5_0= Comma )
                            	            // InternalDialogParser.g:7952:9: lv_comma_5_0= Comma
                            	            {
                            	            lv_comma_5_0=(Token)match(input,Comma,FOLLOW_115); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_comma_5_0, grammarAccess.getPropOfSubjectAccess().getCommaCommaKeyword_1_0_1_0_1_0_0());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									setWithLastConsumed(current, "comma", true, ",");
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:7964:7: (otherlv_6= Has )?
                            	    int alt182=2;
                            	    int LA182_0 = input.LA(1);

                            	    if ( (LA182_0==Has) ) {
                            	        alt182=1;
                            	    }
                            	    switch (alt182) {
                            	        case 1 :
                            	            // InternalDialogParser.g:7965:8: otherlv_6= Has
                            	            {
                            	            otherlv_6=(Token)match(input,Has,FOLLOW_23); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_6, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:7970:7: ( (lv_prop_7_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:7971:8: (lv_prop_7_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:7971:8: (lv_prop_7_0= ruleSadlResource )
                            	    // InternalDialogParser.g:7972:9: lv_prop_7_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_116);
                            	    lv_prop_7_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	      									}
                            	      									set(
                            	      										current,
                            	      										"prop",
                            	      										lv_prop_7_0,
                            	      										"com.ge.research.sadl.SADL.SadlResource");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }

                            	    // InternalDialogParser.g:7989:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )?
                            	    int alt183=2;
                            	    alt183 = dfa183.predict(input);
                            	    switch (alt183) {
                            	        case 1 :
                            	            // InternalDialogParser.g:7990:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList )
                            	            {
                            	            // InternalDialogParser.g:7991:8: (lv_right_8_0= norm2_ElementInList )
                            	            // InternalDialogParser.g:7992:9: lv_right_8_0= norm2_ElementInList
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
                            	              								
                            	            }
                            	            pushFollow(FOLLOW_117);
                            	            lv_right_8_0=norm2_ElementInList();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									set(
                            	              										current,
                            	              										"right",
                            	              										lv_right_8_0,
                            	              										"com.ge.research.sadl.SADL.ElementInList");
                            	              									afterParserOrEnumRuleCall();
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt184 >= 1 ) break loop184;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(184, input);
                                        throw eee;
                                }
                                cnt184++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_PropOfSubject"


    // $ANTLR start "norm3_PropOfSubject"
    // InternalDialogParser.g:8018:1: norm3_PropOfSubject returns [EObject current=null] : (this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )? ) ;
    public final EObject norm3_PropOfSubject() throws RecognitionException {
        EObject current = null;

        Token lv_of_2_1=null;
        Token lv_of_2_2=null;
        Token lv_of_2_3=null;
        Token lv_comma_5_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject this_ElementInList_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_prop_8_0 = null;

        EObject lv_right_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8024:2: ( (this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )? ) )
            // InternalDialogParser.g:8025:2: (this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )? )
            {
            // InternalDialogParser.g:8025:2: (this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )? )
            // InternalDialogParser.g:8026:3: this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_118);
            this_ElementInList_0=norm3_ElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementInList_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8034:3: ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )?
            int alt193=2;
            alt193 = dfa193.predict(input);
            switch (alt193) {
                case 1 :
                    // InternalDialogParser.g:8035:4: ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ )
                    {
                    // InternalDialogParser.g:8036:4: ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ )
                    int alt192=2;
                    int LA192_0 = input.LA(1);

                    if ( (LA192_0==For||LA192_0==In||LA192_0==Of) ) {
                        alt192=1;
                    }
                    else if ( (LA192_0==With||LA192_0==Has||LA192_0==Comma||(LA192_0>=RULE_ID && LA192_0<=RULE_QNAME_TERMINAL)) ) {
                        alt192=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 192, 0, input);

                        throw nvae;
                    }
                    switch (alt192) {
                        case 1 :
                            // InternalDialogParser.g:8037:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )
                            {
                            // InternalDialogParser.g:8037:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )
                            // InternalDialogParser.g:8038:6: () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) )
                            {
                            // InternalDialogParser.g:8038:6: ()
                            // InternalDialogParser.g:8039:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:8045:6: ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) )
                            // InternalDialogParser.g:8046:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            {
                            // InternalDialogParser.g:8046:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            // InternalDialogParser.g:8047:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            {
                            // InternalDialogParser.g:8047:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            int alt187=3;
                            switch ( input.LA(1) ) {
                            case Of:
                                {
                                alt187=1;
                                }
                                break;
                            case For:
                                {
                                alt187=2;
                                }
                                break;
                            case In:
                                {
                                alt187=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 187, 0, input);

                                throw nvae;
                            }

                            switch (alt187) {
                                case 1 :
                                    // InternalDialogParser.g:8048:9: lv_of_2_1= Of
                                    {
                                    lv_of_2_1=(Token)match(input,Of,FOLLOW_83); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_1, null);
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:8059:9: lv_of_2_2= For
                                    {
                                    lv_of_2_2=(Token)match(input,For,FOLLOW_83); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_2, null);
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalDialogParser.g:8070:9: lv_of_2_3= In
                                    {
                                    lv_of_2_3=(Token)match(input,In,FOLLOW_83); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_3, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalDialogParser.g:8083:6: ( (lv_right_3_0= norm3_PropOfSubject ) )
                            // InternalDialogParser.g:8084:7: (lv_right_3_0= norm3_PropOfSubject )
                            {
                            // InternalDialogParser.g:8084:7: (lv_right_3_0= norm3_PropOfSubject )
                            // InternalDialogParser.g:8085:8: lv_right_3_0= norm3_PropOfSubject
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_3_0=norm3_PropOfSubject();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_3_0,
                              									"com.ge.research.sadl.SADL.PropOfSubject");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:8104:5: ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+
                            {
                            // InternalDialogParser.g:8104:5: ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+
                            int cnt191=0;
                            loop191:
                            do {
                                int alt191=2;
                                int LA191_0 = input.LA(1);

                                if ( (LA191_0==Comma) && (synpred29_InternalDialogParser())) {
                                    alt191=1;
                                }
                                else if ( (LA191_0==With) && (synpred29_InternalDialogParser())) {
                                    alt191=1;
                                }
                                else if ( (LA191_0==Has) && (synpred29_InternalDialogParser())) {
                                    alt191=1;
                                }
                                else if ( (LA191_0==RULE_QNAME_TERMINAL) && (synpred29_InternalDialogParser())) {
                                    alt191=1;
                                }
                                else if ( (LA191_0==RULE_ID) && (synpred29_InternalDialogParser())) {
                                    alt191=1;
                                }


                                switch (alt191) {
                            	case 1 :
                            	    // InternalDialogParser.g:8105:6: ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? )
                            	    {
                            	    // InternalDialogParser.g:8106:6: ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? )
                            	    // InternalDialogParser.g:8107:7: () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )?
                            	    {
                            	    // InternalDialogParser.g:8107:7: ()
                            	    // InternalDialogParser.g:8108:8: 
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								current = forceCreateModelElementAndSet(
                            	      									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
                            	      									current);
                            	      							
                            	    }

                            	    }

                            	    // InternalDialogParser.g:8114:7: ( (lv_comma_5_0= Comma ) )?
                            	    int alt188=2;
                            	    int LA188_0 = input.LA(1);

                            	    if ( (LA188_0==Comma) ) {
                            	        alt188=1;
                            	    }
                            	    switch (alt188) {
                            	        case 1 :
                            	            // InternalDialogParser.g:8115:8: (lv_comma_5_0= Comma )
                            	            {
                            	            // InternalDialogParser.g:8115:8: (lv_comma_5_0= Comma )
                            	            // InternalDialogParser.g:8116:9: lv_comma_5_0= Comma
                            	            {
                            	            lv_comma_5_0=(Token)match(input,Comma,FOLLOW_25); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_comma_5_0, grammarAccess.getPropOfSubjectAccess().getCommaCommaKeyword_1_0_1_0_1_0_0());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									setWithLastConsumed(current, "comma", true, ",");
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:8128:7: (otherlv_6= With | otherlv_7= Has )?
                            	    int alt189=3;
                            	    int LA189_0 = input.LA(1);

                            	    if ( (LA189_0==With) ) {
                            	        alt189=1;
                            	    }
                            	    else if ( (LA189_0==Has) ) {
                            	        alt189=2;
                            	    }
                            	    switch (alt189) {
                            	        case 1 :
                            	            // InternalDialogParser.g:8129:8: otherlv_6= With
                            	            {
                            	            otherlv_6=(Token)match(input,With,FOLLOW_23); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_6, grammarAccess.getPropOfSubjectAccess().getWithKeyword_1_0_1_0_2_0_0());
                            	              							
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // InternalDialogParser.g:8134:8: otherlv_7= Has
                            	            {
                            	            otherlv_7=(Token)match(input,Has,FOLLOW_23); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_7, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:8139:7: ( (lv_prop_8_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:8140:8: (lv_prop_8_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:8140:8: (lv_prop_8_0= ruleSadlResource )
                            	    // InternalDialogParser.g:8141:9: lv_prop_8_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_119);
                            	    lv_prop_8_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	      									}
                            	      									set(
                            	      										current,
                            	      										"prop",
                            	      										lv_prop_8_0,
                            	      										"com.ge.research.sadl.SADL.SadlResource");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }

                            	    // InternalDialogParser.g:8158:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )?
                            	    int alt190=2;
                            	    alt190 = dfa190.predict(input);
                            	    switch (alt190) {
                            	        case 1 :
                            	            // InternalDialogParser.g:8159:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList )
                            	            {
                            	            // InternalDialogParser.g:8160:8: (lv_right_9_0= norm3_ElementInList )
                            	            // InternalDialogParser.g:8161:9: lv_right_9_0= norm3_ElementInList
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
                            	              								
                            	            }
                            	            pushFollow(FOLLOW_120);
                            	            lv_right_9_0=norm3_ElementInList();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									set(
                            	              										current,
                            	              										"right",
                            	              										lv_right_9_0,
                            	              										"com.ge.research.sadl.SADL.ElementInList");
                            	              									afterParserOrEnumRuleCall();
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt191 >= 1 ) break loop191;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(191, input);
                                        throw eee;
                                }
                                cnt191++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_PropOfSubject"


    // $ANTLR start "entryRuleElementInList"
    // InternalDialogParser.g:8186:1: entryRuleElementInList returns [EObject current=null] : iv_ruleElementInList= ruleElementInList EOF ;
    public final EObject entryRuleElementInList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementInList = null;


        try {
            // InternalDialogParser.g:8186:54: (iv_ruleElementInList= ruleElementInList EOF )
            // InternalDialogParser.g:8187:2: iv_ruleElementInList= ruleElementInList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementInListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementInList=ruleElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementInList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementInList"


    // $ANTLR start "ruleElementInList"
    // InternalDialogParser.g:8193:1: ruleElementInList returns [EObject current=null] : (this_UnitExpression_0= ruleUnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) ) ) ;
    public final EObject ruleElementInList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_before_3_0=null;
        Token lv_after_4_0=null;
        EObject this_UnitExpression_0 = null;

        EObject lv_element_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8199:2: ( (this_UnitExpression_0= ruleUnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) ) ) )
            // InternalDialogParser.g:8200:2: (this_UnitExpression_0= ruleUnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) ) )
            {
            // InternalDialogParser.g:8200:2: (this_UnitExpression_0= ruleUnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) ) )
            int alt195=2;
            int LA195_0 = input.LA(1);

            if ( (LA195_0==Another||LA195_0==Length||(LA195_0>=Count && LA195_0<=False)||LA195_0==First||(LA195_0>=Index && LA195_0<=Known)||LA195_0==There||LA195_0==Value||LA195_0==None||LA195_0==Last||LA195_0==Only||LA195_0==Some||(LA195_0>=True && LA195_0<=Type)||LA195_0==The||LA195_0==Any||LA195_0==Not||LA195_0==The_1||LA195_0==HyphenMinusHyphenMinus||(LA195_0>=An && LA195_0<=An_1)||LA195_0==ExclamationMark||LA195_0==LeftParenthesis||LA195_0==HyphenMinus||LA195_0==A||LA195_0==LeftSquareBracket||(LA195_0>=A_1 && LA195_0<=LeftCurlyBracket)||LA195_0==RULE_NUMBER||(LA195_0>=RULE_ID && LA195_0<=RULE_STRING)) ) {
                alt195=1;
            }
            else if ( (LA195_0==Element) ) {
                alt195=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 195, 0, input);

                throw nvae;
            }
            switch (alt195) {
                case 1 :
                    // InternalDialogParser.g:8201:3: this_UnitExpression_0= ruleUnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnitExpression_0=ruleUnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnitExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:8210:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) )
                    {
                    // InternalDialogParser.g:8210:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) )
                    // InternalDialogParser.g:8211:4: () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) )
                    {
                    // InternalDialogParser.g:8211:4: ()
                    // InternalDialogParser.g:8212:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,Element,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:8222:4: ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )?
                    int alt194=3;
                    int LA194_0 = input.LA(1);

                    if ( (LA194_0==Before) ) {
                        alt194=1;
                    }
                    else if ( (LA194_0==After) ) {
                        alt194=2;
                    }
                    switch (alt194) {
                        case 1 :
                            // InternalDialogParser.g:8223:5: ( (lv_before_3_0= Before ) )
                            {
                            // InternalDialogParser.g:8223:5: ( (lv_before_3_0= Before ) )
                            // InternalDialogParser.g:8224:6: (lv_before_3_0= Before )
                            {
                            // InternalDialogParser.g:8224:6: (lv_before_3_0= Before )
                            // InternalDialogParser.g:8225:7: lv_before_3_0= Before
                            {
                            lv_before_3_0=(Token)match(input,Before,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "before", true, "before");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:8238:5: ( (lv_after_4_0= After ) )
                            {
                            // InternalDialogParser.g:8238:5: ( (lv_after_4_0= After ) )
                            // InternalDialogParser.g:8239:6: (lv_after_4_0= After )
                            {
                            // InternalDialogParser.g:8239:6: (lv_after_4_0= After )
                            // InternalDialogParser.g:8240:7: lv_after_4_0= After
                            {
                            lv_after_4_0=(Token)match(input,After,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "after", true, "after");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:8253:4: ( (lv_element_5_0= ruleUnitExpression ) )
                    // InternalDialogParser.g:8254:5: (lv_element_5_0= ruleUnitExpression )
                    {
                    // InternalDialogParser.g:8254:5: (lv_element_5_0= ruleUnitExpression )
                    // InternalDialogParser.g:8255:6: lv_element_5_0= ruleUnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_element_5_0=ruleUnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElementInListRule());
                      						}
                      						set(
                      							current,
                      							"element",
                      							lv_element_5_0,
                      							"com.ge.research.sadl.SADL.UnitExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementInList"


    // $ANTLR start "norm1_ElementInList"
    // InternalDialogParser.g:8278:1: norm1_ElementInList returns [EObject current=null] : (this_UnitExpression_0= norm1_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) ) ) ;
    public final EObject norm1_ElementInList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_before_3_0=null;
        Token lv_after_4_0=null;
        EObject this_UnitExpression_0 = null;

        EObject lv_element_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8284:2: ( (this_UnitExpression_0= norm1_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) ) ) )
            // InternalDialogParser.g:8285:2: (this_UnitExpression_0= norm1_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) ) )
            {
            // InternalDialogParser.g:8285:2: (this_UnitExpression_0= norm1_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) ) )
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==Another||LA197_0==Length||(LA197_0>=Count && LA197_0<=False)||LA197_0==First||(LA197_0>=Index && LA197_0<=Known)||LA197_0==There||LA197_0==Value||LA197_0==None||LA197_0==Last||LA197_0==Only||LA197_0==Some||(LA197_0>=True && LA197_0<=Type)||LA197_0==The||LA197_0==Any||LA197_0==Not||LA197_0==The_1||LA197_0==HyphenMinusHyphenMinus||(LA197_0>=An && LA197_0<=An_1)||LA197_0==ExclamationMark||LA197_0==LeftParenthesis||LA197_0==HyphenMinus||LA197_0==A||LA197_0==LeftSquareBracket||(LA197_0>=A_1 && LA197_0<=LeftCurlyBracket)||LA197_0==RULE_NUMBER||(LA197_0>=RULE_ID && LA197_0<=RULE_STRING)) ) {
                alt197=1;
            }
            else if ( (LA197_0==Element) ) {
                alt197=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 197, 0, input);

                throw nvae;
            }
            switch (alt197) {
                case 1 :
                    // InternalDialogParser.g:8286:3: this_UnitExpression_0= norm1_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnitExpression_0=norm1_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnitExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:8295:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) )
                    {
                    // InternalDialogParser.g:8295:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) )
                    // InternalDialogParser.g:8296:4: () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) )
                    {
                    // InternalDialogParser.g:8296:4: ()
                    // InternalDialogParser.g:8297:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,Element,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:8307:4: ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )?
                    int alt196=3;
                    int LA196_0 = input.LA(1);

                    if ( (LA196_0==Before) ) {
                        alt196=1;
                    }
                    else if ( (LA196_0==After) ) {
                        alt196=2;
                    }
                    switch (alt196) {
                        case 1 :
                            // InternalDialogParser.g:8308:5: ( (lv_before_3_0= Before ) )
                            {
                            // InternalDialogParser.g:8308:5: ( (lv_before_3_0= Before ) )
                            // InternalDialogParser.g:8309:6: (lv_before_3_0= Before )
                            {
                            // InternalDialogParser.g:8309:6: (lv_before_3_0= Before )
                            // InternalDialogParser.g:8310:7: lv_before_3_0= Before
                            {
                            lv_before_3_0=(Token)match(input,Before,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "before", true, "before");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:8323:5: ( (lv_after_4_0= After ) )
                            {
                            // InternalDialogParser.g:8323:5: ( (lv_after_4_0= After ) )
                            // InternalDialogParser.g:8324:6: (lv_after_4_0= After )
                            {
                            // InternalDialogParser.g:8324:6: (lv_after_4_0= After )
                            // InternalDialogParser.g:8325:7: lv_after_4_0= After
                            {
                            lv_after_4_0=(Token)match(input,After,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "after", true, "after");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:8338:4: ( (lv_element_5_0= norm1_UnitExpression ) )
                    // InternalDialogParser.g:8339:5: (lv_element_5_0= norm1_UnitExpression )
                    {
                    // InternalDialogParser.g:8339:5: (lv_element_5_0= norm1_UnitExpression )
                    // InternalDialogParser.g:8340:6: lv_element_5_0= norm1_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_element_5_0=norm1_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElementInListRule());
                      						}
                      						set(
                      							current,
                      							"element",
                      							lv_element_5_0,
                      							"com.ge.research.sadl.SADL.UnitExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_ElementInList"


    // $ANTLR start "norm2_ElementInList"
    // InternalDialogParser.g:8363:1: norm2_ElementInList returns [EObject current=null] : (this_UnitExpression_0= norm2_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) ) ) ;
    public final EObject norm2_ElementInList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_before_3_0=null;
        Token lv_after_4_0=null;
        EObject this_UnitExpression_0 = null;

        EObject lv_element_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8369:2: ( (this_UnitExpression_0= norm2_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) ) ) )
            // InternalDialogParser.g:8370:2: (this_UnitExpression_0= norm2_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) ) )
            {
            // InternalDialogParser.g:8370:2: (this_UnitExpression_0= norm2_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) ) )
            int alt199=2;
            int LA199_0 = input.LA(1);

            if ( (LA199_0==Another||LA199_0==Length||(LA199_0>=Count && LA199_0<=False)||LA199_0==First||(LA199_0>=Index && LA199_0<=Known)||LA199_0==There||LA199_0==Value||LA199_0==None||LA199_0==Last||LA199_0==Only||LA199_0==Some||(LA199_0>=True && LA199_0<=Type)||LA199_0==The||LA199_0==Any||LA199_0==Not||LA199_0==The_1||LA199_0==HyphenMinusHyphenMinus||(LA199_0>=An && LA199_0<=An_1)||LA199_0==ExclamationMark||LA199_0==LeftParenthesis||LA199_0==HyphenMinus||LA199_0==A||LA199_0==LeftSquareBracket||(LA199_0>=A_1 && LA199_0<=LeftCurlyBracket)||LA199_0==RULE_NUMBER||(LA199_0>=RULE_ID && LA199_0<=RULE_STRING)) ) {
                alt199=1;
            }
            else if ( (LA199_0==Element) ) {
                alt199=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 199, 0, input);

                throw nvae;
            }
            switch (alt199) {
                case 1 :
                    // InternalDialogParser.g:8371:3: this_UnitExpression_0= norm2_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnitExpression_0=norm2_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnitExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:8380:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) )
                    {
                    // InternalDialogParser.g:8380:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) )
                    // InternalDialogParser.g:8381:4: () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) )
                    {
                    // InternalDialogParser.g:8381:4: ()
                    // InternalDialogParser.g:8382:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,Element,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:8392:4: ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )?
                    int alt198=3;
                    int LA198_0 = input.LA(1);

                    if ( (LA198_0==Before) ) {
                        alt198=1;
                    }
                    else if ( (LA198_0==After) ) {
                        alt198=2;
                    }
                    switch (alt198) {
                        case 1 :
                            // InternalDialogParser.g:8393:5: ( (lv_before_3_0= Before ) )
                            {
                            // InternalDialogParser.g:8393:5: ( (lv_before_3_0= Before ) )
                            // InternalDialogParser.g:8394:6: (lv_before_3_0= Before )
                            {
                            // InternalDialogParser.g:8394:6: (lv_before_3_0= Before )
                            // InternalDialogParser.g:8395:7: lv_before_3_0= Before
                            {
                            lv_before_3_0=(Token)match(input,Before,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "before", true, "before");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:8408:5: ( (lv_after_4_0= After ) )
                            {
                            // InternalDialogParser.g:8408:5: ( (lv_after_4_0= After ) )
                            // InternalDialogParser.g:8409:6: (lv_after_4_0= After )
                            {
                            // InternalDialogParser.g:8409:6: (lv_after_4_0= After )
                            // InternalDialogParser.g:8410:7: lv_after_4_0= After
                            {
                            lv_after_4_0=(Token)match(input,After,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "after", true, "after");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:8423:4: ( (lv_element_5_0= norm2_UnitExpression ) )
                    // InternalDialogParser.g:8424:5: (lv_element_5_0= norm2_UnitExpression )
                    {
                    // InternalDialogParser.g:8424:5: (lv_element_5_0= norm2_UnitExpression )
                    // InternalDialogParser.g:8425:6: lv_element_5_0= norm2_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_element_5_0=norm2_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElementInListRule());
                      						}
                      						set(
                      							current,
                      							"element",
                      							lv_element_5_0,
                      							"com.ge.research.sadl.SADL.UnitExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_ElementInList"


    // $ANTLR start "norm3_ElementInList"
    // InternalDialogParser.g:8448:1: norm3_ElementInList returns [EObject current=null] : (this_UnitExpression_0= norm3_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) ) ) ;
    public final EObject norm3_ElementInList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_before_3_0=null;
        Token lv_after_4_0=null;
        EObject this_UnitExpression_0 = null;

        EObject lv_element_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8454:2: ( (this_UnitExpression_0= norm3_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) ) ) )
            // InternalDialogParser.g:8455:2: (this_UnitExpression_0= norm3_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) ) )
            {
            // InternalDialogParser.g:8455:2: (this_UnitExpression_0= norm3_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) ) )
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==Another||LA201_0==Length||(LA201_0>=Count && LA201_0<=False)||LA201_0==First||(LA201_0>=Index && LA201_0<=Known)||LA201_0==There||LA201_0==Value||LA201_0==None||LA201_0==Last||LA201_0==Only||LA201_0==Some||(LA201_0>=True && LA201_0<=Type)||LA201_0==The||LA201_0==Any||LA201_0==Not||LA201_0==The_1||LA201_0==HyphenMinusHyphenMinus||(LA201_0>=An && LA201_0<=An_1)||LA201_0==ExclamationMark||LA201_0==LeftParenthesis||LA201_0==HyphenMinus||LA201_0==A||LA201_0==LeftSquareBracket||(LA201_0>=A_1 && LA201_0<=LeftCurlyBracket)||LA201_0==RULE_NUMBER||(LA201_0>=RULE_ID && LA201_0<=RULE_STRING)) ) {
                alt201=1;
            }
            else if ( (LA201_0==Element) ) {
                alt201=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 201, 0, input);

                throw nvae;
            }
            switch (alt201) {
                case 1 :
                    // InternalDialogParser.g:8456:3: this_UnitExpression_0= norm3_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnitExpression_0=norm3_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnitExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:8465:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) )
                    {
                    // InternalDialogParser.g:8465:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) )
                    // InternalDialogParser.g:8466:4: () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) )
                    {
                    // InternalDialogParser.g:8466:4: ()
                    // InternalDialogParser.g:8467:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,Element,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:8477:4: ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )?
                    int alt200=3;
                    int LA200_0 = input.LA(1);

                    if ( (LA200_0==Before) ) {
                        alt200=1;
                    }
                    else if ( (LA200_0==After) ) {
                        alt200=2;
                    }
                    switch (alt200) {
                        case 1 :
                            // InternalDialogParser.g:8478:5: ( (lv_before_3_0= Before ) )
                            {
                            // InternalDialogParser.g:8478:5: ( (lv_before_3_0= Before ) )
                            // InternalDialogParser.g:8479:6: (lv_before_3_0= Before )
                            {
                            // InternalDialogParser.g:8479:6: (lv_before_3_0= Before )
                            // InternalDialogParser.g:8480:7: lv_before_3_0= Before
                            {
                            lv_before_3_0=(Token)match(input,Before,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "before", true, "before");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:8493:5: ( (lv_after_4_0= After ) )
                            {
                            // InternalDialogParser.g:8493:5: ( (lv_after_4_0= After ) )
                            // InternalDialogParser.g:8494:6: (lv_after_4_0= After )
                            {
                            // InternalDialogParser.g:8494:6: (lv_after_4_0= After )
                            // InternalDialogParser.g:8495:7: lv_after_4_0= After
                            {
                            lv_after_4_0=(Token)match(input,After,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "after", true, "after");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:8508:4: ( (lv_element_5_0= norm3_UnitExpression ) )
                    // InternalDialogParser.g:8509:5: (lv_element_5_0= norm3_UnitExpression )
                    {
                    // InternalDialogParser.g:8509:5: (lv_element_5_0= norm3_UnitExpression )
                    // InternalDialogParser.g:8510:6: lv_element_5_0= norm3_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_element_5_0=norm3_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElementInListRule());
                      						}
                      						set(
                      							current,
                      							"element",
                      							lv_element_5_0,
                      							"com.ge.research.sadl.SADL.UnitExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_ElementInList"


    // $ANTLR start "entryRuleUnitExpression"
    // InternalDialogParser.g:8532:1: entryRuleUnitExpression returns [EObject current=null] : iv_ruleUnitExpression= ruleUnitExpression EOF ;
    public final EObject entryRuleUnitExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnitExpression = null;


        try {
            // InternalDialogParser.g:8532:55: (iv_ruleUnitExpression= ruleUnitExpression EOF )
            // InternalDialogParser.g:8533:2: iv_ruleUnitExpression= ruleUnitExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnitExpression=ruleUnitExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnitExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnitExpression"


    // $ANTLR start "ruleUnitExpression"
    // InternalDialogParser.g:8539:1: ruleUnitExpression returns [EObject current=null] : (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleUnitExpression() throws RecognitionException {
        EObject current = null;

        Token lv_unit_2_0=null;
        EObject this_UnaryExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8545:2: ( (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) )
            // InternalDialogParser.g:8546:2: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            {
            // InternalDialogParser.g:8546:2: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            // InternalDialogParser.g:8547:3: this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_123);
            this_UnaryExpression_0=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8555:3: ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            int alt202=2;
            int LA202_0 = input.LA(1);

            if ( (LA202_0==RULE_STRING) ) {
                alt202=1;
            }
            switch (alt202) {
                case 1 :
                    // InternalDialogParser.g:8556:4: () ( (lv_unit_2_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:8556:4: ()
                    // InternalDialogParser.g:8557:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:8563:4: ( (lv_unit_2_0= RULE_STRING ) )
                    // InternalDialogParser.g:8564:5: (lv_unit_2_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:8564:5: (lv_unit_2_0= RULE_STRING )
                    // InternalDialogParser.g:8565:6: lv_unit_2_0= RULE_STRING
                    {
                    lv_unit_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnitExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitExpression"


    // $ANTLR start "norm1_UnitExpression"
    // InternalDialogParser.g:8587:1: norm1_UnitExpression returns [EObject current=null] : (this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) ;
    public final EObject norm1_UnitExpression() throws RecognitionException {
        EObject current = null;

        Token lv_unit_2_0=null;
        EObject this_UnaryExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8593:2: ( (this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) )
            // InternalDialogParser.g:8594:2: (this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            {
            // InternalDialogParser.g:8594:2: (this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            // InternalDialogParser.g:8595:3: this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_123);
            this_UnaryExpression_0=norm1_UnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8603:3: ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            int alt203=2;
            int LA203_0 = input.LA(1);

            if ( (LA203_0==RULE_STRING) ) {
                alt203=1;
            }
            switch (alt203) {
                case 1 :
                    // InternalDialogParser.g:8604:4: () ( (lv_unit_2_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:8604:4: ()
                    // InternalDialogParser.g:8605:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:8611:4: ( (lv_unit_2_0= RULE_STRING ) )
                    // InternalDialogParser.g:8612:5: (lv_unit_2_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:8612:5: (lv_unit_2_0= RULE_STRING )
                    // InternalDialogParser.g:8613:6: lv_unit_2_0= RULE_STRING
                    {
                    lv_unit_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnitExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_UnitExpression"


    // $ANTLR start "norm2_UnitExpression"
    // InternalDialogParser.g:8635:1: norm2_UnitExpression returns [EObject current=null] : (this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) ;
    public final EObject norm2_UnitExpression() throws RecognitionException {
        EObject current = null;

        Token lv_unit_2_0=null;
        EObject this_UnaryExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8641:2: ( (this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) )
            // InternalDialogParser.g:8642:2: (this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            {
            // InternalDialogParser.g:8642:2: (this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            // InternalDialogParser.g:8643:3: this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_123);
            this_UnaryExpression_0=norm2_UnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8651:3: ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            int alt204=2;
            int LA204_0 = input.LA(1);

            if ( (LA204_0==RULE_STRING) ) {
                alt204=1;
            }
            switch (alt204) {
                case 1 :
                    // InternalDialogParser.g:8652:4: () ( (lv_unit_2_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:8652:4: ()
                    // InternalDialogParser.g:8653:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:8659:4: ( (lv_unit_2_0= RULE_STRING ) )
                    // InternalDialogParser.g:8660:5: (lv_unit_2_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:8660:5: (lv_unit_2_0= RULE_STRING )
                    // InternalDialogParser.g:8661:6: lv_unit_2_0= RULE_STRING
                    {
                    lv_unit_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnitExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_UnitExpression"


    // $ANTLR start "norm3_UnitExpression"
    // InternalDialogParser.g:8683:1: norm3_UnitExpression returns [EObject current=null] : (this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) ;
    public final EObject norm3_UnitExpression() throws RecognitionException {
        EObject current = null;

        Token lv_unit_2_0=null;
        EObject this_UnaryExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8689:2: ( (this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) )
            // InternalDialogParser.g:8690:2: (this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            {
            // InternalDialogParser.g:8690:2: (this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            // InternalDialogParser.g:8691:3: this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_123);
            this_UnaryExpression_0=norm3_UnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8699:3: ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            int alt205=2;
            int LA205_0 = input.LA(1);

            if ( (LA205_0==RULE_STRING) ) {
                alt205=1;
            }
            switch (alt205) {
                case 1 :
                    // InternalDialogParser.g:8700:4: () ( (lv_unit_2_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:8700:4: ()
                    // InternalDialogParser.g:8701:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:8707:4: ( (lv_unit_2_0= RULE_STRING ) )
                    // InternalDialogParser.g:8708:5: (lv_unit_2_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:8708:5: (lv_unit_2_0= RULE_STRING )
                    // InternalDialogParser.g:8709:6: lv_unit_2_0= RULE_STRING
                    {
                    lv_unit_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnitExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_UnitExpression"


    // $ANTLR start "entryRuleUnaryExpression"
    // InternalDialogParser.g:8730:1: entryRuleUnaryExpression returns [EObject current=null] : iv_ruleUnaryExpression= ruleUnaryExpression EOF ;
    public final EObject entryRuleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpression = null;


        try {
            // InternalDialogParser.g:8730:56: (iv_ruleUnaryExpression= ruleUnaryExpression EOF )
            // InternalDialogParser.g:8731:2: iv_ruleUnaryExpression= ruleUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpression=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryExpression"


    // $ANTLR start "ruleUnaryExpression"
    // InternalDialogParser.g:8737:1: ruleUnaryExpression returns [EObject current=null] : (this_PrimaryExpression_0= rulePrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) ) ) ;
    public final EObject ruleUnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject this_PrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_5 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8743:2: ( (this_PrimaryExpression_0= rulePrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) ) ) )
            // InternalDialogParser.g:8744:2: (this_PrimaryExpression_0= rulePrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) ) )
            {
            // InternalDialogParser.g:8744:2: (this_PrimaryExpression_0= rulePrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) ) )
            int alt207=2;
            int LA207_0 = input.LA(1);

            if ( (LA207_0==Another||LA207_0==Length||(LA207_0>=Count && LA207_0<=False)||LA207_0==First||(LA207_0>=Index && LA207_0<=Known)||LA207_0==Value||LA207_0==None||LA207_0==Last||LA207_0==Some||(LA207_0>=True && LA207_0<=Type)||LA207_0==The||LA207_0==Any||LA207_0==The_1||LA207_0==HyphenMinusHyphenMinus||(LA207_0>=An && LA207_0<=An_1)||LA207_0==LeftParenthesis||LA207_0==A||LA207_0==LeftSquareBracket||(LA207_0>=A_1 && LA207_0<=LeftCurlyBracket)||LA207_0==RULE_NUMBER||(LA207_0>=RULE_ID && LA207_0<=RULE_STRING)) ) {
                alt207=1;
            }
            else if ( (LA207_0==There||LA207_0==Only||LA207_0==Not||LA207_0==ExclamationMark||LA207_0==HyphenMinus) ) {
                alt207=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 207, 0, input);

                throw nvae;
            }
            switch (alt207) {
                case 1 :
                    // InternalDialogParser.g:8745:3: this_PrimaryExpression_0= rulePrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_0=rulePrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:8754:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) )
                    {
                    // InternalDialogParser.g:8754:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) )
                    // InternalDialogParser.g:8755:4: () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) )
                    {
                    // InternalDialogParser.g:8755:4: ()
                    // InternalDialogParser.g:8756:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:8762:4: ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) )
                    // InternalDialogParser.g:8763:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    {
                    // InternalDialogParser.g:8763:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    // InternalDialogParser.g:8764:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    {
                    // InternalDialogParser.g:8764:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    int alt206=5;
                    switch ( input.LA(1) ) {
                    case Not:
                        {
                        alt206=1;
                        }
                        break;
                    case ExclamationMark:
                        {
                        alt206=2;
                        }
                        break;
                    case Only:
                        {
                        alt206=3;
                        }
                        break;
                    case HyphenMinus:
                        {
                        alt206=4;
                        }
                        break;
                    case There:
                        {
                        alt206=5;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 206, 0, input);

                        throw nvae;
                    }

                    switch (alt206) {
                        case 1 :
                            // InternalDialogParser.g:8765:7: lv_op_2_1= Not
                            {
                            lv_op_2_1=(Token)match(input,Not,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:8776:7: lv_op_2_2= ExclamationMark
                            {
                            lv_op_2_2=(Token)match(input,ExclamationMark,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:8787:7: lv_op_2_3= Only
                            {
                            lv_op_2_3=(Token)match(input,Only,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalDialogParser.g:8798:7: lv_op_2_4= HyphenMinus
                            {
                            lv_op_2_4=(Token)match(input,HyphenMinus,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalDialogParser.g:8809:7: lv_op_2_5= ruleThereExists
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
                              						
                            }
                            pushFollow(FOLLOW_124);
                            lv_op_2_5=ruleThereExists();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                              							}
                              							set(
                              								current,
                              								"op",
                              								lv_op_2_5,
                              								"com.ge.research.sadl.SADL.ThereExists");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:8827:4: ( (lv_expr_3_0= rulePrimaryExpression ) )
                    // InternalDialogParser.g:8828:5: (lv_expr_3_0= rulePrimaryExpression )
                    {
                    // InternalDialogParser.g:8828:5: (lv_expr_3_0= rulePrimaryExpression )
                    // InternalDialogParser.g:8829:6: lv_expr_3_0= rulePrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=rulePrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_0,
                      							"com.ge.research.sadl.SADL.PrimaryExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryExpression"


    // $ANTLR start "norm1_UnaryExpression"
    // InternalDialogParser.g:8852:1: norm1_UnaryExpression returns [EObject current=null] : (this_PrimaryExpression_0= norm1_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) ) ) ;
    public final EObject norm1_UnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject this_PrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_5 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8858:2: ( (this_PrimaryExpression_0= norm1_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) ) ) )
            // InternalDialogParser.g:8859:2: (this_PrimaryExpression_0= norm1_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) ) )
            {
            // InternalDialogParser.g:8859:2: (this_PrimaryExpression_0= norm1_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) ) )
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==Another||LA209_0==Length||(LA209_0>=Count && LA209_0<=False)||LA209_0==First||(LA209_0>=Index && LA209_0<=Known)||LA209_0==Value||LA209_0==None||LA209_0==Last||LA209_0==Some||(LA209_0>=True && LA209_0<=Type)||LA209_0==The||LA209_0==Any||LA209_0==The_1||LA209_0==HyphenMinusHyphenMinus||(LA209_0>=An && LA209_0<=An_1)||LA209_0==LeftParenthesis||LA209_0==A||LA209_0==LeftSquareBracket||(LA209_0>=A_1 && LA209_0<=LeftCurlyBracket)||LA209_0==RULE_NUMBER||(LA209_0>=RULE_ID && LA209_0<=RULE_STRING)) ) {
                alt209=1;
            }
            else if ( (LA209_0==There||LA209_0==Only||LA209_0==Not||LA209_0==ExclamationMark||LA209_0==HyphenMinus) ) {
                alt209=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 209, 0, input);

                throw nvae;
            }
            switch (alt209) {
                case 1 :
                    // InternalDialogParser.g:8860:3: this_PrimaryExpression_0= norm1_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_0=norm1_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:8869:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) )
                    {
                    // InternalDialogParser.g:8869:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) )
                    // InternalDialogParser.g:8870:4: () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) )
                    {
                    // InternalDialogParser.g:8870:4: ()
                    // InternalDialogParser.g:8871:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:8877:4: ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) )
                    // InternalDialogParser.g:8878:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    {
                    // InternalDialogParser.g:8878:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    // InternalDialogParser.g:8879:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    {
                    // InternalDialogParser.g:8879:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    int alt208=5;
                    switch ( input.LA(1) ) {
                    case Not:
                        {
                        alt208=1;
                        }
                        break;
                    case ExclamationMark:
                        {
                        alt208=2;
                        }
                        break;
                    case Only:
                        {
                        alt208=3;
                        }
                        break;
                    case HyphenMinus:
                        {
                        alt208=4;
                        }
                        break;
                    case There:
                        {
                        alt208=5;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 208, 0, input);

                        throw nvae;
                    }

                    switch (alt208) {
                        case 1 :
                            // InternalDialogParser.g:8880:7: lv_op_2_1= Not
                            {
                            lv_op_2_1=(Token)match(input,Not,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:8891:7: lv_op_2_2= ExclamationMark
                            {
                            lv_op_2_2=(Token)match(input,ExclamationMark,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:8902:7: lv_op_2_3= Only
                            {
                            lv_op_2_3=(Token)match(input,Only,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalDialogParser.g:8913:7: lv_op_2_4= HyphenMinus
                            {
                            lv_op_2_4=(Token)match(input,HyphenMinus,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalDialogParser.g:8924:7: lv_op_2_5= ruleThereExists
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
                              						
                            }
                            pushFollow(FOLLOW_124);
                            lv_op_2_5=ruleThereExists();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                              							}
                              							set(
                              								current,
                              								"op",
                              								lv_op_2_5,
                              								"com.ge.research.sadl.SADL.ThereExists");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:8942:4: ( (lv_expr_3_0= norm1_PrimaryExpression ) )
                    // InternalDialogParser.g:8943:5: (lv_expr_3_0= norm1_PrimaryExpression )
                    {
                    // InternalDialogParser.g:8943:5: (lv_expr_3_0= norm1_PrimaryExpression )
                    // InternalDialogParser.g:8944:6: lv_expr_3_0= norm1_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=norm1_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_0,
                      							"com.ge.research.sadl.SADL.PrimaryExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_UnaryExpression"


    // $ANTLR start "norm2_UnaryExpression"
    // InternalDialogParser.g:8967:1: norm2_UnaryExpression returns [EObject current=null] : (this_PrimaryExpression_0= norm2_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) ) ) ;
    public final EObject norm2_UnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject this_PrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_5 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8973:2: ( (this_PrimaryExpression_0= norm2_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) ) ) )
            // InternalDialogParser.g:8974:2: (this_PrimaryExpression_0= norm2_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) ) )
            {
            // InternalDialogParser.g:8974:2: (this_PrimaryExpression_0= norm2_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) ) )
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==Another||LA211_0==Length||(LA211_0>=Count && LA211_0<=False)||LA211_0==First||(LA211_0>=Index && LA211_0<=Known)||LA211_0==Value||LA211_0==None||LA211_0==Last||LA211_0==Some||(LA211_0>=True && LA211_0<=Type)||LA211_0==The||LA211_0==Any||LA211_0==The_1||LA211_0==HyphenMinusHyphenMinus||(LA211_0>=An && LA211_0<=An_1)||LA211_0==LeftParenthesis||LA211_0==A||LA211_0==LeftSquareBracket||(LA211_0>=A_1 && LA211_0<=LeftCurlyBracket)||LA211_0==RULE_NUMBER||(LA211_0>=RULE_ID && LA211_0<=RULE_STRING)) ) {
                alt211=1;
            }
            else if ( (LA211_0==There||LA211_0==Only||LA211_0==Not||LA211_0==ExclamationMark||LA211_0==HyphenMinus) ) {
                alt211=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 211, 0, input);

                throw nvae;
            }
            switch (alt211) {
                case 1 :
                    // InternalDialogParser.g:8975:3: this_PrimaryExpression_0= norm2_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_0=norm2_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:8984:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) )
                    {
                    // InternalDialogParser.g:8984:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) )
                    // InternalDialogParser.g:8985:4: () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) )
                    {
                    // InternalDialogParser.g:8985:4: ()
                    // InternalDialogParser.g:8986:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:8992:4: ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) )
                    // InternalDialogParser.g:8993:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    {
                    // InternalDialogParser.g:8993:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    // InternalDialogParser.g:8994:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    {
                    // InternalDialogParser.g:8994:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    int alt210=5;
                    switch ( input.LA(1) ) {
                    case Not:
                        {
                        alt210=1;
                        }
                        break;
                    case ExclamationMark:
                        {
                        alt210=2;
                        }
                        break;
                    case Only:
                        {
                        alt210=3;
                        }
                        break;
                    case HyphenMinus:
                        {
                        alt210=4;
                        }
                        break;
                    case There:
                        {
                        alt210=5;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 210, 0, input);

                        throw nvae;
                    }

                    switch (alt210) {
                        case 1 :
                            // InternalDialogParser.g:8995:7: lv_op_2_1= Not
                            {
                            lv_op_2_1=(Token)match(input,Not,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:9006:7: lv_op_2_2= ExclamationMark
                            {
                            lv_op_2_2=(Token)match(input,ExclamationMark,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:9017:7: lv_op_2_3= Only
                            {
                            lv_op_2_3=(Token)match(input,Only,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalDialogParser.g:9028:7: lv_op_2_4= HyphenMinus
                            {
                            lv_op_2_4=(Token)match(input,HyphenMinus,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalDialogParser.g:9039:7: lv_op_2_5= ruleThereExists
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
                              						
                            }
                            pushFollow(FOLLOW_124);
                            lv_op_2_5=ruleThereExists();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                              							}
                              							set(
                              								current,
                              								"op",
                              								lv_op_2_5,
                              								"com.ge.research.sadl.SADL.ThereExists");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:9057:4: ( (lv_expr_3_0= norm2_PrimaryExpression ) )
                    // InternalDialogParser.g:9058:5: (lv_expr_3_0= norm2_PrimaryExpression )
                    {
                    // InternalDialogParser.g:9058:5: (lv_expr_3_0= norm2_PrimaryExpression )
                    // InternalDialogParser.g:9059:6: lv_expr_3_0= norm2_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=norm2_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_0,
                      							"com.ge.research.sadl.SADL.PrimaryExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_UnaryExpression"


    // $ANTLR start "norm3_UnaryExpression"
    // InternalDialogParser.g:9082:1: norm3_UnaryExpression returns [EObject current=null] : (this_PrimaryExpression_0= norm3_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) ) ) ;
    public final EObject norm3_UnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject this_PrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_5 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9088:2: ( (this_PrimaryExpression_0= norm3_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) ) ) )
            // InternalDialogParser.g:9089:2: (this_PrimaryExpression_0= norm3_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) ) )
            {
            // InternalDialogParser.g:9089:2: (this_PrimaryExpression_0= norm3_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) ) )
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==Another||LA213_0==Length||(LA213_0>=Count && LA213_0<=False)||LA213_0==First||(LA213_0>=Index && LA213_0<=Known)||LA213_0==Value||LA213_0==None||LA213_0==Last||LA213_0==Some||(LA213_0>=True && LA213_0<=Type)||LA213_0==The||LA213_0==Any||LA213_0==The_1||LA213_0==HyphenMinusHyphenMinus||(LA213_0>=An && LA213_0<=An_1)||LA213_0==LeftParenthesis||LA213_0==A||LA213_0==LeftSquareBracket||(LA213_0>=A_1 && LA213_0<=LeftCurlyBracket)||LA213_0==RULE_NUMBER||(LA213_0>=RULE_ID && LA213_0<=RULE_STRING)) ) {
                alt213=1;
            }
            else if ( (LA213_0==There||LA213_0==Only||LA213_0==Not||LA213_0==ExclamationMark||LA213_0==HyphenMinus) ) {
                alt213=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 213, 0, input);

                throw nvae;
            }
            switch (alt213) {
                case 1 :
                    // InternalDialogParser.g:9090:3: this_PrimaryExpression_0= norm3_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_0=norm3_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:9099:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) )
                    {
                    // InternalDialogParser.g:9099:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) )
                    // InternalDialogParser.g:9100:4: () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) )
                    {
                    // InternalDialogParser.g:9100:4: ()
                    // InternalDialogParser.g:9101:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9107:4: ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) )
                    // InternalDialogParser.g:9108:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    {
                    // InternalDialogParser.g:9108:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    // InternalDialogParser.g:9109:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    {
                    // InternalDialogParser.g:9109:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    int alt212=5;
                    switch ( input.LA(1) ) {
                    case Not:
                        {
                        alt212=1;
                        }
                        break;
                    case ExclamationMark:
                        {
                        alt212=2;
                        }
                        break;
                    case Only:
                        {
                        alt212=3;
                        }
                        break;
                    case HyphenMinus:
                        {
                        alt212=4;
                        }
                        break;
                    case There:
                        {
                        alt212=5;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 212, 0, input);

                        throw nvae;
                    }

                    switch (alt212) {
                        case 1 :
                            // InternalDialogParser.g:9110:7: lv_op_2_1= Not
                            {
                            lv_op_2_1=(Token)match(input,Not,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:9121:7: lv_op_2_2= ExclamationMark
                            {
                            lv_op_2_2=(Token)match(input,ExclamationMark,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:9132:7: lv_op_2_3= Only
                            {
                            lv_op_2_3=(Token)match(input,Only,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalDialogParser.g:9143:7: lv_op_2_4= HyphenMinus
                            {
                            lv_op_2_4=(Token)match(input,HyphenMinus,FOLLOW_124); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalDialogParser.g:9154:7: lv_op_2_5= ruleThereExists
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
                              						
                            }
                            pushFollow(FOLLOW_124);
                            lv_op_2_5=ruleThereExists();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                              							}
                              							set(
                              								current,
                              								"op",
                              								lv_op_2_5,
                              								"com.ge.research.sadl.SADL.ThereExists");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:9172:4: ( (lv_expr_3_0= norm3_PrimaryExpression ) )
                    // InternalDialogParser.g:9173:5: (lv_expr_3_0= norm3_PrimaryExpression )
                    {
                    // InternalDialogParser.g:9173:5: (lv_expr_3_0= norm3_PrimaryExpression )
                    // InternalDialogParser.g:9174:6: lv_expr_3_0= norm3_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=norm3_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_0,
                      							"com.ge.research.sadl.SADL.PrimaryExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_UnaryExpression"


    // $ANTLR start "entryRuleThereExists"
    // InternalDialogParser.g:9196:1: entryRuleThereExists returns [String current=null] : iv_ruleThereExists= ruleThereExists EOF ;
    public final String entryRuleThereExists() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleThereExists = null;


        try {
            // InternalDialogParser.g:9196:51: (iv_ruleThereExists= ruleThereExists EOF )
            // InternalDialogParser.g:9197:2: iv_ruleThereExists= ruleThereExists EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThereExistsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThereExists=ruleThereExists();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThereExists.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleThereExists"


    // $ANTLR start "ruleThereExists"
    // InternalDialogParser.g:9203:1: ruleThereExists returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= There kw= Exists ) ;
    public final AntlrDatatypeRuleToken ruleThereExists() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:9209:2: ( (kw= There kw= Exists ) )
            // InternalDialogParser.g:9210:2: (kw= There kw= Exists )
            {
            // InternalDialogParser.g:9210:2: (kw= There kw= Exists )
            // InternalDialogParser.g:9211:3: kw= There kw= Exists
            {
            kw=(Token)match(input,There,FOLLOW_125); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getThereExistsAccess().getThereKeyword_0());
              		
            }
            kw=(Token)match(input,Exists,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getThereExistsAccess().getExistsKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleThereExists"


    // $ANTLR start "entryRulePrimaryExpression"
    // InternalDialogParser.g:9225:1: entryRulePrimaryExpression returns [EObject current=null] : iv_rulePrimaryExpression= rulePrimaryExpression EOF ;
    public final EObject entryRulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpression = null;


        try {
            // InternalDialogParser.g:9225:58: (iv_rulePrimaryExpression= rulePrimaryExpression EOF )
            // InternalDialogParser.g:9226:2: iv_rulePrimaryExpression= rulePrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpression=rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpression"


    // $ANTLR start "rulePrimaryExpression"
    // InternalDialogParser.g:9232:1: rulePrimaryExpression returns [EObject current=null] : ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) ;
    public final EObject rulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_maxlen_16_2=null;
        Token lv_value_18_0=null;
        EObject this_SelectExpression_1 = null;

        EObject this_Name_3 = null;

        AntlrDatatypeRuleToken lv_article_5_0 = null;

        AntlrDatatypeRuleToken lv_ordinal_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_arglist_9_0 = null;

        EObject lv_arglist_11_0 = null;

        AntlrDatatypeRuleToken lv_len_14_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_16_1 = null;

        AntlrDatatypeRuleToken lv_value_20_0 = null;

        AntlrDatatypeRuleToken lv_value_22_0 = null;

        AntlrDatatypeRuleToken lv_constant_24_0 = null;

        EObject lv_valueTable_26_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9238:2: ( ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) )
            // InternalDialogParser.g:9239:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            {
            // InternalDialogParser.g:9239:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            int alt220=8;
            alt220 = dfa220.predict(input);
            switch (alt220) {
                case 1 :
                    // InternalDialogParser.g:9240:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis )
                    {
                    // InternalDialogParser.g:9240:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis )
                    // InternalDialogParser.g:9241:4: otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_28);
                    this_SelectExpression_1=ruleSelectExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SelectExpression_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:9259:3: this_Name_3= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Name_3=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Name_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:9268:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    {
                    // InternalDialogParser.g:9268:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    // InternalDialogParser.g:9269:4: () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    {
                    // InternalDialogParser.g:9269:4: ()
                    // InternalDialogParser.g:9270:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9276:4: ( (lv_article_5_0= ruleAnArticle ) )
                    // InternalDialogParser.g:9277:5: (lv_article_5_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:9277:5: (lv_article_5_0= ruleAnArticle )
                    // InternalDialogParser.g:9278:6: lv_article_5_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_126);
                    lv_article_5_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"article",
                      							lv_article_5_0,
                      							"com.ge.research.sadl.SADL.AnArticle");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:9295:4: ( (lv_ordinal_6_0= ruleOrdinal ) )?
                    int alt214=2;
                    int LA214_0 = input.LA(1);

                    if ( (LA214_0==Seventh||LA214_0==Eighth||LA214_0==Fourth||LA214_0==Second||(LA214_0>=Fifth && LA214_0<=First)||LA214_0==Ninth||(LA214_0>=Other && LA214_0<=Tenth)||LA214_0==Third) ) {
                        alt214=1;
                    }
                    switch (alt214) {
                        case 1 :
                            // InternalDialogParser.g:9296:5: (lv_ordinal_6_0= ruleOrdinal )
                            {
                            // InternalDialogParser.g:9296:5: (lv_ordinal_6_0= ruleOrdinal )
                            // InternalDialogParser.g:9297:6: lv_ordinal_6_0= ruleOrdinal
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FOLLOW_5);
                            lv_ordinal_6_0=ruleOrdinal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              						}
                              						set(
                              							current,
                              							"ordinal",
                              							lv_ordinal_6_0,
                              							"com.ge.research.sadl.SADL.Ordinal");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:9314:4: ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:9315:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:9315:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:9316:6: lv_type_7_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_127);
                    lv_type_7_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_7_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:9333:4: ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    int alt219=3;
                    int LA219_0 = input.LA(1);

                    if ( (LA219_0==LeftSquareBracket) ) {
                        alt219=1;
                    }
                    else if ( (LA219_0==Length) ) {
                        alt219=2;
                    }
                    switch (alt219) {
                        case 1 :
                            // InternalDialogParser.g:9334:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            {
                            // InternalDialogParser.g:9334:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            // InternalDialogParser.g:9335:6: otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket
                            {
                            otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_128); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
                              					
                            }
                            // InternalDialogParser.g:9339:6: ( (lv_arglist_9_0= ruleNestedExpression ) )?
                            int alt215=2;
                            int LA215_0 = input.LA(1);

                            if ( (LA215_0==Another||LA215_0==Element||LA215_0==Sublist||LA215_0==Length||LA215_0==Select||(LA215_0>=Count && LA215_0<=False)||LA215_0==First||(LA215_0>=Index && LA215_0<=Known)||LA215_0==There||LA215_0==Value||LA215_0==None||LA215_0==Last||LA215_0==Only||LA215_0==Some||(LA215_0>=True && LA215_0<=Type)||LA215_0==The||LA215_0==Any||LA215_0==Not||LA215_0==The_1||LA215_0==HyphenMinusHyphenMinus||(LA215_0>=An && LA215_0<=An_1)||LA215_0==ExclamationMark||LA215_0==LeftParenthesis||LA215_0==HyphenMinus||LA215_0==A||LA215_0==LeftSquareBracket||(LA215_0>=A_1 && LA215_0<=LeftCurlyBracket)||LA215_0==RULE_NUMBER||(LA215_0>=RULE_ID && LA215_0<=RULE_STRING)) ) {
                                alt215=1;
                            }
                            switch (alt215) {
                                case 1 :
                                    // InternalDialogParser.g:9340:7: (lv_arglist_9_0= ruleNestedExpression )
                                    {
                                    // InternalDialogParser.g:9340:7: (lv_arglist_9_0= ruleNestedExpression )
                                    // InternalDialogParser.g:9341:8: lv_arglist_9_0= ruleNestedExpression
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_80);
                                    lv_arglist_9_0=ruleNestedExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                      								}
                                      								add(
                                      									current,
                                      									"arglist",
                                      									lv_arglist_9_0,
                                      									"com.ge.research.sadl.SADL.NestedExpression");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:9358:6: (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )*
                            loop216:
                            do {
                                int alt216=2;
                                int LA216_0 = input.LA(1);

                                if ( (LA216_0==Comma) ) {
                                    alt216=1;
                                }


                                switch (alt216) {
                            	case 1 :
                            	    // InternalDialogParser.g:9359:7: otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_83); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:9363:7: ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    // InternalDialogParser.g:9364:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    {
                            	    // InternalDialogParser.g:9364:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    // InternalDialogParser.g:9365:9: lv_arglist_11_0= ruleNestedExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_80);
                            	    lv_arglist_11_0=ruleNestedExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arglist",
                            	      										lv_arglist_11_0,
                            	      										"com.ge.research.sadl.SADL.NestedExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop216;
                                }
                            } while (true);

                            otherlv_12=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:9389:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            {
                            // InternalDialogParser.g:9389:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            // InternalDialogParser.g:9390:6: otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            {
                            otherlv_13=(Token)match(input,Length,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:9394:6: ( (lv_len_14_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:9395:7: (lv_len_14_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:9395:7: (lv_len_14_0= ruleFacetNumber )
                            // InternalDialogParser.g:9396:8: lv_len_14_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_129);
                            lv_len_14_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              								}
                              								set(
                              									current,
                              									"len",
                              									lv_len_14_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:9413:6: ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            int alt218=2;
                            int LA218_0 = input.LA(1);

                            if ( (LA218_0==HyphenMinus) ) {
                                int LA218_1 = input.LA(2);

                                if ( (LA218_1==RULE_NUMBER) ) {
                                    int LA218_3 = input.LA(3);

                                    if ( (synpred31_InternalDialogParser()) ) {
                                        alt218=1;
                                    }
                                }
                                else if ( (LA218_1==HyphenMinus) ) {
                                    int LA218_4 = input.LA(3);

                                    if ( (LA218_4==RULE_NUMBER) ) {
                                        int LA218_6 = input.LA(4);

                                        if ( (synpred31_InternalDialogParser()) ) {
                                            alt218=1;
                                        }
                                    }
                                }
                                else if ( (LA218_1==Asterisk) && (synpred31_InternalDialogParser())) {
                                    alt218=1;
                                }
                            }
                            switch (alt218) {
                                case 1 :
                                    // InternalDialogParser.g:9414:7: ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    {
                                    // InternalDialogParser.g:9415:7: (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    // InternalDialogParser.g:9416:8: otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    {
                                    otherlv_15=(Token)match(input,HyphenMinus,FOLLOW_39); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
                                      							
                                    }
                                    // InternalDialogParser.g:9420:8: ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    // InternalDialogParser.g:9421:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    {
                                    // InternalDialogParser.g:9421:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    // InternalDialogParser.g:9422:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    {
                                    // InternalDialogParser.g:9422:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    int alt217=2;
                                    int LA217_0 = input.LA(1);

                                    if ( (LA217_0==HyphenMinus||LA217_0==RULE_NUMBER) ) {
                                        alt217=1;
                                    }
                                    else if ( (LA217_0==Asterisk) ) {
                                        alt217=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 217, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt217) {
                                        case 1 :
                                            // InternalDialogParser.g:9423:11: lv_maxlen_16_1= ruleFacetNumber
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_2);
                                            lv_maxlen_16_1=ruleFacetNumber();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											set(
                                              												current,
                                              												"maxlen",
                                              												lv_maxlen_16_1,
                                              												"com.ge.research.sadl.SADL.FacetNumber");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalDialogParser.g:9439:11: lv_maxlen_16_2= Asterisk
                                            {
                                            lv_maxlen_16_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											setWithLastConsumed(current, "maxlen", lv_maxlen_16_2, null);
                                              										
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:9458:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:9458:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:9459:4: () ( (lv_value_18_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:9459:4: ()
                    // InternalDialogParser.g:9460:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9466:4: ( (lv_value_18_0= RULE_STRING ) )
                    // InternalDialogParser.g:9467:5: (lv_value_18_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:9467:5: (lv_value_18_0= RULE_STRING )
                    // InternalDialogParser.g:9468:6: lv_value_18_0= RULE_STRING
                    {
                    lv_value_18_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_18_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:9486:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    {
                    // InternalDialogParser.g:9486:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    // InternalDialogParser.g:9487:4: () ( (lv_value_20_0= ruleAnyNumber ) )
                    {
                    // InternalDialogParser.g:9487:4: ()
                    // InternalDialogParser.g:9488:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9494:4: ( (lv_value_20_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:9495:5: (lv_value_20_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:9495:5: (lv_value_20_0= ruleAnyNumber )
                    // InternalDialogParser.g:9496:6: lv_value_20_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_20_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_20_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:9515:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    {
                    // InternalDialogParser.g:9515:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    // InternalDialogParser.g:9516:4: () ( (lv_value_22_0= ruleBooleanValue ) )
                    {
                    // InternalDialogParser.g:9516:4: ()
                    // InternalDialogParser.g:9517:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9523:4: ( (lv_value_22_0= ruleBooleanValue ) )
                    // InternalDialogParser.g:9524:5: (lv_value_22_0= ruleBooleanValue )
                    {
                    // InternalDialogParser.g:9524:5: (lv_value_22_0= ruleBooleanValue )
                    // InternalDialogParser.g:9525:6: lv_value_22_0= ruleBooleanValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_22_0=ruleBooleanValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_22_0,
                      							"com.ge.research.sadl.SADL.BooleanValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:9544:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    {
                    // InternalDialogParser.g:9544:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    // InternalDialogParser.g:9545:4: () ( (lv_constant_24_0= ruleConstants ) )
                    {
                    // InternalDialogParser.g:9545:4: ()
                    // InternalDialogParser.g:9546:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9552:4: ( (lv_constant_24_0= ruleConstants ) )
                    // InternalDialogParser.g:9553:5: (lv_constant_24_0= ruleConstants )
                    {
                    // InternalDialogParser.g:9553:5: (lv_constant_24_0= ruleConstants )
                    // InternalDialogParser.g:9554:6: lv_constant_24_0= ruleConstants
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_24_0=ruleConstants();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"constant",
                      							lv_constant_24_0,
                      							"com.ge.research.sadl.SADL.Constants");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:9573:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    {
                    // InternalDialogParser.g:9573:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    // InternalDialogParser.g:9574:4: () ( (lv_valueTable_26_0= ruleValueTable ) )
                    {
                    // InternalDialogParser.g:9574:4: ()
                    // InternalDialogParser.g:9575:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9581:4: ( (lv_valueTable_26_0= ruleValueTable ) )
                    // InternalDialogParser.g:9582:5: (lv_valueTable_26_0= ruleValueTable )
                    {
                    // InternalDialogParser.g:9582:5: (lv_valueTable_26_0= ruleValueTable )
                    // InternalDialogParser.g:9583:6: lv_valueTable_26_0= ruleValueTable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_valueTable_26_0=ruleValueTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"valueTable",
                      							lv_valueTable_26_0,
                      							"com.ge.research.sadl.SADL.ValueTable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpression"


    // $ANTLR start "norm1_PrimaryExpression"
    // InternalDialogParser.g:9606:1: norm1_PrimaryExpression returns [EObject current=null] : ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) ;
    public final EObject norm1_PrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_maxlen_16_2=null;
        Token lv_value_18_0=null;
        EObject this_SelectExpression_1 = null;

        EObject this_Name_3 = null;

        AntlrDatatypeRuleToken lv_article_5_0 = null;

        AntlrDatatypeRuleToken lv_ordinal_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_arglist_9_0 = null;

        EObject lv_arglist_11_0 = null;

        AntlrDatatypeRuleToken lv_len_14_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_16_1 = null;

        AntlrDatatypeRuleToken lv_value_20_0 = null;

        AntlrDatatypeRuleToken lv_value_22_0 = null;

        AntlrDatatypeRuleToken lv_constant_24_0 = null;

        EObject lv_valueTable_26_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9612:2: ( ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) )
            // InternalDialogParser.g:9613:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            {
            // InternalDialogParser.g:9613:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            int alt227=8;
            alt227 = dfa227.predict(input);
            switch (alt227) {
                case 1 :
                    // InternalDialogParser.g:9614:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis )
                    {
                    // InternalDialogParser.g:9614:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis )
                    // InternalDialogParser.g:9615:4: otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_28);
                    this_SelectExpression_1=norm1_SelectExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SelectExpression_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:9633:3: this_Name_3= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Name_3=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Name_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:9642:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    {
                    // InternalDialogParser.g:9642:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    // InternalDialogParser.g:9643:4: () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    {
                    // InternalDialogParser.g:9643:4: ()
                    // InternalDialogParser.g:9644:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9650:4: ( (lv_article_5_0= ruleAnArticle ) )
                    // InternalDialogParser.g:9651:5: (lv_article_5_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:9651:5: (lv_article_5_0= ruleAnArticle )
                    // InternalDialogParser.g:9652:6: lv_article_5_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_126);
                    lv_article_5_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"article",
                      							lv_article_5_0,
                      							"com.ge.research.sadl.SADL.AnArticle");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:9669:4: ( (lv_ordinal_6_0= ruleOrdinal ) )?
                    int alt221=2;
                    int LA221_0 = input.LA(1);

                    if ( (LA221_0==Seventh||LA221_0==Eighth||LA221_0==Fourth||LA221_0==Second||(LA221_0>=Fifth && LA221_0<=First)||LA221_0==Ninth||(LA221_0>=Other && LA221_0<=Tenth)||LA221_0==Third) ) {
                        alt221=1;
                    }
                    switch (alt221) {
                        case 1 :
                            // InternalDialogParser.g:9670:5: (lv_ordinal_6_0= ruleOrdinal )
                            {
                            // InternalDialogParser.g:9670:5: (lv_ordinal_6_0= ruleOrdinal )
                            // InternalDialogParser.g:9671:6: lv_ordinal_6_0= ruleOrdinal
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FOLLOW_5);
                            lv_ordinal_6_0=ruleOrdinal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              						}
                              						set(
                              							current,
                              							"ordinal",
                              							lv_ordinal_6_0,
                              							"com.ge.research.sadl.SADL.Ordinal");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:9688:4: ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:9689:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:9689:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:9690:6: lv_type_7_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_127);
                    lv_type_7_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_7_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:9707:4: ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    int alt226=3;
                    int LA226_0 = input.LA(1);

                    if ( (LA226_0==LeftSquareBracket) ) {
                        alt226=1;
                    }
                    else if ( (LA226_0==Length) ) {
                        alt226=2;
                    }
                    switch (alt226) {
                        case 1 :
                            // InternalDialogParser.g:9708:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            {
                            // InternalDialogParser.g:9708:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            // InternalDialogParser.g:9709:6: otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket
                            {
                            otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_128); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
                              					
                            }
                            // InternalDialogParser.g:9713:6: ( (lv_arglist_9_0= ruleNestedExpression ) )?
                            int alt222=2;
                            int LA222_0 = input.LA(1);

                            if ( (LA222_0==Another||LA222_0==Element||LA222_0==Sublist||LA222_0==Length||LA222_0==Select||(LA222_0>=Count && LA222_0<=False)||LA222_0==First||(LA222_0>=Index && LA222_0<=Known)||LA222_0==There||LA222_0==Value||LA222_0==None||LA222_0==Last||LA222_0==Only||LA222_0==Some||(LA222_0>=True && LA222_0<=Type)||LA222_0==The||LA222_0==Any||LA222_0==Not||LA222_0==The_1||LA222_0==HyphenMinusHyphenMinus||(LA222_0>=An && LA222_0<=An_1)||LA222_0==ExclamationMark||LA222_0==LeftParenthesis||LA222_0==HyphenMinus||LA222_0==A||LA222_0==LeftSquareBracket||(LA222_0>=A_1 && LA222_0<=LeftCurlyBracket)||LA222_0==RULE_NUMBER||(LA222_0>=RULE_ID && LA222_0<=RULE_STRING)) ) {
                                alt222=1;
                            }
                            switch (alt222) {
                                case 1 :
                                    // InternalDialogParser.g:9714:7: (lv_arglist_9_0= ruleNestedExpression )
                                    {
                                    // InternalDialogParser.g:9714:7: (lv_arglist_9_0= ruleNestedExpression )
                                    // InternalDialogParser.g:9715:8: lv_arglist_9_0= ruleNestedExpression
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_80);
                                    lv_arglist_9_0=ruleNestedExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                      								}
                                      								add(
                                      									current,
                                      									"arglist",
                                      									lv_arglist_9_0,
                                      									"com.ge.research.sadl.SADL.NestedExpression");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:9732:6: (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )*
                            loop223:
                            do {
                                int alt223=2;
                                int LA223_0 = input.LA(1);

                                if ( (LA223_0==Comma) ) {
                                    alt223=1;
                                }


                                switch (alt223) {
                            	case 1 :
                            	    // InternalDialogParser.g:9733:7: otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_83); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:9737:7: ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    // InternalDialogParser.g:9738:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    {
                            	    // InternalDialogParser.g:9738:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    // InternalDialogParser.g:9739:9: lv_arglist_11_0= ruleNestedExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_80);
                            	    lv_arglist_11_0=ruleNestedExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arglist",
                            	      										lv_arglist_11_0,
                            	      										"com.ge.research.sadl.SADL.NestedExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop223;
                                }
                            } while (true);

                            otherlv_12=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:9763:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            {
                            // InternalDialogParser.g:9763:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            // InternalDialogParser.g:9764:6: otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            {
                            otherlv_13=(Token)match(input,Length,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:9768:6: ( (lv_len_14_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:9769:7: (lv_len_14_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:9769:7: (lv_len_14_0= ruleFacetNumber )
                            // InternalDialogParser.g:9770:8: lv_len_14_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_129);
                            lv_len_14_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              								}
                              								set(
                              									current,
                              									"len",
                              									lv_len_14_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:9787:6: ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            int alt225=2;
                            int LA225_0 = input.LA(1);

                            if ( (LA225_0==HyphenMinus) ) {
                                int LA225_1 = input.LA(2);

                                if ( (LA225_1==RULE_NUMBER) ) {
                                    int LA225_3 = input.LA(3);

                                    if ( (synpred32_InternalDialogParser()) ) {
                                        alt225=1;
                                    }
                                }
                                else if ( (LA225_1==HyphenMinus) ) {
                                    int LA225_4 = input.LA(3);

                                    if ( (LA225_4==RULE_NUMBER) ) {
                                        int LA225_6 = input.LA(4);

                                        if ( (synpred32_InternalDialogParser()) ) {
                                            alt225=1;
                                        }
                                    }
                                }
                                else if ( (LA225_1==Asterisk) && (synpred32_InternalDialogParser())) {
                                    alt225=1;
                                }
                            }
                            switch (alt225) {
                                case 1 :
                                    // InternalDialogParser.g:9788:7: ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    {
                                    // InternalDialogParser.g:9789:7: (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    // InternalDialogParser.g:9790:8: otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    {
                                    otherlv_15=(Token)match(input,HyphenMinus,FOLLOW_39); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
                                      							
                                    }
                                    // InternalDialogParser.g:9794:8: ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    // InternalDialogParser.g:9795:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    {
                                    // InternalDialogParser.g:9795:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    // InternalDialogParser.g:9796:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    {
                                    // InternalDialogParser.g:9796:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    int alt224=2;
                                    int LA224_0 = input.LA(1);

                                    if ( (LA224_0==HyphenMinus||LA224_0==RULE_NUMBER) ) {
                                        alt224=1;
                                    }
                                    else if ( (LA224_0==Asterisk) ) {
                                        alt224=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 224, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt224) {
                                        case 1 :
                                            // InternalDialogParser.g:9797:11: lv_maxlen_16_1= ruleFacetNumber
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_2);
                                            lv_maxlen_16_1=ruleFacetNumber();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											set(
                                              												current,
                                              												"maxlen",
                                              												lv_maxlen_16_1,
                                              												"com.ge.research.sadl.SADL.FacetNumber");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalDialogParser.g:9813:11: lv_maxlen_16_2= Asterisk
                                            {
                                            lv_maxlen_16_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											setWithLastConsumed(current, "maxlen", lv_maxlen_16_2, null);
                                              										
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:9832:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:9832:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:9833:4: () ( (lv_value_18_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:9833:4: ()
                    // InternalDialogParser.g:9834:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9840:4: ( (lv_value_18_0= RULE_STRING ) )
                    // InternalDialogParser.g:9841:5: (lv_value_18_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:9841:5: (lv_value_18_0= RULE_STRING )
                    // InternalDialogParser.g:9842:6: lv_value_18_0= RULE_STRING
                    {
                    lv_value_18_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_18_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:9860:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    {
                    // InternalDialogParser.g:9860:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    // InternalDialogParser.g:9861:4: () ( (lv_value_20_0= ruleAnyNumber ) )
                    {
                    // InternalDialogParser.g:9861:4: ()
                    // InternalDialogParser.g:9862:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9868:4: ( (lv_value_20_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:9869:5: (lv_value_20_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:9869:5: (lv_value_20_0= ruleAnyNumber )
                    // InternalDialogParser.g:9870:6: lv_value_20_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_20_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_20_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:9889:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    {
                    // InternalDialogParser.g:9889:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    // InternalDialogParser.g:9890:4: () ( (lv_value_22_0= ruleBooleanValue ) )
                    {
                    // InternalDialogParser.g:9890:4: ()
                    // InternalDialogParser.g:9891:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9897:4: ( (lv_value_22_0= ruleBooleanValue ) )
                    // InternalDialogParser.g:9898:5: (lv_value_22_0= ruleBooleanValue )
                    {
                    // InternalDialogParser.g:9898:5: (lv_value_22_0= ruleBooleanValue )
                    // InternalDialogParser.g:9899:6: lv_value_22_0= ruleBooleanValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_22_0=ruleBooleanValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_22_0,
                      							"com.ge.research.sadl.SADL.BooleanValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:9918:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    {
                    // InternalDialogParser.g:9918:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    // InternalDialogParser.g:9919:4: () ( (lv_constant_24_0= ruleConstants ) )
                    {
                    // InternalDialogParser.g:9919:4: ()
                    // InternalDialogParser.g:9920:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9926:4: ( (lv_constant_24_0= ruleConstants ) )
                    // InternalDialogParser.g:9927:5: (lv_constant_24_0= ruleConstants )
                    {
                    // InternalDialogParser.g:9927:5: (lv_constant_24_0= ruleConstants )
                    // InternalDialogParser.g:9928:6: lv_constant_24_0= ruleConstants
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_24_0=ruleConstants();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"constant",
                      							lv_constant_24_0,
                      							"com.ge.research.sadl.SADL.Constants");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:9947:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    {
                    // InternalDialogParser.g:9947:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    // InternalDialogParser.g:9948:4: () ( (lv_valueTable_26_0= ruleValueTable ) )
                    {
                    // InternalDialogParser.g:9948:4: ()
                    // InternalDialogParser.g:9949:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:9955:4: ( (lv_valueTable_26_0= ruleValueTable ) )
                    // InternalDialogParser.g:9956:5: (lv_valueTable_26_0= ruleValueTable )
                    {
                    // InternalDialogParser.g:9956:5: (lv_valueTable_26_0= ruleValueTable )
                    // InternalDialogParser.g:9957:6: lv_valueTable_26_0= ruleValueTable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_valueTable_26_0=ruleValueTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"valueTable",
                      							lv_valueTable_26_0,
                      							"com.ge.research.sadl.SADL.ValueTable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_PrimaryExpression"


    // $ANTLR start "norm2_PrimaryExpression"
    // InternalDialogParser.g:9980:1: norm2_PrimaryExpression returns [EObject current=null] : ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) ;
    public final EObject norm2_PrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_maxlen_16_2=null;
        Token lv_value_18_0=null;
        EObject this_SelectExpression_1 = null;

        EObject this_Name_3 = null;

        AntlrDatatypeRuleToken lv_article_5_0 = null;

        AntlrDatatypeRuleToken lv_ordinal_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_arglist_9_0 = null;

        EObject lv_arglist_11_0 = null;

        AntlrDatatypeRuleToken lv_len_14_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_16_1 = null;

        AntlrDatatypeRuleToken lv_value_20_0 = null;

        AntlrDatatypeRuleToken lv_value_22_0 = null;

        AntlrDatatypeRuleToken lv_constant_24_0 = null;

        EObject lv_valueTable_26_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9986:2: ( ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) )
            // InternalDialogParser.g:9987:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            {
            // InternalDialogParser.g:9987:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            int alt234=8;
            alt234 = dfa234.predict(input);
            switch (alt234) {
                case 1 :
                    // InternalDialogParser.g:9988:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis )
                    {
                    // InternalDialogParser.g:9988:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis )
                    // InternalDialogParser.g:9989:4: otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_28);
                    this_SelectExpression_1=norm2_SelectExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SelectExpression_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10007:3: this_Name_3= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Name_3=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Name_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:10016:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    {
                    // InternalDialogParser.g:10016:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    // InternalDialogParser.g:10017:4: () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    {
                    // InternalDialogParser.g:10017:4: ()
                    // InternalDialogParser.g:10018:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10024:4: ( (lv_article_5_0= ruleAnArticle ) )
                    // InternalDialogParser.g:10025:5: (lv_article_5_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:10025:5: (lv_article_5_0= ruleAnArticle )
                    // InternalDialogParser.g:10026:6: lv_article_5_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_126);
                    lv_article_5_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"article",
                      							lv_article_5_0,
                      							"com.ge.research.sadl.SADL.AnArticle");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:10043:4: ( (lv_ordinal_6_0= ruleOrdinal ) )?
                    int alt228=2;
                    int LA228_0 = input.LA(1);

                    if ( (LA228_0==Seventh||LA228_0==Eighth||LA228_0==Fourth||LA228_0==Second||(LA228_0>=Fifth && LA228_0<=First)||LA228_0==Ninth||(LA228_0>=Other && LA228_0<=Tenth)||LA228_0==Third) ) {
                        alt228=1;
                    }
                    switch (alt228) {
                        case 1 :
                            // InternalDialogParser.g:10044:5: (lv_ordinal_6_0= ruleOrdinal )
                            {
                            // InternalDialogParser.g:10044:5: (lv_ordinal_6_0= ruleOrdinal )
                            // InternalDialogParser.g:10045:6: lv_ordinal_6_0= ruleOrdinal
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FOLLOW_5);
                            lv_ordinal_6_0=ruleOrdinal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              						}
                              						set(
                              							current,
                              							"ordinal",
                              							lv_ordinal_6_0,
                              							"com.ge.research.sadl.SADL.Ordinal");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:10062:4: ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:10063:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:10063:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:10064:6: lv_type_7_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_127);
                    lv_type_7_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_7_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:10081:4: ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    int alt233=3;
                    int LA233_0 = input.LA(1);

                    if ( (LA233_0==LeftSquareBracket) ) {
                        alt233=1;
                    }
                    else if ( (LA233_0==Length) ) {
                        alt233=2;
                    }
                    switch (alt233) {
                        case 1 :
                            // InternalDialogParser.g:10082:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            {
                            // InternalDialogParser.g:10082:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            // InternalDialogParser.g:10083:6: otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket
                            {
                            otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_128); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
                              					
                            }
                            // InternalDialogParser.g:10087:6: ( (lv_arglist_9_0= ruleNestedExpression ) )?
                            int alt229=2;
                            int LA229_0 = input.LA(1);

                            if ( (LA229_0==Another||LA229_0==Element||LA229_0==Sublist||LA229_0==Length||LA229_0==Select||(LA229_0>=Count && LA229_0<=False)||LA229_0==First||(LA229_0>=Index && LA229_0<=Known)||LA229_0==There||LA229_0==Value||LA229_0==None||LA229_0==Last||LA229_0==Only||LA229_0==Some||(LA229_0>=True && LA229_0<=Type)||LA229_0==The||LA229_0==Any||LA229_0==Not||LA229_0==The_1||LA229_0==HyphenMinusHyphenMinus||(LA229_0>=An && LA229_0<=An_1)||LA229_0==ExclamationMark||LA229_0==LeftParenthesis||LA229_0==HyphenMinus||LA229_0==A||LA229_0==LeftSquareBracket||(LA229_0>=A_1 && LA229_0<=LeftCurlyBracket)||LA229_0==RULE_NUMBER||(LA229_0>=RULE_ID && LA229_0<=RULE_STRING)) ) {
                                alt229=1;
                            }
                            switch (alt229) {
                                case 1 :
                                    // InternalDialogParser.g:10088:7: (lv_arglist_9_0= ruleNestedExpression )
                                    {
                                    // InternalDialogParser.g:10088:7: (lv_arglist_9_0= ruleNestedExpression )
                                    // InternalDialogParser.g:10089:8: lv_arglist_9_0= ruleNestedExpression
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_80);
                                    lv_arglist_9_0=ruleNestedExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                      								}
                                      								add(
                                      									current,
                                      									"arglist",
                                      									lv_arglist_9_0,
                                      									"com.ge.research.sadl.SADL.NestedExpression");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:10106:6: (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )*
                            loop230:
                            do {
                                int alt230=2;
                                int LA230_0 = input.LA(1);

                                if ( (LA230_0==Comma) ) {
                                    alt230=1;
                                }


                                switch (alt230) {
                            	case 1 :
                            	    // InternalDialogParser.g:10107:7: otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_83); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:10111:7: ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    // InternalDialogParser.g:10112:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    {
                            	    // InternalDialogParser.g:10112:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    // InternalDialogParser.g:10113:9: lv_arglist_11_0= ruleNestedExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_80);
                            	    lv_arglist_11_0=ruleNestedExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arglist",
                            	      										lv_arglist_11_0,
                            	      										"com.ge.research.sadl.SADL.NestedExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop230;
                                }
                            } while (true);

                            otherlv_12=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10137:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            {
                            // InternalDialogParser.g:10137:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            // InternalDialogParser.g:10138:6: otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            {
                            otherlv_13=(Token)match(input,Length,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:10142:6: ( (lv_len_14_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:10143:7: (lv_len_14_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:10143:7: (lv_len_14_0= ruleFacetNumber )
                            // InternalDialogParser.g:10144:8: lv_len_14_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_129);
                            lv_len_14_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              								}
                              								set(
                              									current,
                              									"len",
                              									lv_len_14_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:10161:6: ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            int alt232=2;
                            int LA232_0 = input.LA(1);

                            if ( (LA232_0==HyphenMinus) ) {
                                int LA232_1 = input.LA(2);

                                if ( (LA232_1==HyphenMinus) ) {
                                    int LA232_3 = input.LA(3);

                                    if ( (LA232_3==RULE_NUMBER) ) {
                                        int LA232_6 = input.LA(4);

                                        if ( (synpred33_InternalDialogParser()) ) {
                                            alt232=1;
                                        }
                                    }
                                }
                                else if ( (LA232_1==RULE_NUMBER) ) {
                                    int LA232_4 = input.LA(3);

                                    if ( (synpred33_InternalDialogParser()) ) {
                                        alt232=1;
                                    }
                                }
                                else if ( (LA232_1==Asterisk) && (synpred33_InternalDialogParser())) {
                                    alt232=1;
                                }
                            }
                            switch (alt232) {
                                case 1 :
                                    // InternalDialogParser.g:10162:7: ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    {
                                    // InternalDialogParser.g:10163:7: (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    // InternalDialogParser.g:10164:8: otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    {
                                    otherlv_15=(Token)match(input,HyphenMinus,FOLLOW_39); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
                                      							
                                    }
                                    // InternalDialogParser.g:10168:8: ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    // InternalDialogParser.g:10169:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    {
                                    // InternalDialogParser.g:10169:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    // InternalDialogParser.g:10170:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    {
                                    // InternalDialogParser.g:10170:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    int alt231=2;
                                    int LA231_0 = input.LA(1);

                                    if ( (LA231_0==HyphenMinus||LA231_0==RULE_NUMBER) ) {
                                        alt231=1;
                                    }
                                    else if ( (LA231_0==Asterisk) ) {
                                        alt231=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 231, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt231) {
                                        case 1 :
                                            // InternalDialogParser.g:10171:11: lv_maxlen_16_1= ruleFacetNumber
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_2);
                                            lv_maxlen_16_1=ruleFacetNumber();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											set(
                                              												current,
                                              												"maxlen",
                                              												lv_maxlen_16_1,
                                              												"com.ge.research.sadl.SADL.FacetNumber");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalDialogParser.g:10187:11: lv_maxlen_16_2= Asterisk
                                            {
                                            lv_maxlen_16_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											setWithLastConsumed(current, "maxlen", lv_maxlen_16_2, null);
                                              										
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:10206:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:10206:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:10207:4: () ( (lv_value_18_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:10207:4: ()
                    // InternalDialogParser.g:10208:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10214:4: ( (lv_value_18_0= RULE_STRING ) )
                    // InternalDialogParser.g:10215:5: (lv_value_18_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:10215:5: (lv_value_18_0= RULE_STRING )
                    // InternalDialogParser.g:10216:6: lv_value_18_0= RULE_STRING
                    {
                    lv_value_18_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_18_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:10234:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    {
                    // InternalDialogParser.g:10234:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    // InternalDialogParser.g:10235:4: () ( (lv_value_20_0= ruleAnyNumber ) )
                    {
                    // InternalDialogParser.g:10235:4: ()
                    // InternalDialogParser.g:10236:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10242:4: ( (lv_value_20_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:10243:5: (lv_value_20_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:10243:5: (lv_value_20_0= ruleAnyNumber )
                    // InternalDialogParser.g:10244:6: lv_value_20_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_20_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_20_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:10263:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    {
                    // InternalDialogParser.g:10263:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    // InternalDialogParser.g:10264:4: () ( (lv_value_22_0= ruleBooleanValue ) )
                    {
                    // InternalDialogParser.g:10264:4: ()
                    // InternalDialogParser.g:10265:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10271:4: ( (lv_value_22_0= ruleBooleanValue ) )
                    // InternalDialogParser.g:10272:5: (lv_value_22_0= ruleBooleanValue )
                    {
                    // InternalDialogParser.g:10272:5: (lv_value_22_0= ruleBooleanValue )
                    // InternalDialogParser.g:10273:6: lv_value_22_0= ruleBooleanValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_22_0=ruleBooleanValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_22_0,
                      							"com.ge.research.sadl.SADL.BooleanValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:10292:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    {
                    // InternalDialogParser.g:10292:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    // InternalDialogParser.g:10293:4: () ( (lv_constant_24_0= ruleConstants ) )
                    {
                    // InternalDialogParser.g:10293:4: ()
                    // InternalDialogParser.g:10294:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10300:4: ( (lv_constant_24_0= ruleConstants ) )
                    // InternalDialogParser.g:10301:5: (lv_constant_24_0= ruleConstants )
                    {
                    // InternalDialogParser.g:10301:5: (lv_constant_24_0= ruleConstants )
                    // InternalDialogParser.g:10302:6: lv_constant_24_0= ruleConstants
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_24_0=ruleConstants();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"constant",
                      							lv_constant_24_0,
                      							"com.ge.research.sadl.SADL.Constants");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:10321:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    {
                    // InternalDialogParser.g:10321:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    // InternalDialogParser.g:10322:4: () ( (lv_valueTable_26_0= ruleValueTable ) )
                    {
                    // InternalDialogParser.g:10322:4: ()
                    // InternalDialogParser.g:10323:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10329:4: ( (lv_valueTable_26_0= ruleValueTable ) )
                    // InternalDialogParser.g:10330:5: (lv_valueTable_26_0= ruleValueTable )
                    {
                    // InternalDialogParser.g:10330:5: (lv_valueTable_26_0= ruleValueTable )
                    // InternalDialogParser.g:10331:6: lv_valueTable_26_0= ruleValueTable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_valueTable_26_0=ruleValueTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"valueTable",
                      							lv_valueTable_26_0,
                      							"com.ge.research.sadl.SADL.ValueTable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_PrimaryExpression"


    // $ANTLR start "norm3_PrimaryExpression"
    // InternalDialogParser.g:10354:1: norm3_PrimaryExpression returns [EObject current=null] : ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) ;
    public final EObject norm3_PrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_maxlen_16_2=null;
        Token lv_value_18_0=null;
        EObject this_SelectExpression_1 = null;

        EObject this_Name_3 = null;

        AntlrDatatypeRuleToken lv_article_5_0 = null;

        AntlrDatatypeRuleToken lv_ordinal_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_arglist_9_0 = null;

        EObject lv_arglist_11_0 = null;

        AntlrDatatypeRuleToken lv_len_14_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_16_1 = null;

        AntlrDatatypeRuleToken lv_value_20_0 = null;

        AntlrDatatypeRuleToken lv_value_22_0 = null;

        AntlrDatatypeRuleToken lv_constant_24_0 = null;

        EObject lv_valueTable_26_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10360:2: ( ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) )
            // InternalDialogParser.g:10361:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            {
            // InternalDialogParser.g:10361:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            int alt241=8;
            alt241 = dfa241.predict(input);
            switch (alt241) {
                case 1 :
                    // InternalDialogParser.g:10362:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis )
                    {
                    // InternalDialogParser.g:10362:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis )
                    // InternalDialogParser.g:10363:4: otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_28);
                    this_SelectExpression_1=norm3_SelectExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SelectExpression_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10381:3: this_Name_3= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Name_3=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Name_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:10390:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    {
                    // InternalDialogParser.g:10390:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    // InternalDialogParser.g:10391:4: () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    {
                    // InternalDialogParser.g:10391:4: ()
                    // InternalDialogParser.g:10392:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10398:4: ( (lv_article_5_0= ruleAnArticle ) )
                    // InternalDialogParser.g:10399:5: (lv_article_5_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:10399:5: (lv_article_5_0= ruleAnArticle )
                    // InternalDialogParser.g:10400:6: lv_article_5_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_126);
                    lv_article_5_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"article",
                      							lv_article_5_0,
                      							"com.ge.research.sadl.SADL.AnArticle");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:10417:4: ( (lv_ordinal_6_0= ruleOrdinal ) )?
                    int alt235=2;
                    int LA235_0 = input.LA(1);

                    if ( (LA235_0==Seventh||LA235_0==Eighth||LA235_0==Fourth||LA235_0==Second||(LA235_0>=Fifth && LA235_0<=First)||LA235_0==Ninth||(LA235_0>=Other && LA235_0<=Tenth)||LA235_0==Third) ) {
                        alt235=1;
                    }
                    switch (alt235) {
                        case 1 :
                            // InternalDialogParser.g:10418:5: (lv_ordinal_6_0= ruleOrdinal )
                            {
                            // InternalDialogParser.g:10418:5: (lv_ordinal_6_0= ruleOrdinal )
                            // InternalDialogParser.g:10419:6: lv_ordinal_6_0= ruleOrdinal
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FOLLOW_5);
                            lv_ordinal_6_0=ruleOrdinal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              						}
                              						set(
                              							current,
                              							"ordinal",
                              							lv_ordinal_6_0,
                              							"com.ge.research.sadl.SADL.Ordinal");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:10436:4: ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:10437:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:10437:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:10438:6: lv_type_7_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_127);
                    lv_type_7_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_7_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:10455:4: ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    int alt240=3;
                    int LA240_0 = input.LA(1);

                    if ( (LA240_0==LeftSquareBracket) ) {
                        alt240=1;
                    }
                    else if ( (LA240_0==Length) ) {
                        alt240=2;
                    }
                    switch (alt240) {
                        case 1 :
                            // InternalDialogParser.g:10456:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            {
                            // InternalDialogParser.g:10456:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            // InternalDialogParser.g:10457:6: otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket
                            {
                            otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_128); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
                              					
                            }
                            // InternalDialogParser.g:10461:6: ( (lv_arglist_9_0= ruleNestedExpression ) )?
                            int alt236=2;
                            int LA236_0 = input.LA(1);

                            if ( (LA236_0==Another||LA236_0==Element||LA236_0==Sublist||LA236_0==Length||LA236_0==Select||(LA236_0>=Count && LA236_0<=False)||LA236_0==First||(LA236_0>=Index && LA236_0<=Known)||LA236_0==There||LA236_0==Value||LA236_0==None||LA236_0==Last||LA236_0==Only||LA236_0==Some||(LA236_0>=True && LA236_0<=Type)||LA236_0==The||LA236_0==Any||LA236_0==Not||LA236_0==The_1||LA236_0==HyphenMinusHyphenMinus||(LA236_0>=An && LA236_0<=An_1)||LA236_0==ExclamationMark||LA236_0==LeftParenthesis||LA236_0==HyphenMinus||LA236_0==A||LA236_0==LeftSquareBracket||(LA236_0>=A_1 && LA236_0<=LeftCurlyBracket)||LA236_0==RULE_NUMBER||(LA236_0>=RULE_ID && LA236_0<=RULE_STRING)) ) {
                                alt236=1;
                            }
                            switch (alt236) {
                                case 1 :
                                    // InternalDialogParser.g:10462:7: (lv_arglist_9_0= ruleNestedExpression )
                                    {
                                    // InternalDialogParser.g:10462:7: (lv_arglist_9_0= ruleNestedExpression )
                                    // InternalDialogParser.g:10463:8: lv_arglist_9_0= ruleNestedExpression
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_80);
                                    lv_arglist_9_0=ruleNestedExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                      								}
                                      								add(
                                      									current,
                                      									"arglist",
                                      									lv_arglist_9_0,
                                      									"com.ge.research.sadl.SADL.NestedExpression");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:10480:6: (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )*
                            loop237:
                            do {
                                int alt237=2;
                                int LA237_0 = input.LA(1);

                                if ( (LA237_0==Comma) ) {
                                    alt237=1;
                                }


                                switch (alt237) {
                            	case 1 :
                            	    // InternalDialogParser.g:10481:7: otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_83); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:10485:7: ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    // InternalDialogParser.g:10486:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    {
                            	    // InternalDialogParser.g:10486:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    // InternalDialogParser.g:10487:9: lv_arglist_11_0= ruleNestedExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_80);
                            	    lv_arglist_11_0=ruleNestedExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arglist",
                            	      										lv_arglist_11_0,
                            	      										"com.ge.research.sadl.SADL.NestedExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop237;
                                }
                            } while (true);

                            otherlv_12=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10511:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            {
                            // InternalDialogParser.g:10511:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            // InternalDialogParser.g:10512:6: otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            {
                            otherlv_13=(Token)match(input,Length,FOLLOW_37); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:10516:6: ( (lv_len_14_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:10517:7: (lv_len_14_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:10517:7: (lv_len_14_0= ruleFacetNumber )
                            // InternalDialogParser.g:10518:8: lv_len_14_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_129);
                            lv_len_14_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              								}
                              								set(
                              									current,
                              									"len",
                              									lv_len_14_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:10535:6: ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            int alt239=2;
                            int LA239_0 = input.LA(1);

                            if ( (LA239_0==HyphenMinus) ) {
                                int LA239_1 = input.LA(2);

                                if ( (LA239_1==HyphenMinus) ) {
                                    int LA239_3 = input.LA(3);

                                    if ( (LA239_3==RULE_NUMBER) ) {
                                        int LA239_6 = input.LA(4);

                                        if ( (synpred34_InternalDialogParser()) ) {
                                            alt239=1;
                                        }
                                    }
                                }
                                else if ( (LA239_1==RULE_NUMBER) ) {
                                    int LA239_4 = input.LA(3);

                                    if ( (synpred34_InternalDialogParser()) ) {
                                        alt239=1;
                                    }
                                }
                                else if ( (LA239_1==Asterisk) && (synpred34_InternalDialogParser())) {
                                    alt239=1;
                                }
                            }
                            switch (alt239) {
                                case 1 :
                                    // InternalDialogParser.g:10536:7: ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    {
                                    // InternalDialogParser.g:10537:7: (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    // InternalDialogParser.g:10538:8: otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    {
                                    otherlv_15=(Token)match(input,HyphenMinus,FOLLOW_39); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
                                      							
                                    }
                                    // InternalDialogParser.g:10542:8: ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    // InternalDialogParser.g:10543:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    {
                                    // InternalDialogParser.g:10543:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    // InternalDialogParser.g:10544:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    {
                                    // InternalDialogParser.g:10544:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    int alt238=2;
                                    int LA238_0 = input.LA(1);

                                    if ( (LA238_0==HyphenMinus||LA238_0==RULE_NUMBER) ) {
                                        alt238=1;
                                    }
                                    else if ( (LA238_0==Asterisk) ) {
                                        alt238=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 238, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt238) {
                                        case 1 :
                                            // InternalDialogParser.g:10545:11: lv_maxlen_16_1= ruleFacetNumber
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_2);
                                            lv_maxlen_16_1=ruleFacetNumber();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											set(
                                              												current,
                                              												"maxlen",
                                              												lv_maxlen_16_1,
                                              												"com.ge.research.sadl.SADL.FacetNumber");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalDialogParser.g:10561:11: lv_maxlen_16_2= Asterisk
                                            {
                                            lv_maxlen_16_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											setWithLastConsumed(current, "maxlen", lv_maxlen_16_2, null);
                                              										
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:10580:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:10580:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:10581:4: () ( (lv_value_18_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:10581:4: ()
                    // InternalDialogParser.g:10582:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10588:4: ( (lv_value_18_0= RULE_STRING ) )
                    // InternalDialogParser.g:10589:5: (lv_value_18_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:10589:5: (lv_value_18_0= RULE_STRING )
                    // InternalDialogParser.g:10590:6: lv_value_18_0= RULE_STRING
                    {
                    lv_value_18_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_18_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:10608:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    {
                    // InternalDialogParser.g:10608:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    // InternalDialogParser.g:10609:4: () ( (lv_value_20_0= ruleAnyNumber ) )
                    {
                    // InternalDialogParser.g:10609:4: ()
                    // InternalDialogParser.g:10610:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10616:4: ( (lv_value_20_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:10617:5: (lv_value_20_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:10617:5: (lv_value_20_0= ruleAnyNumber )
                    // InternalDialogParser.g:10618:6: lv_value_20_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_20_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_20_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:10637:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    {
                    // InternalDialogParser.g:10637:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    // InternalDialogParser.g:10638:4: () ( (lv_value_22_0= ruleBooleanValue ) )
                    {
                    // InternalDialogParser.g:10638:4: ()
                    // InternalDialogParser.g:10639:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10645:4: ( (lv_value_22_0= ruleBooleanValue ) )
                    // InternalDialogParser.g:10646:5: (lv_value_22_0= ruleBooleanValue )
                    {
                    // InternalDialogParser.g:10646:5: (lv_value_22_0= ruleBooleanValue )
                    // InternalDialogParser.g:10647:6: lv_value_22_0= ruleBooleanValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_22_0=ruleBooleanValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_22_0,
                      							"com.ge.research.sadl.SADL.BooleanValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:10666:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    {
                    // InternalDialogParser.g:10666:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    // InternalDialogParser.g:10667:4: () ( (lv_constant_24_0= ruleConstants ) )
                    {
                    // InternalDialogParser.g:10667:4: ()
                    // InternalDialogParser.g:10668:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10674:4: ( (lv_constant_24_0= ruleConstants ) )
                    // InternalDialogParser.g:10675:5: (lv_constant_24_0= ruleConstants )
                    {
                    // InternalDialogParser.g:10675:5: (lv_constant_24_0= ruleConstants )
                    // InternalDialogParser.g:10676:6: lv_constant_24_0= ruleConstants
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_24_0=ruleConstants();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"constant",
                      							lv_constant_24_0,
                      							"com.ge.research.sadl.SADL.Constants");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:10695:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    {
                    // InternalDialogParser.g:10695:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    // InternalDialogParser.g:10696:4: () ( (lv_valueTable_26_0= ruleValueTable ) )
                    {
                    // InternalDialogParser.g:10696:4: ()
                    // InternalDialogParser.g:10697:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10703:4: ( (lv_valueTable_26_0= ruleValueTable ) )
                    // InternalDialogParser.g:10704:5: (lv_valueTable_26_0= ruleValueTable )
                    {
                    // InternalDialogParser.g:10704:5: (lv_valueTable_26_0= ruleValueTable )
                    // InternalDialogParser.g:10705:6: lv_valueTable_26_0= ruleValueTable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_valueTable_26_0=ruleValueTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"valueTable",
                      							lv_valueTable_26_0,
                      							"com.ge.research.sadl.SADL.ValueTable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_PrimaryExpression"


    // $ANTLR start "entryRuleName"
    // InternalDialogParser.g:10727:1: entryRuleName returns [EObject current=null] : iv_ruleName= ruleName EOF ;
    public final EObject entryRuleName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleName = null;


        try {
            // InternalDialogParser.g:10727:45: (iv_ruleName= ruleName EOF )
            // InternalDialogParser.g:10728:2: iv_ruleName= ruleName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleName=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleName"


    // $ANTLR start "ruleName"
    // InternalDialogParser.g:10734:1: ruleName returns [EObject current=null] : ( () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )? ) ;
    public final EObject ruleName() throws RecognitionException {
        EObject current = null;

        Token lv_function_2_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_arglist_3_0 = null;

        EObject lv_arglist_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10740:2: ( ( () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )? ) )
            // InternalDialogParser.g:10741:2: ( () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )? )
            {
            // InternalDialogParser.g:10741:2: ( () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )? )
            // InternalDialogParser.g:10742:3: () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )?
            {
            // InternalDialogParser.g:10742:3: ()
            // InternalDialogParser.g:10743:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNameAccess().getNameAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:10749:3: ( ( ruleQNAME ) )
            // InternalDialogParser.g:10750:4: ( ruleQNAME )
            {
            // InternalDialogParser.g:10750:4: ( ruleQNAME )
            // InternalDialogParser.g:10751:5: ruleQNAME
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNameRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNameAccess().getNameSadlResourceCrossReference_1_0());
              				
            }
            pushFollow(FOLLOW_130);
            ruleQNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:10765:3: ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )?
            int alt244=2;
            int LA244_0 = input.LA(1);

            if ( (LA244_0==LeftParenthesis) && (synpred35_InternalDialogParser())) {
                alt244=1;
            }
            switch (alt244) {
                case 1 :
                    // InternalDialogParser.g:10766:4: ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis )
                    {
                    // InternalDialogParser.g:10767:4: ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis )
                    // InternalDialogParser.g:10768:5: ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis
                    {
                    // InternalDialogParser.g:10768:5: ( (lv_function_2_0= LeftParenthesis ) )
                    // InternalDialogParser.g:10769:6: (lv_function_2_0= LeftParenthesis )
                    {
                    // InternalDialogParser.g:10769:6: (lv_function_2_0= LeftParenthesis )
                    // InternalDialogParser.g:10770:7: lv_function_2_0= LeftParenthesis
                    {
                    lv_function_2_0=(Token)match(input,LeftParenthesis,FOLLOW_131); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_function_2_0, grammarAccess.getNameAccess().getFunctionLeftParenthesisKeyword_2_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNameRule());
                      							}
                      							setWithLastConsumed(current, "function", true, "(");
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:10782:5: ( (lv_arglist_3_0= ruleNestedExpression ) )?
                    int alt242=2;
                    int LA242_0 = input.LA(1);

                    if ( (LA242_0==Another||LA242_0==Element||LA242_0==Sublist||LA242_0==Length||LA242_0==Select||(LA242_0>=Count && LA242_0<=False)||LA242_0==First||(LA242_0>=Index && LA242_0<=Known)||LA242_0==There||LA242_0==Value||LA242_0==None||LA242_0==Last||LA242_0==Only||LA242_0==Some||(LA242_0>=True && LA242_0<=Type)||LA242_0==The||LA242_0==Any||LA242_0==Not||LA242_0==The_1||LA242_0==HyphenMinusHyphenMinus||(LA242_0>=An && LA242_0<=An_1)||LA242_0==ExclamationMark||LA242_0==LeftParenthesis||LA242_0==HyphenMinus||LA242_0==A||LA242_0==LeftSquareBracket||(LA242_0>=A_1 && LA242_0<=LeftCurlyBracket)||LA242_0==RULE_NUMBER||(LA242_0>=RULE_ID && LA242_0<=RULE_STRING)) ) {
                        alt242=1;
                    }
                    switch (alt242) {
                        case 1 :
                            // InternalDialogParser.g:10783:6: (lv_arglist_3_0= ruleNestedExpression )
                            {
                            // InternalDialogParser.g:10783:6: (lv_arglist_3_0= ruleNestedExpression )
                            // InternalDialogParser.g:10784:7: lv_arglist_3_0= ruleNestedExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getNameAccess().getArglistNestedExpressionParserRuleCall_2_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_16);
                            lv_arglist_3_0=ruleNestedExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getNameRule());
                              							}
                              							add(
                              								current,
                              								"arglist",
                              								lv_arglist_3_0,
                              								"com.ge.research.sadl.SADL.NestedExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:10801:5: (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )*
                    loop243:
                    do {
                        int alt243=2;
                        int LA243_0 = input.LA(1);

                        if ( (LA243_0==Comma) ) {
                            alt243=1;
                        }


                        switch (alt243) {
                    	case 1 :
                    	    // InternalDialogParser.g:10802:6: otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_83); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getNameAccess().getCommaKeyword_2_0_2_0());
                    	      					
                    	    }
                    	    // InternalDialogParser.g:10806:6: ( (lv_arglist_5_0= ruleNestedExpression ) )
                    	    // InternalDialogParser.g:10807:7: (lv_arglist_5_0= ruleNestedExpression )
                    	    {
                    	    // InternalDialogParser.g:10807:7: (lv_arglist_5_0= ruleNestedExpression )
                    	    // InternalDialogParser.g:10808:8: lv_arglist_5_0= ruleNestedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getNameAccess().getArglistNestedExpressionParserRuleCall_2_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_arglist_5_0=ruleNestedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getNameRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"arglist",
                    	      									lv_arglist_5_0,
                    	      									"com.ge.research.sadl.SADL.NestedExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop243;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getNameAccess().getRightParenthesisKeyword_2_0_3());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleName"


    // $ANTLR start "entryRuleValueTable"
    // InternalDialogParser.g:10836:1: entryRuleValueTable returns [EObject current=null] : iv_ruleValueTable= ruleValueTable EOF ;
    public final EObject entryRuleValueTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueTable = null;


        try {
            // InternalDialogParser.g:10836:51: (iv_ruleValueTable= ruleValueTable EOF )
            // InternalDialogParser.g:10837:2: iv_ruleValueTable= ruleValueTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueTable=ruleValueTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueTable"


    // $ANTLR start "ruleValueTable"
    // InternalDialogParser.g:10843:1: ruleValueTable returns [EObject current=null] : ( (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket ) | (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket ) ) ;
    public final EObject ruleValueTable() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_row_1_0 = null;

        EObject lv_rows_5_0 = null;

        EObject lv_rows_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10849:2: ( ( (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket ) | (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket ) ) )
            // InternalDialogParser.g:10850:2: ( (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket ) | (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket ) )
            {
            // InternalDialogParser.g:10850:2: ( (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket ) | (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket ) )
            int alt247=2;
            int LA247_0 = input.LA(1);

            if ( (LA247_0==LeftSquareBracket) ) {
                alt247=1;
            }
            else if ( (LA247_0==LeftCurlyBracket) ) {
                alt247=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 247, 0, input);

                throw nvae;
            }
            switch (alt247) {
                case 1 :
                    // InternalDialogParser.g:10851:3: (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket )
                    {
                    // InternalDialogParser.g:10851:3: (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket )
                    // InternalDialogParser.g:10852:4: otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket
                    {
                    otherlv_0=(Token)match(input,LeftSquareBracket,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_0_0());
                      			
                    }
                    // InternalDialogParser.g:10856:4: ( (lv_row_1_0= ruleValueRow ) )
                    // InternalDialogParser.g:10857:5: (lv_row_1_0= ruleValueRow )
                    {
                    // InternalDialogParser.g:10857:5: (lv_row_1_0= ruleValueRow )
                    // InternalDialogParser.g:10858:6: lv_row_1_0= ruleValueRow
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValueTableAccess().getRowValueRowParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_132);
                    lv_row_1_0=ruleValueRow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValueTableRule());
                      						}
                      						set(
                      							current,
                      							"row",
                      							lv_row_1_0,
                      							"com.ge.research.sadl.SADL.ValueRow");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10881:3: (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:10881:3: (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket )
                    // InternalDialogParser.g:10882:4: otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket
                    {
                    otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_133); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getValueTableAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    otherlv_4=(Token)match(input,LeftSquareBracket,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:10890:4: ( (lv_rows_5_0= ruleValueRow ) )
                    // InternalDialogParser.g:10891:5: (lv_rows_5_0= ruleValueRow )
                    {
                    // InternalDialogParser.g:10891:5: (lv_rows_5_0= ruleValueRow )
                    // InternalDialogParser.g:10892:6: lv_rows_5_0= ruleValueRow
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValueTableAccess().getRowsValueRowParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_132);
                    lv_rows_5_0=ruleValueRow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValueTableRule());
                      						}
                      						add(
                      							current,
                      							"rows",
                      							lv_rows_5_0,
                      							"com.ge.research.sadl.SADL.ValueRow");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,RightSquareBracket,FOLLOW_134); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_1_3());
                      			
                    }
                    // InternalDialogParser.g:10913:4: ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )*
                    loop246:
                    do {
                        int alt246=2;
                        int LA246_0 = input.LA(1);

                        if ( (LA246_0==Comma||LA246_0==LeftSquareBracket) ) {
                            alt246=1;
                        }


                        switch (alt246) {
                    	case 1 :
                    	    // InternalDialogParser.g:10914:5: (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket
                    	    {
                    	    // InternalDialogParser.g:10914:5: (otherlv_7= Comma )?
                    	    int alt245=2;
                    	    int LA245_0 = input.LA(1);

                    	    if ( (LA245_0==Comma) ) {
                    	        alt245=1;
                    	    }
                    	    switch (alt245) {
                    	        case 1 :
                    	            // InternalDialogParser.g:10915:6: otherlv_7= Comma
                    	            {
                    	            otherlv_7=(Token)match(input,Comma,FOLLOW_133); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_7, grammarAccess.getValueTableAccess().getCommaKeyword_1_4_0());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_83); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_1_4_1());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:10924:5: ( (lv_rows_9_0= ruleValueRow ) )
                    	    // InternalDialogParser.g:10925:6: (lv_rows_9_0= ruleValueRow )
                    	    {
                    	    // InternalDialogParser.g:10925:6: (lv_rows_9_0= ruleValueRow )
                    	    // InternalDialogParser.g:10926:7: lv_rows_9_0= ruleValueRow
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getValueTableAccess().getRowsValueRowParserRuleCall_1_4_2_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_132);
                    	    lv_rows_9_0=ruleValueRow();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getValueTableRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"rows",
                    	      								lv_rows_9_0,
                    	      								"com.ge.research.sadl.SADL.ValueRow");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_10=(Token)match(input,RightSquareBracket,FOLLOW_134); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_1_4_3());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop246;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getValueTableAccess().getRightCurlyBracketKeyword_1_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueTable"


    // $ANTLR start "entryRuleBooleanValue"
    // InternalDialogParser.g:10957:1: entryRuleBooleanValue returns [String current=null] : iv_ruleBooleanValue= ruleBooleanValue EOF ;
    public final String entryRuleBooleanValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBooleanValue = null;


        try {
            // InternalDialogParser.g:10957:52: (iv_ruleBooleanValue= ruleBooleanValue EOF )
            // InternalDialogParser.g:10958:2: iv_ruleBooleanValue= ruleBooleanValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanValue=ruleBooleanValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanValue"


    // $ANTLR start "ruleBooleanValue"
    // InternalDialogParser.g:10964:1: ruleBooleanValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= True | kw= False ) ;
    public final AntlrDatatypeRuleToken ruleBooleanValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:10970:2: ( (kw= True | kw= False ) )
            // InternalDialogParser.g:10971:2: (kw= True | kw= False )
            {
            // InternalDialogParser.g:10971:2: (kw= True | kw= False )
            int alt248=2;
            int LA248_0 = input.LA(1);

            if ( (LA248_0==True) ) {
                alt248=1;
            }
            else if ( (LA248_0==False) ) {
                alt248=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 248, 0, input);

                throw nvae;
            }
            switch (alt248) {
                case 1 :
                    // InternalDialogParser.g:10972:3: kw= True
                    {
                    kw=(Token)match(input,True,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getTrueKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10978:3: kw= False
                    {
                    kw=(Token)match(input,False,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getFalseKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanValue"


    // $ANTLR start "entryRuleConstants"
    // InternalDialogParser.g:10987:1: entryRuleConstants returns [String current=null] : iv_ruleConstants= ruleConstants EOF ;
    public final String entryRuleConstants() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleConstants = null;


        try {
            // InternalDialogParser.g:10987:49: (iv_ruleConstants= ruleConstants EOF )
            // InternalDialogParser.g:10988:2: iv_ruleConstants= ruleConstants EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstants=ruleConstants();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstants.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstants"


    // $ANTLR start "ruleConstants"
    // InternalDialogParser.g:10994:1: ruleConstants returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value ) ;
    public final AntlrDatatypeRuleToken ruleConstants() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DefiniteArticle_7 = null;

        AntlrDatatypeRuleToken this_DefiniteArticle_10 = null;

        AntlrDatatypeRuleToken this_AnArticle_14 = null;

        AntlrDatatypeRuleToken this_Ordinal_15 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:11000:2: ( (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value ) )
            // InternalDialogParser.g:11001:2: (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value )
            {
            // InternalDialogParser.g:11001:2: (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value )
            int alt254=11;
            alt254 = dfa254.predict(input);
            switch (alt254) {
                case 1 :
                    // InternalDialogParser.g:11002:3: kw= PI
                    {
                    kw=(Token)match(input,PI,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getPIKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:11008:3: kw= Known
                    {
                    kw=(Token)match(input,Known,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getKnownKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:11014:3: kw= E_1
                    {
                    kw=(Token)match(input,E_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getEKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:11020:3: kw= HyphenMinusHyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getHyphenMinusHyphenMinusKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:11026:3: kw= None
                    {
                    kw=(Token)match(input,None,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getNoneKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:11032:3: ( (kw= A_1 )? kw= Type )
                    {
                    // InternalDialogParser.g:11032:3: ( (kw= A_1 )? kw= Type )
                    // InternalDialogParser.g:11033:4: (kw= A_1 )? kw= Type
                    {
                    // InternalDialogParser.g:11033:4: (kw= A_1 )?
                    int alt249=2;
                    int LA249_0 = input.LA(1);

                    if ( (LA249_0==A_1) ) {
                        alt249=1;
                    }
                    switch (alt249) {
                        case 1 :
                            // InternalDialogParser.g:11034:5: kw= A_1
                            {
                            kw=(Token)match(input,A_1,FOLLOW_53); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getConstantsAccess().getAKeyword_5_0());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,Type,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getConstantsAccess().getTypeKeyword_5_1());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:11047:3: ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length )
                    {
                    // InternalDialogParser.g:11047:3: ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length )
                    // InternalDialogParser.g:11048:4: (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length
                    {
                    // InternalDialogParser.g:11048:4: (this_DefiniteArticle_7= ruleDefiniteArticle )?
                    int alt250=2;
                    int LA250_0 = input.LA(1);

                    if ( (LA250_0==The||LA250_0==The_1) ) {
                        alt250=1;
                    }
                    switch (alt250) {
                        case 1 :
                            // InternalDialogParser.g:11049:5: this_DefiniteArticle_7= ruleDefiniteArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getConstantsAccess().getDefiniteArticleParserRuleCall_6_0());
                              				
                            }
                            pushFollow(FOLLOW_135);
                            this_DefiniteArticle_7=ruleDefiniteArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DefiniteArticle_7);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,Length,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getConstantsAccess().getLengthKeyword_6_1());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:11067:3: kw= Count
                    {
                    kw=(Token)match(input,Count,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getCountKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalDialogParser.g:11073:3: ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index )
                    {
                    // InternalDialogParser.g:11073:3: ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index )
                    // InternalDialogParser.g:11074:4: (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index
                    {
                    // InternalDialogParser.g:11074:4: (this_DefiniteArticle_10= ruleDefiniteArticle )?
                    int alt251=2;
                    int LA251_0 = input.LA(1);

                    if ( (LA251_0==The||LA251_0==The_1) ) {
                        alt251=1;
                    }
                    switch (alt251) {
                        case 1 :
                            // InternalDialogParser.g:11075:5: this_DefiniteArticle_10= ruleDefiniteArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getConstantsAccess().getDefiniteArticleParserRuleCall_8_0());
                              				
                            }
                            pushFollow(FOLLOW_136);
                            this_DefiniteArticle_10=ruleDefiniteArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DefiniteArticle_10);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,Index,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getConstantsAccess().getIndexKeyword_8_1());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalDialogParser.g:11093:3: ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element )
                    {
                    // InternalDialogParser.g:11093:3: ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element )
                    // InternalDialogParser.g:11094:4: (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element
                    {
                    // InternalDialogParser.g:11094:4: (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) )
                    int alt253=3;
                    switch ( input.LA(1) ) {
                    case First:
                        {
                        alt253=1;
                        }
                        break;
                    case Last:
                        {
                        alt253=2;
                        }
                        break;
                    case Another:
                    case Some:
                    case The:
                    case Any:
                    case The_1:
                    case An:
                    case An_1:
                    case A:
                    case A_1:
                        {
                        alt253=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 253, 0, input);

                        throw nvae;
                    }

                    switch (alt253) {
                        case 1 :
                            // InternalDialogParser.g:11095:5: kw= First
                            {
                            kw=(Token)match(input,First,FOLLOW_137); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getConstantsAccess().getFirstKeyword_9_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:11101:5: kw= Last
                            {
                            kw=(Token)match(input,Last,FOLLOW_137); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getConstantsAccess().getLastKeyword_9_0_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:11107:5: (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? )
                            {
                            // InternalDialogParser.g:11107:5: (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? )
                            // InternalDialogParser.g:11108:6: this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )?
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getConstantsAccess().getAnArticleParserRuleCall_9_0_2_0());
                              					
                            }
                            pushFollow(FOLLOW_138);
                            this_AnArticle_14=ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current.merge(this_AnArticle_14);
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						afterParserOrEnumRuleCall();
                              					
                            }
                            // InternalDialogParser.g:11118:6: (this_Ordinal_15= ruleOrdinal )?
                            int alt252=2;
                            int LA252_0 = input.LA(1);

                            if ( (LA252_0==Seventh||LA252_0==Eighth||LA252_0==Fourth||LA252_0==Second||(LA252_0>=Fifth && LA252_0<=First)||LA252_0==Ninth||(LA252_0>=Other && LA252_0<=Tenth)||LA252_0==Third) ) {
                                alt252=1;
                            }
                            switch (alt252) {
                                case 1 :
                                    // InternalDialogParser.g:11119:7: this_Ordinal_15= ruleOrdinal
                                    {
                                    if ( state.backtracking==0 ) {

                                      							newCompositeNode(grammarAccess.getConstantsAccess().getOrdinalParserRuleCall_9_0_2_1());
                                      						
                                    }
                                    pushFollow(FOLLOW_137);
                                    this_Ordinal_15=ruleOrdinal();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							current.merge(this_Ordinal_15);
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							afterParserOrEnumRuleCall();
                                      						
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    kw=(Token)match(input,Element,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getConstantsAccess().getElementKeyword_9_1());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalDialogParser.g:11139:3: kw= Value
                    {
                    kw=(Token)match(input,Value,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getValueKeyword_10());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstants"


    // $ANTLR start "entryRuleValueRow"
    // InternalDialogParser.g:11148:1: entryRuleValueRow returns [EObject current=null] : iv_ruleValueRow= ruleValueRow EOF ;
    public final EObject entryRuleValueRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueRow = null;


        try {
            // InternalDialogParser.g:11148:49: (iv_ruleValueRow= ruleValueRow EOF )
            // InternalDialogParser.g:11149:2: iv_ruleValueRow= ruleValueRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueRow=ruleValueRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueRow"


    // $ANTLR start "ruleValueRow"
    // InternalDialogParser.g:11155:1: ruleValueRow returns [EObject current=null] : ( ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )* ) ;
    public final EObject ruleValueRow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_explicitValues_0_0 = null;

        EObject lv_explicitValues_2_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:11161:2: ( ( ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )* ) )
            // InternalDialogParser.g:11162:2: ( ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )* )
            {
            // InternalDialogParser.g:11162:2: ( ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )* )
            // InternalDialogParser.g:11163:3: ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )*
            {
            // InternalDialogParser.g:11163:3: ( (lv_explicitValues_0_0= ruleNestedExpression ) )
            // InternalDialogParser.g:11164:4: (lv_explicitValues_0_0= ruleNestedExpression )
            {
            // InternalDialogParser.g:11164:4: (lv_explicitValues_0_0= ruleNestedExpression )
            // InternalDialogParser.g:11165:5: lv_explicitValues_0_0= ruleNestedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueRowAccess().getExplicitValuesNestedExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_139);
            lv_explicitValues_0_0=ruleNestedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueRowRule());
              					}
              					add(
              						current,
              						"explicitValues",
              						lv_explicitValues_0_0,
              						"com.ge.research.sadl.SADL.NestedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:11182:3: (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )*
            loop255:
            do {
                int alt255=2;
                int LA255_0 = input.LA(1);

                if ( (LA255_0==Comma) ) {
                    alt255=1;
                }


                switch (alt255) {
            	case 1 :
            	    // InternalDialogParser.g:11183:4: otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) )
            	    {
            	    otherlv_1=(Token)match(input,Comma,FOLLOW_83); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getValueRowAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalDialogParser.g:11187:4: ( (lv_explicitValues_2_0= ruleNestedExpression ) )
            	    // InternalDialogParser.g:11188:5: (lv_explicitValues_2_0= ruleNestedExpression )
            	    {
            	    // InternalDialogParser.g:11188:5: (lv_explicitValues_2_0= ruleNestedExpression )
            	    // InternalDialogParser.g:11189:6: lv_explicitValues_2_0= ruleNestedExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValueRowAccess().getExplicitValuesNestedExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_139);
            	    lv_explicitValues_2_0=ruleNestedExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValueRowRule());
            	      						}
            	      						add(
            	      							current,
            	      							"explicitValues",
            	      							lv_explicitValues_2_0,
            	      							"com.ge.research.sadl.SADL.NestedExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop255;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueRow"


    // $ANTLR start "entryRuleAnyNumber"
    // InternalDialogParser.g:11211:1: entryRuleAnyNumber returns [String current=null] : iv_ruleAnyNumber= ruleAnyNumber EOF ;
    public final String entryRuleAnyNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAnyNumber = null;


        try {
            // InternalDialogParser.g:11211:49: (iv_ruleAnyNumber= ruleAnyNumber EOF )
            // InternalDialogParser.g:11212:2: iv_ruleAnyNumber= ruleAnyNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnyNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnyNumber=ruleAnyNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnyNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnyNumber"


    // $ANTLR start "ruleAnyNumber"
    // InternalDialogParser.g:11218:1: ruleAnyNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )? ) ;
    public final AntlrDatatypeRuleToken ruleAnyNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_DecimalNumber_0 = null;

        AntlrDatatypeRuleToken this_EXPONENT_1 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:11224:2: ( (this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )? ) )
            // InternalDialogParser.g:11225:2: (this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )? )
            {
            // InternalDialogParser.g:11225:2: (this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )? )
            // InternalDialogParser.g:11226:3: this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAnyNumberAccess().getDecimalNumberParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_140);
            this_DecimalNumber_0=ruleDecimalNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_DecimalNumber_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:11236:3: (this_EXPONENT_1= ruleEXPONENT )?
            int alt256=2;
            int LA256_0 = input.LA(1);

            if ( (LA256_0==E||LA256_0==E_1) ) {
                alt256=1;
            }
            switch (alt256) {
                case 1 :
                    // InternalDialogParser.g:11237:4: this_EXPONENT_1= ruleEXPONENT
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAnyNumberAccess().getEXPONENTParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_EXPONENT_1=ruleEXPONENT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_EXPONENT_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnyNumber"


    // $ANTLR start "entryRuleDecimalNumber"
    // InternalDialogParser.g:11252:1: entryRuleDecimalNumber returns [String current=null] : iv_ruleDecimalNumber= ruleDecimalNumber EOF ;
    public final String entryRuleDecimalNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDecimalNumber = null;


        try {
            // InternalDialogParser.g:11252:53: (iv_ruleDecimalNumber= ruleDecimalNumber EOF )
            // InternalDialogParser.g:11253:2: iv_ruleDecimalNumber= ruleDecimalNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDecimalNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDecimalNumber=ruleDecimalNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDecimalNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDecimalNumber"


    // $ANTLR start "ruleDecimalNumber"
    // InternalDialogParser.g:11259:1: ruleDecimalNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_NUMBER_0= RULE_NUMBER ;
    public final AntlrDatatypeRuleToken ruleDecimalNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_NUMBER_0=null;


        	enterRule();

        try {
            // InternalDialogParser.g:11265:2: (this_NUMBER_0= RULE_NUMBER )
            // InternalDialogParser.g:11266:2: this_NUMBER_0= RULE_NUMBER
            {
            this_NUMBER_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_NUMBER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_NUMBER_0, grammarAccess.getDecimalNumberAccess().getNUMBERTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDecimalNumber"


    // $ANTLR start "entryRuleEXPONENT"
    // InternalDialogParser.g:11276:1: entryRuleEXPONENT returns [String current=null] : iv_ruleEXPONENT= ruleEXPONENT EOF ;
    public final String entryRuleEXPONENT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEXPONENT = null;


        try {
            // InternalDialogParser.g:11276:48: (iv_ruleEXPONENT= ruleEXPONENT EOF )
            // InternalDialogParser.g:11277:2: iv_ruleEXPONENT= ruleEXPONENT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEXPONENTRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEXPONENT=ruleEXPONENT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEXPONENT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEXPONENT"


    // $ANTLR start "ruleEXPONENT"
    // InternalDialogParser.g:11283:1: ruleEXPONENT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber ) ;
    public final AntlrDatatypeRuleToken ruleEXPONENT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DecimalNumber_4 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:11289:2: ( ( (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber ) )
            // InternalDialogParser.g:11290:2: ( (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber )
            {
            // InternalDialogParser.g:11290:2: ( (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber )
            // InternalDialogParser.g:11291:3: (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber
            {
            // InternalDialogParser.g:11291:3: (kw= E_1 | kw= E )
            int alt257=2;
            int LA257_0 = input.LA(1);

            if ( (LA257_0==E_1) ) {
                alt257=1;
            }
            else if ( (LA257_0==E) ) {
                alt257=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 257, 0, input);

                throw nvae;
            }
            switch (alt257) {
                case 1 :
                    // InternalDialogParser.g:11292:4: kw= E_1
                    {
                    kw=(Token)match(input,E_1,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getEKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:11298:4: kw= E
                    {
                    kw=(Token)match(input,E,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getEKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:11304:3: (kw= HyphenMinus | kw= PlusSign )?
            int alt258=3;
            int LA258_0 = input.LA(1);

            if ( (LA258_0==HyphenMinus) ) {
                alt258=1;
            }
            else if ( (LA258_0==PlusSign) ) {
                alt258=2;
            }
            switch (alt258) {
                case 1 :
                    // InternalDialogParser.g:11305:4: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getHyphenMinusKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:11311:4: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getPlusSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEXPONENTAccess().getDecimalNumberParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_DecimalNumber_4=ruleDecimalNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_DecimalNumber_4);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEXPONENT"


    // $ANTLR start "entryRuleEOS"
    // InternalDialogParser.g:11331:1: entryRuleEOS returns [String current=null] : iv_ruleEOS= ruleEOS EOF ;
    public final String entryRuleEOS() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEOS = null;


        try {
            // InternalDialogParser.g:11331:43: (iv_ruleEOS= ruleEOS EOF )
            // InternalDialogParser.g:11332:2: iv_ruleEOS= ruleEOS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEOSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEOS=ruleEOS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEOS.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEOS"


    // $ANTLR start "ruleEOS"
    // InternalDialogParser.g:11338:1: ruleEOS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= FullStop ;
    public final AntlrDatatypeRuleToken ruleEOS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:11344:2: (kw= FullStop )
            // InternalDialogParser.g:11345:2: kw= FullStop
            {
            kw=(Token)match(input,FullStop,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getEOSAccess().getFullStopKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEOS"


    // $ANTLR start "entryRuleQNAME"
    // InternalDialogParser.g:11353:1: entryRuleQNAME returns [String current=null] : iv_ruleQNAME= ruleQNAME EOF ;
    public final String entryRuleQNAME() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQNAME = null;


        try {
            // InternalDialogParser.g:11353:45: (iv_ruleQNAME= ruleQNAME EOF )
            // InternalDialogParser.g:11354:2: iv_ruleQNAME= ruleQNAME EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQNAMERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQNAME=ruleQNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQNAME.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQNAME"


    // $ANTLR start "ruleQNAME"
    // InternalDialogParser.g:11360:1: ruleQNAME returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL | this_ID_1= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleQNAME() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_QNAME_TERMINAL_0=null;
        Token this_ID_1=null;


        	enterRule();

        try {
            // InternalDialogParser.g:11366:2: ( (this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL | this_ID_1= RULE_ID ) )
            // InternalDialogParser.g:11367:2: (this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL | this_ID_1= RULE_ID )
            {
            // InternalDialogParser.g:11367:2: (this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL | this_ID_1= RULE_ID )
            int alt259=2;
            int LA259_0 = input.LA(1);

            if ( (LA259_0==RULE_QNAME_TERMINAL) ) {
                alt259=1;
            }
            else if ( (LA259_0==RULE_ID) ) {
                alt259=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 259, 0, input);

                throw nvae;
            }
            switch (alt259) {
                case 1 :
                    // InternalDialogParser.g:11368:3: this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL
                    {
                    this_QNAME_TERMINAL_0=(Token)match(input,RULE_QNAME_TERMINAL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_QNAME_TERMINAL_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_QNAME_TERMINAL_0, grammarAccess.getQNAMEAccess().getQNAME_TERMINALTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:11376:3: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_1, grammarAccess.getQNAMEAccess().getIDTerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQNAME"


    // $ANTLR start "ruleSadlDataType"
    // InternalDialogParser.g:11387:1: ruleSadlDataType returns [Enumerator current=null] : ( (enumLiteral_0= String ) | (enumLiteral_1= Boolean ) | (enumLiteral_2= Decimal ) | (enumLiteral_3= Int ) | (enumLiteral_4= Long ) | (enumLiteral_5= Float ) | (enumLiteral_6= Double ) | (enumLiteral_7= Duration ) | (enumLiteral_8= DateTime ) | (enumLiteral_9= Time ) | (enumLiteral_10= Date ) | (enumLiteral_11= GYearMonth ) | (enumLiteral_12= GYear ) | (enumLiteral_13= GMonthDay ) | (enumLiteral_14= GDay ) | (enumLiteral_15= GMonth ) | (enumLiteral_16= HexBinary ) | (enumLiteral_17= Base64Binary ) | (enumLiteral_18= AnyURI ) | (enumLiteral_19= Integer ) | (enumLiteral_20= NegativeInteger ) | (enumLiteral_21= NonNegativeInteger ) | (enumLiteral_22= PositiveInteger ) | (enumLiteral_23= NonPositiveInteger ) | (enumLiteral_24= Byte ) | (enumLiteral_25= UnsignedByte ) | (enumLiteral_26= UnsignedInt ) | (enumLiteral_27= AnySimpleType ) ) ;
    public final Enumerator ruleSadlDataType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;
        Token enumLiteral_9=null;
        Token enumLiteral_10=null;
        Token enumLiteral_11=null;
        Token enumLiteral_12=null;
        Token enumLiteral_13=null;
        Token enumLiteral_14=null;
        Token enumLiteral_15=null;
        Token enumLiteral_16=null;
        Token enumLiteral_17=null;
        Token enumLiteral_18=null;
        Token enumLiteral_19=null;
        Token enumLiteral_20=null;
        Token enumLiteral_21=null;
        Token enumLiteral_22=null;
        Token enumLiteral_23=null;
        Token enumLiteral_24=null;
        Token enumLiteral_25=null;
        Token enumLiteral_26=null;
        Token enumLiteral_27=null;


        	enterRule();

        try {
            // InternalDialogParser.g:11393:2: ( ( (enumLiteral_0= String ) | (enumLiteral_1= Boolean ) | (enumLiteral_2= Decimal ) | (enumLiteral_3= Int ) | (enumLiteral_4= Long ) | (enumLiteral_5= Float ) | (enumLiteral_6= Double ) | (enumLiteral_7= Duration ) | (enumLiteral_8= DateTime ) | (enumLiteral_9= Time ) | (enumLiteral_10= Date ) | (enumLiteral_11= GYearMonth ) | (enumLiteral_12= GYear ) | (enumLiteral_13= GMonthDay ) | (enumLiteral_14= GDay ) | (enumLiteral_15= GMonth ) | (enumLiteral_16= HexBinary ) | (enumLiteral_17= Base64Binary ) | (enumLiteral_18= AnyURI ) | (enumLiteral_19= Integer ) | (enumLiteral_20= NegativeInteger ) | (enumLiteral_21= NonNegativeInteger ) | (enumLiteral_22= PositiveInteger ) | (enumLiteral_23= NonPositiveInteger ) | (enumLiteral_24= Byte ) | (enumLiteral_25= UnsignedByte ) | (enumLiteral_26= UnsignedInt ) | (enumLiteral_27= AnySimpleType ) ) )
            // InternalDialogParser.g:11394:2: ( (enumLiteral_0= String ) | (enumLiteral_1= Boolean ) | (enumLiteral_2= Decimal ) | (enumLiteral_3= Int ) | (enumLiteral_4= Long ) | (enumLiteral_5= Float ) | (enumLiteral_6= Double ) | (enumLiteral_7= Duration ) | (enumLiteral_8= DateTime ) | (enumLiteral_9= Time ) | (enumLiteral_10= Date ) | (enumLiteral_11= GYearMonth ) | (enumLiteral_12= GYear ) | (enumLiteral_13= GMonthDay ) | (enumLiteral_14= GDay ) | (enumLiteral_15= GMonth ) | (enumLiteral_16= HexBinary ) | (enumLiteral_17= Base64Binary ) | (enumLiteral_18= AnyURI ) | (enumLiteral_19= Integer ) | (enumLiteral_20= NegativeInteger ) | (enumLiteral_21= NonNegativeInteger ) | (enumLiteral_22= PositiveInteger ) | (enumLiteral_23= NonPositiveInteger ) | (enumLiteral_24= Byte ) | (enumLiteral_25= UnsignedByte ) | (enumLiteral_26= UnsignedInt ) | (enumLiteral_27= AnySimpleType ) )
            {
            // InternalDialogParser.g:11394:2: ( (enumLiteral_0= String ) | (enumLiteral_1= Boolean ) | (enumLiteral_2= Decimal ) | (enumLiteral_3= Int ) | (enumLiteral_4= Long ) | (enumLiteral_5= Float ) | (enumLiteral_6= Double ) | (enumLiteral_7= Duration ) | (enumLiteral_8= DateTime ) | (enumLiteral_9= Time ) | (enumLiteral_10= Date ) | (enumLiteral_11= GYearMonth ) | (enumLiteral_12= GYear ) | (enumLiteral_13= GMonthDay ) | (enumLiteral_14= GDay ) | (enumLiteral_15= GMonth ) | (enumLiteral_16= HexBinary ) | (enumLiteral_17= Base64Binary ) | (enumLiteral_18= AnyURI ) | (enumLiteral_19= Integer ) | (enumLiteral_20= NegativeInteger ) | (enumLiteral_21= NonNegativeInteger ) | (enumLiteral_22= PositiveInteger ) | (enumLiteral_23= NonPositiveInteger ) | (enumLiteral_24= Byte ) | (enumLiteral_25= UnsignedByte ) | (enumLiteral_26= UnsignedInt ) | (enumLiteral_27= AnySimpleType ) )
            int alt260=28;
            switch ( input.LA(1) ) {
            case String:
                {
                alt260=1;
                }
                break;
            case Boolean:
                {
                alt260=2;
                }
                break;
            case Decimal:
                {
                alt260=3;
                }
                break;
            case Int:
                {
                alt260=4;
                }
                break;
            case Long:
                {
                alt260=5;
                }
                break;
            case Float:
                {
                alt260=6;
                }
                break;
            case Double:
                {
                alt260=7;
                }
                break;
            case Duration:
                {
                alt260=8;
                }
                break;
            case DateTime:
                {
                alt260=9;
                }
                break;
            case Time:
                {
                alt260=10;
                }
                break;
            case Date:
                {
                alt260=11;
                }
                break;
            case GYearMonth:
                {
                alt260=12;
                }
                break;
            case GYear:
                {
                alt260=13;
                }
                break;
            case GMonthDay:
                {
                alt260=14;
                }
                break;
            case GDay:
                {
                alt260=15;
                }
                break;
            case GMonth:
                {
                alt260=16;
                }
                break;
            case HexBinary:
                {
                alt260=17;
                }
                break;
            case Base64Binary:
                {
                alt260=18;
                }
                break;
            case AnyURI:
                {
                alt260=19;
                }
                break;
            case Integer:
                {
                alt260=20;
                }
                break;
            case NegativeInteger:
                {
                alt260=21;
                }
                break;
            case NonNegativeInteger:
                {
                alt260=22;
                }
                break;
            case PositiveInteger:
                {
                alt260=23;
                }
                break;
            case NonPositiveInteger:
                {
                alt260=24;
                }
                break;
            case Byte:
                {
                alt260=25;
                }
                break;
            case UnsignedByte:
                {
                alt260=26;
                }
                break;
            case UnsignedInt:
                {
                alt260=27;
                }
                break;
            case AnySimpleType:
                {
                alt260=28;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 260, 0, input);

                throw nvae;
            }

            switch (alt260) {
                case 1 :
                    // InternalDialogParser.g:11395:3: (enumLiteral_0= String )
                    {
                    // InternalDialogParser.g:11395:3: (enumLiteral_0= String )
                    // InternalDialogParser.g:11396:4: enumLiteral_0= String
                    {
                    enumLiteral_0=(Token)match(input,String,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getSadlDataTypeAccess().getStringEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:11403:3: (enumLiteral_1= Boolean )
                    {
                    // InternalDialogParser.g:11403:3: (enumLiteral_1= Boolean )
                    // InternalDialogParser.g:11404:4: enumLiteral_1= Boolean
                    {
                    enumLiteral_1=(Token)match(input,Boolean,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getBooleanEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getSadlDataTypeAccess().getBooleanEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:11411:3: (enumLiteral_2= Decimal )
                    {
                    // InternalDialogParser.g:11411:3: (enumLiteral_2= Decimal )
                    // InternalDialogParser.g:11412:4: enumLiteral_2= Decimal
                    {
                    enumLiteral_2=(Token)match(input,Decimal,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDecimalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getSadlDataTypeAccess().getDecimalEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:11419:3: (enumLiteral_3= Int )
                    {
                    // InternalDialogParser.g:11419:3: (enumLiteral_3= Int )
                    // InternalDialogParser.g:11420:4: enumLiteral_3= Int
                    {
                    enumLiteral_3=(Token)match(input,Int,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getIntEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getSadlDataTypeAccess().getIntEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:11427:3: (enumLiteral_4= Long )
                    {
                    // InternalDialogParser.g:11427:3: (enumLiteral_4= Long )
                    // InternalDialogParser.g:11428:4: enumLiteral_4= Long
                    {
                    enumLiteral_4=(Token)match(input,Long,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getLongEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getSadlDataTypeAccess().getLongEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:11435:3: (enumLiteral_5= Float )
                    {
                    // InternalDialogParser.g:11435:3: (enumLiteral_5= Float )
                    // InternalDialogParser.g:11436:4: enumLiteral_5= Float
                    {
                    enumLiteral_5=(Token)match(input,Float,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getFloatEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getSadlDataTypeAccess().getFloatEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:11443:3: (enumLiteral_6= Double )
                    {
                    // InternalDialogParser.g:11443:3: (enumLiteral_6= Double )
                    // InternalDialogParser.g:11444:4: enumLiteral_6= Double
                    {
                    enumLiteral_6=(Token)match(input,Double,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDoubleEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getSadlDataTypeAccess().getDoubleEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:11451:3: (enumLiteral_7= Duration )
                    {
                    // InternalDialogParser.g:11451:3: (enumLiteral_7= Duration )
                    // InternalDialogParser.g:11452:4: enumLiteral_7= Duration
                    {
                    enumLiteral_7=(Token)match(input,Duration,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDurationEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getSadlDataTypeAccess().getDurationEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalDialogParser.g:11459:3: (enumLiteral_8= DateTime )
                    {
                    // InternalDialogParser.g:11459:3: (enumLiteral_8= DateTime )
                    // InternalDialogParser.g:11460:4: enumLiteral_8= DateTime
                    {
                    enumLiteral_8=(Token)match(input,DateTime,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDateTimeEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_8, grammarAccess.getSadlDataTypeAccess().getDateTimeEnumLiteralDeclaration_8());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalDialogParser.g:11467:3: (enumLiteral_9= Time )
                    {
                    // InternalDialogParser.g:11467:3: (enumLiteral_9= Time )
                    // InternalDialogParser.g:11468:4: enumLiteral_9= Time
                    {
                    enumLiteral_9=(Token)match(input,Time,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getTimeEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_9, grammarAccess.getSadlDataTypeAccess().getTimeEnumLiteralDeclaration_9());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalDialogParser.g:11475:3: (enumLiteral_10= Date )
                    {
                    // InternalDialogParser.g:11475:3: (enumLiteral_10= Date )
                    // InternalDialogParser.g:11476:4: enumLiteral_10= Date
                    {
                    enumLiteral_10=(Token)match(input,Date,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDateEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_10, grammarAccess.getSadlDataTypeAccess().getDateEnumLiteralDeclaration_10());
                      			
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalDialogParser.g:11483:3: (enumLiteral_11= GYearMonth )
                    {
                    // InternalDialogParser.g:11483:3: (enumLiteral_11= GYearMonth )
                    // InternalDialogParser.g:11484:4: enumLiteral_11= GYearMonth
                    {
                    enumLiteral_11=(Token)match(input,GYearMonth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGYearMonthEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_11, grammarAccess.getSadlDataTypeAccess().getGYearMonthEnumLiteralDeclaration_11());
                      			
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalDialogParser.g:11491:3: (enumLiteral_12= GYear )
                    {
                    // InternalDialogParser.g:11491:3: (enumLiteral_12= GYear )
                    // InternalDialogParser.g:11492:4: enumLiteral_12= GYear
                    {
                    enumLiteral_12=(Token)match(input,GYear,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGYearEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_12, grammarAccess.getSadlDataTypeAccess().getGYearEnumLiteralDeclaration_12());
                      			
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalDialogParser.g:11499:3: (enumLiteral_13= GMonthDay )
                    {
                    // InternalDialogParser.g:11499:3: (enumLiteral_13= GMonthDay )
                    // InternalDialogParser.g:11500:4: enumLiteral_13= GMonthDay
                    {
                    enumLiteral_13=(Token)match(input,GMonthDay,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGMonthDayEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_13, grammarAccess.getSadlDataTypeAccess().getGMonthDayEnumLiteralDeclaration_13());
                      			
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalDialogParser.g:11507:3: (enumLiteral_14= GDay )
                    {
                    // InternalDialogParser.g:11507:3: (enumLiteral_14= GDay )
                    // InternalDialogParser.g:11508:4: enumLiteral_14= GDay
                    {
                    enumLiteral_14=(Token)match(input,GDay,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGDayEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_14, grammarAccess.getSadlDataTypeAccess().getGDayEnumLiteralDeclaration_14());
                      			
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalDialogParser.g:11515:3: (enumLiteral_15= GMonth )
                    {
                    // InternalDialogParser.g:11515:3: (enumLiteral_15= GMonth )
                    // InternalDialogParser.g:11516:4: enumLiteral_15= GMonth
                    {
                    enumLiteral_15=(Token)match(input,GMonth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGMonthEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_15, grammarAccess.getSadlDataTypeAccess().getGMonthEnumLiteralDeclaration_15());
                      			
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalDialogParser.g:11523:3: (enumLiteral_16= HexBinary )
                    {
                    // InternalDialogParser.g:11523:3: (enumLiteral_16= HexBinary )
                    // InternalDialogParser.g:11524:4: enumLiteral_16= HexBinary
                    {
                    enumLiteral_16=(Token)match(input,HexBinary,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getHexBinaryEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_16, grammarAccess.getSadlDataTypeAccess().getHexBinaryEnumLiteralDeclaration_16());
                      			
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalDialogParser.g:11531:3: (enumLiteral_17= Base64Binary )
                    {
                    // InternalDialogParser.g:11531:3: (enumLiteral_17= Base64Binary )
                    // InternalDialogParser.g:11532:4: enumLiteral_17= Base64Binary
                    {
                    enumLiteral_17=(Token)match(input,Base64Binary,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getBase64BinaryEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_17, grammarAccess.getSadlDataTypeAccess().getBase64BinaryEnumLiteralDeclaration_17());
                      			
                    }

                    }


                    }
                    break;
                case 19 :
                    // InternalDialogParser.g:11539:3: (enumLiteral_18= AnyURI )
                    {
                    // InternalDialogParser.g:11539:3: (enumLiteral_18= AnyURI )
                    // InternalDialogParser.g:11540:4: enumLiteral_18= AnyURI
                    {
                    enumLiteral_18=(Token)match(input,AnyURI,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getAnyURIEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_18, grammarAccess.getSadlDataTypeAccess().getAnyURIEnumLiteralDeclaration_18());
                      			
                    }

                    }


                    }
                    break;
                case 20 :
                    // InternalDialogParser.g:11547:3: (enumLiteral_19= Integer )
                    {
                    // InternalDialogParser.g:11547:3: (enumLiteral_19= Integer )
                    // InternalDialogParser.g:11548:4: enumLiteral_19= Integer
                    {
                    enumLiteral_19=(Token)match(input,Integer,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getIntegerEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_19, grammarAccess.getSadlDataTypeAccess().getIntegerEnumLiteralDeclaration_19());
                      			
                    }

                    }


                    }
                    break;
                case 21 :
                    // InternalDialogParser.g:11555:3: (enumLiteral_20= NegativeInteger )
                    {
                    // InternalDialogParser.g:11555:3: (enumLiteral_20= NegativeInteger )
                    // InternalDialogParser.g:11556:4: enumLiteral_20= NegativeInteger
                    {
                    enumLiteral_20=(Token)match(input,NegativeInteger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getNegativeIntegerEnumLiteralDeclaration_20().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_20, grammarAccess.getSadlDataTypeAccess().getNegativeIntegerEnumLiteralDeclaration_20());
                      			
                    }

                    }


                    }
                    break;
                case 22 :
                    // InternalDialogParser.g:11563:3: (enumLiteral_21= NonNegativeInteger )
                    {
                    // InternalDialogParser.g:11563:3: (enumLiteral_21= NonNegativeInteger )
                    // InternalDialogParser.g:11564:4: enumLiteral_21= NonNegativeInteger
                    {
                    enumLiteral_21=(Token)match(input,NonNegativeInteger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getNonNegativeIntegerEnumLiteralDeclaration_21().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_21, grammarAccess.getSadlDataTypeAccess().getNonNegativeIntegerEnumLiteralDeclaration_21());
                      			
                    }

                    }


                    }
                    break;
                case 23 :
                    // InternalDialogParser.g:11571:3: (enumLiteral_22= PositiveInteger )
                    {
                    // InternalDialogParser.g:11571:3: (enumLiteral_22= PositiveInteger )
                    // InternalDialogParser.g:11572:4: enumLiteral_22= PositiveInteger
                    {
                    enumLiteral_22=(Token)match(input,PositiveInteger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getPositiveIntegerEnumLiteralDeclaration_22().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_22, grammarAccess.getSadlDataTypeAccess().getPositiveIntegerEnumLiteralDeclaration_22());
                      			
                    }

                    }


                    }
                    break;
                case 24 :
                    // InternalDialogParser.g:11579:3: (enumLiteral_23= NonPositiveInteger )
                    {
                    // InternalDialogParser.g:11579:3: (enumLiteral_23= NonPositiveInteger )
                    // InternalDialogParser.g:11580:4: enumLiteral_23= NonPositiveInteger
                    {
                    enumLiteral_23=(Token)match(input,NonPositiveInteger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getNonPositiveIntegerEnumLiteralDeclaration_23().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_23, grammarAccess.getSadlDataTypeAccess().getNonPositiveIntegerEnumLiteralDeclaration_23());
                      			
                    }

                    }


                    }
                    break;
                case 25 :
                    // InternalDialogParser.g:11587:3: (enumLiteral_24= Byte )
                    {
                    // InternalDialogParser.g:11587:3: (enumLiteral_24= Byte )
                    // InternalDialogParser.g:11588:4: enumLiteral_24= Byte
                    {
                    enumLiteral_24=(Token)match(input,Byte,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getByteEnumLiteralDeclaration_24().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_24, grammarAccess.getSadlDataTypeAccess().getByteEnumLiteralDeclaration_24());
                      			
                    }

                    }


                    }
                    break;
                case 26 :
                    // InternalDialogParser.g:11595:3: (enumLiteral_25= UnsignedByte )
                    {
                    // InternalDialogParser.g:11595:3: (enumLiteral_25= UnsignedByte )
                    // InternalDialogParser.g:11596:4: enumLiteral_25= UnsignedByte
                    {
                    enumLiteral_25=(Token)match(input,UnsignedByte,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getUnsignedByteEnumLiteralDeclaration_25().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_25, grammarAccess.getSadlDataTypeAccess().getUnsignedByteEnumLiteralDeclaration_25());
                      			
                    }

                    }


                    }
                    break;
                case 27 :
                    // InternalDialogParser.g:11603:3: (enumLiteral_26= UnsignedInt )
                    {
                    // InternalDialogParser.g:11603:3: (enumLiteral_26= UnsignedInt )
                    // InternalDialogParser.g:11604:4: enumLiteral_26= UnsignedInt
                    {
                    enumLiteral_26=(Token)match(input,UnsignedInt,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getUnsignedIntEnumLiteralDeclaration_26().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_26, grammarAccess.getSadlDataTypeAccess().getUnsignedIntEnumLiteralDeclaration_26());
                      			
                    }

                    }


                    }
                    break;
                case 28 :
                    // InternalDialogParser.g:11611:3: (enumLiteral_27= AnySimpleType )
                    {
                    // InternalDialogParser.g:11611:3: (enumLiteral_27= AnySimpleType )
                    // InternalDialogParser.g:11612:4: enumLiteral_27= AnySimpleType
                    {
                    enumLiteral_27=(Token)match(input,AnySimpleType,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getAnySimpleTypeEnumLiteralDeclaration_27().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_27, grammarAccess.getSadlDataTypeAccess().getAnySimpleTypeEnumLiteralDeclaration_27());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlDataType"

    // $ANTLR start synpred1_InternalDialogParser
    public final void synpred1_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:3057:4: ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )
        // InternalDialogParser.g:3057:5: ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) )
        {
        // InternalDialogParser.g:3057:5: ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) )
        // InternalDialogParser.g:3058:5: () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) )
        {
        // InternalDialogParser.g:3058:5: ()
        // InternalDialogParser.g:3059:5: 
        {
        }

        // InternalDialogParser.g:3060:5: ( ( ( HyphenMinus | Not ) ) )
        // InternalDialogParser.g:3061:6: ( ( HyphenMinus | Not ) )
        {
        // InternalDialogParser.g:3061:6: ( ( HyphenMinus | Not ) )
        // InternalDialogParser.g:3062:7: ( HyphenMinus | Not )
        {
        if ( input.LA(1)==Not||input.LA(1)==HyphenMinus ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }

        // InternalDialogParser.g:3069:5: ( ( ruleSadlExplicitValueLiteral ) )
        // InternalDialogParser.g:3070:6: ( ruleSadlExplicitValueLiteral )
        {
        // InternalDialogParser.g:3070:6: ( ruleSadlExplicitValueLiteral )
        // InternalDialogParser.g:3071:7: ruleSadlExplicitValueLiteral
        {
        pushFollow(FOLLOW_2);
        ruleSadlExplicitValueLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred1_InternalDialogParser

    // $ANTLR start synpred2_InternalDialogParser
    public final void synpred2_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:3188:5: ( RULE_STRING | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==RULE_ID||input.LA(1)==RULE_STRING ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred2_InternalDialogParser

    // $ANTLR start synpred3_InternalDialogParser
    public final void synpred3_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:4122:4: ( Select )
        // InternalDialogParser.g:4122:5: Select
        {
        match(input,Select,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_InternalDialogParser

    // $ANTLR start synpred4_InternalDialogParser
    public final void synpred4_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:4266:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Desc||input.LA(1)==Asc||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred4_InternalDialogParser

    // $ANTLR start synpred5_InternalDialogParser
    public final void synpred5_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:4321:4: ( Select )
        // InternalDialogParser.g:4321:5: Select
        {
        match(input,Select,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred5_InternalDialogParser

    // $ANTLR start synpred6_InternalDialogParser
    public final void synpred6_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:4465:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Desc||input.LA(1)==Asc||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred6_InternalDialogParser

    // $ANTLR start synpred7_InternalDialogParser
    public final void synpred7_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:4520:4: ( Select )
        // InternalDialogParser.g:4520:5: Select
        {
        match(input,Select,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred7_InternalDialogParser

    // $ANTLR start synpred8_InternalDialogParser
    public final void synpred8_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:4664:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Desc||input.LA(1)==Asc||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred8_InternalDialogParser

    // $ANTLR start synpred9_InternalDialogParser
    public final void synpred9_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:4719:4: ( Select )
        // InternalDialogParser.g:4719:5: Select
        {
        match(input,Select,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred9_InternalDialogParser

    // $ANTLR start synpred10_InternalDialogParser
    public final void synpred10_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:4863:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Desc||input.LA(1)==Asc||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred10_InternalDialogParser

    // $ANTLR start synpred11_InternalDialogParser
    public final void synpred11_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6338:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==LessThanSignEqualsSign||input.LA(1)==GreaterThanSignEqualsSign||input.LA(1)==LessThanSign||input.LA(1)==GreaterThanSign ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred11_InternalDialogParser

    // $ANTLR start synpred13_InternalDialogParser
    public final void synpred13_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6413:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==LessThanSignEqualsSign||input.LA(1)==GreaterThanSignEqualsSign||input.LA(1)==LessThanSign||input.LA(1)==GreaterThanSign ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred13_InternalDialogParser

    // $ANTLR start synpred15_InternalDialogParser
    public final void synpred15_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6488:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==LessThanSignEqualsSign||input.LA(1)==GreaterThanSignEqualsSign||input.LA(1)==LessThanSign||input.LA(1)==GreaterThanSign ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred15_InternalDialogParser

    // $ANTLR start synpred17_InternalDialogParser
    public final void synpred17_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6563:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==LessThanSignEqualsSign||input.LA(1)==GreaterThanSignEqualsSign||input.LA(1)==LessThanSign||input.LA(1)==GreaterThanSign ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred17_InternalDialogParser

    // $ANTLR start synpred19_InternalDialogParser
    public final void synpred19_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:7566:4: ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( (input.LA(1)>=For && input.LA(1)<=Has)||input.LA(1)==In||input.LA(1)==Of||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred19_InternalDialogParser

    // $ANTLR start synpred20_InternalDialogParser
    public final void synpred20_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:7636:6: ( Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Has||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred20_InternalDialogParser

    // $ANTLR start synpred21_InternalDialogParser
    public final void synpred21_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:7671:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Another||input.LA(1)==Element||input.LA(1)==Length||(input.LA(1)>=Count && input.LA(1)<=False)||input.LA(1)==First||(input.LA(1)>=Index && input.LA(1)<=Known)||input.LA(1)==There||input.LA(1)==Value||input.LA(1)==None||input.LA(1)==Last||input.LA(1)==Only||input.LA(1)==Some||(input.LA(1)>=True && input.LA(1)<=Type)||input.LA(1)==The||input.LA(1)==Any||input.LA(1)==Not||input.LA(1)==The_1||input.LA(1)==HyphenMinusHyphenMinus||(input.LA(1)>=An && input.LA(1)<=An_1)||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==HyphenMinus||input.LA(1)==A||input.LA(1)==LeftSquareBracket||(input.LA(1)>=A_1 && input.LA(1)<=LeftCurlyBracket)||input.LA(1)==RULE_NUMBER||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred21_InternalDialogParser

    // $ANTLR start synpred22_InternalDialogParser
    public final void synpred22_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:7716:4: ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==With||(input.LA(1)>=For && input.LA(1)<=Has)||input.LA(1)==In||input.LA(1)==Of||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred22_InternalDialogParser

    // $ANTLR start synpred23_InternalDialogParser
    public final void synpred23_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:7786:6: ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==With||input.LA(1)==Has||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred23_InternalDialogParser

    // $ANTLR start synpred24_InternalDialogParser
    public final void synpred24_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:7826:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Another||input.LA(1)==Element||input.LA(1)==Length||(input.LA(1)>=Count && input.LA(1)<=False)||input.LA(1)==First||(input.LA(1)>=Index && input.LA(1)<=Known)||input.LA(1)==There||input.LA(1)==Value||input.LA(1)==None||input.LA(1)==Last||input.LA(1)==Only||input.LA(1)==Some||(input.LA(1)>=True && input.LA(1)<=Type)||input.LA(1)==The||input.LA(1)==Any||input.LA(1)==Not||input.LA(1)==The_1||input.LA(1)==HyphenMinusHyphenMinus||(input.LA(1)>=An && input.LA(1)<=An_1)||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==HyphenMinus||input.LA(1)==A||input.LA(1)==LeftSquareBracket||(input.LA(1)>=A_1 && input.LA(1)<=LeftCurlyBracket)||input.LA(1)==RULE_NUMBER||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred24_InternalDialogParser

    // $ANTLR start synpred25_InternalDialogParser
    public final void synpred25_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:7871:4: ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( (input.LA(1)>=For && input.LA(1)<=Has)||input.LA(1)==In||input.LA(1)==Of||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred25_InternalDialogParser

    // $ANTLR start synpred26_InternalDialogParser
    public final void synpred26_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:7941:6: ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Has||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred26_InternalDialogParser

    // $ANTLR start synpred27_InternalDialogParser
    public final void synpred27_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:7990:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Another||input.LA(1)==Element||input.LA(1)==Length||(input.LA(1)>=Count && input.LA(1)<=False)||input.LA(1)==First||(input.LA(1)>=Index && input.LA(1)<=Known)||input.LA(1)==There||input.LA(1)==Value||input.LA(1)==None||input.LA(1)==Last||input.LA(1)==Only||input.LA(1)==Some||(input.LA(1)>=True && input.LA(1)<=Type)||input.LA(1)==The||input.LA(1)==Any||input.LA(1)==Not||input.LA(1)==The_1||input.LA(1)==HyphenMinusHyphenMinus||(input.LA(1)>=An && input.LA(1)<=An_1)||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==HyphenMinus||input.LA(1)==A||input.LA(1)==LeftSquareBracket||(input.LA(1)>=A_1 && input.LA(1)<=LeftCurlyBracket)||input.LA(1)==RULE_NUMBER||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred27_InternalDialogParser

    // $ANTLR start synpred28_InternalDialogParser
    public final void synpred28_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8035:4: ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==With||(input.LA(1)>=For && input.LA(1)<=Has)||input.LA(1)==In||input.LA(1)==Of||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred28_InternalDialogParser

    // $ANTLR start synpred29_InternalDialogParser
    public final void synpred29_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8105:6: ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==With||input.LA(1)==Has||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred29_InternalDialogParser

    // $ANTLR start synpred30_InternalDialogParser
    public final void synpred30_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8159:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Another||input.LA(1)==Element||input.LA(1)==Length||(input.LA(1)>=Count && input.LA(1)<=False)||input.LA(1)==First||(input.LA(1)>=Index && input.LA(1)<=Known)||input.LA(1)==There||input.LA(1)==Value||input.LA(1)==None||input.LA(1)==Last||input.LA(1)==Only||input.LA(1)==Some||(input.LA(1)>=True && input.LA(1)<=Type)||input.LA(1)==The||input.LA(1)==Any||input.LA(1)==Not||input.LA(1)==The_1||input.LA(1)==HyphenMinusHyphenMinus||(input.LA(1)>=An && input.LA(1)<=An_1)||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==HyphenMinus||input.LA(1)==A||input.LA(1)==LeftSquareBracket||(input.LA(1)>=A_1 && input.LA(1)<=LeftCurlyBracket)||input.LA(1)==RULE_NUMBER||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred30_InternalDialogParser

    // $ANTLR start synpred31_InternalDialogParser
    public final void synpred31_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9414:7: ( HyphenMinus )
        // InternalDialogParser.g:9414:8: HyphenMinus
        {
        match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred31_InternalDialogParser

    // $ANTLR start synpred32_InternalDialogParser
    public final void synpred32_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9788:7: ( HyphenMinus )
        // InternalDialogParser.g:9788:8: HyphenMinus
        {
        match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred32_InternalDialogParser

    // $ANTLR start synpred33_InternalDialogParser
    public final void synpred33_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:10162:7: ( HyphenMinus )
        // InternalDialogParser.g:10162:8: HyphenMinus
        {
        match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred33_InternalDialogParser

    // $ANTLR start synpred34_InternalDialogParser
    public final void synpred34_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:10536:7: ( HyphenMinus )
        // InternalDialogParser.g:10536:8: HyphenMinus
        {
        match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred34_InternalDialogParser

    // $ANTLR start synpred35_InternalDialogParser
    public final void synpred35_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:10766:4: ( LeftParenthesis )
        // InternalDialogParser.g:10766:5: LeftParenthesis
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred35_InternalDialogParser

    // Delegated rules

    public final boolean synpred20_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA24 dfa24 = new DFA24(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA125 dfa125 = new DFA125(this);
    protected DFA127 dfa127 = new DFA127(this);
    protected DFA129 dfa129 = new DFA129(this);
    protected DFA131 dfa131 = new DFA131(this);
    protected DFA170 dfa170 = new DFA170(this);
    protected DFA176 dfa176 = new DFA176(this);
    protected DFA183 dfa183 = new DFA183(this);
    protected DFA193 dfa193 = new DFA193(this);
    protected DFA190 dfa190 = new DFA190(this);
    protected DFA220 dfa220 = new DFA220(this);
    protected DFA227 dfa227 = new DFA227(this);
    protected DFA234 dfa234 = new DFA234(this);
    protected DFA241 dfa241 = new DFA241(this);
    protected DFA254 dfa254 = new DFA254(this);
    static final String dfa_1s = "\14\uffff";
    static final String dfa_2s = "\1\3\2\7\1\uffff\2\3\2\uffff\2\7\2\uffff";
    static final String dfa_3s = "\1\177\2\123\1\uffff\2\123\1\43\1\uffff\2\123\2\43";
    static final String dfa_4s = "\1\u00c0\2\u00c1\1\uffff\2\u00c1\1\u00c0\1\uffff\2\u00c1\2\u00c0";
    static final String dfa_5s = "\3\uffff\1\2\3\uffff\1\1\4\uffff";
    static final String dfa_6s = "\14\uffff}>";
    static final String[] dfa_7s = {
            "\1\3\12\uffff\1\3\25\uffff\2\3\6\uffff\1\3\2\uffff\1\3\23\uffff\1\2\1\1",
            "\1\3\6\uffff\1\3\42\uffff\1\3\1\uffff\1\7\12\uffff\1\7\1\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\6\1\7\2\uffff\1\7\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\6\uffff\1\3\42\uffff\1\3\1\uffff\1\7\12\uffff\1\7\1\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\6\1\7\2\uffff\1\7\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "",
            "\1\7\6\uffff\1\7\42\uffff\1\7\1\uffff\1\3\12\uffff\1\3\1\uffff\1\7\13\uffff\1\7\7\uffff\2\3\5\uffff\1\12\1\3\2\uffff\1\3\1\7\11\uffff\1\7\3\uffff\1\7\2\uffff\1\7\1\uffff\1\11\1\10\1\7",
            "\1\7\6\uffff\1\7\42\uffff\1\7\1\uffff\1\3\12\uffff\1\3\1\uffff\1\7\13\uffff\1\7\7\uffff\2\3\5\uffff\1\12\1\3\2\uffff\1\3\1\7\11\uffff\1\7\3\uffff\1\7\2\uffff\1\7\1\uffff\1\11\1\10\1\7",
            "\1\3\54\uffff\1\7\46\uffff\1\7\2\uffff\1\3\7\uffff\1\3\1\uffff\1\3\11\uffff\1\3\10\uffff\1\3\1\uffff\1\3\32\uffff\1\3\4\uffff\1\3\5\uffff\2\3",
            "",
            "\1\3\6\uffff\1\3\42\uffff\1\3\1\uffff\1\7\12\uffff\1\7\1\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\13\1\7\2\uffff\1\7\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\6\uffff\1\3\42\uffff\1\3\1\uffff\1\7\12\uffff\1\7\1\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\13\1\7\2\uffff\1\7\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\7\54\uffff\1\3\46\uffff\1\3\2\uffff\1\7\7\uffff\1\7\1\uffff\1\7\11\uffff\1\7\10\uffff\1\7\1\uffff\1\7\32\uffff\1\7\4\uffff\1\7\5\uffff\2\7",
            "\1\3\54\uffff\1\7\46\uffff\1\7\2\uffff\1\3\7\uffff\1\3\1\uffff\1\3\11\uffff\1\3\10\uffff\1\3\1\uffff\1\3\32\uffff\1\3\4\uffff\1\3\5\uffff\2\3"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA24 extends DFA {

        public DFA24(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 24;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "1267:5: ( (lv_instance_8_0= ruleSadlResource ) )?";
        }
    }
    static final String dfa_8s = "\12\uffff";
    static final String dfa_9s = "\2\uffff\1\6\6\uffff\1\6";
    static final String dfa_10s = "\1\u00ac\1\u00bd\1\24\2\u00aa\2\uffff\2\u00bd\1\24";
    static final String dfa_11s = "\2\u00bd\1\u00ba\2\u00bd\2\uffff\2\u00bd\1\u00ac";
    static final String dfa_12s = "\5\uffff\1\2\1\1\3\uffff";
    static final String dfa_13s = "\12\uffff}>";
    static final String[] dfa_14s = {
            "\1\1\20\uffff\1\2",
            "\1\2",
            "\1\6\41\uffff\1\6\77\uffff\1\6\1\uffff\1\6\6\uffff\1\6\10\uffff\1\6\1\uffff\1\6\25\uffff\2\6\6\uffff\1\6\3\uffff\1\5\10\uffff\1\4\4\uffff\1\3",
            "\1\10\1\uffff\1\7\20\uffff\1\11",
            "\1\10\1\uffff\1\7\20\uffff\1\11",
            "",
            "",
            "\1\11",
            "\1\11",
            "\1\6\41\uffff\1\6\77\uffff\1\6\1\uffff\1\6\6\uffff\1\6\10\uffff\1\6\1\uffff\1\6\25\uffff\2\6\6\uffff\1\6\3\uffff\1\5"
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "1498:4: ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) )";
        }
    }
    static final String dfa_15s = "\23\uffff";
    static final String dfa_16s = "\17\uffff\1\20\1\uffff\1\20\1\uffff";
    static final String dfa_17s = "\1\24\1\uffff\1\50\1\52\1\uffff\1\14\3\uffff\1\105\5\uffff\1\24\1\uffff\1\24\1\4";
    static final String dfa_18s = "\1\u00a1\1\uffff\2\u00bd\1\uffff\1\u00b9\3\uffff\1\105\5\uffff\1\u00a1\1\uffff\1\u00a1\1\u00c0";
    static final String dfa_19s = "\1\uffff\1\1\2\uffff\1\2\1\uffff\1\12\1\13\1\10\1\uffff\1\3\1\4\1\5\1\7\1\6\1\uffff\1\11\2\uffff";
    static final String dfa_20s = "\23\uffff}>";
    static final String[] dfa_21s = {
            "\1\4\41\uffff\1\1\77\uffff\1\6\1\uffff\1\1\6\uffff\1\3\10\uffff\1\7\1\uffff\1\2\25\uffff\1\5\1\4",
            "",
            "\1\10\1\uffff\1\1\35\uffff\1\12\23\uffff\1\10\60\uffff\1\1\15\uffff\1\1\35\uffff\1\11\3\uffff\1\1",
            "\1\1\35\uffff\1\12\104\uffff\1\1\15\uffff\1\1\35\uffff\1\12\3\uffff\1\1",
            "",
            "\1\16\4\uffff\1\14\174\uffff\1\13\52\uffff\1\15",
            "",
            "",
            "",
            "\1\17",
            "",
            "",
            "",
            "",
            "",
            "\1\20\33\uffff\1\20\5\uffff\1\20\57\uffff\1\21\17\uffff\1\20\1\uffff\1\20\6\uffff\1\20\10\uffff\1\20\1\uffff\1\20\25\uffff\2\20",
            "",
            "\1\20\41\uffff\1\20\77\uffff\1\20\1\uffff\1\20\6\uffff\1\20\10\uffff\1\20\1\uffff\1\20\25\uffff\1\20\1\22",
            "\6\20\1\uffff\1\20\1\uffff\1\20\2\uffff\1\20\4\uffff\2\20\6\uffff\1\20\2\uffff\1\20\3\uffff\1\20\2\uffff\1\20\3\uffff\1\20\13\uffff\1\20\2\uffff\1\20\3\uffff\1\20\7\uffff\1\20\17\uffff\2\20\24\uffff\1\20\1\uffff\1\20\3\uffff\1\20\1\uffff\1\20\7\uffff\1\20\1\uffff\1\12\14\uffff\1\20\33\uffff\1\20\23\uffff\1\20\3\uffff\2\20"
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final char[] dfa_18 = DFA.unpackEncodedStringToUnsignedChars(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[][] dfa_21 = unpackEncodedStringArray(dfa_21s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_15;
            this.eof = dfa_16;
            this.min = dfa_17;
            this.max = dfa_18;
            this.accept = dfa_19;
            this.special = dfa_20;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "2079:2: (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) )";
        }
    }
    static final String dfa_22s = "\66\uffff";
    static final String dfa_23s = "\1\3\1\uffff\1\6\1\uffff\2\3\16\uffff\2\44\40\uffff";
    static final String dfa_24s = "\1\24\1\uffff\1\24\1\uffff\2\123\16\uffff\2\123\12\uffff\1\43\1\uffff\1\43\23\uffff";
    static final String dfa_25s = "\1\u00c1\1\uffff\1\u00c1\1\uffff\2\u00c1\16\uffff\2\u00c1\12\uffff\1\u00c0\1\uffff\1\u00c0\23\uffff";
    static final String dfa_26s = "\1\uffff\1\1\1\uffff\1\2\2\uffff\16\1\2\uffff\12\1\1\uffff\1\1\1\uffff\23\1";
    static final String dfa_27s = "\1\5\1\uffff\1\3\1\uffff\1\0\1\7\16\uffff\1\2\1\6\12\uffff\1\4\1\uffff\1\1\23\uffff}>";
    static final String[] dfa_28s = {
            "\1\3\41\uffff\1\3\77\uffff\1\3\1\uffff\1\3\6\uffff\1\3\10\uffff\1\3\1\uffff\1\3\25\uffff\2\3\6\uffff\1\3\2\uffff\1\3\13\uffff\1\3\4\uffff\1\3\2\uffff\1\2\1\3\1\1",
            "",
            "\1\17\41\uffff\1\16\34\uffff\1\3\6\uffff\1\3\33\uffff\1\20\1\uffff\1\15\4\uffff\1\3\1\uffff\1\11\10\uffff\1\21\1\uffff\1\12\1\uffff\1\3\13\uffff\1\3\7\uffff\1\13\1\14\5\uffff\1\3\1\7\2\uffff\1\10\1\3\11\uffff\1\3\1\23\2\uffff\1\3\1\uffff\1\22\1\3\1\uffff\1\5\1\4\1\3",
            "",
            "\1\31\6\uffff\1\35\42\uffff\1\30\1\uffff\1\3\12\uffff\1\3\1\uffff\1\37\13\uffff\1\33\7\uffff\2\3\5\uffff\1\40\1\3\2\uffff\1\3\1\36\11\uffff\1\32\3\uffff\1\34\2\uffff\1\26\1\uffff\1\25\1\24\1\27",
            "\1\31\6\uffff\1\35\42\uffff\1\30\1\uffff\1\3\12\uffff\1\3\1\uffff\1\37\13\uffff\1\33\7\uffff\2\3\5\uffff\1\40\1\3\2\uffff\1\3\1\36\11\uffff\1\32\3\uffff\1\34\2\uffff\1\26\1\uffff\1\25\1\24\1\27",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\3\6\uffff\1\3\42\uffff\1\3\1\uffff\1\45\12\uffff\1\46\1\uffff\1\3\13\uffff\1\3\7\uffff\1\47\1\50\5\uffff\1\42\1\43\2\uffff\1\41\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\6\uffff\1\3\42\uffff\1\3\1\uffff\1\45\12\uffff\1\46\1\uffff\1\3\13\uffff\1\3\7\uffff\1\47\1\50\5\uffff\1\42\1\43\2\uffff\1\41\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\61\54\uffff\1\3\46\uffff\1\3\2\uffff\1\60\7\uffff\1\62\1\uffff\1\57\11\uffff\1\63\10\uffff\1\55\1\uffff\1\56\32\uffff\1\53\4\uffff\1\54\5\uffff\1\52\1\51",
            "",
            "\1\3\54\uffff\1\64\46\uffff\1\65\2\uffff\1\3\7\uffff\1\3\1\uffff\1\3\11\uffff\1\3\10\uffff\1\3\1\uffff\1\3\32\uffff\1\3\4\uffff\1\3\5\uffff\2\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final char[] dfa_25 = DFA.unpackEncodedStringToUnsignedChars(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[][] dfa_28 = unpackEncodedStringArray(dfa_28s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_22;
            this.eof = dfa_23;
            this.min = dfa_24;
            this.max = dfa_25;
            this.accept = dfa_26;
            this.special = dfa_27;
            this.transition = dfa_28;
        }
        public String getDescription() {
            return "3187:4: ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_4 = input.LA(1);

                         
                        int index71_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA71_4==RULE_QNAME_TERMINAL) ) {s = 20;}

                        else if ( (LA71_4==RULE_ID) ) {s = 21;}

                        else if ( (LA71_4==RULE_NUMBER) && (synpred2_InternalDialogParser())) {s = 22;}

                        else if ( (LA71_4==RULE_STRING) && (synpred2_InternalDialogParser())) {s = 23;}

                        else if ( (LA71_4==True) && (synpred2_InternalDialogParser())) {s = 24;}

                        else if ( (LA71_4==False) && (synpred2_InternalDialogParser())) {s = 25;}

                        else if ( (LA71_4==LeftSquareBracket) && (synpred2_InternalDialogParser())) {s = 26;}

                        else if ( (LA71_4==PI) && (synpred2_InternalDialogParser())) {s = 27;}

                        else if ( (LA71_4==E_1) && (synpred2_InternalDialogParser())) {s = 28;}

                        else if ( (LA71_4==Known) && (synpred2_InternalDialogParser())) {s = 29;}

                        else if ( (LA71_4==HyphenMinus) && (synpred2_InternalDialogParser())) {s = 30;}

                        else if ( (LA71_4==Not) && (synpred2_InternalDialogParser())) {s = 31;}

                        else if ( (LA71_4==LeftParenthesis) ) {s = 32;}

                        else if ( (LA71_4==EOF||LA71_4==With||LA71_4==Has||(LA71_4>=Is && LA71_4<=Of)||LA71_4==RightParenthesis||LA71_4==Comma) ) {s = 3;}

                         
                        input.seek(index71_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA71_34 = input.LA(1);

                         
                        int index71_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA71_34==Alias) && (synpred2_InternalDialogParser())) {s = 52;}

                        else if ( (LA71_34==Note) && (synpred2_InternalDialogParser())) {s = 53;}

                        else if ( (LA71_34==Another||LA71_34==Some||LA71_34==The||LA71_34==Any||LA71_34==The_1||LA71_34==An||LA71_34==An_1||LA71_34==A||LA71_34==A_1||(LA71_34>=RULE_ID && LA71_34<=RULE_QNAME_TERMINAL)) ) {s = 3;}

                         
                        input.seek(index71_34);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA71_20 = input.LA(1);

                         
                        int index71_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA71_20==Comma) && (synpred2_InternalDialogParser())) {s = 33;}

                        else if ( (LA71_20==LeftParenthesis) ) {s = 34;}

                        else if ( (LA71_20==RightParenthesis) && (synpred2_InternalDialogParser())) {s = 35;}

                        else if ( (LA71_20==EOF) && (synpred2_InternalDialogParser())) {s = 36;}

                        else if ( (LA71_20==With) && (synpred2_InternalDialogParser())) {s = 37;}

                        else if ( (LA71_20==Has) && (synpred2_InternalDialogParser())) {s = 38;}

                        else if ( (LA71_20==RULE_QNAME_TERMINAL) ) {s = 4;}

                        else if ( (LA71_20==RULE_ID) ) {s = 5;}

                        else if ( (LA71_20==Is) && (synpred2_InternalDialogParser())) {s = 39;}

                        else if ( (LA71_20==Of) && (synpred2_InternalDialogParser())) {s = 40;}

                        else if ( (LA71_20==False||LA71_20==Known||LA71_20==True||LA71_20==Not||LA71_20==PI||LA71_20==HyphenMinus||LA71_20==LeftSquareBracket||LA71_20==E_1||LA71_20==RULE_NUMBER||LA71_20==RULE_STRING) ) {s = 3;}

                         
                        input.seek(index71_20);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA71_2 = input.LA(1);

                         
                        int index71_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA71_2==RULE_QNAME_TERMINAL) ) {s = 4;}

                        else if ( (LA71_2==RULE_ID) ) {s = 5;}

                        else if ( (LA71_2==False||LA71_2==Known||LA71_2==True||LA71_2==Not||LA71_2==PI||LA71_2==LeftParenthesis||LA71_2==HyphenMinus||LA71_2==LeftSquareBracket||LA71_2==E_1||LA71_2==RULE_NUMBER||LA71_2==RULE_STRING) ) {s = 3;}

                        else if ( (LA71_2==EOF) && (synpred2_InternalDialogParser())) {s = 6;}

                        else if ( (LA71_2==RightParenthesis) && (synpred2_InternalDialogParser())) {s = 7;}

                        else if ( (LA71_2==Comma) && (synpred2_InternalDialogParser())) {s = 8;}

                        else if ( (LA71_2==With) && (synpred2_InternalDialogParser())) {s = 9;}

                        else if ( (LA71_2==Has) && (synpred2_InternalDialogParser())) {s = 10;}

                        else if ( (LA71_2==Is) && (synpred2_InternalDialogParser())) {s = 11;}

                        else if ( (LA71_2==Of) && (synpred2_InternalDialogParser())) {s = 12;}

                        else if ( (LA71_2==Only) && (synpred2_InternalDialogParser())) {s = 13;}

                        else if ( (LA71_2==Always) && (synpred2_InternalDialogParser())) {s = 14;}

                        else if ( (LA71_2==Describes) && (synpred2_InternalDialogParser())) {s = 15;}

                        else if ( (LA71_2==Must) && (synpred2_InternalDialogParser())) {s = 16;}

                        else if ( (LA71_2==Can) && (synpred2_InternalDialogParser())) {s = 17;}

                        else if ( (LA71_2==RightCurlyBracket) && (synpred2_InternalDialogParser())) {s = 18;}

                        else if ( (LA71_2==RightSquareBracket) && (synpred2_InternalDialogParser())) {s = 19;}

                         
                        input.seek(index71_2);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA71_32 = input.LA(1);

                         
                        int index71_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA71_32==Alias||LA71_32==Note) ) {s = 3;}

                        else if ( (LA71_32==RULE_QNAME_TERMINAL) && (synpred2_InternalDialogParser())) {s = 41;}

                        else if ( (LA71_32==RULE_ID) && (synpred2_InternalDialogParser())) {s = 42;}

                        else if ( (LA71_32==A) && (synpred2_InternalDialogParser())) {s = 43;}

                        else if ( (LA71_32==A_1) && (synpred2_InternalDialogParser())) {s = 44;}

                        else if ( (LA71_32==An) && (synpred2_InternalDialogParser())) {s = 45;}

                        else if ( (LA71_32==An_1) && (synpred2_InternalDialogParser())) {s = 46;}

                        else if ( (LA71_32==Any) && (synpred2_InternalDialogParser())) {s = 47;}

                        else if ( (LA71_32==Some) && (synpred2_InternalDialogParser())) {s = 48;}

                        else if ( (LA71_32==Another) && (synpred2_InternalDialogParser())) {s = 49;}

                        else if ( (LA71_32==The) && (synpred2_InternalDialogParser())) {s = 50;}

                        else if ( (LA71_32==The_1) && (synpred2_InternalDialogParser())) {s = 51;}

                         
                        input.seek(index71_32);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA71_0 = input.LA(1);

                         
                        int index71_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA71_0==RULE_STRING) && (synpred2_InternalDialogParser())) {s = 1;}

                        else if ( (LA71_0==RULE_ID) ) {s = 2;}

                        else if ( (LA71_0==EOF||LA71_0==Describes||LA71_0==Always||LA71_0==Must||LA71_0==Only||LA71_0==With||LA71_0==Can||LA71_0==Has||(LA71_0>=Is && LA71_0<=Of)||LA71_0==RightParenthesis||LA71_0==Comma||LA71_0==RightSquareBracket||LA71_0==RightCurlyBracket||LA71_0==RULE_QNAME_TERMINAL) ) {s = 3;}

                         
                        input.seek(index71_0);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA71_21 = input.LA(1);

                         
                        int index71_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA71_21==Comma) && (synpred2_InternalDialogParser())) {s = 33;}

                        else if ( (LA71_21==LeftParenthesis) ) {s = 34;}

                        else if ( (LA71_21==RightParenthesis) && (synpred2_InternalDialogParser())) {s = 35;}

                        else if ( (LA71_21==EOF) && (synpred2_InternalDialogParser())) {s = 36;}

                        else if ( (LA71_21==With) && (synpred2_InternalDialogParser())) {s = 37;}

                        else if ( (LA71_21==Has) && (synpred2_InternalDialogParser())) {s = 38;}

                        else if ( (LA71_21==RULE_QNAME_TERMINAL) ) {s = 4;}

                        else if ( (LA71_21==RULE_ID) ) {s = 5;}

                        else if ( (LA71_21==Is) && (synpred2_InternalDialogParser())) {s = 39;}

                        else if ( (LA71_21==Of) && (synpred2_InternalDialogParser())) {s = 40;}

                        else if ( (LA71_21==False||LA71_21==Known||LA71_21==True||LA71_21==Not||LA71_21==PI||LA71_21==HyphenMinus||LA71_21==LeftSquareBracket||LA71_21==E_1||LA71_21==RULE_NUMBER||LA71_21==RULE_STRING) ) {s = 3;}

                         
                        input.seek(index71_21);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA71_5 = input.LA(1);

                         
                        int index71_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA71_5==RULE_QNAME_TERMINAL) ) {s = 20;}

                        else if ( (LA71_5==RULE_ID) ) {s = 21;}

                        else if ( (LA71_5==RULE_NUMBER) && (synpred2_InternalDialogParser())) {s = 22;}

                        else if ( (LA71_5==RULE_STRING) && (synpred2_InternalDialogParser())) {s = 23;}

                        else if ( (LA71_5==True) && (synpred2_InternalDialogParser())) {s = 24;}

                        else if ( (LA71_5==False) && (synpred2_InternalDialogParser())) {s = 25;}

                        else if ( (LA71_5==LeftSquareBracket) && (synpred2_InternalDialogParser())) {s = 26;}

                        else if ( (LA71_5==PI) && (synpred2_InternalDialogParser())) {s = 27;}

                        else if ( (LA71_5==E_1) && (synpred2_InternalDialogParser())) {s = 28;}

                        else if ( (LA71_5==Known) && (synpred2_InternalDialogParser())) {s = 29;}

                        else if ( (LA71_5==HyphenMinus) && (synpred2_InternalDialogParser())) {s = 30;}

                        else if ( (LA71_5==Not) && (synpred2_InternalDialogParser())) {s = 31;}

                        else if ( (LA71_5==LeftParenthesis) ) {s = 32;}

                        else if ( (LA71_5==EOF||LA71_5==With||LA71_5==Has||(LA71_5>=Is && LA71_5<=Of)||LA71_5==RightParenthesis||LA71_5==Comma) ) {s = 3;}

                         
                        input.seek(index71_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_29s = "\1\43\11\4\2\uffff";
    static final String dfa_30s = "\1\u00c1\11\u00c0\2\uffff";
    static final String dfa_31s = "\12\uffff\1\1\1\2";
    static final String[] dfa_32s = {
            "\1\7\5\uffff\1\13\7\uffff\1\12\17\uffff\1\13\20\uffff\2\13\1\uffff\1\13\3\uffff\2\13\7\uffff\1\13\3\uffff\1\13\2\uffff\1\13\11\uffff\1\13\4\uffff\1\13\1\uffff\1\6\2\uffff\2\13\3\uffff\1\10\1\uffff\1\5\7\uffff\1\13\1\uffff\1\11\3\uffff\1\13\4\uffff\1\3\1\13\1\4\13\uffff\1\13\1\uffff\1\13\4\uffff\1\13\7\uffff\1\1\1\uffff\1\13\2\uffff\1\2\2\13\1\uffff\1\13\1\uffff\3\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\13\7\uffff\1\13\16\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\13\7\uffff\1\13\1\uffff\1\13\14\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\13\7\uffff\1\13\16\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\13\7\uffff\1\13\16\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\13\7\uffff\1\13\16\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\13\7\uffff\1\13\16\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\13\7\uffff\1\13\16\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\2\uffff\1\13\1\uffff\1\13\2\uffff\1\13\15\uffff\4\13\1\uffff\1\13\3\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\13\7\uffff\1\13\16\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\2\uffff\1\13\1\uffff\1\13\2\uffff\1\13\15\uffff\4\13\1\uffff\1\13\3\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\13\7\uffff\1\13\16\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "",
            ""
    };
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[][] dfa_32 = unpackEncodedStringArray(dfa_32s);

    class DFA125 extends DFA {

        public DFA125(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 125;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_6;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "4981:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression )";
        }
    }

    class DFA127 extends DFA {

        public DFA127(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 127;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_6;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "5071:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression )";
        }
    }

    class DFA129 extends DFA {

        public DFA129(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 129;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_6;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "5161:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression )";
        }
    }

    class DFA131 extends DFA {

        public DFA131(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 131;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_6;
            this.transition = dfa_32;
        }
        public String getDescription() {
            return "5251:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression )";
        }
    }
    static final String dfa_33s = "\75\uffff";
    static final String dfa_34s = "\1\45\74\uffff";
    static final String dfa_35s = "\1\34\1\uffff\2\0\36\uffff\1\0\32\uffff";
    static final String dfa_36s = "\1\u00c1\1\uffff\2\0\36\uffff\1\0\32\uffff";
    static final String dfa_37s = "\1\uffff\1\1\2\uffff\36\1\1\uffff\2\1\1\2\27\uffff";
    static final String dfa_38s = "\1\0\1\uffff\1\1\1\2\36\uffff\1\3\32\uffff}>";
    static final String[] dfa_39s = {
            "\1\45\4\uffff\1\45\1\uffff\1\12\5\uffff\1\44\27\uffff\1\27\20\uffff\1\30\1\20\1\uffff\1\32\3\uffff\1\31\1\22\3\uffff\1\45\3\uffff\1\43\3\uffff\1\34\2\uffff\1\25\6\uffff\1\45\2\uffff\1\33\4\uffff\1\41\1\uffff\1\11\2\uffff\1\17\1\26\3\uffff\1\13\1\45\1\10\5\uffff\1\45\1\uffff\1\37\1\uffff\1\14\1\uffff\2\45\1\24\2\45\1\uffff\1\45\1\6\1\21\1\7\6\uffff\1\45\1\uffff\1\45\1\uffff\1\45\1\40\1\45\1\1\3\45\1\uffff\1\42\1\uffff\1\45\1\uffff\3\45\1\uffff\1\4\1\uffff\1\35\1\uffff\1\45\1\5\1\23\1\36\1\uffff\1\16\1\uffff\1\3\1\2\1\15",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA170 extends DFA {

        public DFA170(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 170;
            this.eot = dfa_33;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "7670:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA170_0 = input.LA(1);

                         
                        int index170_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA170_0==LeftParenthesis) && (synpred21_InternalDialogParser())) {s = 1;}

                        else if ( (LA170_0==RULE_QNAME_TERMINAL) ) {s = 2;}

                        else if ( (LA170_0==RULE_ID) ) {s = 3;}

                        else if ( (LA170_0==A) && (synpred21_InternalDialogParser())) {s = 4;}

                        else if ( (LA170_0==A_1) && (synpred21_InternalDialogParser())) {s = 5;}

                        else if ( (LA170_0==An) && (synpred21_InternalDialogParser())) {s = 6;}

                        else if ( (LA170_0==An_1) && (synpred21_InternalDialogParser())) {s = 7;}

                        else if ( (LA170_0==Any) && (synpred21_InternalDialogParser())) {s = 8;}

                        else if ( (LA170_0==Some) && (synpred21_InternalDialogParser())) {s = 9;}

                        else if ( (LA170_0==Another) && (synpred21_InternalDialogParser())) {s = 10;}

                        else if ( (LA170_0==The) && (synpred21_InternalDialogParser())) {s = 11;}

                        else if ( (LA170_0==The_1) && (synpred21_InternalDialogParser())) {s = 12;}

                        else if ( (LA170_0==RULE_STRING) && (synpred21_InternalDialogParser())) {s = 13;}

                        else if ( (LA170_0==RULE_NUMBER) && (synpred21_InternalDialogParser())) {s = 14;}

                        else if ( (LA170_0==True) && (synpred21_InternalDialogParser())) {s = 15;}

                        else if ( (LA170_0==False) && (synpred21_InternalDialogParser())) {s = 16;}

                        else if ( (LA170_0==PI) && (synpred21_InternalDialogParser())) {s = 17;}

                        else if ( (LA170_0==Known) && (synpred21_InternalDialogParser())) {s = 18;}

                        else if ( (LA170_0==E_1) && (synpred21_InternalDialogParser())) {s = 19;}

                        else if ( (LA170_0==HyphenMinusHyphenMinus) && (synpred21_InternalDialogParser())) {s = 20;}

                        else if ( (LA170_0==None) && (synpred21_InternalDialogParser())) {s = 21;}

                        else if ( (LA170_0==Type) && (synpred21_InternalDialogParser())) {s = 22;}

                        else if ( (LA170_0==Length) && (synpred21_InternalDialogParser())) {s = 23;}

                        else if ( (LA170_0==Count) && (synpred21_InternalDialogParser())) {s = 24;}

                        else if ( (LA170_0==Index) && (synpred21_InternalDialogParser())) {s = 25;}

                        else if ( (LA170_0==First) && (synpred21_InternalDialogParser())) {s = 26;}

                        else if ( (LA170_0==Last) && (synpred21_InternalDialogParser())) {s = 27;}

                        else if ( (LA170_0==Value) && (synpred21_InternalDialogParser())) {s = 28;}

                        else if ( (LA170_0==LeftSquareBracket) && (synpred21_InternalDialogParser())) {s = 29;}

                        else if ( (LA170_0==LeftCurlyBracket) && (synpred21_InternalDialogParser())) {s = 30;}

                        else if ( (LA170_0==Not) && (synpred21_InternalDialogParser())) {s = 31;}

                        else if ( (LA170_0==ExclamationMark) && (synpred21_InternalDialogParser())) {s = 32;}

                        else if ( (LA170_0==Only) && (synpred21_InternalDialogParser())) {s = 33;}

                        else if ( (LA170_0==HyphenMinus) ) {s = 34;}

                        else if ( (LA170_0==There) && (synpred21_InternalDialogParser())) {s = 35;}

                        else if ( (LA170_0==Element) && (synpred21_InternalDialogParser())) {s = 36;}

                        else if ( (LA170_0==EOF||LA170_0==Contains||LA170_0==Matching||LA170_0==Order||LA170_0==Does||LA170_0==And||LA170_0==Has||(LA170_0>=ExclamationMarkEqualsSign && LA170_0<=AmpersandAmpersand)||(LA170_0>=LessThanSignEqualsSign && LA170_0<=EqualsSignEqualsSign)||LA170_0==GreaterThanSignEqualsSign||LA170_0==Is||LA170_0==Or||LA170_0==VerticalLineVerticalLine||LA170_0==PercentSign||(LA170_0>=RightParenthesis && LA170_0<=PlusSign)||LA170_0==Solidus||(LA170_0>=LessThanSign && LA170_0<=GreaterThanSign)||LA170_0==CircumflexAccent) ) {s = 37;}

                         
                        input.seek(index170_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA170_2 = input.LA(1);

                         
                        int index170_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index170_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA170_3 = input.LA(1);

                         
                        int index170_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index170_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA170_34 = input.LA(1);

                         
                        int index170_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index170_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 170, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_40s = "\100\uffff";
    static final String dfa_41s = "\1\45\77\uffff";
    static final String dfa_42s = "\1\34\1\uffff\2\0\36\uffff\1\0\35\uffff";
    static final String dfa_43s = "\1\u00c1\1\uffff\2\0\36\uffff\1\0\35\uffff";
    static final String dfa_44s = "\1\uffff\1\1\2\uffff\36\1\1\uffff\2\1\1\2\32\uffff";
    static final String dfa_45s = "\1\0\1\uffff\1\1\1\2\36\uffff\1\3\35\uffff}>";
    static final String[] dfa_46s = {
            "\1\45\4\uffff\1\45\1\uffff\1\12\5\uffff\1\44\27\uffff\1\27\20\uffff\1\30\1\20\1\uffff\1\32\3\uffff\1\31\1\22\3\uffff\1\45\3\uffff\1\43\3\uffff\1\34\2\uffff\1\25\6\uffff\1\45\2\uffff\1\33\4\uffff\1\41\1\uffff\1\11\2\uffff\1\17\1\26\1\45\2\uffff\1\13\1\45\1\10\5\uffff\1\45\1\uffff\1\37\1\uffff\1\14\1\uffff\2\45\1\24\2\45\1\uffff\1\45\1\6\1\21\1\7\6\uffff\1\45\1\uffff\1\45\1\uffff\1\45\1\40\1\45\1\1\4\45\1\42\1\uffff\1\45\1\uffff\3\45\1\uffff\1\4\1\uffff\1\35\2\45\1\5\1\23\1\36\1\uffff\1\16\1\uffff\1\3\1\2\1\15",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA176 extends DFA {

        public DFA176(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 176;
            this.eot = dfa_40;
            this.eof = dfa_41;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_45;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "7825:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA176_0 = input.LA(1);

                         
                        int index176_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA176_0==LeftParenthesis) && (synpred24_InternalDialogParser())) {s = 1;}

                        else if ( (LA176_0==RULE_QNAME_TERMINAL) ) {s = 2;}

                        else if ( (LA176_0==RULE_ID) ) {s = 3;}

                        else if ( (LA176_0==A) && (synpred24_InternalDialogParser())) {s = 4;}

                        else if ( (LA176_0==A_1) && (synpred24_InternalDialogParser())) {s = 5;}

                        else if ( (LA176_0==An) && (synpred24_InternalDialogParser())) {s = 6;}

                        else if ( (LA176_0==An_1) && (synpred24_InternalDialogParser())) {s = 7;}

                        else if ( (LA176_0==Any) && (synpred24_InternalDialogParser())) {s = 8;}

                        else if ( (LA176_0==Some) && (synpred24_InternalDialogParser())) {s = 9;}

                        else if ( (LA176_0==Another) && (synpred24_InternalDialogParser())) {s = 10;}

                        else if ( (LA176_0==The) && (synpred24_InternalDialogParser())) {s = 11;}

                        else if ( (LA176_0==The_1) && (synpred24_InternalDialogParser())) {s = 12;}

                        else if ( (LA176_0==RULE_STRING) && (synpred24_InternalDialogParser())) {s = 13;}

                        else if ( (LA176_0==RULE_NUMBER) && (synpred24_InternalDialogParser())) {s = 14;}

                        else if ( (LA176_0==True) && (synpred24_InternalDialogParser())) {s = 15;}

                        else if ( (LA176_0==False) && (synpred24_InternalDialogParser())) {s = 16;}

                        else if ( (LA176_0==PI) && (synpred24_InternalDialogParser())) {s = 17;}

                        else if ( (LA176_0==Known) && (synpred24_InternalDialogParser())) {s = 18;}

                        else if ( (LA176_0==E_1) && (synpred24_InternalDialogParser())) {s = 19;}

                        else if ( (LA176_0==HyphenMinusHyphenMinus) && (synpred24_InternalDialogParser())) {s = 20;}

                        else if ( (LA176_0==None) && (synpred24_InternalDialogParser())) {s = 21;}

                        else if ( (LA176_0==Type) && (synpred24_InternalDialogParser())) {s = 22;}

                        else if ( (LA176_0==Length) && (synpred24_InternalDialogParser())) {s = 23;}

                        else if ( (LA176_0==Count) && (synpred24_InternalDialogParser())) {s = 24;}

                        else if ( (LA176_0==Index) && (synpred24_InternalDialogParser())) {s = 25;}

                        else if ( (LA176_0==First) && (synpred24_InternalDialogParser())) {s = 26;}

                        else if ( (LA176_0==Last) && (synpred24_InternalDialogParser())) {s = 27;}

                        else if ( (LA176_0==Value) && (synpred24_InternalDialogParser())) {s = 28;}

                        else if ( (LA176_0==LeftSquareBracket) && (synpred24_InternalDialogParser())) {s = 29;}

                        else if ( (LA176_0==LeftCurlyBracket) && (synpred24_InternalDialogParser())) {s = 30;}

                        else if ( (LA176_0==Not) && (synpred24_InternalDialogParser())) {s = 31;}

                        else if ( (LA176_0==ExclamationMark) && (synpred24_InternalDialogParser())) {s = 32;}

                        else if ( (LA176_0==Only) && (synpred24_InternalDialogParser())) {s = 33;}

                        else if ( (LA176_0==HyphenMinus) ) {s = 34;}

                        else if ( (LA176_0==There) && (synpred24_InternalDialogParser())) {s = 35;}

                        else if ( (LA176_0==Element) && (synpred24_InternalDialogParser())) {s = 36;}

                        else if ( (LA176_0==EOF||LA176_0==Contains||LA176_0==Matching||LA176_0==Order||LA176_0==Does||LA176_0==With||LA176_0==And||LA176_0==Has||(LA176_0>=ExclamationMarkEqualsSign && LA176_0<=AmpersandAmpersand)||(LA176_0>=LessThanSignEqualsSign && LA176_0<=EqualsSignEqualsSign)||LA176_0==GreaterThanSignEqualsSign||LA176_0==Is||LA176_0==Or||LA176_0==VerticalLineVerticalLine||LA176_0==PercentSign||(LA176_0>=RightParenthesis && LA176_0<=Comma)||LA176_0==Solidus||(LA176_0>=LessThanSign && LA176_0<=GreaterThanSign)||(LA176_0>=RightSquareBracket && LA176_0<=CircumflexAccent)) ) {s = 37;}

                         
                        input.seek(index176_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA176_2 = input.LA(1);

                         
                        int index176_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index176_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA176_3 = input.LA(1);

                         
                        int index176_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index176_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA176_34 = input.LA(1);

                         
                        int index176_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index176_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 176, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_47s = {
            "\1\45\4\uffff\1\45\1\uffff\1\12\5\uffff\1\44\27\uffff\1\27\20\uffff\1\30\1\20\1\uffff\1\32\3\uffff\1\31\1\22\3\uffff\1\45\3\uffff\1\43\3\uffff\1\34\2\uffff\1\25\6\uffff\1\45\2\uffff\1\33\4\uffff\1\41\1\uffff\1\11\2\uffff\1\17\1\26\3\uffff\1\13\1\45\1\10\5\uffff\1\45\1\uffff\1\37\1\uffff\1\14\1\uffff\2\45\1\24\2\45\1\uffff\1\45\1\6\1\21\1\7\6\uffff\1\45\1\uffff\1\45\1\uffff\1\45\1\40\1\45\1\1\4\45\1\42\1\uffff\1\45\1\uffff\3\45\1\uffff\1\4\1\uffff\1\35\1\uffff\1\45\1\5\1\23\1\36\1\uffff\1\16\1\uffff\1\3\1\2\1\15",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA183 extends DFA {

        public DFA183(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 183;
            this.eot = dfa_33;
            this.eof = dfa_33;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "7989:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA183_0 = input.LA(1);

                         
                        int index183_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA183_0==LeftParenthesis) && (synpred27_InternalDialogParser())) {s = 1;}

                        else if ( (LA183_0==RULE_QNAME_TERMINAL) ) {s = 2;}

                        else if ( (LA183_0==RULE_ID) ) {s = 3;}

                        else if ( (LA183_0==A) && (synpred27_InternalDialogParser())) {s = 4;}

                        else if ( (LA183_0==A_1) && (synpred27_InternalDialogParser())) {s = 5;}

                        else if ( (LA183_0==An) && (synpred27_InternalDialogParser())) {s = 6;}

                        else if ( (LA183_0==An_1) && (synpred27_InternalDialogParser())) {s = 7;}

                        else if ( (LA183_0==Any) && (synpred27_InternalDialogParser())) {s = 8;}

                        else if ( (LA183_0==Some) && (synpred27_InternalDialogParser())) {s = 9;}

                        else if ( (LA183_0==Another) && (synpred27_InternalDialogParser())) {s = 10;}

                        else if ( (LA183_0==The) && (synpred27_InternalDialogParser())) {s = 11;}

                        else if ( (LA183_0==The_1) && (synpred27_InternalDialogParser())) {s = 12;}

                        else if ( (LA183_0==RULE_STRING) && (synpred27_InternalDialogParser())) {s = 13;}

                        else if ( (LA183_0==RULE_NUMBER) && (synpred27_InternalDialogParser())) {s = 14;}

                        else if ( (LA183_0==True) && (synpred27_InternalDialogParser())) {s = 15;}

                        else if ( (LA183_0==False) && (synpred27_InternalDialogParser())) {s = 16;}

                        else if ( (LA183_0==PI) && (synpred27_InternalDialogParser())) {s = 17;}

                        else if ( (LA183_0==Known) && (synpred27_InternalDialogParser())) {s = 18;}

                        else if ( (LA183_0==E_1) && (synpred27_InternalDialogParser())) {s = 19;}

                        else if ( (LA183_0==HyphenMinusHyphenMinus) && (synpred27_InternalDialogParser())) {s = 20;}

                        else if ( (LA183_0==None) && (synpred27_InternalDialogParser())) {s = 21;}

                        else if ( (LA183_0==Type) && (synpred27_InternalDialogParser())) {s = 22;}

                        else if ( (LA183_0==Length) && (synpred27_InternalDialogParser())) {s = 23;}

                        else if ( (LA183_0==Count) && (synpred27_InternalDialogParser())) {s = 24;}

                        else if ( (LA183_0==Index) && (synpred27_InternalDialogParser())) {s = 25;}

                        else if ( (LA183_0==First) && (synpred27_InternalDialogParser())) {s = 26;}

                        else if ( (LA183_0==Last) && (synpred27_InternalDialogParser())) {s = 27;}

                        else if ( (LA183_0==Value) && (synpred27_InternalDialogParser())) {s = 28;}

                        else if ( (LA183_0==LeftSquareBracket) && (synpred27_InternalDialogParser())) {s = 29;}

                        else if ( (LA183_0==LeftCurlyBracket) && (synpred27_InternalDialogParser())) {s = 30;}

                        else if ( (LA183_0==Not) && (synpred27_InternalDialogParser())) {s = 31;}

                        else if ( (LA183_0==ExclamationMark) && (synpred27_InternalDialogParser())) {s = 32;}

                        else if ( (LA183_0==Only) && (synpred27_InternalDialogParser())) {s = 33;}

                        else if ( (LA183_0==HyphenMinus) ) {s = 34;}

                        else if ( (LA183_0==There) && (synpred27_InternalDialogParser())) {s = 35;}

                        else if ( (LA183_0==Element) && (synpred27_InternalDialogParser())) {s = 36;}

                        else if ( (LA183_0==Contains||LA183_0==Matching||LA183_0==Order||LA183_0==Does||LA183_0==And||LA183_0==Has||(LA183_0>=ExclamationMarkEqualsSign && LA183_0<=AmpersandAmpersand)||(LA183_0>=LessThanSignEqualsSign && LA183_0<=EqualsSignEqualsSign)||LA183_0==GreaterThanSignEqualsSign||LA183_0==Is||LA183_0==Or||LA183_0==VerticalLineVerticalLine||LA183_0==PercentSign||(LA183_0>=RightParenthesis && LA183_0<=Comma)||LA183_0==Solidus||(LA183_0>=LessThanSign && LA183_0<=GreaterThanSign)||LA183_0==CircumflexAccent) ) {s = 37;}

                         
                        input.seek(index183_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA183_2 = input.LA(1);

                         
                        int index183_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index183_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA183_3 = input.LA(1);

                         
                        int index183_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index183_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA183_34 = input.LA(1);

                         
                        int index183_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index183_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 183, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_48s = "\1\11\11\uffff";
    static final String dfa_49s = "\1\34\11\uffff";
    static final String dfa_50s = "\1\u00c0\11\uffff";
    static final String dfa_51s = "\1\uffff\10\1\1\2";
    static final String dfa_52s = "\1\0\11\uffff}>";
    static final String[] dfa_53s = {
            "\1\11\4\uffff\1\11\36\uffff\1\11\35\uffff\1\11\10\uffff\1\11\10\uffff\1\11\16\uffff\1\5\3\uffff\1\11\5\uffff\1\2\1\6\5\uffff\2\11\1\uffff\2\11\1\uffff\1\11\10\uffff\1\3\1\11\1\1\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\3\11\1\4\1\11\1\uffff\1\11\1\uffff\3\11\5\uffff\1\11\6\uffff\1\10\1\7",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA193 extends DFA {

        public DFA193(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 193;
            this.eot = dfa_8;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "8034:3: ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA193_0 = input.LA(1);

                         
                        int index193_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA193_0==Of) && (synpred28_InternalDialogParser())) {s = 1;}

                        else if ( (LA193_0==For) && (synpred28_InternalDialogParser())) {s = 2;}

                        else if ( (LA193_0==In) && (synpred28_InternalDialogParser())) {s = 3;}

                        else if ( (LA193_0==Comma) && (synpred28_InternalDialogParser())) {s = 4;}

                        else if ( (LA193_0==With) && (synpred28_InternalDialogParser())) {s = 5;}

                        else if ( (LA193_0==Has) && (synpred28_InternalDialogParser())) {s = 6;}

                        else if ( (LA193_0==RULE_QNAME_TERMINAL) && (synpred28_InternalDialogParser())) {s = 7;}

                        else if ( (LA193_0==RULE_ID) && (synpred28_InternalDialogParser())) {s = 8;}

                        else if ( (LA193_0==EOF||LA193_0==Contains||LA193_0==Matching||LA193_0==Insert||LA193_0==Order||LA193_0==Where||LA193_0==Does||LA193_0==And||(LA193_0>=ExclamationMarkEqualsSign && LA193_0<=AmpersandAmpersand)||(LA193_0>=LessThanSignEqualsSign && LA193_0<=EqualsSignEqualsSign)||LA193_0==GreaterThanSignEqualsSign||LA193_0==Is||LA193_0==Or||LA193_0==VerticalLineVerticalLine||LA193_0==PercentSign||(LA193_0>=RightParenthesis && LA193_0<=PlusSign)||LA193_0==HyphenMinus||LA193_0==Solidus||(LA193_0>=LessThanSign && LA193_0<=GreaterThanSign)||LA193_0==CircumflexAccent) ) {s = 9;}

                         
                        input.seek(index193_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 193, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_54s = "\101\uffff";
    static final String dfa_55s = "\1\45\100\uffff";
    static final String dfa_56s = "\1\34\1\uffff\2\0\36\uffff\1\0\36\uffff";
    static final String dfa_57s = "\1\u00c1\1\uffff\2\0\36\uffff\1\0\36\uffff";
    static final String dfa_58s = "\1\uffff\1\1\2\uffff\36\1\1\uffff\2\1\1\2\33\uffff";
    static final String dfa_59s = "\1\0\1\uffff\1\1\1\2\36\uffff\1\3\36\uffff}>";
    static final String[] dfa_60s = {
            "\1\45\4\uffff\1\45\1\uffff\1\12\5\uffff\1\44\26\uffff\1\45\1\27\20\uffff\1\30\1\20\1\uffff\1\32\3\uffff\1\31\1\22\3\uffff\1\45\3\uffff\1\43\3\uffff\1\34\1\45\1\uffff\1\25\6\uffff\1\45\2\uffff\1\33\4\uffff\1\41\1\uffff\1\11\2\uffff\1\17\1\26\1\45\2\uffff\1\13\1\45\1\10\5\uffff\1\45\1\uffff\1\37\1\uffff\1\14\1\uffff\2\45\1\24\2\45\1\uffff\1\45\1\6\1\21\1\7\6\uffff\1\45\1\uffff\1\45\1\uffff\1\45\1\40\1\45\1\1\4\45\1\42\1\uffff\1\45\1\uffff\3\45\1\uffff\1\4\1\uffff\1\35\1\uffff\1\45\1\5\1\23\1\36\1\uffff\1\16\1\uffff\1\3\1\2\1\15",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[][] dfa_60 = unpackEncodedStringArray(dfa_60s);

    class DFA190 extends DFA {

        public DFA190(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 190;
            this.eot = dfa_54;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_59;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "8158:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA190_0 = input.LA(1);

                         
                        int index190_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA190_0==LeftParenthesis) && (synpred30_InternalDialogParser())) {s = 1;}

                        else if ( (LA190_0==RULE_QNAME_TERMINAL) ) {s = 2;}

                        else if ( (LA190_0==RULE_ID) ) {s = 3;}

                        else if ( (LA190_0==A) && (synpred30_InternalDialogParser())) {s = 4;}

                        else if ( (LA190_0==A_1) && (synpred30_InternalDialogParser())) {s = 5;}

                        else if ( (LA190_0==An) && (synpred30_InternalDialogParser())) {s = 6;}

                        else if ( (LA190_0==An_1) && (synpred30_InternalDialogParser())) {s = 7;}

                        else if ( (LA190_0==Any) && (synpred30_InternalDialogParser())) {s = 8;}

                        else if ( (LA190_0==Some) && (synpred30_InternalDialogParser())) {s = 9;}

                        else if ( (LA190_0==Another) && (synpred30_InternalDialogParser())) {s = 10;}

                        else if ( (LA190_0==The) && (synpred30_InternalDialogParser())) {s = 11;}

                        else if ( (LA190_0==The_1) && (synpred30_InternalDialogParser())) {s = 12;}

                        else if ( (LA190_0==RULE_STRING) && (synpred30_InternalDialogParser())) {s = 13;}

                        else if ( (LA190_0==RULE_NUMBER) && (synpred30_InternalDialogParser())) {s = 14;}

                        else if ( (LA190_0==True) && (synpred30_InternalDialogParser())) {s = 15;}

                        else if ( (LA190_0==False) && (synpred30_InternalDialogParser())) {s = 16;}

                        else if ( (LA190_0==PI) && (synpred30_InternalDialogParser())) {s = 17;}

                        else if ( (LA190_0==Known) && (synpred30_InternalDialogParser())) {s = 18;}

                        else if ( (LA190_0==E_1) && (synpred30_InternalDialogParser())) {s = 19;}

                        else if ( (LA190_0==HyphenMinusHyphenMinus) && (synpred30_InternalDialogParser())) {s = 20;}

                        else if ( (LA190_0==None) && (synpred30_InternalDialogParser())) {s = 21;}

                        else if ( (LA190_0==Type) && (synpred30_InternalDialogParser())) {s = 22;}

                        else if ( (LA190_0==Length) && (synpred30_InternalDialogParser())) {s = 23;}

                        else if ( (LA190_0==Count) && (synpred30_InternalDialogParser())) {s = 24;}

                        else if ( (LA190_0==Index) && (synpred30_InternalDialogParser())) {s = 25;}

                        else if ( (LA190_0==First) && (synpred30_InternalDialogParser())) {s = 26;}

                        else if ( (LA190_0==Last) && (synpred30_InternalDialogParser())) {s = 27;}

                        else if ( (LA190_0==Value) && (synpred30_InternalDialogParser())) {s = 28;}

                        else if ( (LA190_0==LeftSquareBracket) && (synpred30_InternalDialogParser())) {s = 29;}

                        else if ( (LA190_0==LeftCurlyBracket) && (synpred30_InternalDialogParser())) {s = 30;}

                        else if ( (LA190_0==Not) && (synpred30_InternalDialogParser())) {s = 31;}

                        else if ( (LA190_0==ExclamationMark) && (synpred30_InternalDialogParser())) {s = 32;}

                        else if ( (LA190_0==Only) && (synpred30_InternalDialogParser())) {s = 33;}

                        else if ( (LA190_0==HyphenMinus) ) {s = 34;}

                        else if ( (LA190_0==There) && (synpred30_InternalDialogParser())) {s = 35;}

                        else if ( (LA190_0==Element) && (synpred30_InternalDialogParser())) {s = 36;}

                        else if ( (LA190_0==EOF||LA190_0==Contains||LA190_0==Matching||LA190_0==Insert||LA190_0==Order||LA190_0==Where||LA190_0==Does||LA190_0==With||LA190_0==And||LA190_0==Has||(LA190_0>=ExclamationMarkEqualsSign && LA190_0<=AmpersandAmpersand)||(LA190_0>=LessThanSignEqualsSign && LA190_0<=EqualsSignEqualsSign)||LA190_0==GreaterThanSignEqualsSign||LA190_0==Is||LA190_0==Or||LA190_0==VerticalLineVerticalLine||LA190_0==PercentSign||(LA190_0>=RightParenthesis && LA190_0<=Comma)||LA190_0==Solidus||(LA190_0>=LessThanSign && LA190_0<=GreaterThanSign)||LA190_0==CircumflexAccent) ) {s = 37;}

                         
                        input.seek(index190_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA190_2 = input.LA(1);

                         
                        int index190_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index190_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA190_3 = input.LA(1);

                         
                        int index190_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index190_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA190_34 = input.LA(1);

                         
                        int index190_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index190_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 190, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_61s = "\35\uffff";
    static final String dfa_62s = "\1\43\2\uffff\11\4\5\uffff\13\4\1\uffff";
    static final String dfa_63s = "\1\u00c1\2\uffff\11\u00c0\5\uffff\13\u00c0\1\uffff";
    static final String dfa_64s = "\1\uffff\1\1\1\2\11\uffff\1\4\1\5\1\6\1\7\1\10\13\uffff\1\3";
    static final String dfa_65s = "\35\uffff}>";
    static final String[] dfa_66s = {
            "\1\11\35\uffff\1\17\20\uffff\1\17\1\16\1\uffff\1\17\3\uffff\2\17\13\uffff\1\17\2\uffff\1\17\11\uffff\1\17\6\uffff\1\10\2\uffff\1\16\1\17\3\uffff\1\12\1\uffff\1\7\11\uffff\1\13\3\uffff\1\17\4\uffff\1\5\1\17\1\6\15\uffff\1\1\14\uffff\1\3\1\uffff\1\20\2\uffff\1\4\1\17\1\20\1\uffff\1\15\1\uffff\2\2\1\14",
            "",
            "",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\1\uffff\1\17\14\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\2\uffff\1\17\1\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\1\uffff\1\17\3\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\2\uffff\1\17\1\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\1\uffff\1\17\3\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "",
            "",
            "",
            "",
            "",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\1\uffff\1\34\7\uffff\1\34\16\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            ""
    };

    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[][] dfa_66 = unpackEncodedStringArray(dfa_66s);

    class DFA220 extends DFA {

        public DFA220(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 220;
            this.eot = dfa_61;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "9239:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )";
        }
    }

    class DFA227 extends DFA {

        public DFA227(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 227;
            this.eot = dfa_61;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "9613:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )";
        }
    }

    class DFA234 extends DFA {

        public DFA234(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 234;
            this.eot = dfa_61;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "9987:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )";
        }
    }

    class DFA241 extends DFA {

        public DFA241(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 241;
            this.eot = dfa_61;
            this.eof = dfa_61;
            this.min = dfa_62;
            this.max = dfa_63;
            this.accept = dfa_64;
            this.special = dfa_65;
            this.transition = dfa_66;
        }
        public String getDescription() {
            return "10361:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )";
        }
    }
    static final String dfa_67s = "\17\uffff";
    static final String dfa_68s = "\1\43\5\uffff\1\51\1\uffff\2\51\5\uffff";
    static final String dfa_69s = "\1\u00ba\5\uffff\1\176\1\uffff\2\143\5\uffff";
    static final String dfa_70s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\uffff\1\6\2\uffff\1\7\1\10\1\11\1\12\1\13";
    static final String dfa_71s = "\17\uffff}>";
    static final String[] dfa_72s = {
            "\1\15\35\uffff\1\12\20\uffff\1\13\2\uffff\1\15\3\uffff\1\14\1\2\13\uffff\1\16\2\uffff\1\5\11\uffff\1\15\6\uffff\1\15\3\uffff\1\7\3\uffff\1\10\1\uffff\1\15\11\uffff\1\11\3\uffff\1\4\4\uffff\1\15\1\1\1\15\32\uffff\1\15\4\uffff\1\6\1\3",
            "",
            "",
            "",
            "",
            "",
            "\1\15\5\uffff\1\15\13\uffff\1\15\1\uffff\1\15\5\uffff\1\15\20\uffff\2\15\7\uffff\1\15\1\uffff\3\15\1\uffff\1\15\32\uffff\1\7",
            "",
            "\1\15\5\uffff\1\15\13\uffff\1\15\1\uffff\1\15\3\uffff\1\12\1\uffff\1\15\20\uffff\2\15\3\uffff\1\14\3\uffff\1\15\1\uffff\3\15\1\uffff\1\15",
            "\1\15\5\uffff\1\15\13\uffff\1\15\1\uffff\1\15\3\uffff\1\12\1\uffff\1\15\20\uffff\2\15\3\uffff\1\14\3\uffff\1\15\1\uffff\3\15\1\uffff\1\15",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[][] dfa_72 = unpackEncodedStringArray(dfa_72s);

    class DFA254 extends DFA {

        public DFA254(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 254;
            this.eot = dfa_67;
            this.eof = dfa_67;
            this.min = dfa_68;
            this.max = dfa_69;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "11001:2: (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x4480089920612BF0L,0x1414500000C00040L,0x8A10008002804814L,0x0000000000000001L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0004000000000000L,0x0000000000010000L,0x0000288000000000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0000288000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000288000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x8000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000000L,0x0080000000010000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000090000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000200004000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x4480089920612BF0L,0x1414500000C00040L,0x8A10018002844815L,0x0000000000000001L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x4480089920612BF0L,0x1414500000C00040L,0x8A10008002844815L,0x0000000000000001L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x4480089920612BF0L,0x1414520000C00040L,0x8A10008002844814L,0x0000000000000001L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000880000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0040000000000000L,0x8100000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L,0x8000000000000400L,0x0000000000000001L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x2000000004080000L,0xA440108001001000L,0x0000000000000003L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000800000000L,0x0400000000000000L,0x8210000002804014L,0x0000000000000001L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000800000000L,0x0400000000000000L,0x0210000002804014L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L,0x8000080300000400L,0x0000000000000001L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000088000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x2000180000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x2080110000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0080010000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x2000100000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x2000120000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x2000100000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x3000180000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0040000000100002L,0x8140000000000000L,0x0000000300000500L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L,0x0200000000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x4480089920612BF0L,0x1414700000C20040L,0x8A10008002804814L,0x0000000000000001L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L,0x0840008000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0200000000000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000010000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x2000000004080000L,0xA440100001001000L,0x0000000000000003L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0001000000000002L,0x0000004000000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x1000080000000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000000L,0x2000000008002000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0020000008000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000100L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x2000000004080000L,0xA440000001000000L,0x0000000000000003L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x8000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x2000000004080000L,0xA4C0100001001000L,0x0000000000000003L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0080080000000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x8000080000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0002020800000000L,0x65080244062C0012L,0xAE5010A003845014L,0x0000000000000003L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0002020800000000L,0x65082244062C0012L,0xAE5010A003845014L,0x0000000000000003L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000001L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000080000000L,0x0000000000000000L,0x8000020000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x8000020000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L,0x8000080000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0002020800000000L,0x65080244062C0002L,0xAE5010A003845014L,0x0000000000000003L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000002L,0x0000000040000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L,0x8000000000000040L,0x0000000000000001L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000002L,0x0000800000000000L,0x8000080000000040L,0x0000000000000001L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000001400000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000020008L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000010000002L,0x0001000000000000L,0x0002000100110000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L,0x0000000000001000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0005000000480000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000140000000000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000424000000000L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x8000000280000600L,0x0000000000000001L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0002020800000002L,0x65080244062C0002L,0xAE5010A003845414L,0x0000000000000003L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x8000000000000400L,0x0000000000000001L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L,0x8000000280000600L,0x0000000000000001L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0002020800000002L,0xE5080244062C0002L,0xAE5010A003845414L,0x0000000000000003L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L,0x8000000000000400L,0x0000000000000001L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x8000080280000600L,0x0000000000000001L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x8000000000000400L,0x0000000000000001L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0002020800000002L,0x65080244062C0002L,0xAE5018A003845414L,0x0000000000000003L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x8000080000000400L,0x0000000000000001L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L,0x8000080280000600L,0x0000000000000001L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0002020800000002L,0xE5080244062C0012L,0xAE5018A003845414L,0x0000000000000003L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000002L,0x8000000000000000L,0x8000080000000400L,0x0000000000000001L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0100000800000000L,0x65080244062C8002L,0xAE5010A003845014L,0x0000000000000003L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000800000000L,0x65080244062C0002L,0xAE5010A003845014L,0x0000000000000003L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000800000000L,0x64080240062C0002L,0xAE50008003844014L,0x0000000000000003L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x6C80889920612BF0L,0x1414500BA0F00048L,0x8A10008002804814L,0x0000000000000001L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L,0x0040000000000000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0002020800000000L,0x65080244062C0012L,0xAED018A003845014L,0x0000000000000003L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0002020800000000L,0x65080244062C0012L,0xAE5019A003845014L,0x0000000000000003L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x1040080000000000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x2800820000000000L,0x0000000BA0300008L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0420000000000000L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x2000140000000000L});

}
