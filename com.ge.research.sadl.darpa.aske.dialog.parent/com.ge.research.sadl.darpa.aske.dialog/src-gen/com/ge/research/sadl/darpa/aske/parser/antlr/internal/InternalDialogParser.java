package com.ge.research.sadl.darpa.aske.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.ge.research.sadl.darpa.aske.services.DialogGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalDialogParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "NonNegativeInteger", "NonPositiveInteger", "NegativeInteger", "PositiveInteger", "AnySimpleType", "Base64Binary", "Relationship", "UnsignedByte", "Symmetrical", "UnsignedInt", "Deductions", "Annotation", "GYearMonth", "Transitive", "Construct", "Described", "Describes", "GMonthDay", "HexBinary", "Instances", "TopLevel", "Equation", "Explain", "External", "Contains", "DateTime", "Disjoint", "Distinct", "Duration", "Matching", "Property", "Another", "Boolean", "Classes", "Contain", "Decimal", "Default", "Element", "Exactly", "Integer", "Inverse", "Located", "Returns", "Seventh", "Subject", "Sublist", "Version", "Print", "Update", "Write", "Always", "AnyURI", "Before", "Delete", "Double", "Eighth", "Exists", "Fourth", "GMonth", "Import", "Insert", "Length", "Return", "Second", "Select", "Single", "String", "Unique", "Values", "Expr", "Graph", "Model", "Read", "Stage", "Test", "After", "Alias", "Class", "Count", "False", "Fifth", "First", "Float", "GYear", "Given", "Index", "Known", "Least", "Level", "Ninth", "Order", "Other", "Sixth", "Tenth", "There", "Third", "Types", "Using", "Value", "Where", "List", "None", "Rule", "What", "Byte", "Data", "Date", "Desc", "Does", "From", "GDay", "Have", "Last", "Long", "Many", "Most", "Must", "Note", "Only", "Same", "Some", "Then", "Time", "True", "Type", "What_1", "With", "FullStopFullStopFullStop", "Ask", "CM", "How", "The", "And", "Any", "Are", "Asc", "Ask_1", "Can", "For", "Has", "How_1", "Int", "Not", "One", "The_1", "Uri", "ExclamationMarkEqualsSign", "AmpersandAmpersand", "HyphenMinusHyphenMinus", "LessThanSignEqualsSign", "EqualsSignEqualsSign", "EqualsSignGreaterThanSign", "GreaterThanSignEqualsSign", "An", "PI", "An_1", "As", "At", "Be", "By", "If", "In", "Is", "Of", "Or", "To", "VerticalLineVerticalLine", "ExclamationMark", "PercentSign", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "LessThanSign", "EqualsSign", "GreaterThanSign", "QuestionMark", "A", "E", "LeftSquareBracket", "RightSquareBracket", "CircumflexAccent", "A_1", "E_1", "LeftCurlyBracket", "RightCurlyBracket", "RULE_NUMBER", "RULE_WS", "RULE_ID", "RULE_QNAME_TERMINAL", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_ANY_OTHER"
    };
    public static final int Delete=57;
    public static final int Described=19;
    public static final int Ask_1=140;
    public static final int Or=168;
    public static final int EqualsSignGreaterThanSign=155;
    public static final int String=70;
    public static final int Insert=64;
    public static final int Must=120;
    public static final int LessThanSign=182;
    public static final int Print=51;
    public static final int Distinct=31;
    public static final int Decimal=39;
    public static final int Least=91;
    public static final int Stage=77;
    public static final int Then=125;
    public static final int Classes=37;
    public static final int GreaterThanSign=184;
    public static final int RULE_ID=197;
    public static final int GreaterThanSignEqualsSign=156;
    public static final int Describes=20;
    public static final int Float=86;
    public static final int How=134;
    public static final int Expr=73;
    public static final int Are=138;
    public static final int Note=121;
    public static final int Contains=28;
    public static final int Where=103;
    public static final int A=186;
    public static final int E=187;
    public static final int One=147;
    public static final int Transitive=17;
    public static final int An=157;
    public static final int The=135;
    public static final int Asc=139;
    public static final int As=160;
    public static final int At=161;
    public static final int Located=45;
    public static final int Ask=132;
    public static final int Disjoint=30;
    public static final int NegativeInteger=6;
    public static final int Many=118;
    public static final int Solidus=180;
    public static final int RightCurlyBracket=194;
    public static final int FullStop=179;
    public static final int Be=162;
    public static final int CM=133;
    public static final int UnsignedByte=11;
    public static final int Eighth=59;
    public static final int Length=65;
    public static final int Sixth=96;
    public static final int QuestionMark=185;
    public static final int Relationship=10;
    public static final int By=163;
    public static final int Select=68;
    public static final int After=79;
    public static final int Has=143;
    public static final int TopLevel=24;
    public static final int Other=95;
    public static final int HyphenMinusHyphenMinus=152;
    public static final int Types=100;
    public static final int Using=101;
    public static final int Index=89;
    public static final int Seventh=47;
    public static final int Desc=111;
    public static final int Last=116;
    public static final int There=98;
    public static final int Version=50;
    public static final int Test=78;
    public static final int List=104;
    public static final int First=85;
    public static final int To=169;
    public static final int Another=35;
    public static final int An_1=159;
    public static final int Same=123;
    public static final int For=142;
    public static final int RightParenthesis=174;
    public static final int Duration=32;
    public static final int Not=146;
    public static final int E_1=192;
    public static final int External=27;
    public static final int Long=117;
    public static final int Does=112;
    public static final int Unique=71;
    public static final int Class=81;
    public static final int Element=41;
    public static final int Time=126;
    public static final int What=107;
    public static final int With=130;
    public static final int RULE_SL_COMMENT=201;
    public static final int NonPositiveInteger=5;
    public static final int AmpersandAmpersand=151;
    public static final int Colon=181;
    public static final int EOF=-1;
    public static final int Asterisk=175;
    public static final int Return=66;
    public static final int NonNegativeInteger=4;
    public static final int LeftCurlyBracket=193;
    public static final int RULE_NUMBER=195;
    public static final int Subject=48;
    public static final int CircumflexAccent=190;
    public static final int Integer=43;
    public static final int Exactly=42;
    public static final int Exists=60;
    public static final int Base64Binary=9;
    public static final int Import=63;
    public static final int Values=72;
    public static final int Count=82;
    public static final int False=83;
    public static final int DateTime=29;
    public static final int The_1=148;
    public static final int LeftParenthesis=173;
    public static final int Inverse=44;
    public static final int Boolean=36;
    public static final int ExclamationMark=171;
    public static final int AnyURI=55;
    public static final int EqualsSignEqualsSign=154;
    public static final int Graph=74;
    public static final int Some=124;
    public static final int UnsignedInt=13;
    public static final int GYear=87;
    public static final int PlusSign=176;
    public static final int Byte=108;
    public static final int RULE_QNAME_TERMINAL=198;
    public static final int RULE_ML_COMMENT=200;
    public static final int Level=92;
    public static final int LeftSquareBracket=188;
    public static final int Always=54;
    public static final int Rule=106;
    public static final int If=164;
    public static final int HexBinary=22;
    public static final int Write=53;
    public static final int In=165;
    public static final int VerticalLineVerticalLine=170;
    public static final int Given=88;
    public static final int Is=166;
    public static final int Uri=149;
    public static final int Comma=177;
    public static final int HyphenMinus=178;
    public static final int Contain=38;
    public static final int LessThanSignEqualsSign=153;
    public static final int Property=34;
    public static final int Sublist=49;
    public static final int PositiveInteger=7;
    public static final int Default=40;
    public static final int Annotation=15;
    public static final int Instances=23;
    public static final int Type=128;
    public static final int Known=90;
    public static final int Model=75;
    public static final int ExclamationMarkEqualsSign=150;
    public static final int None=105;
    public static final int Most=119;
    public static final int GYearMonth=16;
    public static final int True=127;
    public static final int Update=52;
    public static final int FullStopFullStopFullStop=131;
    public static final int Matching=33;
    public static final int Read=76;
    public static final int Returns=46;
    public static final int PercentSign=172;
    public static final int Third=99;
    public static final int Fifth=84;
    public static final int Symmetrical=12;
    public static final int RightSquareBracket=189;
    public static final int Order=94;
    public static final int Have=115;
    public static final int Double=58;
    public static final int Can=141;
    public static final int GMonthDay=21;
    public static final int A_1=191;
    public static final int And=136;
    public static final int Value=102;
    public static final int Before=56;
    public static final int AnySimpleType=8;
    public static final int How_1=144;
    public static final int RULE_STRING=199;
    public static final int What_1=129;
    public static final int Any=137;
    public static final int Int=145;
    public static final int EqualsSign=183;
    public static final int Ninth=93;
    public static final int GMonth=62;
    public static final int RULE_WS=196;
    public static final int Explain=26;
    public static final int Equation=25;
    public static final int Only=122;
    public static final int Data=109;
    public static final int From=113;
    public static final int RULE_ANY_OTHER=202;
    public static final int Date=110;
    public static final int Second=67;
    public static final int GDay=114;
    public static final int Single=69;
    public static final int Alias=80;
    public static final int Of=167;
    public static final int Construct=18;
    public static final int PI=158;
    public static final int Deductions=14;
    public static final int Fourth=61;
    public static final int Tenth=97;

    // delegates
    // delegators


        public InternalDialogParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalDialogParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalDialogParser.tokenNames; }
    public String getGrammarFileName() { return "InternalDialogParser.g"; }



     	private DialogGrammarAccess grammarAccess;

        public InternalDialogParser(TokenStream input, DialogGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "DialogModel";
       	}

       	@Override
       	protected DialogGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleDialogModel"
    // InternalDialogParser.g:58:1: entryRuleDialogModel returns [EObject current=null] : iv_ruleDialogModel= ruleDialogModel EOF ;
    public final EObject entryRuleDialogModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDialogModel = null;


        try {
            // InternalDialogParser.g:58:52: (iv_ruleDialogModel= ruleDialogModel EOF )
            // InternalDialogParser.g:59:2: iv_ruleDialogModel= ruleDialogModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDialogModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDialogModel=ruleDialogModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDialogModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDialogModel"


    // $ANTLR start "ruleDialogModel"
    // InternalDialogParser.g:65:1: ruleDialogModel returns [EObject current=null] : this_SadlModel_0= ruleSadlModel ;
    public final EObject ruleDialogModel() throws RecognitionException {
        EObject current = null;

        EObject this_SadlModel_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:71:2: (this_SadlModel_0= ruleSadlModel )
            // InternalDialogParser.g:72:2: this_SadlModel_0= ruleSadlModel
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getDialogModelAccess().getSadlModelParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_SadlModel_0=ruleSadlModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SadlModel_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDialogModel"


    // $ANTLR start "entryRuleSadlModelElement"
    // InternalDialogParser.g:83:1: entryRuleSadlModelElement returns [EObject current=null] : iv_ruleSadlModelElement= ruleSadlModelElement EOF ;
    public final EObject entryRuleSadlModelElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlModelElement = null;


        try {
            // InternalDialogParser.g:83:57: (iv_ruleSadlModelElement= ruleSadlModelElement EOF )
            // InternalDialogParser.g:84:2: iv_ruleSadlModelElement= ruleSadlModelElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlModelElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlModelElement=ruleSadlModelElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlModelElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlModelElement"


    // $ANTLR start "ruleSadlModelElement"
    // InternalDialogParser.g:90:1: ruleSadlModelElement returns [EObject current=null] : ( (otherlv_0= CM (this_SadlStatement_1= ruleSadlStatement | this_EquationStatement_2= ruleEquationStatement | this_ExternalEquationStatement_3= ruleExternalEquationStatement ) ruleEOS ) | (otherlv_5= CM this_StringResponse_6= ruleStringResponse ruleEOS ) | (this_ModifiedAskStatement_8= ruleModifiedAskStatement ruleEOS ) | (this_WhatStatement_10= ruleWhatStatement ruleEOS ) | (this_HowManyValuesStatement_12= ruleHowManyValuesStatement ruleEOS ) ) ;
    public final EObject ruleSadlModelElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_5=null;
        EObject this_SadlStatement_1 = null;

        EObject this_EquationStatement_2 = null;

        EObject this_ExternalEquationStatement_3 = null;

        EObject this_StringResponse_6 = null;

        EObject this_ModifiedAskStatement_8 = null;

        EObject this_WhatStatement_10 = null;

        EObject this_HowManyValuesStatement_12 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:96:2: ( ( (otherlv_0= CM (this_SadlStatement_1= ruleSadlStatement | this_EquationStatement_2= ruleEquationStatement | this_ExternalEquationStatement_3= ruleExternalEquationStatement ) ruleEOS ) | (otherlv_5= CM this_StringResponse_6= ruleStringResponse ruleEOS ) | (this_ModifiedAskStatement_8= ruleModifiedAskStatement ruleEOS ) | (this_WhatStatement_10= ruleWhatStatement ruleEOS ) | (this_HowManyValuesStatement_12= ruleHowManyValuesStatement ruleEOS ) ) )
            // InternalDialogParser.g:97:2: ( (otherlv_0= CM (this_SadlStatement_1= ruleSadlStatement | this_EquationStatement_2= ruleEquationStatement | this_ExternalEquationStatement_3= ruleExternalEquationStatement ) ruleEOS ) | (otherlv_5= CM this_StringResponse_6= ruleStringResponse ruleEOS ) | (this_ModifiedAskStatement_8= ruleModifiedAskStatement ruleEOS ) | (this_WhatStatement_10= ruleWhatStatement ruleEOS ) | (this_HowManyValuesStatement_12= ruleHowManyValuesStatement ruleEOS ) )
            {
            // InternalDialogParser.g:97:2: ( (otherlv_0= CM (this_SadlStatement_1= ruleSadlStatement | this_EquationStatement_2= ruleEquationStatement | this_ExternalEquationStatement_3= ruleExternalEquationStatement ) ruleEOS ) | (otherlv_5= CM this_StringResponse_6= ruleStringResponse ruleEOS ) | (this_ModifiedAskStatement_8= ruleModifiedAskStatement ruleEOS ) | (this_WhatStatement_10= ruleWhatStatement ruleEOS ) | (this_HowManyValuesStatement_12= ruleHowManyValuesStatement ruleEOS ) )
            int alt2=5;
            switch ( input.LA(1) ) {
            case CM:
                {
                int LA2_1 = input.LA(2);

                if ( (LA2_1==Relationship||LA2_1==Equation||LA2_1==External||LA2_1==Another||LA2_1==Some||LA2_1==The||LA2_1==Any||LA2_1==The_1||LA2_1==An||LA2_1==An_1||LA2_1==A||LA2_1==A_1||LA2_1==LeftCurlyBracket||(LA2_1>=RULE_ID && LA2_1<=RULE_QNAME_TERMINAL)) ) {
                    alt2=1;
                }
                else if ( (LA2_1==RULE_STRING) ) {
                    alt2=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 2, 1, input);

                    throw nvae;
                }
                }
                break;
            case Ask:
            case Ask_1:
                {
                alt2=3;
                }
                break;
            case What:
            case What_1:
                {
                alt2=4;
                }
                break;
            case How:
            case How_1:
                {
                alt2=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }

            switch (alt2) {
                case 1 :
                    // InternalDialogParser.g:98:3: (otherlv_0= CM (this_SadlStatement_1= ruleSadlStatement | this_EquationStatement_2= ruleEquationStatement | this_ExternalEquationStatement_3= ruleExternalEquationStatement ) ruleEOS )
                    {
                    // InternalDialogParser.g:98:3: (otherlv_0= CM (this_SadlStatement_1= ruleSadlStatement | this_EquationStatement_2= ruleEquationStatement | this_ExternalEquationStatement_3= ruleExternalEquationStatement ) ruleEOS )
                    // InternalDialogParser.g:99:4: otherlv_0= CM (this_SadlStatement_1= ruleSadlStatement | this_EquationStatement_2= ruleEquationStatement | this_ExternalEquationStatement_3= ruleExternalEquationStatement ) ruleEOS
                    {
                    otherlv_0=(Token)match(input,CM,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSadlModelElementAccess().getCMKeyword_0_0());
                      			
                    }
                    // InternalDialogParser.g:103:4: (this_SadlStatement_1= ruleSadlStatement | this_EquationStatement_2= ruleEquationStatement | this_ExternalEquationStatement_3= ruleExternalEquationStatement )
                    int alt1=3;
                    switch ( input.LA(1) ) {
                    case Relationship:
                    case Another:
                    case Some:
                    case The:
                    case Any:
                    case The_1:
                    case An:
                    case An_1:
                    case A:
                    case A_1:
                    case LeftCurlyBracket:
                    case RULE_ID:
                    case RULE_QNAME_TERMINAL:
                        {
                        alt1=1;
                        }
                        break;
                    case Equation:
                        {
                        alt1=2;
                        }
                        break;
                    case External:
                        {
                        alt1=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 1, 0, input);

                        throw nvae;
                    }

                    switch (alt1) {
                        case 1 :
                            // InternalDialogParser.g:104:5: this_SadlStatement_1= ruleSadlStatement
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getSadlModelElementAccess().getSadlStatementParserRuleCall_0_1_0());
                              				
                            }
                            pushFollow(FOLLOW_4);
                            this_SadlStatement_1=ruleSadlStatement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_SadlStatement_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:113:5: this_EquationStatement_2= ruleEquationStatement
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getSadlModelElementAccess().getEquationStatementParserRuleCall_0_1_1());
                              				
                            }
                            pushFollow(FOLLOW_4);
                            this_EquationStatement_2=ruleEquationStatement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_EquationStatement_2;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:122:5: this_ExternalEquationStatement_3= ruleExternalEquationStatement
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getSadlModelElementAccess().getExternalEquationStatementParserRuleCall_0_1_2());
                              				
                            }
                            pushFollow(FOLLOW_4);
                            this_ExternalEquationStatement_3=ruleExternalEquationStatement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_ExternalEquationStatement_3;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getEOSParserRuleCall_0_2());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleEOS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:140:3: (otherlv_5= CM this_StringResponse_6= ruleStringResponse ruleEOS )
                    {
                    // InternalDialogParser.g:140:3: (otherlv_5= CM this_StringResponse_6= ruleStringResponse ruleEOS )
                    // InternalDialogParser.g:141:4: otherlv_5= CM this_StringResponse_6= ruleStringResponse ruleEOS
                    {
                    otherlv_5=(Token)match(input,CM,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getSadlModelElementAccess().getCMKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getStringResponseParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_4);
                    this_StringResponse_6=ruleStringResponse();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_StringResponse_6;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getEOSParserRuleCall_1_2());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleEOS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:162:3: (this_ModifiedAskStatement_8= ruleModifiedAskStatement ruleEOS )
                    {
                    // InternalDialogParser.g:162:3: (this_ModifiedAskStatement_8= ruleModifiedAskStatement ruleEOS )
                    // InternalDialogParser.g:163:4: this_ModifiedAskStatement_8= ruleModifiedAskStatement ruleEOS
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getModifiedAskStatementParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FOLLOW_4);
                    this_ModifiedAskStatement_8=ruleModifiedAskStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ModifiedAskStatement_8;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getEOSParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleEOS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:180:3: (this_WhatStatement_10= ruleWhatStatement ruleEOS )
                    {
                    // InternalDialogParser.g:180:3: (this_WhatStatement_10= ruleWhatStatement ruleEOS )
                    // InternalDialogParser.g:181:4: this_WhatStatement_10= ruleWhatStatement ruleEOS
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getWhatStatementParserRuleCall_3_0());
                      			
                    }
                    pushFollow(FOLLOW_4);
                    this_WhatStatement_10=ruleWhatStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_WhatStatement_10;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getEOSParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleEOS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:198:3: (this_HowManyValuesStatement_12= ruleHowManyValuesStatement ruleEOS )
                    {
                    // InternalDialogParser.g:198:3: (this_HowManyValuesStatement_12= ruleHowManyValuesStatement ruleEOS )
                    // InternalDialogParser.g:199:4: this_HowManyValuesStatement_12= ruleHowManyValuesStatement ruleEOS
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getHowManyValuesStatementParserRuleCall_4_0());
                      			
                    }
                    pushFollow(FOLLOW_4);
                    this_HowManyValuesStatement_12=ruleHowManyValuesStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_HowManyValuesStatement_12;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getEOSParserRuleCall_4_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleEOS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlModelElement"


    // $ANTLR start "entryRuleStringResponse"
    // InternalDialogParser.g:219:1: entryRuleStringResponse returns [EObject current=null] : iv_ruleStringResponse= ruleStringResponse EOF ;
    public final EObject entryRuleStringResponse() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringResponse = null;


        try {
            // InternalDialogParser.g:219:55: (iv_ruleStringResponse= ruleStringResponse EOF )
            // InternalDialogParser.g:220:2: iv_ruleStringResponse= ruleStringResponse EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringResponseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStringResponse=ruleStringResponse();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringResponse; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringResponse"


    // $ANTLR start "ruleStringResponse"
    // InternalDialogParser.g:226:1: ruleStringResponse returns [EObject current=null] : ( (lv_str_0_0= RULE_STRING ) ) ;
    public final EObject ruleStringResponse() throws RecognitionException {
        EObject current = null;

        Token lv_str_0_0=null;


        	enterRule();

        try {
            // InternalDialogParser.g:232:2: ( ( (lv_str_0_0= RULE_STRING ) ) )
            // InternalDialogParser.g:233:2: ( (lv_str_0_0= RULE_STRING ) )
            {
            // InternalDialogParser.g:233:2: ( (lv_str_0_0= RULE_STRING ) )
            // InternalDialogParser.g:234:3: (lv_str_0_0= RULE_STRING )
            {
            // InternalDialogParser.g:234:3: (lv_str_0_0= RULE_STRING )
            // InternalDialogParser.g:235:4: lv_str_0_0= RULE_STRING
            {
            lv_str_0_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_str_0_0, grammarAccess.getStringResponseAccess().getStrSTRINGTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getStringResponseRule());
              				}
              				setWithLastConsumed(
              					current,
              					"str",
              					lv_str_0_0,
              					"com.ge.research.sadl.SADL.STRING");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringResponse"


    // $ANTLR start "entryRuleModifiedAskStatement"
    // InternalDialogParser.g:254:1: entryRuleModifiedAskStatement returns [EObject current=null] : iv_ruleModifiedAskStatement= ruleModifiedAskStatement EOF ;
    public final EObject entryRuleModifiedAskStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModifiedAskStatement = null;


        try {
            // InternalDialogParser.g:254:61: (iv_ruleModifiedAskStatement= ruleModifiedAskStatement EOF )
            // InternalDialogParser.g:255:2: iv_ruleModifiedAskStatement= ruleModifiedAskStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModifiedAskStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModifiedAskStatement=ruleModifiedAskStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModifiedAskStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModifiedAskStatement"


    // $ANTLR start "ruleModifiedAskStatement"
    // InternalDialogParser.g:261:1: ruleModifiedAskStatement returns [EObject current=null] : ( () (otherlv_1= Ask | otherlv_2= Ask_1 ) ( ( (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression ) ) ) ) ;
    public final EObject ruleModifiedAskStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_expr_3_1 = null;

        EObject lv_expr_3_2 = null;

        EObject lv_expr_3_3 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:267:2: ( ( () (otherlv_1= Ask | otherlv_2= Ask_1 ) ( ( (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression ) ) ) ) )
            // InternalDialogParser.g:268:2: ( () (otherlv_1= Ask | otherlv_2= Ask_1 ) ( ( (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression ) ) ) )
            {
            // InternalDialogParser.g:268:2: ( () (otherlv_1= Ask | otherlv_2= Ask_1 ) ( ( (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression ) ) ) )
            // InternalDialogParser.g:269:3: () (otherlv_1= Ask | otherlv_2= Ask_1 ) ( ( (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression ) ) )
            {
            // InternalDialogParser.g:269:3: ()
            // InternalDialogParser.g:270:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getModifiedAskStatementAccess().getModifiedAskStatementAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:276:3: (otherlv_1= Ask | otherlv_2= Ask_1 )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==Ask) ) {
                alt3=1;
            }
            else if ( (LA3_0==Ask_1) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalDialogParser.g:277:4: otherlv_1= Ask
                    {
                    otherlv_1=(Token)match(input,Ask,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getModifiedAskStatementAccess().getAskKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:282:4: otherlv_2= Ask_1
                    {
                    otherlv_2=(Token)match(input,Ask_1,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getModifiedAskStatementAccess().getAskKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:287:3: ( ( (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression ) ) )
            // InternalDialogParser.g:288:4: ( (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression ) )
            {
            // InternalDialogParser.g:288:4: ( (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression ) )
            // InternalDialogParser.g:289:5: (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression )
            {
            // InternalDialogParser.g:289:5: (lv_expr_3_1= ruleConstructExpression | lv_expr_3_2= ruleAskExpression | lv_expr_3_3= ruleExpression )
            int alt4=3;
            switch ( input.LA(1) ) {
            case Construct:
                {
                alt4=1;
                }
                break;
            case Ask_1:
                {
                alt4=2;
                }
                break;
            case Another:
            case Element:
            case Sublist:
            case Length:
            case Select:
            case Count:
            case False:
            case First:
            case Index:
            case Known:
            case There:
            case Value:
            case None:
            case Last:
            case Only:
            case Some:
            case True:
            case Type:
            case The:
            case Any:
            case Not:
            case The_1:
            case HyphenMinusHyphenMinus:
            case An:
            case PI:
            case An_1:
            case ExclamationMark:
            case LeftParenthesis:
            case HyphenMinus:
            case A:
            case LeftSquareBracket:
            case A_1:
            case E_1:
            case LeftCurlyBracket:
            case RULE_NUMBER:
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
            case RULE_STRING:
                {
                alt4=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalDialogParser.g:290:6: lv_expr_3_1= ruleConstructExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModifiedAskStatementAccess().getExprConstructExpressionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_1=ruleConstructExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModifiedAskStatementRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_1,
                      							"com.ge.research.sadl.SADL.ConstructExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:306:6: lv_expr_3_2= ruleAskExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModifiedAskStatementAccess().getExprAskExpressionParserRuleCall_2_0_1());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_2=ruleAskExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModifiedAskStatementRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_2,
                      							"com.ge.research.sadl.SADL.AskExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:322:6: lv_expr_3_3= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModifiedAskStatementAccess().getExprExpressionParserRuleCall_2_0_2());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_3=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModifiedAskStatementRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_3,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModifiedAskStatement"


    // $ANTLR start "entryRuleWhatStatement"
    // InternalDialogParser.g:344:1: entryRuleWhatStatement returns [EObject current=null] : iv_ruleWhatStatement= ruleWhatStatement EOF ;
    public final EObject entryRuleWhatStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhatStatement = null;


        try {
            // InternalDialogParser.g:344:54: (iv_ruleWhatStatement= ruleWhatStatement EOF )
            // InternalDialogParser.g:345:2: iv_ruleWhatStatement= ruleWhatStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhatStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWhatStatement=ruleWhatStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhatStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhatStatement"


    // $ANTLR start "ruleWhatStatement"
    // InternalDialogParser.g:351:1: ruleWhatStatement returns [EObject current=null] : ( () (otherlv_1= What | otherlv_2= What_1 ) ( ( (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement ) ) ) ) ;
    public final EObject ruleWhatStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_stmt_3_1 = null;

        EObject lv_stmt_3_2 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:357:2: ( ( () (otherlv_1= What | otherlv_2= What_1 ) ( ( (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement ) ) ) ) )
            // InternalDialogParser.g:358:2: ( () (otherlv_1= What | otherlv_2= What_1 ) ( ( (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement ) ) ) )
            {
            // InternalDialogParser.g:358:2: ( () (otherlv_1= What | otherlv_2= What_1 ) ( ( (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement ) ) ) )
            // InternalDialogParser.g:359:3: () (otherlv_1= What | otherlv_2= What_1 ) ( ( (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement ) ) )
            {
            // InternalDialogParser.g:359:3: ()
            // InternalDialogParser.g:360:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getWhatStatementAccess().getWhatStatementAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:366:3: (otherlv_1= What | otherlv_2= What_1 )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==What) ) {
                alt5=1;
            }
            else if ( (LA5_0==What_1) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalDialogParser.g:367:4: otherlv_1= What
                    {
                    otherlv_1=(Token)match(input,What,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getWhatStatementAccess().getWhatKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:372:4: otherlv_2= What_1
                    {
                    otherlv_2=(Token)match(input,What_1,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getWhatStatementAccess().getWhatKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:377:3: ( ( (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement ) ) )
            // InternalDialogParser.g:378:4: ( (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement ) )
            {
            // InternalDialogParser.g:378:4: ( (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement ) )
            // InternalDialogParser.g:379:5: (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement )
            {
            // InternalDialogParser.g:379:5: (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==Is) ) {
                alt6=1;
            }
            else if ( (LA6_0==Values||LA6_0==Value) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalDialogParser.g:380:6: lv_stmt_3_1= ruleWhatIsStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWhatStatementAccess().getStmtWhatIsStatementParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_stmt_3_1=ruleWhatIsStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWhatStatementRule());
                      						}
                      						set(
                      							current,
                      							"stmt",
                      							lv_stmt_3_1,
                      							"com.ge.research.sadl.darpa.aske.Dialog.WhatIsStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:396:6: lv_stmt_3_2= ruleWhatValuesStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWhatStatementAccess().getStmtWhatValuesStatementParserRuleCall_2_0_1());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_stmt_3_2=ruleWhatValuesStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWhatStatementRule());
                      						}
                      						set(
                      							current,
                      							"stmt",
                      							lv_stmt_3_2,
                      							"com.ge.research.sadl.darpa.aske.Dialog.WhatValuesStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhatStatement"


    // $ANTLR start "entryRuleWhatIsStatement"
    // InternalDialogParser.g:418:1: entryRuleWhatIsStatement returns [EObject current=null] : iv_ruleWhatIsStatement= ruleWhatIsStatement EOF ;
    public final EObject entryRuleWhatIsStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhatIsStatement = null;


        try {
            // InternalDialogParser.g:418:56: (iv_ruleWhatIsStatement= ruleWhatIsStatement EOF )
            // InternalDialogParser.g:419:2: iv_ruleWhatIsStatement= ruleWhatIsStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhatIsStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWhatIsStatement=ruleWhatIsStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhatIsStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhatIsStatement"


    // $ANTLR start "ruleWhatIsStatement"
    // InternalDialogParser.g:425:1: ruleWhatIsStatement returns [EObject current=null] : ( () otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlResource ) ) ) ;
    public final EObject ruleWhatIsStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_article_2_0 = null;

        EObject lv_target_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:431:2: ( ( () otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlResource ) ) ) )
            // InternalDialogParser.g:432:2: ( () otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlResource ) ) )
            {
            // InternalDialogParser.g:432:2: ( () otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlResource ) ) )
            // InternalDialogParser.g:433:3: () otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlResource ) )
            {
            // InternalDialogParser.g:433:3: ()
            // InternalDialogParser.g:434:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getWhatIsStatementAccess().getWhatIsStatementAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Is,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getWhatIsStatementAccess().getIsKeyword_1());
              		
            }
            // InternalDialogParser.g:444:3: ( (lv_article_2_0= ruleAnArticle ) )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==Another||LA7_0==Some||LA7_0==The||LA7_0==Any||LA7_0==The_1||LA7_0==An||LA7_0==An_1||LA7_0==A||LA7_0==A_1) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // InternalDialogParser.g:445:4: (lv_article_2_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:445:4: (lv_article_2_0= ruleAnArticle )
                    // InternalDialogParser.g:446:5: lv_article_2_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getWhatIsStatementAccess().getArticleAnArticleParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_9);
                    lv_article_2_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getWhatIsStatementRule());
                      					}
                      					set(
                      						current,
                      						"article",
                      						lv_article_2_0,
                      						"com.ge.research.sadl.SADL.AnArticle");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalDialogParser.g:463:3: ( (lv_target_3_0= ruleSadlResource ) )
            // InternalDialogParser.g:464:4: (lv_target_3_0= ruleSadlResource )
            {
            // InternalDialogParser.g:464:4: (lv_target_3_0= ruleSadlResource )
            // InternalDialogParser.g:465:5: lv_target_3_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWhatIsStatementAccess().getTargetSadlResourceParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_target_3_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWhatIsStatementRule());
              					}
              					set(
              						current,
              						"target",
              						lv_target_3_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhatIsStatement"


    // $ANTLR start "entryRuleWhatValuesStatement"
    // InternalDialogParser.g:486:1: entryRuleWhatValuesStatement returns [EObject current=null] : iv_ruleWhatValuesStatement= ruleWhatValuesStatement EOF ;
    public final EObject entryRuleWhatValuesStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhatValuesStatement = null;


        try {
            // InternalDialogParser.g:486:60: (iv_ruleWhatValuesStatement= ruleWhatValuesStatement EOF )
            // InternalDialogParser.g:487:2: iv_ruleWhatValuesStatement= ruleWhatValuesStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhatValuesStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWhatValuesStatement=ruleWhatValuesStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhatValuesStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhatValuesStatement"


    // $ANTLR start "ruleWhatValuesStatement"
    // InternalDialogParser.g:493:1: ruleWhatValuesStatement returns [EObject current=null] : ( () (otherlv_1= Value | otherlv_2= Values ) ( ( (lv_typ_3_1= Can | lv_typ_3_2= Must ) ) ) ( (lv_prop_4_0= ruleSadlResource ) ) otherlv_5= Of ( (lv_article_6_0= ruleAnArticle ) )? ( (lv_cls_7_0= ruleSadlPrimaryTypeReference ) ) otherlv_8= Have ) ;
    public final EObject ruleWhatValuesStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_typ_3_1=null;
        Token lv_typ_3_2=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_prop_4_0 = null;

        AntlrDatatypeRuleToken lv_article_6_0 = null;

        EObject lv_cls_7_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:499:2: ( ( () (otherlv_1= Value | otherlv_2= Values ) ( ( (lv_typ_3_1= Can | lv_typ_3_2= Must ) ) ) ( (lv_prop_4_0= ruleSadlResource ) ) otherlv_5= Of ( (lv_article_6_0= ruleAnArticle ) )? ( (lv_cls_7_0= ruleSadlPrimaryTypeReference ) ) otherlv_8= Have ) )
            // InternalDialogParser.g:500:2: ( () (otherlv_1= Value | otherlv_2= Values ) ( ( (lv_typ_3_1= Can | lv_typ_3_2= Must ) ) ) ( (lv_prop_4_0= ruleSadlResource ) ) otherlv_5= Of ( (lv_article_6_0= ruleAnArticle ) )? ( (lv_cls_7_0= ruleSadlPrimaryTypeReference ) ) otherlv_8= Have )
            {
            // InternalDialogParser.g:500:2: ( () (otherlv_1= Value | otherlv_2= Values ) ( ( (lv_typ_3_1= Can | lv_typ_3_2= Must ) ) ) ( (lv_prop_4_0= ruleSadlResource ) ) otherlv_5= Of ( (lv_article_6_0= ruleAnArticle ) )? ( (lv_cls_7_0= ruleSadlPrimaryTypeReference ) ) otherlv_8= Have )
            // InternalDialogParser.g:501:3: () (otherlv_1= Value | otherlv_2= Values ) ( ( (lv_typ_3_1= Can | lv_typ_3_2= Must ) ) ) ( (lv_prop_4_0= ruleSadlResource ) ) otherlv_5= Of ( (lv_article_6_0= ruleAnArticle ) )? ( (lv_cls_7_0= ruleSadlPrimaryTypeReference ) ) otherlv_8= Have
            {
            // InternalDialogParser.g:501:3: ()
            // InternalDialogParser.g:502:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getWhatValuesStatementAccess().getWhatValuesStatementAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:508:3: (otherlv_1= Value | otherlv_2= Values )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==Value) ) {
                alt8=1;
            }
            else if ( (LA8_0==Values) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalDialogParser.g:509:4: otherlv_1= Value
                    {
                    otherlv_1=(Token)match(input,Value,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getWhatValuesStatementAccess().getValueKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:514:4: otherlv_2= Values
                    {
                    otherlv_2=(Token)match(input,Values,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getWhatValuesStatementAccess().getValuesKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:519:3: ( ( (lv_typ_3_1= Can | lv_typ_3_2= Must ) ) )
            // InternalDialogParser.g:520:4: ( (lv_typ_3_1= Can | lv_typ_3_2= Must ) )
            {
            // InternalDialogParser.g:520:4: ( (lv_typ_3_1= Can | lv_typ_3_2= Must ) )
            // InternalDialogParser.g:521:5: (lv_typ_3_1= Can | lv_typ_3_2= Must )
            {
            // InternalDialogParser.g:521:5: (lv_typ_3_1= Can | lv_typ_3_2= Must )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==Can) ) {
                alt9=1;
            }
            else if ( (LA9_0==Must) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalDialogParser.g:522:6: lv_typ_3_1= Can
                    {
                    lv_typ_3_1=(Token)match(input,Can,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_typ_3_1, grammarAccess.getWhatValuesStatementAccess().getTypCanKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getWhatValuesStatementRule());
                      						}
                      						setWithLastConsumed(current, "typ", lv_typ_3_1, null);
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:533:6: lv_typ_3_2= Must
                    {
                    lv_typ_3_2=(Token)match(input,Must,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_typ_3_2, grammarAccess.getWhatValuesStatementAccess().getTypMustKeyword_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getWhatValuesStatementRule());
                      						}
                      						setWithLastConsumed(current, "typ", lv_typ_3_2, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalDialogParser.g:546:3: ( (lv_prop_4_0= ruleSadlResource ) )
            // InternalDialogParser.g:547:4: (lv_prop_4_0= ruleSadlResource )
            {
            // InternalDialogParser.g:547:4: (lv_prop_4_0= ruleSadlResource )
            // InternalDialogParser.g:548:5: lv_prop_4_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWhatValuesStatementAccess().getPropSadlResourceParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_11);
            lv_prop_4_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWhatValuesStatementRule());
              					}
              					set(
              						current,
              						"prop",
              						lv_prop_4_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,Of,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getWhatValuesStatementAccess().getOfKeyword_4());
              		
            }
            // InternalDialogParser.g:569:3: ( (lv_article_6_0= ruleAnArticle ) )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==Another||LA10_0==Some||LA10_0==The||LA10_0==Any||LA10_0==The_1||LA10_0==An||LA10_0==An_1||LA10_0==A||LA10_0==A_1) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalDialogParser.g:570:4: (lv_article_6_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:570:4: (lv_article_6_0= ruleAnArticle )
                    // InternalDialogParser.g:571:5: lv_article_6_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getWhatValuesStatementAccess().getArticleAnArticleParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_12);
                    lv_article_6_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getWhatValuesStatementRule());
                      					}
                      					set(
                      						current,
                      						"article",
                      						lv_article_6_0,
                      						"com.ge.research.sadl.SADL.AnArticle");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalDialogParser.g:588:3: ( (lv_cls_7_0= ruleSadlPrimaryTypeReference ) )
            // InternalDialogParser.g:589:4: (lv_cls_7_0= ruleSadlPrimaryTypeReference )
            {
            // InternalDialogParser.g:589:4: (lv_cls_7_0= ruleSadlPrimaryTypeReference )
            // InternalDialogParser.g:590:5: lv_cls_7_0= ruleSadlPrimaryTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWhatValuesStatementAccess().getClsSadlPrimaryTypeReferenceParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_cls_7_0=ruleSadlPrimaryTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWhatValuesStatementRule());
              					}
              					set(
              						current,
              						"cls",
              						lv_cls_7_0,
              						"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_8=(Token)match(input,Have,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getWhatValuesStatementAccess().getHaveKeyword_7());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhatValuesStatement"


    // $ANTLR start "entryRuleHowManyValuesStatement"
    // InternalDialogParser.g:615:1: entryRuleHowManyValuesStatement returns [EObject current=null] : iv_ruleHowManyValuesStatement= ruleHowManyValuesStatement EOF ;
    public final EObject entryRuleHowManyValuesStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHowManyValuesStatement = null;


        try {
            // InternalDialogParser.g:615:63: (iv_ruleHowManyValuesStatement= ruleHowManyValuesStatement EOF )
            // InternalDialogParser.g:616:2: iv_ruleHowManyValuesStatement= ruleHowManyValuesStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHowManyValuesStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHowManyValuesStatement=ruleHowManyValuesStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHowManyValuesStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHowManyValuesStatement"


    // $ANTLR start "ruleHowManyValuesStatement"
    // InternalDialogParser.g:622:1: ruleHowManyValuesStatement returns [EObject current=null] : ( () (otherlv_1= How | otherlv_2= How_1 ) otherlv_3= Many otherlv_4= Values otherlv_5= Of ( (lv_prop_6_0= ruleSadlResource ) ) (otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) ) )? otherlv_10= Can ( (lv_article_11_0= ruleAnArticle ) )? ( (lv_cls_12_0= ruleSadlPrimaryTypeReference ) ) otherlv_13= Have ) ;
    public final EObject ruleHowManyValuesStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_13=null;
        EObject lv_prop_6_0 = null;

        EObject lv_typ_9_0 = null;

        AntlrDatatypeRuleToken lv_article_11_0 = null;

        EObject lv_cls_12_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:628:2: ( ( () (otherlv_1= How | otherlv_2= How_1 ) otherlv_3= Many otherlv_4= Values otherlv_5= Of ( (lv_prop_6_0= ruleSadlResource ) ) (otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) ) )? otherlv_10= Can ( (lv_article_11_0= ruleAnArticle ) )? ( (lv_cls_12_0= ruleSadlPrimaryTypeReference ) ) otherlv_13= Have ) )
            // InternalDialogParser.g:629:2: ( () (otherlv_1= How | otherlv_2= How_1 ) otherlv_3= Many otherlv_4= Values otherlv_5= Of ( (lv_prop_6_0= ruleSadlResource ) ) (otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) ) )? otherlv_10= Can ( (lv_article_11_0= ruleAnArticle ) )? ( (lv_cls_12_0= ruleSadlPrimaryTypeReference ) ) otherlv_13= Have )
            {
            // InternalDialogParser.g:629:2: ( () (otherlv_1= How | otherlv_2= How_1 ) otherlv_3= Many otherlv_4= Values otherlv_5= Of ( (lv_prop_6_0= ruleSadlResource ) ) (otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) ) )? otherlv_10= Can ( (lv_article_11_0= ruleAnArticle ) )? ( (lv_cls_12_0= ruleSadlPrimaryTypeReference ) ) otherlv_13= Have )
            // InternalDialogParser.g:630:3: () (otherlv_1= How | otherlv_2= How_1 ) otherlv_3= Many otherlv_4= Values otherlv_5= Of ( (lv_prop_6_0= ruleSadlResource ) ) (otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) ) )? otherlv_10= Can ( (lv_article_11_0= ruleAnArticle ) )? ( (lv_cls_12_0= ruleSadlPrimaryTypeReference ) ) otherlv_13= Have
            {
            // InternalDialogParser.g:630:3: ()
            // InternalDialogParser.g:631:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getHowManyValuesStatementAccess().getHowManyValuesStatementAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:637:3: (otherlv_1= How | otherlv_2= How_1 )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==How) ) {
                alt11=1;
            }
            else if ( (LA11_0==How_1) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalDialogParser.g:638:4: otherlv_1= How
                    {
                    otherlv_1=(Token)match(input,How,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getHowManyValuesStatementAccess().getHowKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:643:4: otherlv_2= How_1
                    {
                    otherlv_2=(Token)match(input,How_1,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getHowManyValuesStatementAccess().getHowKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,Many,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getHowManyValuesStatementAccess().getManyKeyword_2());
              		
            }
            otherlv_4=(Token)match(input,Values,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getHowManyValuesStatementAccess().getValuesKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,Of,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getHowManyValuesStatementAccess().getOfKeyword_4());
              		
            }
            // InternalDialogParser.g:660:3: ( (lv_prop_6_0= ruleSadlResource ) )
            // InternalDialogParser.g:661:4: (lv_prop_6_0= ruleSadlResource )
            {
            // InternalDialogParser.g:661:4: (lv_prop_6_0= ruleSadlResource )
            // InternalDialogParser.g:662:5: lv_prop_6_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getHowManyValuesStatementAccess().getPropSadlResourceParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_prop_6_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getHowManyValuesStatementRule());
              					}
              					set(
              						current,
              						"prop",
              						lv_prop_6_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:679:3: (otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==Of) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalDialogParser.g:680:4: otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) )
                    {
                    otherlv_7=(Token)match(input,Of,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getHowManyValuesStatementAccess().getOfKeyword_6_0());
                      			
                    }
                    otherlv_8=(Token)match(input,Type,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getHowManyValuesStatementAccess().getTypeKeyword_6_1());
                      			
                    }
                    // InternalDialogParser.g:688:4: ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:689:5: (lv_typ_9_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:689:5: (lv_typ_9_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:690:6: lv_typ_9_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHowManyValuesStatementAccess().getTypSadlPrimaryTypeReferenceParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_typ_9_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHowManyValuesStatementRule());
                      						}
                      						set(
                      							current,
                      							"typ",
                      							lv_typ_9_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,Can,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getHowManyValuesStatementAccess().getCanKeyword_7());
              		
            }
            // InternalDialogParser.g:712:3: ( (lv_article_11_0= ruleAnArticle ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==Another||LA13_0==Some||LA13_0==The||LA13_0==Any||LA13_0==The_1||LA13_0==An||LA13_0==An_1||LA13_0==A||LA13_0==A_1) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // InternalDialogParser.g:713:4: (lv_article_11_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:713:4: (lv_article_11_0= ruleAnArticle )
                    // InternalDialogParser.g:714:5: lv_article_11_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getHowManyValuesStatementAccess().getArticleAnArticleParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_12);
                    lv_article_11_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getHowManyValuesStatementRule());
                      					}
                      					set(
                      						current,
                      						"article",
                      						lv_article_11_0,
                      						"com.ge.research.sadl.SADL.AnArticle");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalDialogParser.g:731:3: ( (lv_cls_12_0= ruleSadlPrimaryTypeReference ) )
            // InternalDialogParser.g:732:4: (lv_cls_12_0= ruleSadlPrimaryTypeReference )
            {
            // InternalDialogParser.g:732:4: (lv_cls_12_0= ruleSadlPrimaryTypeReference )
            // InternalDialogParser.g:733:5: lv_cls_12_0= ruleSadlPrimaryTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getHowManyValuesStatementAccess().getClsSadlPrimaryTypeReferenceParserRuleCall_9_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_cls_12_0=ruleSadlPrimaryTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getHowManyValuesStatementRule());
              					}
              					set(
              						current,
              						"cls",
              						lv_cls_12_0,
              						"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_13=(Token)match(input,Have,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getHowManyValuesStatementAccess().getHaveKeyword_10());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHowManyValuesStatement"


    // $ANTLR start "entryRuleEOS"
    // InternalDialogParser.g:758:1: entryRuleEOS returns [String current=null] : iv_ruleEOS= ruleEOS EOF ;
    public final String entryRuleEOS() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEOS = null;


        try {
            // InternalDialogParser.g:758:43: (iv_ruleEOS= ruleEOS EOF )
            // InternalDialogParser.g:759:2: iv_ruleEOS= ruleEOS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEOSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEOS=ruleEOS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEOS.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEOS"


    // $ANTLR start "ruleEOS"
    // InternalDialogParser.g:765:1: ruleEOS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_EOS_0= superEOS | kw= QuestionMark ) ;
    public final AntlrDatatypeRuleToken ruleEOS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_EOS_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:771:2: ( (this_EOS_0= superEOS | kw= QuestionMark ) )
            // InternalDialogParser.g:772:2: (this_EOS_0= superEOS | kw= QuestionMark )
            {
            // InternalDialogParser.g:772:2: (this_EOS_0= superEOS | kw= QuestionMark )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==FullStop) ) {
                alt14=1;
            }
            else if ( (LA14_0==QuestionMark) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalDialogParser.g:773:3: this_EOS_0= superEOS
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEOSAccess().getEOSParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EOS_0=superEOS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_EOS_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:784:3: kw= QuestionMark
                    {
                    kw=(Token)match(input,QuestionMark,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEOSAccess().getQuestionMarkKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEOS"


    // $ANTLR start "entryRuleSadlModel"
    // InternalDialogParser.g:793:1: entryRuleSadlModel returns [EObject current=null] : iv_ruleSadlModel= ruleSadlModel EOF ;
    public final EObject entryRuleSadlModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlModel = null;


        try {
            // InternalDialogParser.g:793:50: (iv_ruleSadlModel= ruleSadlModel EOF )
            // InternalDialogParser.g:794:2: iv_ruleSadlModel= ruleSadlModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlModel=ruleSadlModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlModel"


    // $ANTLR start "ruleSadlModel"
    // InternalDialogParser.g:800:1: ruleSadlModel returns [EObject current=null] : (otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )* ) ;
    public final EObject ruleSadlModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_baseUri_1_0=null;
        Token otherlv_2=null;
        Token lv_alias_3_0=null;
        Token otherlv_4=null;
        Token lv_version_5_0=null;
        EObject lv_annotations_6_0 = null;

        EObject lv_imports_8_0 = null;

        EObject lv_elements_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:806:2: ( (otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )* ) )
            // InternalDialogParser.g:807:2: (otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )* )
            {
            // InternalDialogParser.g:807:2: (otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )* )
            // InternalDialogParser.g:808:3: otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )*
            {
            otherlv_0=(Token)match(input,Uri,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSadlModelAccess().getUriKeyword_0());
              		
            }
            // InternalDialogParser.g:812:3: ( (lv_baseUri_1_0= RULE_STRING ) )
            // InternalDialogParser.g:813:4: (lv_baseUri_1_0= RULE_STRING )
            {
            // InternalDialogParser.g:813:4: (lv_baseUri_1_0= RULE_STRING )
            // InternalDialogParser.g:814:5: lv_baseUri_1_0= RULE_STRING
            {
            lv_baseUri_1_0=(Token)match(input,RULE_STRING,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_baseUri_1_0, grammarAccess.getSadlModelAccess().getBaseUriSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlModelRule());
              					}
              					setWithLastConsumed(
              						current,
              						"baseUri",
              						lv_baseUri_1_0,
              						"com.ge.research.sadl.SADL.STRING");
              				
            }

            }


            }

            // InternalDialogParser.g:830:3: (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==Alias) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalDialogParser.g:831:4: otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) )
                    {
                    otherlv_2=(Token)match(input,Alias,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSadlModelAccess().getAliasKeyword_2_0());
                      			
                    }
                    // InternalDialogParser.g:835:4: ( (lv_alias_3_0= RULE_ID ) )
                    // InternalDialogParser.g:836:5: (lv_alias_3_0= RULE_ID )
                    {
                    // InternalDialogParser.g:836:5: (lv_alias_3_0= RULE_ID )
                    // InternalDialogParser.g:837:6: lv_alias_3_0= RULE_ID
                    {
                    lv_alias_3_0=(Token)match(input,RULE_ID,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_3_0, grammarAccess.getSadlModelAccess().getAliasIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlModelRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_3_0,
                      							"com.ge.research.sadl.SADL.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:854:3: (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==Version) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalDialogParser.g:855:4: otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) )
                    {
                    otherlv_4=(Token)match(input,Version,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSadlModelAccess().getVersionKeyword_3_0());
                      			
                    }
                    // InternalDialogParser.g:859:4: ( (lv_version_5_0= RULE_STRING ) )
                    // InternalDialogParser.g:860:5: (lv_version_5_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:860:5: (lv_version_5_0= RULE_STRING )
                    // InternalDialogParser.g:861:6: lv_version_5_0= RULE_STRING
                    {
                    lv_version_5_0=(Token)match(input,RULE_STRING,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_version_5_0, grammarAccess.getSadlModelAccess().getVersionSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlModelRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"version",
                      							lv_version_5_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:878:3: ( (lv_annotations_6_0= ruleSadlAnnotation ) )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==LeftParenthesis||LA17_0==Comma) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // InternalDialogParser.g:879:4: (lv_annotations_6_0= ruleSadlAnnotation )
            	    {
            	    // InternalDialogParser.g:879:4: (lv_annotations_6_0= ruleSadlAnnotation )
            	    // InternalDialogParser.g:880:5: lv_annotations_6_0= ruleSadlAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlModelAccess().getAnnotationsSadlAnnotationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_annotations_6_0=ruleSadlAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_6_0,
            	      						"com.ge.research.sadl.SADL.SadlAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSadlModelAccess().getEOSParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_23);
            ruleEOS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:904:3: ( (lv_imports_8_0= ruleSadlImport ) )*
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==Import) ) {
                    alt18=1;
                }


                switch (alt18) {
            	case 1 :
            	    // InternalDialogParser.g:905:4: (lv_imports_8_0= ruleSadlImport )
            	    {
            	    // InternalDialogParser.g:905:4: (lv_imports_8_0= ruleSadlImport )
            	    // InternalDialogParser.g:906:5: lv_imports_8_0= ruleSadlImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlModelAccess().getImportsSadlImportParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_imports_8_0=ruleSadlImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"imports",
            	      						lv_imports_8_0,
            	      						"com.ge.research.sadl.SADL.SadlImport");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);

            // InternalDialogParser.g:923:3: ( (lv_elements_9_0= ruleSadlModelElement ) )*
            loop19:
            do {
                int alt19=2;
                int LA19_0 = input.LA(1);

                if ( (LA19_0==What||LA19_0==What_1||(LA19_0>=Ask && LA19_0<=How)||LA19_0==Ask_1||LA19_0==How_1) ) {
                    alt19=1;
                }


                switch (alt19) {
            	case 1 :
            	    // InternalDialogParser.g:924:4: (lv_elements_9_0= ruleSadlModelElement )
            	    {
            	    // InternalDialogParser.g:924:4: (lv_elements_9_0= ruleSadlModelElement )
            	    // InternalDialogParser.g:925:5: lv_elements_9_0= ruleSadlModelElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlModelAccess().getElementsSadlModelElementParserRuleCall_7_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_elements_9_0=ruleSadlModelElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"elements",
            	      						lv_elements_9_0,
            	      						"com.ge.research.sadl.darpa.aske.Dialog.SadlModelElement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop19;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlModel"


    // $ANTLR start "entryRuleSadlAnnotation"
    // InternalDialogParser.g:946:1: entryRuleSadlAnnotation returns [EObject current=null] : iv_ruleSadlAnnotation= ruleSadlAnnotation EOF ;
    public final EObject entryRuleSadlAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlAnnotation = null;


        try {
            // InternalDialogParser.g:946:55: (iv_ruleSadlAnnotation= ruleSadlAnnotation EOF )
            // InternalDialogParser.g:947:2: iv_ruleSadlAnnotation= ruleSadlAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlAnnotation=ruleSadlAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlAnnotation"


    // $ANTLR start "ruleSadlAnnotation"
    // InternalDialogParser.g:953:1: ruleSadlAnnotation returns [EObject current=null] : ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis ) ;
    public final EObject ruleSadlAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_type_2_1=null;
        Token lv_type_2_2=null;
        Token lv_contents_3_0=null;
        Token otherlv_4=null;
        Token lv_contents_5_0=null;
        Token otherlv_6=null;


        	enterRule();

        try {
            // InternalDialogParser.g:959:2: ( ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis ) )
            // InternalDialogParser.g:960:2: ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis )
            {
            // InternalDialogParser.g:960:2: ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis )
            // InternalDialogParser.g:961:3: (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis
            {
            // InternalDialogParser.g:961:3: (otherlv_0= Comma )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==Comma) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // InternalDialogParser.g:962:4: otherlv_0= Comma
                    {
                    otherlv_0=(Token)match(input,Comma,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSadlAnnotationAccess().getCommaKeyword_0());
                      			
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSadlAnnotationAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalDialogParser.g:971:3: ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) )
            // InternalDialogParser.g:972:4: ( (lv_type_2_1= Alias | lv_type_2_2= Note ) )
            {
            // InternalDialogParser.g:972:4: ( (lv_type_2_1= Alias | lv_type_2_2= Note ) )
            // InternalDialogParser.g:973:5: (lv_type_2_1= Alias | lv_type_2_2= Note )
            {
            // InternalDialogParser.g:973:5: (lv_type_2_1= Alias | lv_type_2_2= Note )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==Alias) ) {
                alt21=1;
            }
            else if ( (LA21_0==Note) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalDialogParser.g:974:6: lv_type_2_1= Alias
                    {
                    lv_type_2_1=(Token)match(input,Alias,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_2_1, grammarAccess.getSadlAnnotationAccess().getTypeAliasKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlAnnotationRule());
                      						}
                      						setWithLastConsumed(current, "type", lv_type_2_1, null);
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:985:6: lv_type_2_2= Note
                    {
                    lv_type_2_2=(Token)match(input,Note,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_2_2, grammarAccess.getSadlAnnotationAccess().getTypeNoteKeyword_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlAnnotationRule());
                      						}
                      						setWithLastConsumed(current, "type", lv_type_2_2, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalDialogParser.g:998:3: ( (lv_contents_3_0= RULE_STRING ) )
            // InternalDialogParser.g:999:4: (lv_contents_3_0= RULE_STRING )
            {
            // InternalDialogParser.g:999:4: (lv_contents_3_0= RULE_STRING )
            // InternalDialogParser.g:1000:5: lv_contents_3_0= RULE_STRING
            {
            lv_contents_3_0=(Token)match(input,RULE_STRING,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_contents_3_0, grammarAccess.getSadlAnnotationAccess().getContentsSTRINGTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"contents",
              						lv_contents_3_0,
              						"com.ge.research.sadl.SADL.STRING");
              				
            }

            }


            }

            // InternalDialogParser.g:1016:3: (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==Comma) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // InternalDialogParser.g:1017:4: otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) )
            	    {
            	    otherlv_4=(Token)match(input,Comma,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getSadlAnnotationAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalDialogParser.g:1021:4: ( (lv_contents_5_0= RULE_STRING ) )
            	    // InternalDialogParser.g:1022:5: (lv_contents_5_0= RULE_STRING )
            	    {
            	    // InternalDialogParser.g:1022:5: (lv_contents_5_0= RULE_STRING )
            	    // InternalDialogParser.g:1023:6: lv_contents_5_0= RULE_STRING
            	    {
            	    lv_contents_5_0=(Token)match(input,RULE_STRING,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_contents_5_0, grammarAccess.getSadlAnnotationAccess().getContentsSTRINGTerminalRuleCall_4_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getSadlAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"contents",
            	      							lv_contents_5_0,
            	      							"com.ge.research.sadl.SADL.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getSadlAnnotationAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlAnnotation"


    // $ANTLR start "entryRuleSadlImport"
    // InternalDialogParser.g:1048:1: entryRuleSadlImport returns [EObject current=null] : iv_ruleSadlImport= ruleSadlImport EOF ;
    public final EObject entryRuleSadlImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlImport = null;


        try {
            // InternalDialogParser.g:1048:51: (iv_ruleSadlImport= ruleSadlImport EOF )
            // InternalDialogParser.g:1049:2: iv_ruleSadlImport= ruleSadlImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlImport=ruleSadlImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlImport"


    // $ANTLR start "ruleSadlImport"
    // InternalDialogParser.g:1055:1: ruleSadlImport returns [EObject current=null] : (otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS ) ;
    public final EObject ruleSadlImport() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_alias_3_0=null;


        	enterRule();

        try {
            // InternalDialogParser.g:1061:2: ( (otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS ) )
            // InternalDialogParser.g:1062:2: (otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS )
            {
            // InternalDialogParser.g:1062:2: (otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS )
            // InternalDialogParser.g:1063:3: otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS
            {
            otherlv_0=(Token)match(input,Import,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSadlImportAccess().getImportKeyword_0());
              		
            }
            // InternalDialogParser.g:1067:3: ( (otherlv_1= RULE_STRING ) )
            // InternalDialogParser.g:1068:4: (otherlv_1= RULE_STRING )
            {
            // InternalDialogParser.g:1068:4: (otherlv_1= RULE_STRING )
            // InternalDialogParser.g:1069:5: otherlv_1= RULE_STRING
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlImportRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_STRING,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getSadlImportAccess().getImportedResourceSadlModelCrossReference_1_0());
              				
            }

            }


            }

            // InternalDialogParser.g:1080:3: (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==As) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalDialogParser.g:1081:4: otherlv_2= As ( (lv_alias_3_0= RULE_ID ) )
                    {
                    otherlv_2=(Token)match(input,As,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSadlImportAccess().getAsKeyword_2_0());
                      			
                    }
                    // InternalDialogParser.g:1085:4: ( (lv_alias_3_0= RULE_ID ) )
                    // InternalDialogParser.g:1086:5: (lv_alias_3_0= RULE_ID )
                    {
                    // InternalDialogParser.g:1086:5: (lv_alias_3_0= RULE_ID )
                    // InternalDialogParser.g:1087:6: lv_alias_3_0= RULE_ID
                    {
                    lv_alias_3_0=(Token)match(input,RULE_ID,FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_3_0, grammarAccess.getSadlImportAccess().getAliasIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlImportRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_3_0,
                      							"com.ge.research.sadl.SADL.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSadlImportAccess().getEOSParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            ruleEOS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlImport"


    // $ANTLR start "entryRuleEquationStatement"
    // InternalDialogParser.g:1115:1: entryRuleEquationStatement returns [EObject current=null] : iv_ruleEquationStatement= ruleEquationStatement EOF ;
    public final EObject entryRuleEquationStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEquationStatement = null;


        try {
            // InternalDialogParser.g:1115:58: (iv_ruleEquationStatement= ruleEquationStatement EOF )
            // InternalDialogParser.g:1116:2: iv_ruleEquationStatement= ruleEquationStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEquationStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEquationStatement=ruleEquationStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEquationStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEquationStatement"


    // $ANTLR start "ruleEquationStatement"
    // InternalDialogParser.g:1122:1: ruleEquationStatement returns [EObject current=null] : (otherlv_0= Equation this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_body_2_0= ruleExpression ) )? (otherlv_3= Return ( (lv_retval_4_0= ruleExpression ) ) )? (otherlv_5= Where ( (lv_where_6_0= ruleExpression ) ) )? ) ;
    public final EObject ruleEquationStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_EquationSignature_1 = null;

        EObject lv_body_2_0 = null;

        EObject lv_retval_4_0 = null;

        EObject lv_where_6_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1128:2: ( (otherlv_0= Equation this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_body_2_0= ruleExpression ) )? (otherlv_3= Return ( (lv_retval_4_0= ruleExpression ) ) )? (otherlv_5= Where ( (lv_where_6_0= ruleExpression ) ) )? ) )
            // InternalDialogParser.g:1129:2: (otherlv_0= Equation this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_body_2_0= ruleExpression ) )? (otherlv_3= Return ( (lv_retval_4_0= ruleExpression ) ) )? (otherlv_5= Where ( (lv_where_6_0= ruleExpression ) ) )? )
            {
            // InternalDialogParser.g:1129:2: (otherlv_0= Equation this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_body_2_0= ruleExpression ) )? (otherlv_3= Return ( (lv_retval_4_0= ruleExpression ) ) )? (otherlv_5= Where ( (lv_where_6_0= ruleExpression ) ) )? )
            // InternalDialogParser.g:1130:3: otherlv_0= Equation this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_body_2_0= ruleExpression ) )? (otherlv_3= Return ( (lv_retval_4_0= ruleExpression ) ) )? (otherlv_5= Where ( (lv_where_6_0= ruleExpression ) ) )?
            {
            otherlv_0=(Token)match(input,Equation,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEquationStatementAccess().getEquationKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getEquationStatementRule());
              			}
              			newCompositeNode(grammarAccess.getEquationStatementAccess().getEquationSignatureParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_29);
            this_EquationSignature_1=ruleEquationSignature(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EquationSignature_1;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:1145:3: ( (lv_body_2_0= ruleExpression ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==Another||LA24_0==Element||LA24_0==Sublist||LA24_0==Length||LA24_0==Select||(LA24_0>=Count && LA24_0<=False)||LA24_0==First||(LA24_0>=Index && LA24_0<=Known)||LA24_0==There||LA24_0==Value||LA24_0==None||LA24_0==Last||LA24_0==Only||LA24_0==Some||(LA24_0>=True && LA24_0<=Type)||LA24_0==The||LA24_0==Any||LA24_0==Not||LA24_0==The_1||LA24_0==HyphenMinusHyphenMinus||(LA24_0>=An && LA24_0<=An_1)||LA24_0==ExclamationMark||LA24_0==LeftParenthesis||LA24_0==HyphenMinus||LA24_0==A||LA24_0==LeftSquareBracket||(LA24_0>=A_1 && LA24_0<=LeftCurlyBracket)||LA24_0==RULE_NUMBER||(LA24_0>=RULE_ID && LA24_0<=RULE_STRING)) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalDialogParser.g:1146:4: (lv_body_2_0= ruleExpression )
                    {
                    // InternalDialogParser.g:1146:4: (lv_body_2_0= ruleExpression )
                    // InternalDialogParser.g:1147:5: lv_body_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEquationStatementAccess().getBodyExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_30);
                    lv_body_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEquationStatementRule());
                      					}
                      					set(
                      						current,
                      						"body",
                      						lv_body_2_0,
                      						"com.ge.research.sadl.SADL.Expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalDialogParser.g:1164:3: (otherlv_3= Return ( (lv_retval_4_0= ruleExpression ) ) )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==Return) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalDialogParser.g:1165:4: otherlv_3= Return ( (lv_retval_4_0= ruleExpression ) )
                    {
                    otherlv_3=(Token)match(input,Return,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getEquationStatementAccess().getReturnKeyword_3_0());
                      			
                    }
                    // InternalDialogParser.g:1169:4: ( (lv_retval_4_0= ruleExpression ) )
                    // InternalDialogParser.g:1170:5: (lv_retval_4_0= ruleExpression )
                    {
                    // InternalDialogParser.g:1170:5: (lv_retval_4_0= ruleExpression )
                    // InternalDialogParser.g:1171:6: lv_retval_4_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEquationStatementAccess().getRetvalExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_31);
                    lv_retval_4_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEquationStatementRule());
                      						}
                      						set(
                      							current,
                      							"retval",
                      							lv_retval_4_0,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:1189:3: (otherlv_5= Where ( (lv_where_6_0= ruleExpression ) ) )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==Where) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalDialogParser.g:1190:4: otherlv_5= Where ( (lv_where_6_0= ruleExpression ) )
                    {
                    otherlv_5=(Token)match(input,Where,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getEquationStatementAccess().getWhereKeyword_4_0());
                      			
                    }
                    // InternalDialogParser.g:1194:4: ( (lv_where_6_0= ruleExpression ) )
                    // InternalDialogParser.g:1195:5: (lv_where_6_0= ruleExpression )
                    {
                    // InternalDialogParser.g:1195:5: (lv_where_6_0= ruleExpression )
                    // InternalDialogParser.g:1196:6: lv_where_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEquationStatementAccess().getWhereExpressionParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEquationStatementRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_6_0,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEquationStatement"


    // $ANTLR start "entryRuleExternalEquationStatement"
    // InternalDialogParser.g:1218:1: entryRuleExternalEquationStatement returns [EObject current=null] : iv_ruleExternalEquationStatement= ruleExternalEquationStatement EOF ;
    public final EObject entryRuleExternalEquationStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternalEquationStatement = null;


        try {
            // InternalDialogParser.g:1218:66: (iv_ruleExternalEquationStatement= ruleExternalEquationStatement EOF )
            // InternalDialogParser.g:1219:2: iv_ruleExternalEquationStatement= ruleExternalEquationStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternalEquationStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExternalEquationStatement=ruleExternalEquationStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternalEquationStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternalEquationStatement"


    // $ANTLR start "ruleExternalEquationStatement"
    // InternalDialogParser.g:1225:1: ruleExternalEquationStatement returns [EObject current=null] : (otherlv_0= External this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_uri_2_0= RULE_STRING ) ) (otherlv_3= Located otherlv_4= At ( (lv_location_5_0= RULE_STRING ) ) )? (otherlv_6= Where ( (lv_where_7_0= ruleExpression ) ) )? ) ;
    public final EObject ruleExternalEquationStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_uri_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_location_5_0=null;
        Token otherlv_6=null;
        EObject this_EquationSignature_1 = null;

        EObject lv_where_7_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1231:2: ( (otherlv_0= External this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_uri_2_0= RULE_STRING ) ) (otherlv_3= Located otherlv_4= At ( (lv_location_5_0= RULE_STRING ) ) )? (otherlv_6= Where ( (lv_where_7_0= ruleExpression ) ) )? ) )
            // InternalDialogParser.g:1232:2: (otherlv_0= External this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_uri_2_0= RULE_STRING ) ) (otherlv_3= Located otherlv_4= At ( (lv_location_5_0= RULE_STRING ) ) )? (otherlv_6= Where ( (lv_where_7_0= ruleExpression ) ) )? )
            {
            // InternalDialogParser.g:1232:2: (otherlv_0= External this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_uri_2_0= RULE_STRING ) ) (otherlv_3= Located otherlv_4= At ( (lv_location_5_0= RULE_STRING ) ) )? (otherlv_6= Where ( (lv_where_7_0= ruleExpression ) ) )? )
            // InternalDialogParser.g:1233:3: otherlv_0= External this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_uri_2_0= RULE_STRING ) ) (otherlv_3= Located otherlv_4= At ( (lv_location_5_0= RULE_STRING ) ) )? (otherlv_6= Where ( (lv_where_7_0= ruleExpression ) ) )?
            {
            otherlv_0=(Token)match(input,External,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getExternalEquationStatementAccess().getExternalKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExternalEquationStatementRule());
              			}
              			newCompositeNode(grammarAccess.getExternalEquationStatementAccess().getEquationSignatureParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_5);
            this_EquationSignature_1=ruleEquationSignature(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EquationSignature_1;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:1248:3: ( (lv_uri_2_0= RULE_STRING ) )
            // InternalDialogParser.g:1249:4: (lv_uri_2_0= RULE_STRING )
            {
            // InternalDialogParser.g:1249:4: (lv_uri_2_0= RULE_STRING )
            // InternalDialogParser.g:1250:5: lv_uri_2_0= RULE_STRING
            {
            lv_uri_2_0=(Token)match(input,RULE_STRING,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_uri_2_0, grammarAccess.getExternalEquationStatementAccess().getUriSTRINGTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getExternalEquationStatementRule());
              					}
              					setWithLastConsumed(
              						current,
              						"uri",
              						lv_uri_2_0,
              						"com.ge.research.sadl.SADL.STRING");
              				
            }

            }


            }

            // InternalDialogParser.g:1266:3: (otherlv_3= Located otherlv_4= At ( (lv_location_5_0= RULE_STRING ) ) )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==Located) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalDialogParser.g:1267:4: otherlv_3= Located otherlv_4= At ( (lv_location_5_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,Located,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExternalEquationStatementAccess().getLocatedKeyword_3_0());
                      			
                    }
                    otherlv_4=(Token)match(input,At,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getExternalEquationStatementAccess().getAtKeyword_3_1());
                      			
                    }
                    // InternalDialogParser.g:1275:4: ( (lv_location_5_0= RULE_STRING ) )
                    // InternalDialogParser.g:1276:5: (lv_location_5_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:1276:5: (lv_location_5_0= RULE_STRING )
                    // InternalDialogParser.g:1277:6: lv_location_5_0= RULE_STRING
                    {
                    lv_location_5_0=(Token)match(input,RULE_STRING,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_location_5_0, grammarAccess.getExternalEquationStatementAccess().getLocationSTRINGTerminalRuleCall_3_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExternalEquationStatementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"location",
                      							lv_location_5_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:1294:3: (otherlv_6= Where ( (lv_where_7_0= ruleExpression ) ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==Where) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalDialogParser.g:1295:4: otherlv_6= Where ( (lv_where_7_0= ruleExpression ) )
                    {
                    otherlv_6=(Token)match(input,Where,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getExternalEquationStatementAccess().getWhereKeyword_4_0());
                      			
                    }
                    // InternalDialogParser.g:1299:4: ( (lv_where_7_0= ruleExpression ) )
                    // InternalDialogParser.g:1300:5: (lv_where_7_0= ruleExpression )
                    {
                    // InternalDialogParser.g:1300:5: (lv_where_7_0= ruleExpression )
                    // InternalDialogParser.g:1301:6: lv_where_7_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExternalEquationStatementAccess().getWhereExpressionParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_7_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExternalEquationStatementRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_7_0,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternalEquationStatement"


    // $ANTLR start "ruleEquationSignature"
    // InternalDialogParser.g:1324:1: ruleEquationSignature[EObject in_current] returns [EObject current=in_current] : ( ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon ) ;
    public final EObject ruleEquationSignature(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_name_0_0 = null;

        EObject lv_parameter_2_0 = null;

        EObject lv_parameter_4_0 = null;

        EObject lv_returnType_7_0 = null;

        EObject lv_returnType_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1330:2: ( ( ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon ) )
            // InternalDialogParser.g:1331:2: ( ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon )
            {
            // InternalDialogParser.g:1331:2: ( ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon )
            // InternalDialogParser.g:1332:3: ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon
            {
            // InternalDialogParser.g:1332:3: ( (lv_name_0_0= ruleSadlResource ) )
            // InternalDialogParser.g:1333:4: (lv_name_0_0= ruleSadlResource )
            {
            // InternalDialogParser.g:1333:4: (lv_name_0_0= ruleSadlResource )
            // InternalDialogParser.g:1334:5: lv_name_0_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEquationSignatureAccess().getNameSadlResourceParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_name_0_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEquationSignatureAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalDialogParser.g:1355:3: ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( ((LA30_0>=NonNegativeInteger && LA30_0<=Base64Binary)||LA30_0==UnsignedByte||LA30_0==UnsignedInt||LA30_0==GYearMonth||(LA30_0>=GMonthDay && LA30_0<=HexBinary)||LA30_0==DateTime||LA30_0==Duration||LA30_0==Boolean||LA30_0==Decimal||LA30_0==Integer||LA30_0==AnyURI||LA30_0==Double||LA30_0==GMonth||LA30_0==String||(LA30_0>=Float && LA30_0<=GYear)||LA30_0==Byte||LA30_0==Date||LA30_0==GDay||LA30_0==Long||LA30_0==Time||LA30_0==FullStopFullStopFullStop||LA30_0==Int||LA30_0==HyphenMinusHyphenMinus||LA30_0==LeftParenthesis||LA30_0==LeftCurlyBracket||(LA30_0>=RULE_ID && LA30_0<=RULE_QNAME_TERMINAL)) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalDialogParser.g:1356:4: ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )*
                    {
                    // InternalDialogParser.g:1356:4: ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) )
                    // InternalDialogParser.g:1357:5: (lv_parameter_2_0= ruleSadlParameterDeclaration )
                    {
                    // InternalDialogParser.g:1357:5: (lv_parameter_2_0= ruleSadlParameterDeclaration )
                    // InternalDialogParser.g:1358:6: lv_parameter_2_0= ruleSadlParameterDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEquationSignatureAccess().getParameterSadlParameterDeclarationParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_27);
                    lv_parameter_2_0=ruleSadlParameterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
                      						}
                      						add(
                      							current,
                      							"parameter",
                      							lv_parameter_2_0,
                      							"com.ge.research.sadl.SADL.SadlParameterDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:1375:4: (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )*
                    loop29:
                    do {
                        int alt29=2;
                        int LA29_0 = input.LA(1);

                        if ( (LA29_0==Comma) ) {
                            alt29=1;
                        }


                        switch (alt29) {
                    	case 1 :
                    	    // InternalDialogParser.g:1376:5: otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_35); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getEquationSignatureAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:1380:5: ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) )
                    	    // InternalDialogParser.g:1381:6: (lv_parameter_4_0= ruleSadlParameterDeclaration )
                    	    {
                    	    // InternalDialogParser.g:1381:6: (lv_parameter_4_0= ruleSadlParameterDeclaration )
                    	    // InternalDialogParser.g:1382:7: lv_parameter_4_0= ruleSadlParameterDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getEquationSignatureAccess().getParameterSadlParameterDeclarationParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_parameter_4_0=ruleSadlParameterDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameter",
                    	      								lv_parameter_4_0,
                    	      								"com.ge.research.sadl.SADL.SadlParameterDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop29;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getEquationSignatureAccess().getRightParenthesisKeyword_3());
              		
            }
            otherlv_6=(Token)match(input,Returns,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getEquationSignatureAccess().getReturnsKeyword_4());
              		
            }
            // InternalDialogParser.g:1409:3: ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* )
            // InternalDialogParser.g:1410:4: ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )*
            {
            // InternalDialogParser.g:1410:4: ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) )
            // InternalDialogParser.g:1411:5: (lv_returnType_7_0= ruleSadlReturnDeclaration )
            {
            // InternalDialogParser.g:1411:5: (lv_returnType_7_0= ruleSadlReturnDeclaration )
            // InternalDialogParser.g:1412:6: lv_returnType_7_0= ruleSadlReturnDeclaration
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getEquationSignatureAccess().getReturnTypeSadlReturnDeclarationParserRuleCall_5_0_0());
              					
            }
            pushFollow(FOLLOW_38);
            lv_returnType_7_0=ruleSadlReturnDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
              						}
              						add(
              							current,
              							"returnType",
              							lv_returnType_7_0,
              							"com.ge.research.sadl.SADL.SadlReturnDeclaration");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalDialogParser.g:1429:4: (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==Comma) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // InternalDialogParser.g:1430:5: otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) )
            	    {
            	    otherlv_8=(Token)match(input,Comma,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_8, grammarAccess.getEquationSignatureAccess().getCommaKeyword_5_1_0());
            	      				
            	    }
            	    // InternalDialogParser.g:1434:5: ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) )
            	    // InternalDialogParser.g:1435:6: (lv_returnType_9_0= ruleSadlReturnDeclaration )
            	    {
            	    // InternalDialogParser.g:1435:6: (lv_returnType_9_0= ruleSadlReturnDeclaration )
            	    // InternalDialogParser.g:1436:7: lv_returnType_9_0= ruleSadlReturnDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getEquationSignatureAccess().getReturnTypeSadlReturnDeclarationParserRuleCall_5_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_returnType_9_0=ruleSadlReturnDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
            	      							}
            	      							add(
            	      								current,
            	      								"returnType",
            	      								lv_returnType_9_0,
            	      								"com.ge.research.sadl.SADL.SadlReturnDeclaration");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);


            }

            otherlv_10=(Token)match(input,Colon,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getEquationSignatureAccess().getColonKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEquationSignature"


    // $ANTLR start "entryRuleSadlParameterDeclaration"
    // InternalDialogParser.g:1463:1: entryRuleSadlParameterDeclaration returns [EObject current=null] : iv_ruleSadlParameterDeclaration= ruleSadlParameterDeclaration EOF ;
    public final EObject entryRuleSadlParameterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlParameterDeclaration = null;


        try {
            // InternalDialogParser.g:1463:65: (iv_ruleSadlParameterDeclaration= ruleSadlParameterDeclaration EOF )
            // InternalDialogParser.g:1464:2: iv_ruleSadlParameterDeclaration= ruleSadlParameterDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlParameterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlParameterDeclaration=ruleSadlParameterDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlParameterDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlParameterDeclaration"


    // $ANTLR start "ruleSadlParameterDeclaration"
    // InternalDialogParser.g:1470:1: ruleSadlParameterDeclaration returns [EObject current=null] : ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) | ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) ) ) ;
    public final EObject ruleSadlParameterDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_unknown_2_0=null;
        Token lv_ellipsis_3_0=null;
        EObject lv_type_0_0 = null;

        EObject lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1476:2: ( ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) | ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) ) ) )
            // InternalDialogParser.g:1477:2: ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) | ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) ) )
            {
            // InternalDialogParser.g:1477:2: ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) | ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) ) )
            int alt32=3;
            switch ( input.LA(1) ) {
            case NonNegativeInteger:
            case NonPositiveInteger:
            case NegativeInteger:
            case PositiveInteger:
            case AnySimpleType:
            case Base64Binary:
            case UnsignedByte:
            case UnsignedInt:
            case GYearMonth:
            case GMonthDay:
            case HexBinary:
            case DateTime:
            case Duration:
            case Boolean:
            case Decimal:
            case Integer:
            case AnyURI:
            case Double:
            case GMonth:
            case String:
            case Float:
            case GYear:
            case Byte:
            case Date:
            case GDay:
            case Long:
            case Time:
            case Int:
            case LeftParenthesis:
            case LeftCurlyBracket:
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt32=1;
                }
                break;
            case HyphenMinusHyphenMinus:
                {
                alt32=2;
                }
                break;
            case FullStopFullStopFullStop:
                {
                alt32=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }

            switch (alt32) {
                case 1 :
                    // InternalDialogParser.g:1478:3: ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) )
                    {
                    // InternalDialogParser.g:1478:3: ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) )
                    // InternalDialogParser.g:1479:4: ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) )
                    {
                    // InternalDialogParser.g:1479:4: ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:1480:5: (lv_type_0_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:1480:5: (lv_type_0_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:1481:6: lv_type_0_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlParameterDeclarationAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_type_0_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlParameterDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_0_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:1498:4: ( (lv_name_1_0= ruleSadlResource ) )
                    // InternalDialogParser.g:1499:5: (lv_name_1_0= ruleSadlResource )
                    {
                    // InternalDialogParser.g:1499:5: (lv_name_1_0= ruleSadlResource )
                    // InternalDialogParser.g:1500:6: lv_name_1_0= ruleSadlResource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlParameterDeclarationAccess().getNameSadlResourceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_1_0=ruleSadlResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlParameterDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"com.ge.research.sadl.SADL.SadlResource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:1519:3: ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) )
                    {
                    // InternalDialogParser.g:1519:3: ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) )
                    // InternalDialogParser.g:1520:4: (lv_unknown_2_0= HyphenMinusHyphenMinus )
                    {
                    // InternalDialogParser.g:1520:4: (lv_unknown_2_0= HyphenMinusHyphenMinus )
                    // InternalDialogParser.g:1521:5: lv_unknown_2_0= HyphenMinusHyphenMinus
                    {
                    lv_unknown_2_0=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_unknown_2_0, grammarAccess.getSadlParameterDeclarationAccess().getUnknownHyphenMinusHyphenMinusKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlParameterDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "unknown", lv_unknown_2_0, "--");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:1534:3: ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) )
                    {
                    // InternalDialogParser.g:1534:3: ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) )
                    // InternalDialogParser.g:1535:4: (lv_ellipsis_3_0= FullStopFullStopFullStop )
                    {
                    // InternalDialogParser.g:1535:4: (lv_ellipsis_3_0= FullStopFullStopFullStop )
                    // InternalDialogParser.g:1536:5: lv_ellipsis_3_0= FullStopFullStopFullStop
                    {
                    lv_ellipsis_3_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ellipsis_3_0, grammarAccess.getSadlParameterDeclarationAccess().getEllipsisFullStopFullStopFullStopKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlParameterDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "ellipsis", lv_ellipsis_3_0, "...");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlParameterDeclaration"


    // $ANTLR start "entryRuleSadlReturnDeclaration"
    // InternalDialogParser.g:1552:1: entryRuleSadlReturnDeclaration returns [EObject current=null] : iv_ruleSadlReturnDeclaration= ruleSadlReturnDeclaration EOF ;
    public final EObject entryRuleSadlReturnDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlReturnDeclaration = null;


        try {
            // InternalDialogParser.g:1552:62: (iv_ruleSadlReturnDeclaration= ruleSadlReturnDeclaration EOF )
            // InternalDialogParser.g:1553:2: iv_ruleSadlReturnDeclaration= ruleSadlReturnDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlReturnDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlReturnDeclaration=ruleSadlReturnDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlReturnDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlReturnDeclaration"


    // $ANTLR start "ruleSadlReturnDeclaration"
    // InternalDialogParser.g:1559:1: ruleSadlReturnDeclaration returns [EObject current=null] : ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) | ( (lv_none_1_0= None ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) ) ;
    public final EObject ruleSadlReturnDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_none_1_0=null;
        Token lv_unknown_2_0=null;
        EObject lv_type_0_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1565:2: ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) | ( (lv_none_1_0= None ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) ) )
            // InternalDialogParser.g:1566:2: ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) | ( (lv_none_1_0= None ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) )
            {
            // InternalDialogParser.g:1566:2: ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) | ( (lv_none_1_0= None ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) )
            int alt33=3;
            switch ( input.LA(1) ) {
            case NonNegativeInteger:
            case NonPositiveInteger:
            case NegativeInteger:
            case PositiveInteger:
            case AnySimpleType:
            case Base64Binary:
            case UnsignedByte:
            case UnsignedInt:
            case GYearMonth:
            case GMonthDay:
            case HexBinary:
            case DateTime:
            case Duration:
            case Boolean:
            case Decimal:
            case Integer:
            case AnyURI:
            case Double:
            case GMonth:
            case String:
            case Float:
            case GYear:
            case Byte:
            case Date:
            case GDay:
            case Long:
            case Time:
            case Int:
            case LeftParenthesis:
            case LeftCurlyBracket:
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt33=1;
                }
                break;
            case None:
                {
                alt33=2;
                }
                break;
            case HyphenMinusHyphenMinus:
                {
                alt33=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }

            switch (alt33) {
                case 1 :
                    // InternalDialogParser.g:1567:3: ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) )
                    {
                    // InternalDialogParser.g:1567:3: ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:1568:4: (lv_type_0_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:1568:4: (lv_type_0_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:1569:5: lv_type_0_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSadlReturnDeclarationAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_0_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSadlReturnDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_0_0,
                      						"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:1587:3: ( (lv_none_1_0= None ) )
                    {
                    // InternalDialogParser.g:1587:3: ( (lv_none_1_0= None ) )
                    // InternalDialogParser.g:1588:4: (lv_none_1_0= None )
                    {
                    // InternalDialogParser.g:1588:4: (lv_none_1_0= None )
                    // InternalDialogParser.g:1589:5: lv_none_1_0= None
                    {
                    lv_none_1_0=(Token)match(input,None,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_none_1_0, grammarAccess.getSadlReturnDeclarationAccess().getNoneNoneKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlReturnDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "none", lv_none_1_0, "None");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:1602:3: ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) )
                    {
                    // InternalDialogParser.g:1602:3: ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) )
                    // InternalDialogParser.g:1603:4: (lv_unknown_2_0= HyphenMinusHyphenMinus )
                    {
                    // InternalDialogParser.g:1603:4: (lv_unknown_2_0= HyphenMinusHyphenMinus )
                    // InternalDialogParser.g:1604:5: lv_unknown_2_0= HyphenMinusHyphenMinus
                    {
                    lv_unknown_2_0=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_unknown_2_0, grammarAccess.getSadlReturnDeclarationAccess().getUnknownHyphenMinusHyphenMinusKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlReturnDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "unknown", lv_unknown_2_0, "--");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlReturnDeclaration"


    // $ANTLR start "entryRuleSadlStatement"
    // InternalDialogParser.g:1620:1: entryRuleSadlStatement returns [EObject current=null] : iv_ruleSadlStatement= ruleSadlStatement EOF ;
    public final EObject entryRuleSadlStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlStatement = null;


        try {
            // InternalDialogParser.g:1620:54: (iv_ruleSadlStatement= ruleSadlStatement EOF )
            // InternalDialogParser.g:1621:2: iv_ruleSadlStatement= ruleSadlStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlStatement=ruleSadlStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlStatement"


    // $ANTLR start "ruleSadlStatement"
    // InternalDialogParser.g:1627:1: ruleSadlStatement returns [EObject current=null] : ( (this_SadlResource_0= ruleSadlResource ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) ) ) | ( () otherlv_48= LeftCurlyBracket ( (lv_classOrProperty_49_0= ruleSadlResource ) ) (otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) ) )* otherlv_52= RightCurlyBracket otherlv_53= Are ( ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* ) | ( () otherlv_62= Disjoint ) | ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same ) ) ) | ( () ( ruleAnArticle )? otherlv_69= Relationship otherlv_70= Of ( (lv_from_71_0= ruleSadlTypeReference ) ) otherlv_72= To ( (lv_to_73_0= ruleSadlTypeReference ) ) otherlv_74= Is ( (lv_property_75_0= ruleSadlResource ) ) ) | ( ruleAnArticle this_SadlTypeReference_77= ruleSadlTypeReference ( ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* ) | ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* ) ) ) ) ;
    public final EObject ruleSadlStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_11=null;
        Token lv_primaryDeclaration_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_20=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token lv_complement_27_0=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_37=null;
        Token otherlv_43=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        Token otherlv_52=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_55=null;
        Token lv_oftype_56_0=null;
        Token lv_oftype_57_0=null;
        Token otherlv_58=null;
        Token otherlv_62=null;
        Token lv_complement_64_0=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        Token otherlv_74=null;
        Token otherlv_82=null;
        Token otherlv_85=null;
        Token otherlv_86=null;
        Token otherlv_88=null;
        EObject this_SadlResource_0 = null;

        EObject lv_superElement_8_0 = null;

        EObject lv_facet_9_0 = null;

        EObject lv_describedBy_10_0 = null;

        EObject lv_restrictions_12_0 = null;

        EObject lv_restrictions_18_0 = null;

        EObject lv_restrictions_21_0 = null;

        EObject lv_sameAs_28_0 = null;

        EObject lv_notTheSameAs_35_0 = null;

        EObject lv_type_39_0 = null;

        EObject lv_listInitializer_40_0 = null;

        EObject lv_propertyInitializers_41_0 = null;

        EObject lv_classes_44_0 = null;

        EObject lv_classOrProperty_49_0 = null;

        EObject lv_classOrProperty_51_0 = null;

        EObject lv_superElement_59_0 = null;

        EObject lv_describedBy_60_0 = null;

        EObject lv_from_71_0 = null;

        EObject lv_to_73_0 = null;

        EObject lv_property_75_0 = null;

        EObject this_SadlTypeReference_77 = null;

        EObject lv_instance_79_0 = null;

        EObject lv_propertyInitializers_80_0 = null;

        EObject lv_object_84_0 = null;

        EObject lv_propConditions_87_0 = null;

        EObject lv_propConditions_89_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1633:2: ( ( (this_SadlResource_0= ruleSadlResource ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) ) ) | ( () otherlv_48= LeftCurlyBracket ( (lv_classOrProperty_49_0= ruleSadlResource ) ) (otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) ) )* otherlv_52= RightCurlyBracket otherlv_53= Are ( ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* ) | ( () otherlv_62= Disjoint ) | ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same ) ) ) | ( () ( ruleAnArticle )? otherlv_69= Relationship otherlv_70= Of ( (lv_from_71_0= ruleSadlTypeReference ) ) otherlv_72= To ( (lv_to_73_0= ruleSadlTypeReference ) ) otherlv_74= Is ( (lv_property_75_0= ruleSadlResource ) ) ) | ( ruleAnArticle this_SadlTypeReference_77= ruleSadlTypeReference ( ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* ) | ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* ) ) ) ) )
            // InternalDialogParser.g:1634:2: ( (this_SadlResource_0= ruleSadlResource ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) ) ) | ( () otherlv_48= LeftCurlyBracket ( (lv_classOrProperty_49_0= ruleSadlResource ) ) (otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) ) )* otherlv_52= RightCurlyBracket otherlv_53= Are ( ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* ) | ( () otherlv_62= Disjoint ) | ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same ) ) ) | ( () ( ruleAnArticle )? otherlv_69= Relationship otherlv_70= Of ( (lv_from_71_0= ruleSadlTypeReference ) ) otherlv_72= To ( (lv_to_73_0= ruleSadlTypeReference ) ) otherlv_74= Is ( (lv_property_75_0= ruleSadlResource ) ) ) | ( ruleAnArticle this_SadlTypeReference_77= ruleSadlTypeReference ( ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* ) | ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* ) ) ) )
            {
            // InternalDialogParser.g:1634:2: ( (this_SadlResource_0= ruleSadlResource ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) ) ) | ( () otherlv_48= LeftCurlyBracket ( (lv_classOrProperty_49_0= ruleSadlResource ) ) (otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) ) )* otherlv_52= RightCurlyBracket otherlv_53= Are ( ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* ) | ( () otherlv_62= Disjoint ) | ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same ) ) ) | ( () ( ruleAnArticle )? otherlv_69= Relationship otherlv_70= Of ( (lv_from_71_0= ruleSadlTypeReference ) ) otherlv_72= To ( (lv_to_73_0= ruleSadlTypeReference ) ) otherlv_74= Is ( (lv_property_75_0= ruleSadlResource ) ) ) | ( ruleAnArticle this_SadlTypeReference_77= ruleSadlTypeReference ( ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* ) | ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* ) ) ) )
            int alt63=4;
            alt63 = dfa63.predict(input);
            switch (alt63) {
                case 1 :
                    // InternalDialogParser.g:1635:3: (this_SadlResource_0= ruleSadlResource ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) ) )
                    {
                    // InternalDialogParser.g:1635:3: (this_SadlResource_0= ruleSadlResource ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) ) )
                    // InternalDialogParser.g:1636:4: this_SadlResource_0= ruleSadlResource ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) )
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlStatementAccess().getSadlResourceParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_39);
                    this_SadlResource_0=ruleSadlResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SadlResource_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalDialogParser.g:1644:4: ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) )
                    int alt50=7;
                    alt50 = dfa50.predict(input);
                    switch (alt50) {
                        case 1 :
                            // InternalDialogParser.g:1645:5: ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? )
                            {
                            // InternalDialogParser.g:1645:5: ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? )
                            // InternalDialogParser.g:1646:6: () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )?
                            {
                            // InternalDialogParser.g:1646:6: ()
                            // InternalDialogParser.g:1647:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndAdd(
                              								grammarAccess.getSadlStatementAccess().getSadlClassOrPropertyDeclarationClassOrPropertyAction_0_1_0_0(),
                              								current);
                              						
                            }

                            }

                            otherlv_2=(Token)match(input,Is,FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getSadlStatementAccess().getIsKeyword_0_1_0_1());
                              					
                            }
                            otherlv_3=(Token)match(input,A_1,FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSadlStatementAccess().getAKeyword_0_1_0_2());
                              					
                            }
                            // InternalDialogParser.g:1661:6: ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) )
                            int alt36=2;
                            int LA36_0 = input.LA(1);

                            if ( (LA36_0==TopLevel||LA36_0==Class) ) {
                                alt36=1;
                            }
                            else if ( (LA36_0==Type) ) {
                                alt36=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 36, 0, input);

                                throw nvae;
                            }
                            switch (alt36) {
                                case 1 :
                                    // InternalDialogParser.g:1662:7: ( (otherlv_4= TopLevel )? otherlv_5= Class )
                                    {
                                    // InternalDialogParser.g:1662:7: ( (otherlv_4= TopLevel )? otherlv_5= Class )
                                    // InternalDialogParser.g:1663:8: (otherlv_4= TopLevel )? otherlv_5= Class
                                    {
                                    // InternalDialogParser.g:1663:8: (otherlv_4= TopLevel )?
                                    int alt34=2;
                                    int LA34_0 = input.LA(1);

                                    if ( (LA34_0==TopLevel) ) {
                                        alt34=1;
                                    }
                                    switch (alt34) {
                                        case 1 :
                                            // InternalDialogParser.g:1664:9: otherlv_4= TopLevel
                                            {
                                            otherlv_4=(Token)match(input,TopLevel,FOLLOW_42); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(otherlv_4, grammarAccess.getSadlStatementAccess().getTopLevelKeyword_0_1_0_3_0_0());
                                              								
                                            }

                                            }
                                            break;

                                    }

                                    otherlv_5=(Token)match(input,Class,FOLLOW_43); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_5, grammarAccess.getSadlStatementAccess().getClassKeyword_0_1_0_3_0_1());
                                      							
                                    }

                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:1675:7: (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? )
                                    {
                                    // InternalDialogParser.g:1675:7: (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? )
                                    // InternalDialogParser.g:1676:8: otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )?
                                    {
                                    otherlv_6=(Token)match(input,Type,FOLLOW_11); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_6, grammarAccess.getSadlStatementAccess().getTypeKeyword_0_1_0_3_1_0());
                                      							
                                    }
                                    otherlv_7=(Token)match(input,Of,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_7, grammarAccess.getSadlStatementAccess().getOfKeyword_0_1_0_3_1_1());
                                      							
                                    }
                                    // InternalDialogParser.g:1684:8: ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) )
                                    // InternalDialogParser.g:1685:9: (lv_superElement_8_0= ruleSadlPrimaryTypeReference )
                                    {
                                    // InternalDialogParser.g:1685:9: (lv_superElement_8_0= ruleSadlPrimaryTypeReference )
                                    // InternalDialogParser.g:1686:10: lv_superElement_8_0= ruleSadlPrimaryTypeReference
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getSadlStatementAccess().getSuperElementSadlPrimaryTypeReferenceParserRuleCall_0_1_0_3_1_2_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_44);
                                    lv_superElement_8_0=ruleSadlPrimaryTypeReference();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                                      										}
                                      										set(
                                      											current,
                                      											"superElement",
                                      											lv_superElement_8_0,
                                      											"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }

                                    // InternalDialogParser.g:1703:8: ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )?
                                    int alt35=2;
                                    int LA35_0 = input.LA(1);

                                    if ( (LA35_0==Length||LA35_0==LeftParenthesis||LA35_0==LeftSquareBracket||LA35_0==LeftCurlyBracket||LA35_0==RULE_STRING) ) {
                                        alt35=1;
                                    }
                                    switch (alt35) {
                                        case 1 :
                                            // InternalDialogParser.g:1704:9: (lv_facet_9_0= ruleSadlDataTypeFacet )
                                            {
                                            // InternalDialogParser.g:1704:9: (lv_facet_9_0= ruleSadlDataTypeFacet )
                                            // InternalDialogParser.g:1705:10: lv_facet_9_0= ruleSadlDataTypeFacet
                                            {
                                            if ( state.backtracking==0 ) {

                                              										newCompositeNode(grammarAccess.getSadlStatementAccess().getFacetSadlDataTypeFacetParserRuleCall_0_1_0_3_1_3_0());
                                              									
                                            }
                                            pushFollow(FOLLOW_43);
                                            lv_facet_9_0=ruleSadlDataTypeFacet();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                                              										}
                                              										set(
                                              											current,
                                              											"facet",
                                              											lv_facet_9_0,
                                              											"com.ge.research.sadl.SADL.SadlDataTypeFacet");
                                              										afterParserOrEnumRuleCall();
                                              									
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:1724:6: ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )?
                            int alt40=3;
                            switch ( input.LA(1) ) {
                                case Comma:
                                    {
                                    int LA40_1 = input.LA(2);

                                    if ( (LA40_1==Described) ) {
                                        alt40=1;
                                    }
                                    else if ( (LA40_1==Describes||LA40_1==Always||LA40_1==Must||LA40_1==Only||LA40_1==With||LA40_1==Can||LA40_1==Has||(LA40_1>=Is && LA40_1<=Of)) ) {
                                        alt40=2;
                                    }
                                    }
                                    break;
                                case Described:
                                    {
                                    alt40=1;
                                    }
                                    break;
                                case Describes:
                                case Always:
                                case Must:
                                case Only:
                                case With:
                                case Can:
                                case Has:
                                case Is:
                                case Of:
                                    {
                                    alt40=2;
                                    }
                                    break;
                            }

                            switch (alt40) {
                                case 1 :
                                    // InternalDialogParser.g:1725:7: ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+
                                    {
                                    // InternalDialogParser.g:1725:7: ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+
                                    int cnt37=0;
                                    loop37:
                                    do {
                                        int alt37=2;
                                        int LA37_0 = input.LA(1);

                                        if ( (LA37_0==Described||LA37_0==Comma) ) {
                                            alt37=1;
                                        }


                                        switch (alt37) {
                                    	case 1 :
                                    	    // InternalDialogParser.g:1726:8: (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass )
                                    	    {
                                    	    // InternalDialogParser.g:1726:8: (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass )
                                    	    // InternalDialogParser.g:1727:9: lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      									newCompositeNode(grammarAccess.getSadlStatementAccess().getDescribedBySadlPropertyDeclarationInClassParserRuleCall_0_1_0_4_0_0());
                                    	      								
                                    	    }
                                    	    pushFollow(FOLLOW_45);
                                    	    lv_describedBy_10_0=ruleSadlPropertyDeclarationInClass();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      									if (current==null) {
                                    	      										current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                                    	      									}
                                    	      									add(
                                    	      										current,
                                    	      										"describedBy",
                                    	      										lv_describedBy_10_0,
                                    	      										"com.ge.research.sadl.SADL.SadlPropertyDeclarationInClass");
                                    	      									afterParserOrEnumRuleCall();
                                    	      								
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt37 >= 1 ) break loop37;
                                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(37, input);
                                                throw eee;
                                        }
                                        cnt37++;
                                    } while (true);


                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:1745:7: ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+
                                    {
                                    // InternalDialogParser.g:1745:7: ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+
                                    int cnt39=0;
                                    loop39:
                                    do {
                                        int alt39=2;
                                        int LA39_0 = input.LA(1);

                                        if ( (LA39_0==Describes||LA39_0==Always||LA39_0==Must||LA39_0==Only||LA39_0==With||LA39_0==Can||LA39_0==Has||(LA39_0>=Is && LA39_0<=Of)||LA39_0==Comma) ) {
                                            alt39=1;
                                        }


                                        switch (alt39) {
                                    	case 1 :
                                    	    // InternalDialogParser.g:1746:8: (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) )
                                    	    {
                                    	    // InternalDialogParser.g:1746:8: (otherlv_11= Comma )?
                                    	    int alt38=2;
                                    	    int LA38_0 = input.LA(1);

                                    	    if ( (LA38_0==Comma) ) {
                                    	        alt38=1;
                                    	    }
                                    	    switch (alt38) {
                                    	        case 1 :
                                    	            // InternalDialogParser.g:1747:9: otherlv_11= Comma
                                    	            {
                                    	            otherlv_11=(Token)match(input,Comma,FOLLOW_46); if (state.failed) return current;
                                    	            if ( state.backtracking==0 ) {

                                    	              									newLeafNode(otherlv_11, grammarAccess.getSadlStatementAccess().getCommaKeyword_0_1_0_4_1_0());
                                    	              								
                                    	            }

                                    	            }
                                    	            break;

                                    	    }

                                    	    // InternalDialogParser.g:1752:8: ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) )
                                    	    // InternalDialogParser.g:1753:9: (lv_restrictions_12_0= ruleSadlPropertyRestriction )
                                    	    {
                                    	    // InternalDialogParser.g:1753:9: (lv_restrictions_12_0= ruleSadlPropertyRestriction )
                                    	    // InternalDialogParser.g:1754:10: lv_restrictions_12_0= ruleSadlPropertyRestriction
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      										newCompositeNode(grammarAccess.getSadlStatementAccess().getRestrictionsSadlPropertyRestrictionParserRuleCall_0_1_0_4_1_1_0());
                                    	      									
                                    	    }
                                    	    pushFollow(FOLLOW_47);
                                    	    lv_restrictions_12_0=ruleSadlPropertyRestriction();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      										if (current==null) {
                                    	      											current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                                    	      										}
                                    	      										add(
                                    	      											current,
                                    	      											"restrictions",
                                    	      											lv_restrictions_12_0,
                                    	      											"com.ge.research.sadl.SADL.SadlPropertyRestriction");
                                    	      										afterParserOrEnumRuleCall();
                                    	      									
                                    	    }

                                    	    }


                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt39 >= 1 ) break loop39;
                                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(39, input);
                                                throw eee;
                                        }
                                        cnt39++;
                                    } while (true);


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:1775:5: ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* )
                            {
                            // InternalDialogParser.g:1775:5: ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* )
                            // InternalDialogParser.g:1776:6: () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )*
                            {
                            // InternalDialogParser.g:1776:6: ()
                            // InternalDialogParser.g:1777:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getSadlStatementAccess().getSadlPropertyNameOrRefAction_0_1_1_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:1783:6: ( (lv_primaryDeclaration_14_0= Is ) )
                            // InternalDialogParser.g:1784:7: (lv_primaryDeclaration_14_0= Is )
                            {
                            // InternalDialogParser.g:1784:7: (lv_primaryDeclaration_14_0= Is )
                            // InternalDialogParser.g:1785:8: lv_primaryDeclaration_14_0= Is
                            {
                            lv_primaryDeclaration_14_0=(Token)match(input,Is,FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_primaryDeclaration_14_0, grammarAccess.getSadlStatementAccess().getPrimaryDeclarationIsKeyword_0_1_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlStatementRule());
                              								}
                              								setWithLastConsumed(current, "primaryDeclaration", true, "is");
                              							
                            }

                            }


                            }

                            otherlv_15=(Token)match(input,A_1,FOLLOW_48); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_15, grammarAccess.getSadlStatementAccess().getAKeyword_0_1_1_2());
                              					
                            }
                            otherlv_16=(Token)match(input,Property,FOLLOW_47); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_16, grammarAccess.getSadlStatementAccess().getPropertyKeyword_0_1_1_3());
                              					
                            }
                            // InternalDialogParser.g:1805:6: ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )*
                            loop42:
                            do {
                                int alt42=2;
                                int LA42_0 = input.LA(1);

                                if ( (LA42_0==Describes||LA42_0==Always||LA42_0==Must||LA42_0==Only||LA42_0==With||LA42_0==Can||LA42_0==Has||(LA42_0>=Is && LA42_0<=Of)||LA42_0==Comma) ) {
                                    alt42=1;
                                }


                                switch (alt42) {
                            	case 1 :
                            	    // InternalDialogParser.g:1806:7: (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) )
                            	    {
                            	    // InternalDialogParser.g:1806:7: (otherlv_17= Comma )?
                            	    int alt41=2;
                            	    int LA41_0 = input.LA(1);

                            	    if ( (LA41_0==Comma) ) {
                            	        alt41=1;
                            	    }
                            	    switch (alt41) {
                            	        case 1 :
                            	            // InternalDialogParser.g:1807:8: otherlv_17= Comma
                            	            {
                            	            otherlv_17=(Token)match(input,Comma,FOLLOW_46); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_17, grammarAccess.getSadlStatementAccess().getCommaKeyword_0_1_1_4_0());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:1812:7: ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) )
                            	    // InternalDialogParser.g:1813:8: (lv_restrictions_18_0= ruleSadlPropertyRestriction )
                            	    {
                            	    // InternalDialogParser.g:1813:8: (lv_restrictions_18_0= ruleSadlPropertyRestriction )
                            	    // InternalDialogParser.g:1814:9: lv_restrictions_18_0= ruleSadlPropertyRestriction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getSadlStatementAccess().getRestrictionsSadlPropertyRestrictionParserRuleCall_0_1_1_4_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_47);
                            	    lv_restrictions_18_0=ruleSadlPropertyRestriction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"restrictions",
                            	      										lv_restrictions_18_0,
                            	      										"com.ge.research.sadl.SADL.SadlPropertyRestriction");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop42;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:1834:5: ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ )
                            {
                            // InternalDialogParser.g:1834:5: ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ )
                            // InternalDialogParser.g:1835:6: () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+
                            {
                            // InternalDialogParser.g:1835:6: ()
                            // InternalDialogParser.g:1836:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getSadlStatementAccess().getSadlPropertyNameOrRefAction_0_1_2_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:1842:6: ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+
                            int cnt44=0;
                            loop44:
                            do {
                                int alt44=2;
                                int LA44_0 = input.LA(1);

                                if ( (LA44_0==Describes||LA44_0==Always||LA44_0==Must||LA44_0==Only||LA44_0==With||LA44_0==Can||LA44_0==Has||(LA44_0>=Is && LA44_0<=Of)||LA44_0==Comma) ) {
                                    alt44=1;
                                }


                                switch (alt44) {
                            	case 1 :
                            	    // InternalDialogParser.g:1843:7: (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) )
                            	    {
                            	    // InternalDialogParser.g:1843:7: (otherlv_20= Comma )?
                            	    int alt43=2;
                            	    int LA43_0 = input.LA(1);

                            	    if ( (LA43_0==Comma) ) {
                            	        alt43=1;
                            	    }
                            	    switch (alt43) {
                            	        case 1 :
                            	            // InternalDialogParser.g:1844:8: otherlv_20= Comma
                            	            {
                            	            otherlv_20=(Token)match(input,Comma,FOLLOW_46); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_20, grammarAccess.getSadlStatementAccess().getCommaKeyword_0_1_2_1_0());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:1849:7: ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) )
                            	    // InternalDialogParser.g:1850:8: (lv_restrictions_21_0= ruleSadlPropertyRestriction )
                            	    {
                            	    // InternalDialogParser.g:1850:8: (lv_restrictions_21_0= ruleSadlPropertyRestriction )
                            	    // InternalDialogParser.g:1851:9: lv_restrictions_21_0= ruleSadlPropertyRestriction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getSadlStatementAccess().getRestrictionsSadlPropertyRestrictionParserRuleCall_0_1_2_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_47);
                            	    lv_restrictions_21_0=ruleSadlPropertyRestriction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"restrictions",
                            	      										lv_restrictions_21_0,
                            	      										"com.ge.research.sadl.SADL.SadlPropertyRestriction");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt44 >= 1 ) break loop44;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(44, input);
                                        throw eee;
                                }
                                cnt44++;
                            } while (true);


                            }


                            }
                            break;
                        case 4 :
                            // InternalDialogParser.g:1871:5: ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) )
                            {
                            // InternalDialogParser.g:1871:5: ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) )
                            // InternalDialogParser.g:1872:6: () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) )
                            {
                            // InternalDialogParser.g:1872:6: ()
                            // InternalDialogParser.g:1873:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getSadlStatementAccess().getSadlSameAsNameOrRefAction_0_1_3_0(),
                              								current);
                              						
                            }

                            }

                            otherlv_23=(Token)match(input,Is,FOLLOW_49); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_23, grammarAccess.getSadlStatementAccess().getIsKeyword_0_1_3_1());
                              					
                            }
                            otherlv_24=(Token)match(input,The_1,FOLLOW_50); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_24, grammarAccess.getSadlStatementAccess().getTheKeyword_0_1_3_2());
                              					
                            }
                            otherlv_25=(Token)match(input,Same,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_25, grammarAccess.getSadlStatementAccess().getSameKeyword_0_1_3_3());
                              					
                            }
                            otherlv_26=(Token)match(input,As,FOLLOW_52); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_26, grammarAccess.getSadlStatementAccess().getAsKeyword_0_1_3_4());
                              					
                            }
                            // InternalDialogParser.g:1895:6: ( (lv_complement_27_0= Not ) )?
                            int alt45=2;
                            int LA45_0 = input.LA(1);

                            if ( (LA45_0==Not) ) {
                                alt45=1;
                            }
                            switch (alt45) {
                                case 1 :
                                    // InternalDialogParser.g:1896:7: (lv_complement_27_0= Not )
                                    {
                                    // InternalDialogParser.g:1896:7: (lv_complement_27_0= Not )
                                    // InternalDialogParser.g:1897:8: lv_complement_27_0= Not
                                    {
                                    lv_complement_27_0=(Token)match(input,Not,FOLLOW_52); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_complement_27_0, grammarAccess.getSadlStatementAccess().getComplementNotKeyword_0_1_3_5_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getSadlStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "complement", true, "not");
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:1909:6: ( (lv_sameAs_28_0= ruleSadlTypeReference ) )
                            // InternalDialogParser.g:1910:7: (lv_sameAs_28_0= ruleSadlTypeReference )
                            {
                            // InternalDialogParser.g:1910:7: (lv_sameAs_28_0= ruleSadlTypeReference )
                            // InternalDialogParser.g:1911:8: lv_sameAs_28_0= ruleSadlTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlStatementAccess().getSameAsSadlTypeReferenceParserRuleCall_0_1_3_6_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_sameAs_28_0=ruleSadlTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                              								}
                              								set(
                              									current,
                              									"sameAs",
                              									lv_sameAs_28_0,
                              									"com.ge.research.sadl.SADL.SadlTypeReference");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalDialogParser.g:1930:5: ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) )
                            {
                            // InternalDialogParser.g:1930:5: ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) )
                            // InternalDialogParser.g:1931:6: () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) )
                            {
                            // InternalDialogParser.g:1931:6: ()
                            // InternalDialogParser.g:1932:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getSadlStatementAccess().getSadlDifferentFromNameOrRefAction_0_1_4_0(),
                              								current);
                              						
                            }

                            }

                            otherlv_30=(Token)match(input,Is,FOLLOW_53); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_30, grammarAccess.getSadlStatementAccess().getIsKeyword_0_1_4_1());
                              					
                            }
                            otherlv_31=(Token)match(input,Not,FOLLOW_49); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_31, grammarAccess.getSadlStatementAccess().getNotKeyword_0_1_4_2());
                              					
                            }
                            otherlv_32=(Token)match(input,The_1,FOLLOW_50); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_32, grammarAccess.getSadlStatementAccess().getTheKeyword_0_1_4_3());
                              					
                            }
                            otherlv_33=(Token)match(input,Same,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_33, grammarAccess.getSadlStatementAccess().getSameKeyword_0_1_4_4());
                              					
                            }
                            otherlv_34=(Token)match(input,As,FOLLOW_52); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_34, grammarAccess.getSadlStatementAccess().getAsKeyword_0_1_4_5());
                              					
                            }
                            // InternalDialogParser.g:1958:6: ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) )
                            // InternalDialogParser.g:1959:7: (lv_notTheSameAs_35_0= ruleSadlTypeReference )
                            {
                            // InternalDialogParser.g:1959:7: (lv_notTheSameAs_35_0= ruleSadlTypeReference )
                            // InternalDialogParser.g:1960:8: lv_notTheSameAs_35_0= ruleSadlTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlStatementAccess().getNotTheSameAsSadlTypeReferenceParserRuleCall_0_1_4_6_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_notTheSameAs_35_0=ruleSadlTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                              								}
                              								set(
                              									current,
                              									"notTheSameAs",
                              									lv_notTheSameAs_35_0,
                              									"com.ge.research.sadl.SADL.SadlTypeReference");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 6 :
                            // InternalDialogParser.g:1979:5: ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? )
                            {
                            // InternalDialogParser.g:1979:5: ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? )
                            // InternalDialogParser.g:1980:6: () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )?
                            {
                            // InternalDialogParser.g:1980:6: ()
                            // InternalDialogParser.g:1981:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getSadlStatementAccess().getSadlInstanceNameOrRefAction_0_1_5_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:1987:6: (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )?
                            int alt46=2;
                            int LA46_0 = input.LA(1);

                            if ( (LA46_0==Is) ) {
                                int LA46_1 = input.LA(2);

                                if ( (LA46_1==Another||LA46_1==Some||LA46_1==The||LA46_1==Any||LA46_1==The_1||LA46_1==An||LA46_1==An_1||LA46_1==A||LA46_1==A_1) ) {
                                    alt46=1;
                                }
                            }
                            switch (alt46) {
                                case 1 :
                                    // InternalDialogParser.g:1988:7: otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) )
                                    {
                                    otherlv_37=(Token)match(input,Is,FOLLOW_54); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_37, grammarAccess.getSadlStatementAccess().getIsKeyword_0_1_5_1_0());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							newCompositeNode(grammarAccess.getSadlStatementAccess().getAnArticleParserRuleCall_0_1_5_1_1());
                                      						
                                    }
                                    pushFollow(FOLLOW_52);
                                    ruleAnArticle();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							afterParserOrEnumRuleCall();
                                      						
                                    }
                                    // InternalDialogParser.g:1999:7: ( (lv_type_39_0= ruleSadlTypeReference ) )
                                    // InternalDialogParser.g:2000:8: (lv_type_39_0= ruleSadlTypeReference )
                                    {
                                    // InternalDialogParser.g:2000:8: (lv_type_39_0= ruleSadlTypeReference )
                                    // InternalDialogParser.g:2001:9: lv_type_39_0= ruleSadlTypeReference
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getSadlStatementAccess().getTypeSadlTypeReferenceParserRuleCall_0_1_5_1_2_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_55);
                                    lv_type_39_0=ruleSadlTypeReference();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_39_0,
                                      										"com.ge.research.sadl.SADL.SadlTypeReference");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:2019:6: ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )?
                            int alt48=3;
                            int LA48_0 = input.LA(1);

                            if ( (LA48_0==LeftSquareBracket) ) {
                                alt48=1;
                            }
                            else if ( (LA48_0==With||LA48_0==Has||(LA48_0>=Is && LA48_0<=Of)||LA48_0==Comma||(LA48_0>=RULE_ID && LA48_0<=RULE_QNAME_TERMINAL)) ) {
                                alt48=2;
                            }
                            switch (alt48) {
                                case 1 :
                                    // InternalDialogParser.g:2020:7: ( (lv_listInitializer_40_0= ruleSadlValueList ) )
                                    {
                                    // InternalDialogParser.g:2020:7: ( (lv_listInitializer_40_0= ruleSadlValueList ) )
                                    // InternalDialogParser.g:2021:8: (lv_listInitializer_40_0= ruleSadlValueList )
                                    {
                                    // InternalDialogParser.g:2021:8: (lv_listInitializer_40_0= ruleSadlValueList )
                                    // InternalDialogParser.g:2022:9: lv_listInitializer_40_0= ruleSadlValueList
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getSadlStatementAccess().getListInitializerSadlValueListParserRuleCall_0_1_5_2_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_listInitializer_40_0=ruleSadlValueList();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                                      									}
                                      									set(
                                      										current,
                                      										"listInitializer",
                                      										lv_listInitializer_40_0,
                                      										"com.ge.research.sadl.SADL.SadlValueList");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:2040:7: ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+
                                    {
                                    // InternalDialogParser.g:2040:7: ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+
                                    int cnt47=0;
                                    loop47:
                                    do {
                                        int alt47=2;
                                        int LA47_0 = input.LA(1);

                                        if ( (LA47_0==With||LA47_0==Has||(LA47_0>=Is && LA47_0<=Of)||LA47_0==Comma||(LA47_0>=RULE_ID && LA47_0<=RULE_QNAME_TERMINAL)) ) {
                                            alt47=1;
                                        }


                                        switch (alt47) {
                                    	case 1 :
                                    	    // InternalDialogParser.g:2041:8: (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer )
                                    	    {
                                    	    // InternalDialogParser.g:2041:8: (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer )
                                    	    // InternalDialogParser.g:2042:9: lv_propertyInitializers_41_0= ruleSadlPropertyInitializer
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      									newCompositeNode(grammarAccess.getSadlStatementAccess().getPropertyInitializersSadlPropertyInitializerParserRuleCall_0_1_5_2_1_0());
                                    	      								
                                    	    }
                                    	    pushFollow(FOLLOW_56);
                                    	    lv_propertyInitializers_41_0=ruleSadlPropertyInitializer();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      									if (current==null) {
                                    	      										current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                                    	      									}
                                    	      									add(
                                    	      										current,
                                    	      										"propertyInitializers",
                                    	      										lv_propertyInitializers_41_0,
                                    	      										"com.ge.research.sadl.SADL.SadlPropertyInitializer");
                                    	      									afterParserOrEnumRuleCall();
                                    	      								
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt47 >= 1 ) break loop47;
                                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(47, input);
                                                throw eee;
                                        }
                                        cnt47++;
                                    } while (true);


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 7 :
                            // InternalDialogParser.g:2062:5: ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint )
                            {
                            // InternalDialogParser.g:2062:5: ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint )
                            // InternalDialogParser.g:2063:6: () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint
                            {
                            // InternalDialogParser.g:2063:6: ()
                            // InternalDialogParser.g:2064:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndAdd(
                              								grammarAccess.getSadlStatementAccess().getSadlDisjointClassesClassesAction_0_1_6_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:2070:6: (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+
                            int cnt49=0;
                            loop49:
                            do {
                                int alt49=2;
                                int LA49_0 = input.LA(1);

                                if ( (LA49_0==And) ) {
                                    alt49=1;
                                }


                                switch (alt49) {
                            	case 1 :
                            	    // InternalDialogParser.g:2071:7: otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) )
                            	    {
                            	    otherlv_43=(Token)match(input,And,FOLLOW_9); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_43, grammarAccess.getSadlStatementAccess().getAndKeyword_0_1_6_1_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:2075:7: ( (lv_classes_44_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:2076:8: (lv_classes_44_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:2076:8: (lv_classes_44_0= ruleSadlResource )
                            	    // InternalDialogParser.g:2077:9: lv_classes_44_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getSadlStatementAccess().getClassesSadlResourceParserRuleCall_0_1_6_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_57);
                            	    lv_classes_44_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"classes",
                            	      										lv_classes_44_0,
                            	      										"com.ge.research.sadl.SADL.SadlResource");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt49 >= 1 ) break loop49;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(49, input);
                                        throw eee;
                                }
                                cnt49++;
                            } while (true);

                            otherlv_45=(Token)match(input,Are,FOLLOW_58); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_45, grammarAccess.getSadlStatementAccess().getAreKeyword_0_1_6_2());
                              					
                            }
                            otherlv_46=(Token)match(input,Disjoint,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_46, grammarAccess.getSadlStatementAccess().getDisjointKeyword_0_1_6_3());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:2107:3: ( () otherlv_48= LeftCurlyBracket ( (lv_classOrProperty_49_0= ruleSadlResource ) ) (otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) ) )* otherlv_52= RightCurlyBracket otherlv_53= Are ( ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* ) | ( () otherlv_62= Disjoint ) | ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same ) ) )
                    {
                    // InternalDialogParser.g:2107:3: ( () otherlv_48= LeftCurlyBracket ( (lv_classOrProperty_49_0= ruleSadlResource ) ) (otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) ) )* otherlv_52= RightCurlyBracket otherlv_53= Are ( ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* ) | ( () otherlv_62= Disjoint ) | ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same ) ) )
                    // InternalDialogParser.g:2108:4: () otherlv_48= LeftCurlyBracket ( (lv_classOrProperty_49_0= ruleSadlResource ) ) (otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) ) )* otherlv_52= RightCurlyBracket otherlv_53= Are ( ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* ) | ( () otherlv_62= Disjoint ) | ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same ) )
                    {
                    // InternalDialogParser.g:2108:4: ()
                    // InternalDialogParser.g:2109:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlStatementAccess().getSadlClassOrPropertyDeclarationAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_48=(Token)match(input,LeftCurlyBracket,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getSadlStatementAccess().getLeftCurlyBracketKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:2119:4: ( (lv_classOrProperty_49_0= ruleSadlResource ) )
                    // InternalDialogParser.g:2120:5: (lv_classOrProperty_49_0= ruleSadlResource )
                    {
                    // InternalDialogParser.g:2120:5: (lv_classOrProperty_49_0= ruleSadlResource )
                    // InternalDialogParser.g:2121:6: lv_classOrProperty_49_0= ruleSadlResource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlStatementAccess().getClassOrPropertySadlResourceParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_59);
                    lv_classOrProperty_49_0=ruleSadlResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                      						}
                      						add(
                      							current,
                      							"classOrProperty",
                      							lv_classOrProperty_49_0,
                      							"com.ge.research.sadl.SADL.SadlResource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:2138:4: (otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) ) )*
                    loop51:
                    do {
                        int alt51=2;
                        int LA51_0 = input.LA(1);

                        if ( (LA51_0==Comma) ) {
                            alt51=1;
                        }


                        switch (alt51) {
                    	case 1 :
                    	    // InternalDialogParser.g:2139:5: otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) )
                    	    {
                    	    otherlv_50=(Token)match(input,Comma,FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_50, grammarAccess.getSadlStatementAccess().getCommaKeyword_1_3_0());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:2143:5: ( (lv_classOrProperty_51_0= ruleSadlResource ) )
                    	    // InternalDialogParser.g:2144:6: (lv_classOrProperty_51_0= ruleSadlResource )
                    	    {
                    	    // InternalDialogParser.g:2144:6: (lv_classOrProperty_51_0= ruleSadlResource )
                    	    // InternalDialogParser.g:2145:7: lv_classOrProperty_51_0= ruleSadlResource
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlStatementAccess().getClassOrPropertySadlResourceParserRuleCall_1_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_59);
                    	    lv_classOrProperty_51_0=ruleSadlResource();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"classOrProperty",
                    	      								lv_classOrProperty_51_0,
                    	      								"com.ge.research.sadl.SADL.SadlResource");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop51;
                        }
                    } while (true);

                    otherlv_52=(Token)match(input,RightCurlyBracket,FOLLOW_60); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_52, grammarAccess.getSadlStatementAccess().getRightCurlyBracketKeyword_1_4());
                      			
                    }
                    otherlv_53=(Token)match(input,Are,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_53, grammarAccess.getSadlStatementAccess().getAreKeyword_1_5());
                      			
                    }
                    // InternalDialogParser.g:2171:4: ( ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* ) | ( () otherlv_62= Disjoint ) | ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same ) )
                    int alt57=3;
                    switch ( input.LA(1) ) {
                    case Instances:
                    case TopLevel:
                    case Classes:
                    case Types:
                        {
                        alt57=1;
                        }
                        break;
                    case Disjoint:
                        {
                        alt57=2;
                        }
                        break;
                    case Not:
                    case The_1:
                        {
                        alt57=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 57, 0, input);

                        throw nvae;
                    }

                    switch (alt57) {
                        case 1 :
                            // InternalDialogParser.g:2172:5: ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* )
                            {
                            // InternalDialogParser.g:2172:5: ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* )
                            // InternalDialogParser.g:2173:6: ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )*
                            {
                            // InternalDialogParser.g:2173:6: ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) )
                            int alt54=2;
                            int LA54_0 = input.LA(1);

                            if ( (LA54_0==TopLevel||LA54_0==Classes) ) {
                                alt54=1;
                            }
                            else if ( (LA54_0==Instances||LA54_0==Types) ) {
                                alt54=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 54, 0, input);

                                throw nvae;
                            }
                            switch (alt54) {
                                case 1 :
                                    // InternalDialogParser.g:2174:7: ( (otherlv_54= TopLevel )? otherlv_55= Classes )
                                    {
                                    // InternalDialogParser.g:2174:7: ( (otherlv_54= TopLevel )? otherlv_55= Classes )
                                    // InternalDialogParser.g:2175:8: (otherlv_54= TopLevel )? otherlv_55= Classes
                                    {
                                    // InternalDialogParser.g:2175:8: (otherlv_54= TopLevel )?
                                    int alt52=2;
                                    int LA52_0 = input.LA(1);

                                    if ( (LA52_0==TopLevel) ) {
                                        alt52=1;
                                    }
                                    switch (alt52) {
                                        case 1 :
                                            // InternalDialogParser.g:2176:9: otherlv_54= TopLevel
                                            {
                                            otherlv_54=(Token)match(input,TopLevel,FOLLOW_62); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(otherlv_54, grammarAccess.getSadlStatementAccess().getTopLevelKeyword_1_6_0_0_0_0());
                                              								
                                            }

                                            }
                                            break;

                                    }

                                    otherlv_55=(Token)match(input,Classes,FOLLOW_45); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_55, grammarAccess.getSadlStatementAccess().getClassesKeyword_1_6_0_0_0_1());
                                      							
                                    }

                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:2187:7: ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) )
                                    {
                                    // InternalDialogParser.g:2187:7: ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) )
                                    // InternalDialogParser.g:2188:8: ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) )
                                    {
                                    // InternalDialogParser.g:2188:8: ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) )
                                    int alt53=2;
                                    int LA53_0 = input.LA(1);

                                    if ( (LA53_0==Types) ) {
                                        alt53=1;
                                    }
                                    else if ( (LA53_0==Instances) ) {
                                        alt53=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 53, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt53) {
                                        case 1 :
                                            // InternalDialogParser.g:2189:9: ( (lv_oftype_56_0= Types ) )
                                            {
                                            // InternalDialogParser.g:2189:9: ( (lv_oftype_56_0= Types ) )
                                            // InternalDialogParser.g:2190:10: (lv_oftype_56_0= Types )
                                            {
                                            // InternalDialogParser.g:2190:10: (lv_oftype_56_0= Types )
                                            // InternalDialogParser.g:2191:11: lv_oftype_56_0= Types
                                            {
                                            lv_oftype_56_0=(Token)match(input,Types,FOLLOW_11); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_oftype_56_0, grammarAccess.getSadlStatementAccess().getOftypeTypesKeyword_1_6_0_0_1_0_0_0());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getSadlStatementRule());
                                              											}
                                              											setWithLastConsumed(current, "oftype", lv_oftype_56_0, "types");
                                              										
                                            }

                                            }


                                            }


                                            }
                                            break;
                                        case 2 :
                                            // InternalDialogParser.g:2204:9: ( (lv_oftype_57_0= Instances ) )
                                            {
                                            // InternalDialogParser.g:2204:9: ( (lv_oftype_57_0= Instances ) )
                                            // InternalDialogParser.g:2205:10: (lv_oftype_57_0= Instances )
                                            {
                                            // InternalDialogParser.g:2205:10: (lv_oftype_57_0= Instances )
                                            // InternalDialogParser.g:2206:11: lv_oftype_57_0= Instances
                                            {
                                            lv_oftype_57_0=(Token)match(input,Instances,FOLLOW_11); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_oftype_57_0, grammarAccess.getSadlStatementAccess().getOftypeInstancesKeyword_1_6_0_0_1_0_1_0());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getSadlStatementRule());
                                              											}
                                              											setWithLastConsumed(current, "oftype", lv_oftype_57_0, "instances");
                                              										
                                            }

                                            }


                                            }


                                            }
                                            break;

                                    }

                                    otherlv_58=(Token)match(input,Of,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_58, grammarAccess.getSadlStatementAccess().getOfKeyword_1_6_0_0_1_1());
                                      							
                                    }
                                    // InternalDialogParser.g:2223:8: ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) )
                                    // InternalDialogParser.g:2224:9: (lv_superElement_59_0= ruleSadlPrimaryTypeReference )
                                    {
                                    // InternalDialogParser.g:2224:9: (lv_superElement_59_0= ruleSadlPrimaryTypeReference )
                                    // InternalDialogParser.g:2225:10: lv_superElement_59_0= ruleSadlPrimaryTypeReference
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getSadlStatementAccess().getSuperElementSadlPrimaryTypeReferenceParserRuleCall_1_6_0_0_1_2_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_45);
                                    lv_superElement_59_0=ruleSadlPrimaryTypeReference();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                                      										}
                                      										set(
                                      											current,
                                      											"superElement",
                                      											lv_superElement_59_0,
                                      											"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:2244:6: ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )*
                            loop55:
                            do {
                                int alt55=2;
                                int LA55_0 = input.LA(1);

                                if ( (LA55_0==Described||LA55_0==Comma) ) {
                                    alt55=1;
                                }


                                switch (alt55) {
                            	case 1 :
                            	    // InternalDialogParser.g:2245:7: (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass )
                            	    {
                            	    // InternalDialogParser.g:2245:7: (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass )
                            	    // InternalDialogParser.g:2246:8: lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getSadlStatementAccess().getDescribedBySadlPropertyDeclarationInClassParserRuleCall_1_6_0_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_45);
                            	    lv_describedBy_60_0=ruleSadlPropertyDeclarationInClass();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"describedBy",
                            	      									lv_describedBy_60_0,
                            	      									"com.ge.research.sadl.SADL.SadlPropertyDeclarationInClass");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop55;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2265:5: ( () otherlv_62= Disjoint )
                            {
                            // InternalDialogParser.g:2265:5: ( () otherlv_62= Disjoint )
                            // InternalDialogParser.g:2266:6: () otherlv_62= Disjoint
                            {
                            // InternalDialogParser.g:2266:6: ()
                            // InternalDialogParser.g:2267:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndAdd(
                              								grammarAccess.getSadlStatementAccess().getSadlDisjointClassesTypesAction_1_6_1_0(),
                              								current);
                              						
                            }

                            }

                            otherlv_62=(Token)match(input,Disjoint,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_62, grammarAccess.getSadlStatementAccess().getDisjointKeyword_1_6_1_1());
                              					
                            }

                            }


                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:2279:5: ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same )
                            {
                            // InternalDialogParser.g:2279:5: ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same )
                            // InternalDialogParser.g:2280:6: () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same
                            {
                            // InternalDialogParser.g:2280:6: ()
                            // InternalDialogParser.g:2281:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndAdd(
                              								grammarAccess.getSadlStatementAccess().getSadlDifferentFromTypesAction_1_6_2_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:2287:6: ( (lv_complement_64_0= Not ) )?
                            int alt56=2;
                            int LA56_0 = input.LA(1);

                            if ( (LA56_0==Not) ) {
                                alt56=1;
                            }
                            switch (alt56) {
                                case 1 :
                                    // InternalDialogParser.g:2288:7: (lv_complement_64_0= Not )
                                    {
                                    // InternalDialogParser.g:2288:7: (lv_complement_64_0= Not )
                                    // InternalDialogParser.g:2289:8: lv_complement_64_0= Not
                                    {
                                    lv_complement_64_0=(Token)match(input,Not,FOLLOW_49); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_complement_64_0, grammarAccess.getSadlStatementAccess().getComplementNotKeyword_1_6_2_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getSadlStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "complement", true, "not");
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            otherlv_65=(Token)match(input,The_1,FOLLOW_50); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_65, grammarAccess.getSadlStatementAccess().getTheKeyword_1_6_2_2());
                              					
                            }
                            otherlv_66=(Token)match(input,Same,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_66, grammarAccess.getSadlStatementAccess().getSameKeyword_1_6_2_3());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:2313:3: ( () ( ruleAnArticle )? otherlv_69= Relationship otherlv_70= Of ( (lv_from_71_0= ruleSadlTypeReference ) ) otherlv_72= To ( (lv_to_73_0= ruleSadlTypeReference ) ) otherlv_74= Is ( (lv_property_75_0= ruleSadlResource ) ) )
                    {
                    // InternalDialogParser.g:2313:3: ( () ( ruleAnArticle )? otherlv_69= Relationship otherlv_70= Of ( (lv_from_71_0= ruleSadlTypeReference ) ) otherlv_72= To ( (lv_to_73_0= ruleSadlTypeReference ) ) otherlv_74= Is ( (lv_property_75_0= ruleSadlResource ) ) )
                    // InternalDialogParser.g:2314:4: () ( ruleAnArticle )? otherlv_69= Relationship otherlv_70= Of ( (lv_from_71_0= ruleSadlTypeReference ) ) otherlv_72= To ( (lv_to_73_0= ruleSadlTypeReference ) ) otherlv_74= Is ( (lv_property_75_0= ruleSadlResource ) )
                    {
                    // InternalDialogParser.g:2314:4: ()
                    // InternalDialogParser.g:2315:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlStatementAccess().getSadlPropertyAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:2321:4: ( ruleAnArticle )?
                    int alt58=2;
                    int LA58_0 = input.LA(1);

                    if ( (LA58_0==Another||LA58_0==Some||LA58_0==The||LA58_0==Any||LA58_0==The_1||LA58_0==An||LA58_0==An_1||LA58_0==A||LA58_0==A_1) ) {
                        alt58=1;
                    }
                    switch (alt58) {
                        case 1 :
                            // InternalDialogParser.g:2322:5: ruleAnArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getSadlStatementAccess().getAnArticleParserRuleCall_2_1());
                              				
                            }
                            pushFollow(FOLLOW_63);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_69=(Token)match(input,Relationship,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_69, grammarAccess.getSadlStatementAccess().getRelationshipKeyword_2_2());
                      			
                    }
                    otherlv_70=(Token)match(input,Of,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_70, grammarAccess.getSadlStatementAccess().getOfKeyword_2_3());
                      			
                    }
                    // InternalDialogParser.g:2338:4: ( (lv_from_71_0= ruleSadlTypeReference ) )
                    // InternalDialogParser.g:2339:5: (lv_from_71_0= ruleSadlTypeReference )
                    {
                    // InternalDialogParser.g:2339:5: (lv_from_71_0= ruleSadlTypeReference )
                    // InternalDialogParser.g:2340:6: lv_from_71_0= ruleSadlTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlStatementAccess().getFromSadlTypeReferenceParserRuleCall_2_4_0());
                      					
                    }
                    pushFollow(FOLLOW_64);
                    lv_from_71_0=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_71_0,
                      							"com.ge.research.sadl.SADL.SadlTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_72=(Token)match(input,To,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_72, grammarAccess.getSadlStatementAccess().getToKeyword_2_5());
                      			
                    }
                    // InternalDialogParser.g:2361:4: ( (lv_to_73_0= ruleSadlTypeReference ) )
                    // InternalDialogParser.g:2362:5: (lv_to_73_0= ruleSadlTypeReference )
                    {
                    // InternalDialogParser.g:2362:5: (lv_to_73_0= ruleSadlTypeReference )
                    // InternalDialogParser.g:2363:6: lv_to_73_0= ruleSadlTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlStatementAccess().getToSadlTypeReferenceParserRuleCall_2_6_0());
                      					
                    }
                    pushFollow(FOLLOW_65);
                    lv_to_73_0=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_73_0,
                      							"com.ge.research.sadl.SADL.SadlTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_74=(Token)match(input,Is,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_74, grammarAccess.getSadlStatementAccess().getIsKeyword_2_7());
                      			
                    }
                    // InternalDialogParser.g:2384:4: ( (lv_property_75_0= ruleSadlResource ) )
                    // InternalDialogParser.g:2385:5: (lv_property_75_0= ruleSadlResource )
                    {
                    // InternalDialogParser.g:2385:5: (lv_property_75_0= ruleSadlResource )
                    // InternalDialogParser.g:2386:6: lv_property_75_0= ruleSadlResource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlStatementAccess().getPropertySadlResourceParserRuleCall_2_8_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_property_75_0=ruleSadlResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                      						}
                      						set(
                      							current,
                      							"property",
                      							lv_property_75_0,
                      							"com.ge.research.sadl.SADL.SadlResource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:2405:3: ( ruleAnArticle this_SadlTypeReference_77= ruleSadlTypeReference ( ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* ) | ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* ) ) )
                    {
                    // InternalDialogParser.g:2405:3: ( ruleAnArticle this_SadlTypeReference_77= ruleSadlTypeReference ( ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* ) | ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* ) ) )
                    // InternalDialogParser.g:2406:4: ruleAnArticle this_SadlTypeReference_77= ruleSadlTypeReference ( ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* ) | ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* ) )
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlStatementAccess().getAnArticleParserRuleCall_3_0());
                      			
                    }
                    pushFollow(FOLLOW_52);
                    ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlStatementAccess().getSadlTypeReferenceParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_56);
                    this_SadlTypeReference_77=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SadlTypeReference_77;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalDialogParser.g:2421:4: ( ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* ) | ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* ) )
                    int alt62=2;
                    int LA62_0 = input.LA(1);

                    if ( (LA62_0==EOF||LA62_0==With||LA62_0==Has||LA62_0==Of||LA62_0==Comma||LA62_0==FullStop||LA62_0==QuestionMark||(LA62_0>=RULE_ID && LA62_0<=RULE_QNAME_TERMINAL)) ) {
                        alt62=1;
                    }
                    else if ( (LA62_0==Is) ) {
                        int LA62_2 = input.LA(2);

                        if ( (LA62_2==Another||LA62_2==Some||LA62_2==The||LA62_2==Any||LA62_2==The_1||LA62_2==An||LA62_2==An_1||LA62_2==A||LA62_2==A_1) ) {
                            alt62=2;
                        }
                        else if ( ((LA62_2>=RULE_ID && LA62_2<=RULE_QNAME_TERMINAL)) ) {
                            alt62=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 62, 2, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 62, 0, input);

                        throw nvae;
                    }
                    switch (alt62) {
                        case 1 :
                            // InternalDialogParser.g:2422:5: ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* )
                            {
                            // InternalDialogParser.g:2422:5: ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* )
                            // InternalDialogParser.g:2423:6: () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )*
                            {
                            // InternalDialogParser.g:2423:6: ()
                            // InternalDialogParser.g:2424:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getSadlStatementAccess().getSadlInstanceTypeAction_3_2_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:2430:6: ( (lv_instance_79_0= ruleSadlResource ) )?
                            int alt59=2;
                            alt59 = dfa59.predict(input);
                            switch (alt59) {
                                case 1 :
                                    // InternalDialogParser.g:2431:7: (lv_instance_79_0= ruleSadlResource )
                                    {
                                    // InternalDialogParser.g:2431:7: (lv_instance_79_0= ruleSadlResource )
                                    // InternalDialogParser.g:2432:8: lv_instance_79_0= ruleSadlResource
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getSadlStatementAccess().getInstanceSadlResourceParserRuleCall_3_2_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_56);
                                    lv_instance_79_0=ruleSadlResource();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                                      								}
                                      								set(
                                      									current,
                                      									"instance",
                                      									lv_instance_79_0,
                                      									"com.ge.research.sadl.SADL.SadlResource");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:2449:6: ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )*
                            loop60:
                            do {
                                int alt60=2;
                                int LA60_0 = input.LA(1);

                                if ( (LA60_0==With||LA60_0==Has||(LA60_0>=Is && LA60_0<=Of)||LA60_0==Comma||(LA60_0>=RULE_ID && LA60_0<=RULE_QNAME_TERMINAL)) ) {
                                    alt60=1;
                                }


                                switch (alt60) {
                            	case 1 :
                            	    // InternalDialogParser.g:2450:7: (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer )
                            	    {
                            	    // InternalDialogParser.g:2450:7: (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer )
                            	    // InternalDialogParser.g:2451:8: lv_propertyInitializers_80_0= ruleSadlPropertyInitializer
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getSadlStatementAccess().getPropertyInitializersSadlPropertyInitializerParserRuleCall_3_2_0_2_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_56);
                            	    lv_propertyInitializers_80_0=ruleSadlPropertyInitializer();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"propertyInitializers",
                            	      									lv_propertyInitializers_80_0,
                            	      									"com.ge.research.sadl.SADL.SadlPropertyInitializer");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop60;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2470:5: ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* )
                            {
                            // InternalDialogParser.g:2470:5: ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* )
                            // InternalDialogParser.g:2471:6: () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )*
                            {
                            // InternalDialogParser.g:2471:6: ()
                            // InternalDialogParser.g:2472:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getSadlStatementAccess().getSadlNecessaryAndSufficientSubjectAction_3_2_1_0(),
                              								current);
                              						
                            }

                            }

                            otherlv_82=(Token)match(input,Is,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_82, grammarAccess.getSadlStatementAccess().getIsKeyword_3_2_1_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSadlStatementAccess().getAnArticleParserRuleCall_3_2_1_2());
                              					
                            }
                            pushFollow(FOLLOW_9);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						afterParserOrEnumRuleCall();
                              					
                            }
                            // InternalDialogParser.g:2489:6: ( (lv_object_84_0= ruleSadlResource ) )
                            // InternalDialogParser.g:2490:7: (lv_object_84_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:2490:7: (lv_object_84_0= ruleSadlResource )
                            // InternalDialogParser.g:2491:8: lv_object_84_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlStatementAccess().getObjectSadlResourceParserRuleCall_3_2_1_3_0());
                              							
                            }
                            pushFollow(FOLLOW_66);
                            lv_object_84_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                              								}
                              								set(
                              									current,
                              									"object",
                              									lv_object_84_0,
                              									"com.ge.research.sadl.SADL.SadlResource");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_85=(Token)match(input,Only,FOLLOW_67); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_85, grammarAccess.getSadlStatementAccess().getOnlyKeyword_3_2_1_4());
                              					
                            }
                            otherlv_86=(Token)match(input,If,FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_86, grammarAccess.getSadlStatementAccess().getIfKeyword_3_2_1_5());
                              					
                            }
                            // InternalDialogParser.g:2516:6: ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) )
                            // InternalDialogParser.g:2517:7: (lv_propConditions_87_0= ruleSadlPropertyCondition )
                            {
                            // InternalDialogParser.g:2517:7: (lv_propConditions_87_0= ruleSadlPropertyCondition )
                            // InternalDialogParser.g:2518:8: lv_propConditions_87_0= ruleSadlPropertyCondition
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlStatementAccess().getPropConditionsSadlPropertyConditionParserRuleCall_3_2_1_6_0());
                              							
                            }
                            pushFollow(FOLLOW_68);
                            lv_propConditions_87_0=ruleSadlPropertyCondition();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                              								}
                              								add(
                              									current,
                              									"propConditions",
                              									lv_propConditions_87_0,
                              									"com.ge.research.sadl.SADL.SadlPropertyCondition");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:2535:6: (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )*
                            loop61:
                            do {
                                int alt61=2;
                                int LA61_0 = input.LA(1);

                                if ( (LA61_0==And) ) {
                                    alt61=1;
                                }


                                switch (alt61) {
                            	case 1 :
                            	    // InternalDialogParser.g:2536:7: otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) )
                            	    {
                            	    otherlv_88=(Token)match(input,And,FOLLOW_9); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_88, grammarAccess.getSadlStatementAccess().getAndKeyword_3_2_1_7_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:2540:7: ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) )
                            	    // InternalDialogParser.g:2541:8: (lv_propConditions_89_0= ruleSadlPropertyCondition )
                            	    {
                            	    // InternalDialogParser.g:2541:8: (lv_propConditions_89_0= ruleSadlPropertyCondition )
                            	    // InternalDialogParser.g:2542:9: lv_propConditions_89_0= ruleSadlPropertyCondition
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getSadlStatementAccess().getPropConditionsSadlPropertyConditionParserRuleCall_3_2_1_7_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_68);
                            	    lv_propConditions_89_0=ruleSadlPropertyCondition();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"propConditions",
                            	      										lv_propConditions_89_0,
                            	      										"com.ge.research.sadl.SADL.SadlPropertyCondition");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop61;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlStatement"


    // $ANTLR start "entryRuleSadlPropertyCondition"
    // InternalDialogParser.g:2567:1: entryRuleSadlPropertyCondition returns [EObject current=null] : iv_ruleSadlPropertyCondition= ruleSadlPropertyCondition EOF ;
    public final EObject entryRuleSadlPropertyCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPropertyCondition = null;


        try {
            // InternalDialogParser.g:2567:62: (iv_ruleSadlPropertyCondition= ruleSadlPropertyCondition EOF )
            // InternalDialogParser.g:2568:2: iv_ruleSadlPropertyCondition= ruleSadlPropertyCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPropertyConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPropertyCondition=ruleSadlPropertyCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPropertyCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPropertyCondition"


    // $ANTLR start "ruleSadlPropertyCondition"
    // InternalDialogParser.g:2574:1: ruleSadlPropertyCondition returns [EObject current=null] : ( ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) ) ) ;
    public final EObject ruleSadlPropertyCondition() throws RecognitionException {
        EObject current = null;

        EObject lv_cond_1_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2580:2: ( ( ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) ) ) )
            // InternalDialogParser.g:2581:2: ( ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) ) )
            {
            // InternalDialogParser.g:2581:2: ( ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) ) )
            // InternalDialogParser.g:2582:3: ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) )
            {
            // InternalDialogParser.g:2582:3: ( ( ruleQNAME ) )
            // InternalDialogParser.g:2583:4: ( ruleQNAME )
            {
            // InternalDialogParser.g:2583:4: ( ruleQNAME )
            // InternalDialogParser.g:2584:5: ruleQNAME
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlPropertyConditionRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlPropertyConditionAccess().getPropertySadlResourceCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_69);
            ruleQNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:2598:3: ( (lv_cond_1_0= ruleSadlCondition ) )
            // InternalDialogParser.g:2599:4: (lv_cond_1_0= ruleSadlCondition )
            {
            // InternalDialogParser.g:2599:4: (lv_cond_1_0= ruleSadlCondition )
            // InternalDialogParser.g:2600:5: lv_cond_1_0= ruleSadlCondition
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlPropertyConditionAccess().getCondSadlConditionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_cond_1_0=ruleSadlCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSadlPropertyConditionRule());
              					}
              					add(
              						current,
              						"cond",
              						lv_cond_1_0,
              						"com.ge.research.sadl.SADL.SadlCondition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPropertyCondition"


    // $ANTLR start "entryRuleSadlPropertyInitializer"
    // InternalDialogParser.g:2621:1: entryRuleSadlPropertyInitializer returns [EObject current=null] : iv_ruleSadlPropertyInitializer= ruleSadlPropertyInitializer EOF ;
    public final EObject entryRuleSadlPropertyInitializer() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPropertyInitializer = null;


        try {
            // InternalDialogParser.g:2621:64: (iv_ruleSadlPropertyInitializer= ruleSadlPropertyInitializer EOF )
            // InternalDialogParser.g:2622:2: iv_ruleSadlPropertyInitializer= ruleSadlPropertyInitializer EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPropertyInitializerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPropertyInitializer=ruleSadlPropertyInitializer();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPropertyInitializer; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPropertyInitializer"


    // $ANTLR start "ruleSadlPropertyInitializer"
    // InternalDialogParser.g:2628:1: ruleSadlPropertyInitializer returns [EObject current=null] : ( ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) | ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) ) | ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) ) ) ;
    public final EObject ruleSadlPropertyInitializer() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        EObject lv_value_4_0 = null;

        EObject lv_value_6_0 = null;

        EObject lv_value_17_0 = null;

        EObject lv_value_19_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2634:2: ( ( ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) | ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) ) | ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) ) ) )
            // InternalDialogParser.g:2635:2: ( ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) | ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) ) | ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) ) )
            {
            // InternalDialogParser.g:2635:2: ( ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) | ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) ) | ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) ) )
            int alt70=3;
            switch ( input.LA(1) ) {
            case Comma:
                {
                switch ( input.LA(2) ) {
                case Is:
                    {
                    alt70=2;
                    }
                    break;
                case With:
                case Has:
                case RULE_ID:
                case RULE_QNAME_TERMINAL:
                    {
                    alt70=1;
                    }
                    break;
                case Of:
                    {
                    alt70=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 1, input);

                    throw nvae;
                }

                }
                break;
            case With:
            case Has:
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt70=1;
                }
                break;
            case Is:
                {
                alt70=2;
                }
                break;
            case Of:
                {
                alt70=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }

            switch (alt70) {
                case 1 :
                    // InternalDialogParser.g:2636:3: ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) )
                    {
                    // InternalDialogParser.g:2636:3: ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) )
                    // InternalDialogParser.g:2637:4: (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) )
                    {
                    // InternalDialogParser.g:2637:4: (otherlv_0= Comma )?
                    int alt64=2;
                    int LA64_0 = input.LA(1);

                    if ( (LA64_0==Comma) ) {
                        alt64=1;
                    }
                    switch (alt64) {
                        case 1 :
                            // InternalDialogParser.g:2638:5: otherlv_0= Comma
                            {
                            otherlv_0=(Token)match(input,Comma,FOLLOW_70); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_0, grammarAccess.getSadlPropertyInitializerAccess().getCommaKeyword_0_0());
                              				
                            }

                            }
                            break;

                    }

                    // InternalDialogParser.g:2643:4: (otherlv_1= With | otherlv_2= Has )?
                    int alt65=3;
                    int LA65_0 = input.LA(1);

                    if ( (LA65_0==With) ) {
                        alt65=1;
                    }
                    else if ( (LA65_0==Has) ) {
                        alt65=2;
                    }
                    switch (alt65) {
                        case 1 :
                            // InternalDialogParser.g:2644:5: otherlv_1= With
                            {
                            otherlv_1=(Token)match(input,With,FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getSadlPropertyInitializerAccess().getWithKeyword_0_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2649:5: otherlv_2= Has
                            {
                            otherlv_2=(Token)match(input,Has,FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getSadlPropertyInitializerAccess().getHasKeyword_0_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalDialogParser.g:2654:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:2655:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:2655:5: ( ruleQNAME )
                    // InternalDialogParser.g:2656:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getPropertySadlResourceCrossReference_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_71);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:2670:4: ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) )
                    int alt66=2;
                    int LA66_0 = input.LA(1);

                    if ( (LA66_0==False||LA66_0==Known||LA66_0==True||LA66_0==Not||LA66_0==PI||LA66_0==HyphenMinus||LA66_0==LeftSquareBracket||LA66_0==E_1||LA66_0==RULE_NUMBER||(LA66_0>=RULE_ID && LA66_0<=RULE_STRING)) ) {
                        alt66=1;
                    }
                    else if ( (LA66_0==LeftParenthesis) ) {
                        alt66=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 66, 0, input);

                        throw nvae;
                    }
                    switch (alt66) {
                        case 1 :
                            // InternalDialogParser.g:2671:5: ( (lv_value_4_0= ruleSadlExplicitValue ) )
                            {
                            // InternalDialogParser.g:2671:5: ( (lv_value_4_0= ruleSadlExplicitValue ) )
                            // InternalDialogParser.g:2672:6: (lv_value_4_0= ruleSadlExplicitValue )
                            {
                            // InternalDialogParser.g:2672:6: (lv_value_4_0= ruleSadlExplicitValue )
                            // InternalDialogParser.g:2673:7: lv_value_4_0= ruleSadlExplicitValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlExplicitValueParserRuleCall_0_3_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_value_4_0=ruleSadlExplicitValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_4_0,
                              								"com.ge.research.sadl.SADL.SadlExplicitValue");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2691:5: (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis )
                            {
                            // InternalDialogParser.g:2691:5: (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis )
                            // InternalDialogParser.g:2692:6: otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis
                            {
                            otherlv_5=(Token)match(input,LeftParenthesis,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getSadlPropertyInitializerAccess().getLeftParenthesisKeyword_0_3_1_0());
                              					
                            }
                            // InternalDialogParser.g:2696:6: ( (lv_value_6_0= ruleSadlNestedInstance ) )
                            // InternalDialogParser.g:2697:7: (lv_value_6_0= ruleSadlNestedInstance )
                            {
                            // InternalDialogParser.g:2697:7: (lv_value_6_0= ruleSadlNestedInstance )
                            // InternalDialogParser.g:2698:8: lv_value_6_0= ruleSadlNestedInstance
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlNestedInstanceParserRuleCall_0_3_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_72);
                            lv_value_6_0=ruleSadlNestedInstance();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
                              								}
                              								set(
                              									current,
                              									"value",
                              									lv_value_6_0,
                              									"com.ge.research.sadl.SADL.SadlNestedInstance");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_7=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getSadlPropertyInitializerAccess().getRightParenthesisKeyword_0_3_1_2());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:2723:3: ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) )
                    {
                    // InternalDialogParser.g:2723:3: ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) )
                    // InternalDialogParser.g:2724:4: (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) )
                    {
                    // InternalDialogParser.g:2724:4: (otherlv_8= Comma )?
                    int alt67=2;
                    int LA67_0 = input.LA(1);

                    if ( (LA67_0==Comma) ) {
                        alt67=1;
                    }
                    switch (alt67) {
                        case 1 :
                            // InternalDialogParser.g:2725:5: otherlv_8= Comma
                            {
                            otherlv_8=(Token)match(input,Comma,FOLLOW_65); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getSadlPropertyInitializerAccess().getCommaKeyword_1_0());
                              				
                            }

                            }
                            break;

                    }

                    otherlv_9=(Token)match(input,Is,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSadlPropertyInitializerAccess().getIsKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:2734:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:2735:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:2735:5: ( ruleQNAME )
                    // InternalDialogParser.g:2736:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getPropertySadlResourceCrossReference_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,Of,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getSadlPropertyInitializerAccess().getOfKeyword_1_3());
                      			
                    }
                    // InternalDialogParser.g:2754:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:2755:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:2755:5: ( ruleQNAME )
                    // InternalDialogParser.g:2756:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getTypeSadlResourceCrossReference_1_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:2772:3: ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) )
                    {
                    // InternalDialogParser.g:2772:3: ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) )
                    // InternalDialogParser.g:2773:4: (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) )
                    {
                    // InternalDialogParser.g:2773:4: (otherlv_13= Comma )?
                    int alt68=2;
                    int LA68_0 = input.LA(1);

                    if ( (LA68_0==Comma) ) {
                        alt68=1;
                    }
                    switch (alt68) {
                        case 1 :
                            // InternalDialogParser.g:2774:5: otherlv_13= Comma
                            {
                            otherlv_13=(Token)match(input,Comma,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_13, grammarAccess.getSadlPropertyInitializerAccess().getCommaKeyword_2_0());
                              				
                            }

                            }
                            break;

                    }

                    otherlv_14=(Token)match(input,Of,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getSadlPropertyInitializerAccess().getOfKeyword_2_1());
                      			
                    }
                    // InternalDialogParser.g:2783:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:2784:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:2784:5: ( ruleQNAME )
                    // InternalDialogParser.g:2785:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getPropertySadlResourceCrossReference_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_65);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_16=(Token)match(input,Is,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getSadlPropertyInitializerAccess().getIsKeyword_2_3());
                      			
                    }
                    // InternalDialogParser.g:2803:4: ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) )
                    int alt69=2;
                    int LA69_0 = input.LA(1);

                    if ( (LA69_0==False||LA69_0==Known||LA69_0==True||LA69_0==Not||LA69_0==PI||LA69_0==HyphenMinus||LA69_0==LeftSquareBracket||LA69_0==E_1||LA69_0==RULE_NUMBER||(LA69_0>=RULE_ID && LA69_0<=RULE_STRING)) ) {
                        alt69=1;
                    }
                    else if ( (LA69_0==LeftParenthesis) ) {
                        alt69=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 69, 0, input);

                        throw nvae;
                    }
                    switch (alt69) {
                        case 1 :
                            // InternalDialogParser.g:2804:5: ( (lv_value_17_0= ruleSadlExplicitValue ) )
                            {
                            // InternalDialogParser.g:2804:5: ( (lv_value_17_0= ruleSadlExplicitValue ) )
                            // InternalDialogParser.g:2805:6: (lv_value_17_0= ruleSadlExplicitValue )
                            {
                            // InternalDialogParser.g:2805:6: (lv_value_17_0= ruleSadlExplicitValue )
                            // InternalDialogParser.g:2806:7: lv_value_17_0= ruleSadlExplicitValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlExplicitValueParserRuleCall_2_4_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_value_17_0=ruleSadlExplicitValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_17_0,
                              								"com.ge.research.sadl.SADL.SadlExplicitValue");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2824:5: (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis )
                            {
                            // InternalDialogParser.g:2824:5: (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis )
                            // InternalDialogParser.g:2825:6: otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis
                            {
                            otherlv_18=(Token)match(input,LeftParenthesis,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_18, grammarAccess.getSadlPropertyInitializerAccess().getLeftParenthesisKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:2829:6: ( (lv_value_19_0= ruleSadlNestedInstance ) )
                            // InternalDialogParser.g:2830:7: (lv_value_19_0= ruleSadlNestedInstance )
                            {
                            // InternalDialogParser.g:2830:7: (lv_value_19_0= ruleSadlNestedInstance )
                            // InternalDialogParser.g:2831:8: lv_value_19_0= ruleSadlNestedInstance
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlNestedInstanceParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_72);
                            lv_value_19_0=ruleSadlNestedInstance();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
                              								}
                              								set(
                              									current,
                              									"value",
                              									lv_value_19_0,
                              									"com.ge.research.sadl.SADL.SadlNestedInstance");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_20=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_20, grammarAccess.getSadlPropertyInitializerAccess().getRightParenthesisKeyword_2_4_1_2());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPropertyInitializer"


    // $ANTLR start "entryRuleSadlNestedInstance"
    // InternalDialogParser.g:2859:1: entryRuleSadlNestedInstance returns [EObject current=null] : iv_ruleSadlNestedInstance= ruleSadlNestedInstance EOF ;
    public final EObject entryRuleSadlNestedInstance() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlNestedInstance = null;


        try {
            // InternalDialogParser.g:2859:59: (iv_ruleSadlNestedInstance= ruleSadlNestedInstance EOF )
            // InternalDialogParser.g:2860:2: iv_ruleSadlNestedInstance= ruleSadlNestedInstance EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlNestedInstanceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlNestedInstance=ruleSadlNestedInstance();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlNestedInstance; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlNestedInstance"


    // $ANTLR start "ruleSadlNestedInstance"
    // InternalDialogParser.g:2866:1: ruleSadlNestedInstance returns [EObject current=null] : ( () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) ) ) ;
    public final EObject ruleSadlNestedInstance() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_instance_1_0 = null;

        AntlrDatatypeRuleToken lv_article_3_0 = null;

        EObject lv_type_4_0 = null;

        EObject lv_propertyInitializers_5_0 = null;

        AntlrDatatypeRuleToken lv_article_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_instance_8_0 = null;

        EObject lv_propertyInitializers_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2872:2: ( ( () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) ) ) )
            // InternalDialogParser.g:2873:2: ( () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) ) )
            {
            // InternalDialogParser.g:2873:2: ( () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) ) )
            // InternalDialogParser.g:2874:3: () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) )
            {
            // InternalDialogParser.g:2874:3: ()
            // InternalDialogParser.g:2875:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSadlNestedInstanceAccess().getSadlNestedInstanceAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:2881:3: ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) )
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( ((LA74_0>=RULE_ID && LA74_0<=RULE_QNAME_TERMINAL)) ) {
                alt74=1;
            }
            else if ( (LA74_0==Another||LA74_0==Some||LA74_0==The||LA74_0==Any||LA74_0==The_1||LA74_0==An||LA74_0==An_1||LA74_0==A||LA74_0==A_1) ) {
                alt74=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }
            switch (alt74) {
                case 1 :
                    // InternalDialogParser.g:2882:4: ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* )
                    {
                    // InternalDialogParser.g:2882:4: ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* )
                    // InternalDialogParser.g:2883:5: ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )*
                    {
                    // InternalDialogParser.g:2883:5: ( (lv_instance_1_0= ruleSadlResource ) )
                    // InternalDialogParser.g:2884:6: (lv_instance_1_0= ruleSadlResource )
                    {
                    // InternalDialogParser.g:2884:6: (lv_instance_1_0= ruleSadlResource )
                    // InternalDialogParser.g:2885:7: lv_instance_1_0= ruleSadlResource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getInstanceSadlResourceParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_65);
                    lv_instance_1_0=ruleSadlResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"instance",
                      								lv_instance_1_0,
                      								"com.ge.research.sadl.SADL.SadlResource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,Is,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getSadlNestedInstanceAccess().getIsKeyword_1_0_1());
                      				
                    }
                    // InternalDialogParser.g:2906:5: ( (lv_article_3_0= ruleAnArticle ) )
                    // InternalDialogParser.g:2907:6: (lv_article_3_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:2907:6: (lv_article_3_0= ruleAnArticle )
                    // InternalDialogParser.g:2908:7: lv_article_3_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getArticleAnArticleParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_52);
                    lv_article_3_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"article",
                      								lv_article_3_0,
                      								"com.ge.research.sadl.SADL.AnArticle");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:2925:5: ( (lv_type_4_0= ruleSadlTypeReference ) )
                    // InternalDialogParser.g:2926:6: (lv_type_4_0= ruleSadlTypeReference )
                    {
                    // InternalDialogParser.g:2926:6: (lv_type_4_0= ruleSadlTypeReference )
                    // InternalDialogParser.g:2927:7: lv_type_4_0= ruleSadlTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getTypeSadlTypeReferenceParserRuleCall_1_0_3_0());
                      						
                    }
                    pushFollow(FOLLOW_56);
                    lv_type_4_0=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_4_0,
                      								"com.ge.research.sadl.SADL.SadlTypeReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:2944:5: ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )*
                    loop71:
                    do {
                        int alt71=2;
                        int LA71_0 = input.LA(1);

                        if ( (LA71_0==With||LA71_0==Has||(LA71_0>=Is && LA71_0<=Of)||LA71_0==Comma||(LA71_0>=RULE_ID && LA71_0<=RULE_QNAME_TERMINAL)) ) {
                            alt71=1;
                        }


                        switch (alt71) {
                    	case 1 :
                    	    // InternalDialogParser.g:2945:6: (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer )
                    	    {
                    	    // InternalDialogParser.g:2945:6: (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer )
                    	    // InternalDialogParser.g:2946:7: lv_propertyInitializers_5_0= ruleSadlPropertyInitializer
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getPropertyInitializersSadlPropertyInitializerParserRuleCall_1_0_4_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_56);
                    	    lv_propertyInitializers_5_0=ruleSadlPropertyInitializer();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"propertyInitializers",
                    	      								lv_propertyInitializers_5_0,
                    	      								"com.ge.research.sadl.SADL.SadlPropertyInitializer");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop71;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:2965:4: ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* )
                    {
                    // InternalDialogParser.g:2965:4: ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* )
                    // InternalDialogParser.g:2966:5: ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )*
                    {
                    // InternalDialogParser.g:2966:5: ( (lv_article_6_0= ruleAnArticle ) )
                    // InternalDialogParser.g:2967:6: (lv_article_6_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:2967:6: (lv_article_6_0= ruleAnArticle )
                    // InternalDialogParser.g:2968:7: lv_article_6_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getArticleAnArticleParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_52);
                    lv_article_6_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"article",
                      								lv_article_6_0,
                      								"com.ge.research.sadl.SADL.AnArticle");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:2985:5: ( (lv_type_7_0= ruleSadlTypeReference ) )
                    // InternalDialogParser.g:2986:6: (lv_type_7_0= ruleSadlTypeReference )
                    {
                    // InternalDialogParser.g:2986:6: (lv_type_7_0= ruleSadlTypeReference )
                    // InternalDialogParser.g:2987:7: lv_type_7_0= ruleSadlTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getTypeSadlTypeReferenceParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_56);
                    lv_type_7_0=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_7_0,
                      								"com.ge.research.sadl.SADL.SadlTypeReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:3004:5: ( (lv_instance_8_0= ruleSadlResource ) )?
                    int alt72=2;
                    alt72 = dfa72.predict(input);
                    switch (alt72) {
                        case 1 :
                            // InternalDialogParser.g:3005:6: (lv_instance_8_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:3005:6: (lv_instance_8_0= ruleSadlResource )
                            // InternalDialogParser.g:3006:7: lv_instance_8_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getInstanceSadlResourceParserRuleCall_1_1_2_0());
                              						
                            }
                            pushFollow(FOLLOW_56);
                            lv_instance_8_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                              							}
                              							set(
                              								current,
                              								"instance",
                              								lv_instance_8_0,
                              								"com.ge.research.sadl.SADL.SadlResource");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:3023:5: ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )*
                    loop73:
                    do {
                        int alt73=2;
                        int LA73_0 = input.LA(1);

                        if ( (LA73_0==With||LA73_0==Has||(LA73_0>=Is && LA73_0<=Of)||LA73_0==Comma||(LA73_0>=RULE_ID && LA73_0<=RULE_QNAME_TERMINAL)) ) {
                            alt73=1;
                        }


                        switch (alt73) {
                    	case 1 :
                    	    // InternalDialogParser.g:3024:6: (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer )
                    	    {
                    	    // InternalDialogParser.g:3024:6: (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer )
                    	    // InternalDialogParser.g:3025:7: lv_propertyInitializers_9_0= ruleSadlPropertyInitializer
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getPropertyInitializersSadlPropertyInitializerParserRuleCall_1_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_56);
                    	    lv_propertyInitializers_9_0=ruleSadlPropertyInitializer();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"propertyInitializers",
                    	      								lv_propertyInitializers_9_0,
                    	      								"com.ge.research.sadl.SADL.SadlPropertyInitializer");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop73;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlNestedInstance"


    // $ANTLR start "entryRuleSadlResource"
    // InternalDialogParser.g:3048:1: entryRuleSadlResource returns [EObject current=null] : iv_ruleSadlResource= ruleSadlResource EOF ;
    public final EObject entryRuleSadlResource() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlResource = null;


        try {
            // InternalDialogParser.g:3048:53: (iv_ruleSadlResource= ruleSadlResource EOF )
            // InternalDialogParser.g:3049:2: iv_ruleSadlResource= ruleSadlResource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlResourceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlResource=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlResource; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlResource"


    // $ANTLR start "ruleSadlResource"
    // InternalDialogParser.g:3055:1: ruleSadlResource returns [EObject current=null] : ( ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )* ) ;
    public final EObject ruleSadlResource() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_1_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3061:2: ( ( ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )* ) )
            // InternalDialogParser.g:3062:2: ( ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )* )
            {
            // InternalDialogParser.g:3062:2: ( ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )* )
            // InternalDialogParser.g:3063:3: ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )*
            {
            // InternalDialogParser.g:3063:3: ( ( ruleQNAME ) )
            // InternalDialogParser.g:3064:4: ( ruleQNAME )
            {
            // InternalDialogParser.g:3064:4: ( ruleQNAME )
            // InternalDialogParser.g:3065:5: ruleQNAME
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlResourceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlResourceAccess().getNameSadlResourceCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_73);
            ruleQNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:3079:3: ( (lv_annotations_1_0= ruleSadlAnnotation ) )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==LeftParenthesis) ) {
                    int LA75_2 = input.LA(2);

                    if ( (LA75_2==Alias||LA75_2==Note) ) {
                        alt75=1;
                    }


                }
                else if ( (LA75_0==Comma) ) {
                    int LA75_3 = input.LA(2);

                    if ( (LA75_3==LeftParenthesis) ) {
                        int LA75_5 = input.LA(3);

                        if ( (LA75_5==Alias||LA75_5==Note) ) {
                            alt75=1;
                        }


                    }


                }


                switch (alt75) {
            	case 1 :
            	    // InternalDialogParser.g:3080:4: (lv_annotations_1_0= ruleSadlAnnotation )
            	    {
            	    // InternalDialogParser.g:3080:4: (lv_annotations_1_0= ruleSadlAnnotation )
            	    // InternalDialogParser.g:3081:5: lv_annotations_1_0= ruleSadlAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlResourceAccess().getAnnotationsSadlAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_73);
            	    lv_annotations_1_0=ruleSadlAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlResourceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"com.ge.research.sadl.SADL.SadlAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlResource"


    // $ANTLR start "entryRuleSadlDataTypeFacet"
    // InternalDialogParser.g:3102:1: entryRuleSadlDataTypeFacet returns [EObject current=null] : iv_ruleSadlDataTypeFacet= ruleSadlDataTypeFacet EOF ;
    public final EObject entryRuleSadlDataTypeFacet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlDataTypeFacet = null;


        try {
            // InternalDialogParser.g:3102:58: (iv_ruleSadlDataTypeFacet= ruleSadlDataTypeFacet EOF )
            // InternalDialogParser.g:3103:2: iv_ruleSadlDataTypeFacet= ruleSadlDataTypeFacet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlDataTypeFacetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlDataTypeFacet=ruleSadlDataTypeFacet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlDataTypeFacet; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlDataTypeFacet"


    // $ANTLR start "ruleSadlDataTypeFacet"
    // InternalDialogParser.g:3109:1: ruleSadlDataTypeFacet returns [EObject current=null] : ( ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) ) | ( (lv_regex_8_0= RULE_STRING ) ) | (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) ) | (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket ) ) ;
    public final EObject ruleSadlDataTypeFacet() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_minInclusive_2_0=null;
        Token otherlv_4=null;
        Token lv_maxInclusive_6_0=null;
        Token otherlv_7=null;
        Token lv_regex_8_0=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        Token lv_maxlen_13_2=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        AntlrDatatypeRuleToken lv_min_3_0 = null;

        AntlrDatatypeRuleToken lv_max_5_0 = null;

        AntlrDatatypeRuleToken lv_len_10_0 = null;

        AntlrDatatypeRuleToken lv_minlen_11_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_13_1 = null;

        AntlrDatatypeRuleToken lv_values_15_0 = null;

        AntlrDatatypeRuleToken lv_values_17_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3115:2: ( ( ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) ) | ( (lv_regex_8_0= RULE_STRING ) ) | (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) ) | (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket ) ) )
            // InternalDialogParser.g:3116:2: ( ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) ) | ( (lv_regex_8_0= RULE_STRING ) ) | (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) ) | (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket ) )
            {
            // InternalDialogParser.g:3116:2: ( ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) ) | ( (lv_regex_8_0= RULE_STRING ) ) | (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) ) | (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket ) )
            int alt84=4;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
            case LeftSquareBracket:
                {
                alt84=1;
                }
                break;
            case RULE_STRING:
                {
                alt84=2;
                }
                break;
            case Length:
                {
                alt84=3;
                }
                break;
            case LeftCurlyBracket:
                {
                alt84=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }

            switch (alt84) {
                case 1 :
                    // InternalDialogParser.g:3117:3: ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) )
                    {
                    // InternalDialogParser.g:3117:3: ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) )
                    // InternalDialogParser.g:3118:4: () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis )
                    {
                    // InternalDialogParser.g:3118:4: ()
                    // InternalDialogParser.g:3119:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlDataTypeFacetAccess().getSadlDataTypeFacetAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:3125:4: (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) )
                    int alt76=2;
                    int LA76_0 = input.LA(1);

                    if ( (LA76_0==LeftParenthesis) ) {
                        alt76=1;
                    }
                    else if ( (LA76_0==LeftSquareBracket) ) {
                        alt76=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 76, 0, input);

                        throw nvae;
                    }
                    switch (alt76) {
                        case 1 :
                            // InternalDialogParser.g:3126:5: otherlv_1= LeftParenthesis
                            {
                            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_74); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getSadlDataTypeFacetAccess().getLeftParenthesisKeyword_0_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3131:5: ( (lv_minInclusive_2_0= LeftSquareBracket ) )
                            {
                            // InternalDialogParser.g:3131:5: ( (lv_minInclusive_2_0= LeftSquareBracket ) )
                            // InternalDialogParser.g:3132:6: (lv_minInclusive_2_0= LeftSquareBracket )
                            {
                            // InternalDialogParser.g:3132:6: (lv_minInclusive_2_0= LeftSquareBracket )
                            // InternalDialogParser.g:3133:7: lv_minInclusive_2_0= LeftSquareBracket
                            {
                            lv_minInclusive_2_0=(Token)match(input,LeftSquareBracket,FOLLOW_74); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_minInclusive_2_0, grammarAccess.getSadlDataTypeFacetAccess().getMinInclusiveLeftSquareBracketKeyword_0_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
                              							}
                              							setWithLastConsumed(current, "minInclusive", true, "[");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:3146:4: ( (lv_min_3_0= ruleFacetNumber ) )?
                    int alt77=2;
                    int LA77_0 = input.LA(1);

                    if ( (LA77_0==HyphenMinus||LA77_0==RULE_NUMBER) ) {
                        alt77=1;
                    }
                    switch (alt77) {
                        case 1 :
                            // InternalDialogParser.g:3147:5: (lv_min_3_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:3147:5: (lv_min_3_0= ruleFacetNumber )
                            // InternalDialogParser.g:3148:6: lv_min_3_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMinFacetNumberParserRuleCall_0_2_0());
                              					
                            }
                            pushFollow(FOLLOW_75);
                            lv_min_3_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                              						}
                              						set(
                              							current,
                              							"min",
                              							lv_min_3_0,
                              							"com.ge.research.sadl.SADL.FacetNumber");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,Comma,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSadlDataTypeFacetAccess().getCommaKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:3169:4: ( (lv_max_5_0= ruleFacetNumber ) )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==HyphenMinus||LA78_0==RULE_NUMBER) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            // InternalDialogParser.g:3170:5: (lv_max_5_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:3170:5: (lv_max_5_0= ruleFacetNumber )
                            // InternalDialogParser.g:3171:6: lv_max_5_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMaxFacetNumberParserRuleCall_0_4_0());
                              					
                            }
                            pushFollow(FOLLOW_77);
                            lv_max_5_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                              						}
                              						set(
                              							current,
                              							"max",
                              							lv_max_5_0,
                              							"com.ge.research.sadl.SADL.FacetNumber");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:3188:4: ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis )
                    int alt79=2;
                    int LA79_0 = input.LA(1);

                    if ( (LA79_0==RightSquareBracket) ) {
                        alt79=1;
                    }
                    else if ( (LA79_0==RightParenthesis) ) {
                        alt79=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 79, 0, input);

                        throw nvae;
                    }
                    switch (alt79) {
                        case 1 :
                            // InternalDialogParser.g:3189:5: ( (lv_maxInclusive_6_0= RightSquareBracket ) )
                            {
                            // InternalDialogParser.g:3189:5: ( (lv_maxInclusive_6_0= RightSquareBracket ) )
                            // InternalDialogParser.g:3190:6: (lv_maxInclusive_6_0= RightSquareBracket )
                            {
                            // InternalDialogParser.g:3190:6: (lv_maxInclusive_6_0= RightSquareBracket )
                            // InternalDialogParser.g:3191:7: lv_maxInclusive_6_0= RightSquareBracket
                            {
                            lv_maxInclusive_6_0=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_maxInclusive_6_0, grammarAccess.getSadlDataTypeFacetAccess().getMaxInclusiveRightSquareBracketKeyword_0_5_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
                              							}
                              							setWithLastConsumed(current, "maxInclusive", true, "]");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3204:5: otherlv_7= RightParenthesis
                            {
                            otherlv_7=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getSadlDataTypeFacetAccess().getRightParenthesisKeyword_0_5_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3211:3: ( (lv_regex_8_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:3211:3: ( (lv_regex_8_0= RULE_STRING ) )
                    // InternalDialogParser.g:3212:4: (lv_regex_8_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:3212:4: (lv_regex_8_0= RULE_STRING )
                    // InternalDialogParser.g:3213:5: lv_regex_8_0= RULE_STRING
                    {
                    lv_regex_8_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_regex_8_0, grammarAccess.getSadlDataTypeFacetAccess().getRegexSTRINGTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"regex",
                      						lv_regex_8_0,
                      						"com.ge.research.sadl.SADL.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:3230:3: (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) )
                    {
                    // InternalDialogParser.g:3230:3: (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) )
                    // InternalDialogParser.g:3231:4: otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) )
                    {
                    otherlv_9=(Token)match(input,Length,FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSadlDataTypeFacetAccess().getLengthKeyword_2_0());
                      			
                    }
                    // InternalDialogParser.g:3235:4: ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) )
                    int alt81=2;
                    alt81 = dfa81.predict(input);
                    switch (alt81) {
                        case 1 :
                            // InternalDialogParser.g:3236:5: ( (lv_len_10_0= ruleFacetNumber ) )
                            {
                            // InternalDialogParser.g:3236:5: ( (lv_len_10_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:3237:6: (lv_len_10_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:3237:6: (lv_len_10_0= ruleFacetNumber )
                            // InternalDialogParser.g:3238:7: lv_len_10_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getLenFacetNumberParserRuleCall_2_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_len_10_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                              							}
                              							set(
                              								current,
                              								"len",
                              								lv_len_10_0,
                              								"com.ge.research.sadl.SADL.FacetNumber");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3256:5: ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) )
                            {
                            // InternalDialogParser.g:3256:5: ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) )
                            // InternalDialogParser.g:3257:6: ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) )
                            {
                            // InternalDialogParser.g:3257:6: ( (lv_minlen_11_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:3258:7: (lv_minlen_11_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:3258:7: (lv_minlen_11_0= ruleFacetNumber )
                            // InternalDialogParser.g:3259:8: lv_minlen_11_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMinlenFacetNumberParserRuleCall_2_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_79);
                            lv_minlen_11_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                              								}
                              								set(
                              									current,
                              									"minlen",
                              									lv_minlen_11_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_12=(Token)match(input,HyphenMinus,FOLLOW_80); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getSadlDataTypeFacetAccess().getHyphenMinusKeyword_2_1_1_1());
                              					
                            }
                            // InternalDialogParser.g:3280:6: ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) )
                            // InternalDialogParser.g:3281:7: ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) )
                            {
                            // InternalDialogParser.g:3281:7: ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) )
                            // InternalDialogParser.g:3282:8: (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk )
                            {
                            // InternalDialogParser.g:3282:8: (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk )
                            int alt80=2;
                            int LA80_0 = input.LA(1);

                            if ( (LA80_0==HyphenMinus||LA80_0==RULE_NUMBER) ) {
                                alt80=1;
                            }
                            else if ( (LA80_0==Asterisk) ) {
                                alt80=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 80, 0, input);

                                throw nvae;
                            }
                            switch (alt80) {
                                case 1 :
                                    // InternalDialogParser.g:3283:9: lv_maxlen_13_1= ruleFacetNumber
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMaxlenFacetNumberParserRuleCall_2_1_1_2_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_maxlen_13_1=ruleFacetNumber();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                                      									}
                                      									set(
                                      										current,
                                      										"maxlen",
                                      										lv_maxlen_13_1,
                                      										"com.ge.research.sadl.SADL.FacetNumber");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:3299:9: lv_maxlen_13_2= Asterisk
                                    {
                                    lv_maxlen_13_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_maxlen_13_2, grammarAccess.getSadlDataTypeFacetAccess().getMaxlenAsteriskKeyword_2_1_1_2_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
                                      									}
                                      									setWithLastConsumed(current, "maxlen", lv_maxlen_13_2, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:3316:3: (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:3316:3: (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket )
                    // InternalDialogParser.g:3317:4: otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket
                    {
                    otherlv_14=(Token)match(input,LeftCurlyBracket,FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getSadlDataTypeFacetAccess().getLeftCurlyBracketKeyword_3_0());
                      			
                    }
                    // InternalDialogParser.g:3321:4: ( (lv_values_15_0= ruleFacetValue ) )
                    // InternalDialogParser.g:3322:5: (lv_values_15_0= ruleFacetValue )
                    {
                    // InternalDialogParser.g:3322:5: (lv_values_15_0= ruleFacetValue )
                    // InternalDialogParser.g:3323:6: lv_values_15_0= ruleFacetValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getValuesFacetValueParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_82);
                    lv_values_15_0=ruleFacetValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                      						}
                      						add(
                      							current,
                      							"values",
                      							lv_values_15_0,
                      							"com.ge.research.sadl.SADL.FacetValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:3340:4: ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )*
                    loop83:
                    do {
                        int alt83=2;
                        int LA83_0 = input.LA(1);

                        if ( ((LA83_0>=Comma && LA83_0<=HyphenMinus)||LA83_0==RULE_NUMBER||LA83_0==RULE_STRING) ) {
                            alt83=1;
                        }


                        switch (alt83) {
                    	case 1 :
                    	    // InternalDialogParser.g:3341:5: (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) )
                    	    {
                    	    // InternalDialogParser.g:3341:5: (otherlv_16= Comma )?
                    	    int alt82=2;
                    	    int LA82_0 = input.LA(1);

                    	    if ( (LA82_0==Comma) ) {
                    	        alt82=1;
                    	    }
                    	    switch (alt82) {
                    	        case 1 :
                    	            // InternalDialogParser.g:3342:6: otherlv_16= Comma
                    	            {
                    	            otherlv_16=(Token)match(input,Comma,FOLLOW_81); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_16, grammarAccess.getSadlDataTypeFacetAccess().getCommaKeyword_3_2_0());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    // InternalDialogParser.g:3347:5: ( (lv_values_17_0= ruleFacetValue ) )
                    	    // InternalDialogParser.g:3348:6: (lv_values_17_0= ruleFacetValue )
                    	    {
                    	    // InternalDialogParser.g:3348:6: (lv_values_17_0= ruleFacetValue )
                    	    // InternalDialogParser.g:3349:7: lv_values_17_0= ruleFacetValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getValuesFacetValueParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_82);
                    	    lv_values_17_0=ruleFacetValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"values",
                    	      								lv_values_17_0,
                    	      								"com.ge.research.sadl.SADL.FacetValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop83;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getSadlDataTypeFacetAccess().getRightCurlyBracketKeyword_3_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlDataTypeFacet"


    // $ANTLR start "entryRuleFacetNumber"
    // InternalDialogParser.g:3376:1: entryRuleFacetNumber returns [String current=null] : iv_ruleFacetNumber= ruleFacetNumber EOF ;
    public final String entryRuleFacetNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFacetNumber = null;


        try {
            // InternalDialogParser.g:3376:51: (iv_ruleFacetNumber= ruleFacetNumber EOF )
            // InternalDialogParser.g:3377:2: iv_ruleFacetNumber= ruleFacetNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFacetNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFacetNumber=ruleFacetNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFacetNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFacetNumber"


    // $ANTLR start "ruleFacetNumber"
    // InternalDialogParser.g:3383:1: ruleFacetNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber ) ;
    public final AntlrDatatypeRuleToken ruleFacetNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_AnyNumber_1 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3389:2: ( ( (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber ) )
            // InternalDialogParser.g:3390:2: ( (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber )
            {
            // InternalDialogParser.g:3390:2: ( (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber )
            // InternalDialogParser.g:3391:3: (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber
            {
            // InternalDialogParser.g:3391:3: (kw= HyphenMinus )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==HyphenMinus) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalDialogParser.g:3392:4: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getFacetNumberAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFacetNumberAccess().getAnyNumberParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_AnyNumber_1=ruleAnyNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_AnyNumber_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFacetNumber"


    // $ANTLR start "entryRuleFacetValue"
    // InternalDialogParser.g:3412:1: entryRuleFacetValue returns [String current=null] : iv_ruleFacetValue= ruleFacetValue EOF ;
    public final String entryRuleFacetValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFacetValue = null;


        try {
            // InternalDialogParser.g:3412:50: (iv_ruleFacetValue= ruleFacetValue EOF )
            // InternalDialogParser.g:3413:2: iv_ruleFacetValue= ruleFacetValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFacetValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFacetValue=ruleFacetValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFacetValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFacetValue"


    // $ANTLR start "ruleFacetValue"
    // InternalDialogParser.g:3419:1: ruleFacetValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_FacetNumber_1= ruleFacetNumber ) ;
    public final AntlrDatatypeRuleToken ruleFacetValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        AntlrDatatypeRuleToken this_FacetNumber_1 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3425:2: ( (this_STRING_0= RULE_STRING | this_FacetNumber_1= ruleFacetNumber ) )
            // InternalDialogParser.g:3426:2: (this_STRING_0= RULE_STRING | this_FacetNumber_1= ruleFacetNumber )
            {
            // InternalDialogParser.g:3426:2: (this_STRING_0= RULE_STRING | this_FacetNumber_1= ruleFacetNumber )
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==RULE_STRING) ) {
                alt86=1;
            }
            else if ( (LA86_0==HyphenMinus||LA86_0==RULE_NUMBER) ) {
                alt86=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 86, 0, input);

                throw nvae;
            }
            switch (alt86) {
                case 1 :
                    // InternalDialogParser.g:3427:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getFacetValueAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3435:3: this_FacetNumber_1= ruleFacetNumber
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFacetValueAccess().getFacetNumberParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FacetNumber_1=ruleFacetNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FacetNumber_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFacetValue"


    // $ANTLR start "entryRuleSadlTypeReference"
    // InternalDialogParser.g:3449:1: entryRuleSadlTypeReference returns [EObject current=null] : iv_ruleSadlTypeReference= ruleSadlTypeReference EOF ;
    public final EObject entryRuleSadlTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlTypeReference = null;


        try {
            // InternalDialogParser.g:3449:58: (iv_ruleSadlTypeReference= ruleSadlTypeReference EOF )
            // InternalDialogParser.g:3450:2: iv_ruleSadlTypeReference= ruleSadlTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlTypeReference=ruleSadlTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlTypeReference"


    // $ANTLR start "ruleSadlTypeReference"
    // InternalDialogParser.g:3456:1: ruleSadlTypeReference returns [EObject current=null] : this_SadlUnionType_0= ruleSadlUnionType ;
    public final EObject ruleSadlTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_SadlUnionType_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3462:2: (this_SadlUnionType_0= ruleSadlUnionType )
            // InternalDialogParser.g:3463:2: this_SadlUnionType_0= ruleSadlUnionType
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getSadlTypeReferenceAccess().getSadlUnionTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_SadlUnionType_0=ruleSadlUnionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SadlUnionType_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlTypeReference"


    // $ANTLR start "entryRuleSadlUnionType"
    // InternalDialogParser.g:3474:1: entryRuleSadlUnionType returns [EObject current=null] : iv_ruleSadlUnionType= ruleSadlUnionType EOF ;
    public final EObject entryRuleSadlUnionType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlUnionType = null;


        try {
            // InternalDialogParser.g:3474:54: (iv_ruleSadlUnionType= ruleSadlUnionType EOF )
            // InternalDialogParser.g:3475:2: iv_ruleSadlUnionType= ruleSadlUnionType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlUnionTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlUnionType=ruleSadlUnionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlUnionType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlUnionType"


    // $ANTLR start "ruleSadlUnionType"
    // InternalDialogParser.g:3481:1: ruleSadlUnionType returns [EObject current=null] : (this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )* ) ;
    public final EObject ruleSadlUnionType() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_SadlIntersectionType_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3487:2: ( (this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )* ) )
            // InternalDialogParser.g:3488:2: (this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )* )
            {
            // InternalDialogParser.g:3488:2: (this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )* )
            // InternalDialogParser.g:3489:3: this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSadlUnionTypeAccess().getSadlIntersectionTypeParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_84);
            this_SadlIntersectionType_0=ruleSadlIntersectionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SadlIntersectionType_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:3497:3: ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )*
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( (LA87_0==Or) ) {
                    alt87=1;
                }


                switch (alt87) {
            	case 1 :
            	    // InternalDialogParser.g:3498:4: () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) )
            	    {
            	    // InternalDialogParser.g:3498:4: ()
            	    // InternalDialogParser.g:3499:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getSadlUnionTypeAccess().getSadlUnionTypeLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    otherlv_2=(Token)match(input,Or,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getSadlUnionTypeAccess().getOrKeyword_1_1());
            	      			
            	    }
            	    // InternalDialogParser.g:3509:4: ( (lv_right_3_0= ruleSadlIntersectionType ) )
            	    // InternalDialogParser.g:3510:5: (lv_right_3_0= ruleSadlIntersectionType )
            	    {
            	    // InternalDialogParser.g:3510:5: (lv_right_3_0= ruleSadlIntersectionType )
            	    // InternalDialogParser.g:3511:6: lv_right_3_0= ruleSadlIntersectionType
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSadlUnionTypeAccess().getRightSadlIntersectionTypeParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_84);
            	    lv_right_3_0=ruleSadlIntersectionType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSadlUnionTypeRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.SadlIntersectionType");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlUnionType"


    // $ANTLR start "entryRuleSadlIntersectionType"
    // InternalDialogParser.g:3533:1: entryRuleSadlIntersectionType returns [EObject current=null] : iv_ruleSadlIntersectionType= ruleSadlIntersectionType EOF ;
    public final EObject entryRuleSadlIntersectionType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlIntersectionType = null;


        try {
            // InternalDialogParser.g:3533:61: (iv_ruleSadlIntersectionType= ruleSadlIntersectionType EOF )
            // InternalDialogParser.g:3534:2: iv_ruleSadlIntersectionType= ruleSadlIntersectionType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlIntersectionTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlIntersectionType=ruleSadlIntersectionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlIntersectionType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlIntersectionType"


    // $ANTLR start "ruleSadlIntersectionType"
    // InternalDialogParser.g:3540:1: ruleSadlIntersectionType returns [EObject current=null] : (this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )* ) ;
    public final EObject ruleSadlIntersectionType() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_SadlPrimaryTypeReference_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3546:2: ( (this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )* ) )
            // InternalDialogParser.g:3547:2: (this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )* )
            {
            // InternalDialogParser.g:3547:2: (this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )* )
            // InternalDialogParser.g:3548:3: this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSadlIntersectionTypeAccess().getSadlPrimaryTypeReferenceParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_68);
            this_SadlPrimaryTypeReference_0=ruleSadlPrimaryTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SadlPrimaryTypeReference_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:3556:3: ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==And) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalDialogParser.g:3557:4: () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) )
            	    {
            	    // InternalDialogParser.g:3557:4: ()
            	    // InternalDialogParser.g:3558:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getSadlIntersectionTypeAccess().getSadlIntersectionTypeLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    otherlv_2=(Token)match(input,And,FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getSadlIntersectionTypeAccess().getAndKeyword_1_1());
            	      			
            	    }
            	    // InternalDialogParser.g:3568:4: ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) )
            	    // InternalDialogParser.g:3569:5: (lv_right_3_0= ruleSadlPrimaryTypeReference )
            	    {
            	    // InternalDialogParser.g:3569:5: (lv_right_3_0= ruleSadlPrimaryTypeReference )
            	    // InternalDialogParser.g:3570:6: lv_right_3_0= ruleSadlPrimaryTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSadlIntersectionTypeAccess().getRightSadlPrimaryTypeReferenceParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_68);
            	    lv_right_3_0=ruleSadlPrimaryTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSadlIntersectionTypeRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlIntersectionType"


    // $ANTLR start "entryRuleSadlPrimaryTypeReference"
    // InternalDialogParser.g:3592:1: entryRuleSadlPrimaryTypeReference returns [EObject current=null] : iv_ruleSadlPrimaryTypeReference= ruleSadlPrimaryTypeReference EOF ;
    public final EObject entryRuleSadlPrimaryTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPrimaryTypeReference = null;


        try {
            // InternalDialogParser.g:3592:65: (iv_ruleSadlPrimaryTypeReference= ruleSadlPrimaryTypeReference EOF )
            // InternalDialogParser.g:3593:2: iv_ruleSadlPrimaryTypeReference= ruleSadlPrimaryTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPrimaryTypeReference=ruleSadlPrimaryTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPrimaryTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPrimaryTypeReference"


    // $ANTLR start "ruleSadlPrimaryTypeReference"
    // InternalDialogParser.g:3599:1: ruleSadlPrimaryTypeReference returns [EObject current=null] : ( ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? ) | ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? ) | (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis ) | (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket ) ) ;
    public final EObject ruleSadlPrimaryTypeReference() throws RecognitionException {
        EObject current = null;

        Token lv_list_2_0=null;
        Token lv_list_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Enumerator lv_primitiveType_4_0 = null;

        EObject this_SadlPropertyCondition_7 = null;

        EObject this_SadlTypeReference_10 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3605:2: ( ( ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? ) | ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? ) | (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis ) | (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket ) ) )
            // InternalDialogParser.g:3606:2: ( ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? ) | ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? ) | (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis ) | (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket ) )
            {
            // InternalDialogParser.g:3606:2: ( ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? ) | ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? ) | (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis ) | (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket ) )
            int alt91=4;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt91=1;
                }
                break;
            case NonNegativeInteger:
            case NonPositiveInteger:
            case NegativeInteger:
            case PositiveInteger:
            case AnySimpleType:
            case Base64Binary:
            case UnsignedByte:
            case UnsignedInt:
            case GYearMonth:
            case GMonthDay:
            case HexBinary:
            case DateTime:
            case Duration:
            case Boolean:
            case Decimal:
            case Integer:
            case AnyURI:
            case Double:
            case GMonth:
            case String:
            case Float:
            case GYear:
            case Byte:
            case Date:
            case GDay:
            case Long:
            case Time:
            case Int:
                {
                alt91=2;
                }
                break;
            case LeftParenthesis:
                {
                alt91=3;
                }
                break;
            case LeftCurlyBracket:
                {
                alt91=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 91, 0, input);

                throw nvae;
            }

            switch (alt91) {
                case 1 :
                    // InternalDialogParser.g:3607:3: ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? )
                    {
                    // InternalDialogParser.g:3607:3: ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? )
                    // InternalDialogParser.g:3608:4: () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )?
                    {
                    // InternalDialogParser.g:3608:4: ()
                    // InternalDialogParser.g:3609:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlSimpleTypeReferenceAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:3615:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:3616:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:3616:5: ( ruleQNAME )
                    // InternalDialogParser.g:3617:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPrimaryTypeReferenceRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getTypeSadlResourceCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_85);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:3631:4: ( (lv_list_2_0= List ) )?
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==List) ) {
                        alt89=1;
                    }
                    switch (alt89) {
                        case 1 :
                            // InternalDialogParser.g:3632:5: (lv_list_2_0= List )
                            {
                            // InternalDialogParser.g:3632:5: (lv_list_2_0= List )
                            // InternalDialogParser.g:3633:6: lv_list_2_0= List
                            {
                            lv_list_2_0=(Token)match(input,List,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_list_2_0, grammarAccess.getSadlPrimaryTypeReferenceAccess().getListListKeyword_0_2_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getSadlPrimaryTypeReferenceRule());
                              						}
                              						setWithLastConsumed(current, "list", true, "List");
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3647:3: ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? )
                    {
                    // InternalDialogParser.g:3647:3: ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? )
                    // InternalDialogParser.g:3648:4: () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )?
                    {
                    // InternalDialogParser.g:3648:4: ()
                    // InternalDialogParser.g:3649:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlPrimitiveDataTypeAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:3655:4: ( (lv_primitiveType_4_0= ruleSadlDataType ) )
                    // InternalDialogParser.g:3656:5: (lv_primitiveType_4_0= ruleSadlDataType )
                    {
                    // InternalDialogParser.g:3656:5: (lv_primitiveType_4_0= ruleSadlDataType )
                    // InternalDialogParser.g:3657:6: lv_primitiveType_4_0= ruleSadlDataType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getPrimitiveTypeSadlDataTypeEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_85);
                    lv_primitiveType_4_0=ruleSadlDataType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPrimaryTypeReferenceRule());
                      						}
                      						set(
                      							current,
                      							"primitiveType",
                      							lv_primitiveType_4_0,
                      							"com.ge.research.sadl.SADL.SadlDataType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:3674:4: ( (lv_list_5_0= List ) )?
                    int alt90=2;
                    int LA90_0 = input.LA(1);

                    if ( (LA90_0==List) ) {
                        alt90=1;
                    }
                    switch (alt90) {
                        case 1 :
                            // InternalDialogParser.g:3675:5: (lv_list_5_0= List )
                            {
                            // InternalDialogParser.g:3675:5: (lv_list_5_0= List )
                            // InternalDialogParser.g:3676:6: lv_list_5_0= List
                            {
                            lv_list_5_0=(Token)match(input,List,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_list_5_0, grammarAccess.getSadlPrimaryTypeReferenceAccess().getListListKeyword_1_2_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getSadlPrimaryTypeReferenceRule());
                              						}
                              						setWithLastConsumed(current, "list", true, "List");
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:3690:3: (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis )
                    {
                    // InternalDialogParser.g:3690:3: (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis )
                    // InternalDialogParser.g:3691:4: otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSadlPrimaryTypeReferenceAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlPropertyConditionParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_72);
                    this_SadlPropertyCondition_7=ruleSadlPropertyCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SadlPropertyCondition_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_8=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSadlPrimaryTypeReferenceAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:3709:3: (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:3709:3: (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket )
                    // InternalDialogParser.g:3710:4: otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket
                    {
                    otherlv_9=(Token)match(input,LeftCurlyBracket,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSadlPrimaryTypeReferenceAccess().getLeftCurlyBracketKeyword_3_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlTypeReferenceParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_86);
                    this_SadlTypeReference_10=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SadlTypeReference_10;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_11=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getSadlPrimaryTypeReferenceAccess().getRightCurlyBracketKeyword_3_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPrimaryTypeReference"


    // $ANTLR start "entryRuleSadlPropertyDeclarationInClass"
    // InternalDialogParser.g:3731:1: entryRuleSadlPropertyDeclarationInClass returns [EObject current=null] : iv_ruleSadlPropertyDeclarationInClass= ruleSadlPropertyDeclarationInClass EOF ;
    public final EObject entryRuleSadlPropertyDeclarationInClass() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPropertyDeclarationInClass = null;


        try {
            // InternalDialogParser.g:3731:71: (iv_ruleSadlPropertyDeclarationInClass= ruleSadlPropertyDeclarationInClass EOF )
            // InternalDialogParser.g:3732:2: iv_ruleSadlPropertyDeclarationInClass= ruleSadlPropertyDeclarationInClass EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPropertyDeclarationInClassRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPropertyDeclarationInClass=ruleSadlPropertyDeclarationInClass();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPropertyDeclarationInClass; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPropertyDeclarationInClass"


    // $ANTLR start "ruleSadlPropertyDeclarationInClass"
    // InternalDialogParser.g:3738:1: ruleSadlPropertyDeclarationInClass returns [EObject current=null] : ( (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )* ) ;
    public final EObject ruleSadlPropertyDeclarationInClass() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_nameDeclarations_3_0 = null;

        EObject lv_restrictions_4_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3744:2: ( ( (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )* ) )
            // InternalDialogParser.g:3745:2: ( (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )* )
            {
            // InternalDialogParser.g:3745:2: ( (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )* )
            // InternalDialogParser.g:3746:3: (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )*
            {
            // InternalDialogParser.g:3746:3: (otherlv_0= Comma )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==Comma) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalDialogParser.g:3747:4: otherlv_0= Comma
                    {
                    otherlv_0=(Token)match(input,Comma,FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSadlPropertyDeclarationInClassAccess().getCommaKeyword_0());
                      			
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,Described,FOLLOW_88); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSadlPropertyDeclarationInClassAccess().getDescribedKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,By,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSadlPropertyDeclarationInClassAccess().getByKeyword_2());
              		
            }
            // InternalDialogParser.g:3760:3: ( (lv_nameDeclarations_3_0= ruleSadlResource ) )
            // InternalDialogParser.g:3761:4: (lv_nameDeclarations_3_0= ruleSadlResource )
            {
            // InternalDialogParser.g:3761:4: (lv_nameDeclarations_3_0= ruleSadlResource )
            // InternalDialogParser.g:3762:5: lv_nameDeclarations_3_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlPropertyDeclarationInClassAccess().getNameDeclarationsSadlResourceParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_47);
            lv_nameDeclarations_3_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSadlPropertyDeclarationInClassRule());
              					}
              					add(
              						current,
              						"nameDeclarations",
              						lv_nameDeclarations_3_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:3779:3: ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )*
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==Describes||LA93_0==Always||LA93_0==Must||LA93_0==Only||LA93_0==With||LA93_0==Can||LA93_0==Has||(LA93_0>=Is && LA93_0<=Of)) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // InternalDialogParser.g:3780:4: (lv_restrictions_4_0= ruleSadlPropertyRestriction )
            	    {
            	    // InternalDialogParser.g:3780:4: (lv_restrictions_4_0= ruleSadlPropertyRestriction )
            	    // InternalDialogParser.g:3781:5: lv_restrictions_4_0= ruleSadlPropertyRestriction
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlPropertyDeclarationInClassAccess().getRestrictionsSadlPropertyRestrictionParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_47);
            	    lv_restrictions_4_0=ruleSadlPropertyRestriction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlPropertyDeclarationInClassRule());
            	      					}
            	      					add(
            	      						current,
            	      						"restrictions",
            	      						lv_restrictions_4_0,
            	      						"com.ge.research.sadl.SADL.SadlPropertyRestriction");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPropertyDeclarationInClass"


    // $ANTLR start "entryRuleSadlPropertyRestriction"
    // InternalDialogParser.g:3802:1: entryRuleSadlPropertyRestriction returns [EObject current=null] : iv_ruleSadlPropertyRestriction= ruleSadlPropertyRestriction EOF ;
    public final EObject entryRuleSadlPropertyRestriction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPropertyRestriction = null;


        try {
            // InternalDialogParser.g:3802:64: (iv_ruleSadlPropertyRestriction= ruleSadlPropertyRestriction EOF )
            // InternalDialogParser.g:3803:2: iv_ruleSadlPropertyRestriction= ruleSadlPropertyRestriction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPropertyRestrictionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPropertyRestriction=ruleSadlPropertyRestriction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPropertyRestriction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPropertyRestriction"


    // $ANTLR start "ruleSadlPropertyRestriction"
    // InternalDialogParser.g:3809:1: ruleSadlPropertyRestriction returns [EObject current=null] : (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) ) ;
    public final EObject ruleSadlPropertyRestriction() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_singleValued_9_0=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_typeonly_14_1=null;
        Token lv_typeonly_14_2=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token lv_level_38_0=null;
        Token otherlv_39=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token lv_inverse_45_0=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token otherlv_50=null;
        Token otherlv_51=null;
        Token otherlv_52=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_59=null;
        Token otherlv_60=null;
        Token otherlv_61=null;
        Token otherlv_62=null;
        Token otherlv_63=null;
        Token otherlv_65=null;
        Token otherlv_67=null;
        EObject this_SadlCondition_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_range_15_0 = null;

        EObject lv_facet_16_0 = null;

        EObject lv_defValue_40_0 = null;

        EObject lv_values_53_0 = null;

        EObject lv_values_55_0 = null;

        EObject lv_values_64_0 = null;

        EObject lv_values_66_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3815:2: ( (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) ) )
            // InternalDialogParser.g:3816:2: (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) )
            {
            // InternalDialogParser.g:3816:2: (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) )
            int alt104=11;
            alt104 = dfa104.predict(input);
            switch (alt104) {
                case 1 :
                    // InternalDialogParser.g:3817:3: this_SadlCondition_0= ruleSadlCondition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getSadlConditionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlCondition_0=ruleSadlCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlCondition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3826:3: ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) )
                    {
                    // InternalDialogParser.g:3826:3: ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) )
                    // InternalDialogParser.g:3827:4: () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) )
                    {
                    // InternalDialogParser.g:3827:4: ()
                    // InternalDialogParser.g:3828:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlTypeAssociationAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:3834:4: (otherlv_2= Describes | otherlv_3= Of )
                    int alt94=2;
                    int LA94_0 = input.LA(1);

                    if ( (LA94_0==Describes) ) {
                        alt94=1;
                    }
                    else if ( (LA94_0==Of) ) {
                        alt94=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 94, 0, input);

                        throw nvae;
                    }
                    switch (alt94) {
                        case 1 :
                            // InternalDialogParser.g:3835:5: otherlv_2= Describes
                            {
                            otherlv_2=(Token)match(input,Describes,FOLLOW_52); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getSadlPropertyRestrictionAccess().getDescribesKeyword_1_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3840:5: otherlv_3= Of
                            {
                            otherlv_3=(Token)match(input,Of,FOLLOW_52); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalDialogParser.g:3845:4: ( (lv_domain_4_0= ruleSadlTypeReference ) )
                    // InternalDialogParser.g:3846:5: (lv_domain_4_0= ruleSadlTypeReference )
                    {
                    // InternalDialogParser.g:3846:5: (lv_domain_4_0= ruleSadlTypeReference )
                    // InternalDialogParser.g:3847:6: lv_domain_4_0= ruleSadlTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getDomainSadlTypeReferenceParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_domain_4_0=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      						set(
                      							current,
                      							"domain",
                      							lv_domain_4_0,
                      							"com.ge.research.sadl.SADL.SadlTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:3866:3: ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) )
                    {
                    // InternalDialogParser.g:3866:3: ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) )
                    // InternalDialogParser.g:3867:4: () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) )
                    {
                    // InternalDialogParser.g:3867:4: ()
                    // InternalDialogParser.g:3868:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlRangeRestrictionAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:3874:4: (otherlv_6= Has | otherlv_7= With )
                    int alt95=2;
                    int LA95_0 = input.LA(1);

                    if ( (LA95_0==Has) ) {
                        alt95=1;
                    }
                    else if ( (LA95_0==With) ) {
                        alt95=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 95, 0, input);

                        throw nvae;
                    }
                    switch (alt95) {
                        case 1 :
                            // InternalDialogParser.g:3875:5: otherlv_6= Has
                            {
                            otherlv_6=(Token)match(input,Has,FOLLOW_89); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getSadlPropertyRestrictionAccess().getHasKeyword_2_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3880:5: otherlv_7= With
                            {
                            otherlv_7=(Token)match(input,With,FOLLOW_89); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getSadlPropertyRestrictionAccess().getWithKeyword_2_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalDialogParser.g:3885:4: ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values )
                    int alt96=2;
                    int LA96_0 = input.LA(1);

                    if ( (LA96_0==A_1) ) {
                        alt96=1;
                    }
                    else if ( (LA96_0==Values) ) {
                        alt96=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 96, 0, input);

                        throw nvae;
                    }
                    switch (alt96) {
                        case 1 :
                            // InternalDialogParser.g:3886:5: (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value )
                            {
                            // InternalDialogParser.g:3886:5: (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value )
                            // InternalDialogParser.g:3887:6: otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value
                            {
                            otherlv_8=(Token)match(input,A_1,FOLLOW_90); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getSadlPropertyRestrictionAccess().getAKeyword_2_2_0_0());
                              					
                            }
                            // InternalDialogParser.g:3891:6: ( (lv_singleValued_9_0= Single ) )
                            // InternalDialogParser.g:3892:7: (lv_singleValued_9_0= Single )
                            {
                            // InternalDialogParser.g:3892:7: (lv_singleValued_9_0= Single )
                            // InternalDialogParser.g:3893:8: lv_singleValued_9_0= Single
                            {
                            lv_singleValued_9_0=(Token)match(input,Single,FOLLOW_91); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_singleValued_9_0, grammarAccess.getSadlPropertyRestrictionAccess().getSingleValuedSingleKeyword_2_2_0_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                              								}
                              								setWithLastConsumed(current, "singleValued", true, "single");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,Value,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSadlPropertyRestrictionAccess().getValueKeyword_2_2_0_2());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3911:5: otherlv_11= Values
                            {
                            otherlv_11=(Token)match(input,Values,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_11, grammarAccess.getSadlPropertyRestrictionAccess().getValuesKeyword_2_2_1());
                              				
                            }

                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,Of,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_2_3());
                      			
                    }
                    otherlv_13=(Token)match(input,Type,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getSadlPropertyRestrictionAccess().getTypeKeyword_2_4());
                      			
                    }
                    // InternalDialogParser.g:3924:4: ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) )
                    int alt99=2;
                    int LA99_0 = input.LA(1);

                    if ( (LA99_0==Class||LA99_0==Data) ) {
                        alt99=1;
                    }
                    else if ( ((LA99_0>=NonNegativeInteger && LA99_0<=Base64Binary)||LA99_0==UnsignedByte||LA99_0==UnsignedInt||LA99_0==GYearMonth||(LA99_0>=GMonthDay && LA99_0<=HexBinary)||LA99_0==DateTime||LA99_0==Duration||LA99_0==Boolean||LA99_0==Decimal||LA99_0==Integer||LA99_0==AnyURI||LA99_0==Double||LA99_0==GMonth||LA99_0==String||(LA99_0>=Float && LA99_0<=GYear)||LA99_0==Byte||LA99_0==Date||LA99_0==GDay||LA99_0==Long||LA99_0==Time||LA99_0==Int||LA99_0==LeftParenthesis||LA99_0==LeftCurlyBracket||(LA99_0>=RULE_ID && LA99_0<=RULE_QNAME_TERMINAL)) ) {
                        alt99=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 99, 0, input);

                        throw nvae;
                    }
                    switch (alt99) {
                        case 1 :
                            // InternalDialogParser.g:3925:5: ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) )
                            {
                            // InternalDialogParser.g:3925:5: ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) )
                            // InternalDialogParser.g:3926:6: ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) )
                            {
                            // InternalDialogParser.g:3926:6: ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) )
                            // InternalDialogParser.g:3927:7: (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data )
                            {
                            // InternalDialogParser.g:3927:7: (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data )
                            int alt97=2;
                            int LA97_0 = input.LA(1);

                            if ( (LA97_0==Class) ) {
                                alt97=1;
                            }
                            else if ( (LA97_0==Data) ) {
                                alt97=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 97, 0, input);

                                throw nvae;
                            }
                            switch (alt97) {
                                case 1 :
                                    // InternalDialogParser.g:3928:8: lv_typeonly_14_1= Class
                                    {
                                    lv_typeonly_14_1=(Token)match(input,Class,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_typeonly_14_1, grammarAccess.getSadlPropertyRestrictionAccess().getTypeonlyClassKeyword_2_5_0_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                                      								}
                                      								setWithLastConsumed(current, "typeonly", lv_typeonly_14_1, null);
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:3939:8: lv_typeonly_14_2= Data
                                    {
                                    lv_typeonly_14_2=(Token)match(input,Data,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_typeonly_14_2, grammarAccess.getSadlPropertyRestrictionAccess().getTypeonlyDataKeyword_2_5_0_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                                      								}
                                      								setWithLastConsumed(current, "typeonly", lv_typeonly_14_2, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3953:5: ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? )
                            {
                            // InternalDialogParser.g:3953:5: ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? )
                            // InternalDialogParser.g:3954:6: ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )?
                            {
                            // InternalDialogParser.g:3954:6: ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) )
                            // InternalDialogParser.g:3955:7: (lv_range_15_0= ruleSadlPrimaryTypeReference )
                            {
                            // InternalDialogParser.g:3955:7: (lv_range_15_0= ruleSadlPrimaryTypeReference )
                            // InternalDialogParser.g:3956:8: lv_range_15_0= ruleSadlPrimaryTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getRangeSadlPrimaryTypeReferenceParserRuleCall_2_5_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_93);
                            lv_range_15_0=ruleSadlPrimaryTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                              								}
                              								set(
                              									current,
                              									"range",
                              									lv_range_15_0,
                              									"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:3973:6: ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )?
                            int alt98=2;
                            int LA98_0 = input.LA(1);

                            if ( (LA98_0==Length||LA98_0==LeftParenthesis||LA98_0==LeftSquareBracket||LA98_0==LeftCurlyBracket||LA98_0==RULE_STRING) ) {
                                alt98=1;
                            }
                            switch (alt98) {
                                case 1 :
                                    // InternalDialogParser.g:3974:7: (lv_facet_16_0= ruleSadlDataTypeFacet )
                                    {
                                    // InternalDialogParser.g:3974:7: (lv_facet_16_0= ruleSadlDataTypeFacet )
                                    // InternalDialogParser.g:3975:8: lv_facet_16_0= ruleSadlDataTypeFacet
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getFacetSadlDataTypeFacetParserRuleCall_2_5_1_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_facet_16_0=ruleSadlDataTypeFacet();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                                      								}
                                      								set(
                                      									current,
                                      									"facet",
                                      									lv_facet_16_0,
                                      									"com.ge.research.sadl.SADL.SadlDataTypeFacet");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:3996:3: ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) )
                    {
                    // InternalDialogParser.g:3996:3: ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) )
                    // InternalDialogParser.g:3997:4: () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) )
                    {
                    // InternalDialogParser.g:3997:4: ()
                    // InternalDialogParser.g:3998:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsInverseOfAction_3_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_18=(Token)match(input,Is,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_3_1());
                      			
                    }
                    otherlv_19=(Token)match(input,The_1,FOLLOW_94); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getSadlPropertyRestrictionAccess().getTheKeyword_3_2());
                      			
                    }
                    otherlv_20=(Token)match(input,Inverse,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getSadlPropertyRestrictionAccess().getInverseKeyword_3_3());
                      			
                    }
                    otherlv_21=(Token)match(input,Of,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_3_4());
                      			
                    }
                    // InternalDialogParser.g:4020:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:4021:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:4021:5: ( ruleQNAME )
                    // InternalDialogParser.g:4022:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getOtherPropertySadlResourceCrossReference_3_5_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:4038:3: ( () otherlv_24= Is otherlv_25= Transitive )
                    {
                    // InternalDialogParser.g:4038:3: ( () otherlv_24= Is otherlv_25= Transitive )
                    // InternalDialogParser.g:4039:4: () otherlv_24= Is otherlv_25= Transitive
                    {
                    // InternalDialogParser.g:4039:4: ()
                    // InternalDialogParser.g:4040:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsTransitiveAction_4_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_24=(Token)match(input,Is,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_4_1());
                      			
                    }
                    otherlv_25=(Token)match(input,Transitive,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getSadlPropertyRestrictionAccess().getTransitiveKeyword_4_2());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:4056:3: ( () otherlv_27= Is otherlv_28= Symmetrical )
                    {
                    // InternalDialogParser.g:4056:3: ( () otherlv_27= Is otherlv_28= Symmetrical )
                    // InternalDialogParser.g:4057:4: () otherlv_27= Is otherlv_28= Symmetrical
                    {
                    // InternalDialogParser.g:4057:4: ()
                    // InternalDialogParser.g:4058:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsSymmetricalAction_5_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_27=(Token)match(input,Is,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_5_1());
                      			
                    }
                    otherlv_28=(Token)match(input,Symmetrical,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getSadlPropertyRestrictionAccess().getSymmetricalKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:4074:3: ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation )
                    {
                    // InternalDialogParser.g:4074:3: ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation )
                    // InternalDialogParser.g:4075:4: () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation
                    {
                    // InternalDialogParser.g:4075:4: ()
                    // InternalDialogParser.g:4076:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsAnnotationAction_6_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_30=(Token)match(input,Is,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_6_1());
                      			
                    }
                    otherlv_31=(Token)match(input,A_1,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getSadlPropertyRestrictionAccess().getAKeyword_6_2());
                      			
                    }
                    otherlv_32=(Token)match(input,Type,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getSadlPropertyRestrictionAccess().getTypeKeyword_6_3());
                      			
                    }
                    otherlv_33=(Token)match(input,Of,FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_6_4());
                      			
                    }
                    otherlv_34=(Token)match(input,Annotation,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getSadlPropertyRestrictionAccess().getAnnotationKeyword_6_5());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:4104:3: ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) )
                    {
                    // InternalDialogParser.g:4104:3: ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) )
                    // InternalDialogParser.g:4105:4: () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) )
                    {
                    // InternalDialogParser.g:4105:4: ()
                    // InternalDialogParser.g:4106:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlDefaultValueAction_7_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_36=(Token)match(input,Has,FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getSadlPropertyRestrictionAccess().getHasKeyword_7_1());
                      			
                    }
                    // InternalDialogParser.g:4116:4: (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )?
                    int alt100=2;
                    int LA100_0 = input.LA(1);

                    if ( (LA100_0==Level) ) {
                        alt100=1;
                    }
                    switch (alt100) {
                        case 1 :
                            // InternalDialogParser.g:4117:5: otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) )
                            {
                            otherlv_37=(Token)match(input,Level,FOLLOW_83); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_37, grammarAccess.getSadlPropertyRestrictionAccess().getLevelKeyword_7_2_0());
                              				
                            }
                            // InternalDialogParser.g:4121:5: ( (lv_level_38_0= RULE_NUMBER ) )
                            // InternalDialogParser.g:4122:6: (lv_level_38_0= RULE_NUMBER )
                            {
                            // InternalDialogParser.g:4122:6: (lv_level_38_0= RULE_NUMBER )
                            // InternalDialogParser.g:4123:7: lv_level_38_0= RULE_NUMBER
                            {
                            lv_level_38_0=(Token)match(input,RULE_NUMBER,FOLLOW_99); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_level_38_0, grammarAccess.getSadlPropertyRestrictionAccess().getLevelNUMBERTerminalRuleCall_7_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"level",
                              								lv_level_38_0,
                              								"com.ge.research.sadl.SADL.NUMBER");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_39=(Token)match(input,Default,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getSadlPropertyRestrictionAccess().getDefaultKeyword_7_3());
                      			
                    }
                    // InternalDialogParser.g:4144:4: ( (lv_defValue_40_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:4145:5: (lv_defValue_40_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:4145:5: (lv_defValue_40_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:4146:6: lv_defValue_40_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getDefValueSadlExplicitValueParserRuleCall_7_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_defValue_40_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      						set(
                      							current,
                      							"defValue",
                      							lv_defValue_40_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalDialogParser.g:4165:3: ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? )
                    {
                    // InternalDialogParser.g:4165:3: ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? )
                    // InternalDialogParser.g:4166:4: () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )?
                    {
                    // InternalDialogParser.g:4166:4: ()
                    // InternalDialogParser.g:4167:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsFunctionalAction_8_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_42=(Token)match(input,Has,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getSadlPropertyRestrictionAccess().getHasKeyword_8_1());
                      			
                    }
                    otherlv_43=(Token)match(input,A_1,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getSadlPropertyRestrictionAccess().getAKeyword_8_2());
                      			
                    }
                    otherlv_44=(Token)match(input,Single,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_44, grammarAccess.getSadlPropertyRestrictionAccess().getSingleKeyword_8_3());
                      			
                    }
                    // InternalDialogParser.g:4185:4: ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )?
                    int alt101=3;
                    int LA101_0 = input.LA(1);

                    if ( (LA101_0==Subject) ) {
                        alt101=1;
                    }
                    else if ( (LA101_0==Value) ) {
                        alt101=2;
                    }
                    switch (alt101) {
                        case 1 :
                            // InternalDialogParser.g:4186:5: ( (lv_inverse_45_0= Subject ) )
                            {
                            // InternalDialogParser.g:4186:5: ( (lv_inverse_45_0= Subject ) )
                            // InternalDialogParser.g:4187:6: (lv_inverse_45_0= Subject )
                            {
                            // InternalDialogParser.g:4187:6: (lv_inverse_45_0= Subject )
                            // InternalDialogParser.g:4188:7: lv_inverse_45_0= Subject
                            {
                            lv_inverse_45_0=(Token)match(input,Subject,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_inverse_45_0, grammarAccess.getSadlPropertyRestrictionAccess().getInverseSubjectKeyword_8_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                              							}
                              							setWithLastConsumed(current, "inverse", true, "subject");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:4201:5: otherlv_46= Value
                            {
                            otherlv_46=(Token)match(input,Value,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_46, grammarAccess.getSadlPropertyRestrictionAccess().getValueKeyword_8_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalDialogParser.g:4208:3: ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:4208:3: ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket )
                    // InternalDialogParser.g:4209:4: () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket
                    {
                    // InternalDialogParser.g:4209:4: ()
                    // InternalDialogParser.g:4210:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlMustBeOneOfAction_9_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_48=(Token)match(input,Must,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getSadlPropertyRestrictionAccess().getMustKeyword_9_1());
                      			
                    }
                    otherlv_49=(Token)match(input,Be,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getSadlPropertyRestrictionAccess().getBeKeyword_9_2());
                      			
                    }
                    otherlv_50=(Token)match(input,One,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_50, grammarAccess.getSadlPropertyRestrictionAccess().getOneKeyword_9_3());
                      			
                    }
                    otherlv_51=(Token)match(input,Of,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_9_4());
                      			
                    }
                    otherlv_52=(Token)match(input,LeftCurlyBracket,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_52, grammarAccess.getSadlPropertyRestrictionAccess().getLeftCurlyBracketKeyword_9_5());
                      			
                    }
                    // InternalDialogParser.g:4236:4: ( (lv_values_53_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:4237:5: (lv_values_53_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:4237:5: (lv_values_53_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:4238:6: lv_values_53_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_9_6_0());
                      					
                    }
                    pushFollow(FOLLOW_59);
                    lv_values_53_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      						add(
                      							current,
                      							"values",
                      							lv_values_53_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:4255:4: (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )*
                    loop102:
                    do {
                        int alt102=2;
                        int LA102_0 = input.LA(1);

                        if ( (LA102_0==Comma) ) {
                            alt102=1;
                        }


                        switch (alt102) {
                    	case 1 :
                    	    // InternalDialogParser.g:4256:5: otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) )
                    	    {
                    	    otherlv_54=(Token)match(input,Comma,FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_54, grammarAccess.getSadlPropertyRestrictionAccess().getCommaKeyword_9_7_0());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:4260:5: ( (lv_values_55_0= ruleSadlExplicitValue ) )
                    	    // InternalDialogParser.g:4261:6: (lv_values_55_0= ruleSadlExplicitValue )
                    	    {
                    	    // InternalDialogParser.g:4261:6: (lv_values_55_0= ruleSadlExplicitValue )
                    	    // InternalDialogParser.g:4262:7: lv_values_55_0= ruleSadlExplicitValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_9_7_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_59);
                    	    lv_values_55_0=ruleSadlExplicitValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"values",
                    	      								lv_values_55_0,
                    	      								"com.ge.research.sadl.SADL.SadlExplicitValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop102;
                        }
                    } while (true);

                    otherlv_56=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getSadlPropertyRestrictionAccess().getRightCurlyBracketKeyword_9_8());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalDialogParser.g:4286:3: ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:4286:3: ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket )
                    // InternalDialogParser.g:4287:4: () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket
                    {
                    // InternalDialogParser.g:4287:4: ()
                    // InternalDialogParser.g:4288:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlCanOnlyBeOneOfAction_10_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_58=(Token)match(input,Can,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_58, grammarAccess.getSadlPropertyRestrictionAccess().getCanKeyword_10_1());
                      			
                    }
                    otherlv_59=(Token)match(input,Only,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_59, grammarAccess.getSadlPropertyRestrictionAccess().getOnlyKeyword_10_2());
                      			
                    }
                    otherlv_60=(Token)match(input,Be,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_60, grammarAccess.getSadlPropertyRestrictionAccess().getBeKeyword_10_3());
                      			
                    }
                    otherlv_61=(Token)match(input,One,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_61, grammarAccess.getSadlPropertyRestrictionAccess().getOneKeyword_10_4());
                      			
                    }
                    otherlv_62=(Token)match(input,Of,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_62, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_10_5());
                      			
                    }
                    otherlv_63=(Token)match(input,LeftCurlyBracket,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_63, grammarAccess.getSadlPropertyRestrictionAccess().getLeftCurlyBracketKeyword_10_6());
                      			
                    }
                    // InternalDialogParser.g:4318:4: ( (lv_values_64_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:4319:5: (lv_values_64_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:4319:5: (lv_values_64_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:4320:6: lv_values_64_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_10_7_0());
                      					
                    }
                    pushFollow(FOLLOW_59);
                    lv_values_64_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      						add(
                      							current,
                      							"values",
                      							lv_values_64_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:4337:4: (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )*
                    loop103:
                    do {
                        int alt103=2;
                        int LA103_0 = input.LA(1);

                        if ( (LA103_0==Comma) ) {
                            alt103=1;
                        }


                        switch (alt103) {
                    	case 1 :
                    	    // InternalDialogParser.g:4338:5: otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) )
                    	    {
                    	    otherlv_65=(Token)match(input,Comma,FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_65, grammarAccess.getSadlPropertyRestrictionAccess().getCommaKeyword_10_8_0());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:4342:5: ( (lv_values_66_0= ruleSadlExplicitValue ) )
                    	    // InternalDialogParser.g:4343:6: (lv_values_66_0= ruleSadlExplicitValue )
                    	    {
                    	    // InternalDialogParser.g:4343:6: (lv_values_66_0= ruleSadlExplicitValue )
                    	    // InternalDialogParser.g:4344:7: lv_values_66_0= ruleSadlExplicitValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_10_8_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_59);
                    	    lv_values_66_0=ruleSadlExplicitValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"values",
                    	      								lv_values_66_0,
                    	      								"com.ge.research.sadl.SADL.SadlExplicitValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop103;
                        }
                    } while (true);

                    otherlv_67=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_67, grammarAccess.getSadlPropertyRestrictionAccess().getRightCurlyBracketKeyword_10_9());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPropertyRestriction"


    // $ANTLR start "entryRuleSadlCondition"
    // InternalDialogParser.g:4371:1: entryRuleSadlCondition returns [EObject current=null] : iv_ruleSadlCondition= ruleSadlCondition EOF ;
    public final EObject entryRuleSadlCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlCondition = null;


        try {
            // InternalDialogParser.g:4371:54: (iv_ruleSadlCondition= ruleSadlCondition EOF )
            // InternalDialogParser.g:4372:2: iv_ruleSadlCondition= ruleSadlCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlCondition=ruleSadlCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlCondition"


    // $ANTLR start "ruleSadlCondition"
    // InternalDialogParser.g:4378:1: ruleSadlCondition returns [EObject current=null] : (this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition | this_SadlHasValueCondition_1= ruleSadlHasValueCondition | this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition ) ;
    public final EObject ruleSadlCondition() throws RecognitionException {
        EObject current = null;

        EObject this_SadlAllValuesCondition_0 = null;

        EObject this_SadlHasValueCondition_1 = null;

        EObject this_SadlCardinalityCondition_2 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4384:2: ( (this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition | this_SadlHasValueCondition_1= ruleSadlHasValueCondition | this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition ) )
            // InternalDialogParser.g:4385:2: (this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition | this_SadlHasValueCondition_1= ruleSadlHasValueCondition | this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition )
            {
            // InternalDialogParser.g:4385:2: (this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition | this_SadlHasValueCondition_1= ruleSadlHasValueCondition | this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition )
            int alt105=3;
            switch ( input.LA(1) ) {
            case Only:
                {
                alt105=1;
                }
                break;
            case Always:
                {
                alt105=2;
                }
                break;
            case With:
            case Has:
                {
                alt105=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }

            switch (alt105) {
                case 1 :
                    // InternalDialogParser.g:4386:3: this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlConditionAccess().getSadlAllValuesConditionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlAllValuesCondition_0=ruleSadlAllValuesCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlAllValuesCondition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4395:3: this_SadlHasValueCondition_1= ruleSadlHasValueCondition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlConditionAccess().getSadlHasValueConditionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlHasValueCondition_1=ruleSadlHasValueCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlHasValueCondition_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:4404:3: this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlConditionAccess().getSadlCardinalityConditionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlCardinalityCondition_2=ruleSadlCardinalityCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlCardinalityCondition_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlCondition"


    // $ANTLR start "entryRuleSadlAllValuesCondition"
    // InternalDialogParser.g:4416:1: entryRuleSadlAllValuesCondition returns [EObject current=null] : iv_ruleSadlAllValuesCondition= ruleSadlAllValuesCondition EOF ;
    public final EObject entryRuleSadlAllValuesCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlAllValuesCondition = null;


        try {
            // InternalDialogParser.g:4416:63: (iv_ruleSadlAllValuesCondition= ruleSadlAllValuesCondition EOF )
            // InternalDialogParser.g:4417:2: iv_ruleSadlAllValuesCondition= ruleSadlAllValuesCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlAllValuesConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlAllValuesCondition=ruleSadlAllValuesCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlAllValuesCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlAllValuesCondition"


    // $ANTLR start "ruleSadlAllValuesCondition"
    // InternalDialogParser.g:4423:1: ruleSadlAllValuesCondition returns [EObject current=null] : (otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )? ) ;
    public final EObject ruleSadlAllValuesCondition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_type_6_0 = null;

        EObject lv_facet_7_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4429:2: ( (otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )? ) )
            // InternalDialogParser.g:4430:2: (otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )? )
            {
            // InternalDialogParser.g:4430:2: (otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )? )
            // InternalDialogParser.g:4431:3: otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )?
            {
            otherlv_0=(Token)match(input,Only,FOLLOW_105); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSadlAllValuesConditionAccess().getOnlyKeyword_0());
              		
            }
            // InternalDialogParser.g:4435:3: (otherlv_1= Has | otherlv_2= With )
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==Has) ) {
                alt106=1;
            }
            else if ( (LA106_0==With) ) {
                alt106=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 106, 0, input);

                throw nvae;
            }
            switch (alt106) {
                case 1 :
                    // InternalDialogParser.g:4436:4: otherlv_1= Has
                    {
                    otherlv_1=(Token)match(input,Has,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSadlAllValuesConditionAccess().getHasKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4441:4: otherlv_2= With
                    {
                    otherlv_2=(Token)match(input,With,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSadlAllValuesConditionAccess().getWithKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,Values,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getSadlAllValuesConditionAccess().getValuesKeyword_2());
              		
            }
            otherlv_4=(Token)match(input,Of,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSadlAllValuesConditionAccess().getOfKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,Type,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getSadlAllValuesConditionAccess().getTypeKeyword_4());
              		
            }
            // InternalDialogParser.g:4458:3: ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) )
            // InternalDialogParser.g:4459:4: (lv_type_6_0= ruleSadlPrimaryTypeReference )
            {
            // InternalDialogParser.g:4459:4: (lv_type_6_0= ruleSadlPrimaryTypeReference )
            // InternalDialogParser.g:4460:5: lv_type_6_0= ruleSadlPrimaryTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlAllValuesConditionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_93);
            lv_type_6_0=ruleSadlPrimaryTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSadlAllValuesConditionRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_6_0,
              						"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:4477:3: ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==Length||LA107_0==LeftParenthesis||LA107_0==LeftSquareBracket||LA107_0==LeftCurlyBracket||LA107_0==RULE_STRING) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalDialogParser.g:4478:4: (lv_facet_7_0= ruleSadlDataTypeFacet )
                    {
                    // InternalDialogParser.g:4478:4: (lv_facet_7_0= ruleSadlDataTypeFacet )
                    // InternalDialogParser.g:4479:5: lv_facet_7_0= ruleSadlDataTypeFacet
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSadlAllValuesConditionAccess().getFacetSadlDataTypeFacetParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_facet_7_0=ruleSadlDataTypeFacet();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSadlAllValuesConditionRule());
                      					}
                      					set(
                      						current,
                      						"facet",
                      						lv_facet_7_0,
                      						"com.ge.research.sadl.SADL.SadlDataTypeFacet");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlAllValuesCondition"


    // $ANTLR start "entryRuleSadlHasValueCondition"
    // InternalDialogParser.g:4500:1: entryRuleSadlHasValueCondition returns [EObject current=null] : iv_ruleSadlHasValueCondition= ruleSadlHasValueCondition EOF ;
    public final EObject entryRuleSadlHasValueCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlHasValueCondition = null;


        try {
            // InternalDialogParser.g:4500:62: (iv_ruleSadlHasValueCondition= ruleSadlHasValueCondition EOF )
            // InternalDialogParser.g:4501:2: iv_ruleSadlHasValueCondition= ruleSadlHasValueCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlHasValueConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlHasValueCondition=ruleSadlHasValueCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlHasValueCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlHasValueCondition"


    // $ANTLR start "ruleSadlHasValueCondition"
    // InternalDialogParser.g:4507:1: ruleSadlHasValueCondition returns [EObject current=null] : (otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) ;
    public final EObject ruleSadlHasValueCondition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_restriction_4_0 = null;

        EObject lv_restriction_6_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4513:2: ( (otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) )
            // InternalDialogParser.g:4514:2: (otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) )
            {
            // InternalDialogParser.g:4514:2: (otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) )
            // InternalDialogParser.g:4515:3: otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) )
            {
            otherlv_0=(Token)match(input,Always,FOLLOW_105); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSadlHasValueConditionAccess().getAlwaysKeyword_0());
              		
            }
            // InternalDialogParser.g:4519:3: (otherlv_1= Has | otherlv_2= With )
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==Has) ) {
                alt108=1;
            }
            else if ( (LA108_0==With) ) {
                alt108=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 108, 0, input);

                throw nvae;
            }
            switch (alt108) {
                case 1 :
                    // InternalDialogParser.g:4520:4: otherlv_1= Has
                    {
                    otherlv_1=(Token)match(input,Has,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSadlHasValueConditionAccess().getHasKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4525:4: otherlv_2= With
                    {
                    otherlv_2=(Token)match(input,With,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSadlHasValueConditionAccess().getWithKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,Value,FOLLOW_71); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getSadlHasValueConditionAccess().getValueKeyword_2());
              		
            }
            // InternalDialogParser.g:4534:3: ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) )
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==False||LA109_0==Known||LA109_0==True||LA109_0==Not||LA109_0==PI||LA109_0==HyphenMinus||LA109_0==LeftSquareBracket||LA109_0==E_1||LA109_0==RULE_NUMBER||(LA109_0>=RULE_ID && LA109_0<=RULE_STRING)) ) {
                alt109=1;
            }
            else if ( (LA109_0==LeftParenthesis) ) {
                alt109=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 109, 0, input);

                throw nvae;
            }
            switch (alt109) {
                case 1 :
                    // InternalDialogParser.g:4535:4: ( (lv_restriction_4_0= ruleSadlExplicitValue ) )
                    {
                    // InternalDialogParser.g:4535:4: ( (lv_restriction_4_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:4536:5: (lv_restriction_4_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:4536:5: (lv_restriction_4_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:4537:6: lv_restriction_4_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlHasValueConditionAccess().getRestrictionSadlExplicitValueParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_restriction_4_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlHasValueConditionRule());
                      						}
                      						set(
                      							current,
                      							"restriction",
                      							lv_restriction_4_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4555:4: (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis )
                    {
                    // InternalDialogParser.g:4555:4: (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis )
                    // InternalDialogParser.g:4556:5: otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,LeftParenthesis,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSadlHasValueConditionAccess().getLeftParenthesisKeyword_3_1_0());
                      				
                    }
                    // InternalDialogParser.g:4560:5: ( (lv_restriction_6_0= ruleSadlNestedInstance ) )
                    // InternalDialogParser.g:4561:6: (lv_restriction_6_0= ruleSadlNestedInstance )
                    {
                    // InternalDialogParser.g:4561:6: (lv_restriction_6_0= ruleSadlNestedInstance )
                    // InternalDialogParser.g:4562:7: lv_restriction_6_0= ruleSadlNestedInstance
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlHasValueConditionAccess().getRestrictionSadlNestedInstanceParserRuleCall_3_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_72);
                    lv_restriction_6_0=ruleSadlNestedInstance();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlHasValueConditionRule());
                      							}
                      							set(
                      								current,
                      								"restriction",
                      								lv_restriction_6_0,
                      								"com.ge.research.sadl.SADL.SadlNestedInstance");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSadlHasValueConditionAccess().getRightParenthesisKeyword_3_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlHasValueCondition"


    // $ANTLR start "entryRuleSadlCardinalityCondition"
    // InternalDialogParser.g:4589:1: entryRuleSadlCardinalityCondition returns [EObject current=null] : iv_ruleSadlCardinalityCondition= ruleSadlCardinalityCondition EOF ;
    public final EObject entryRuleSadlCardinalityCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlCardinalityCondition = null;


        try {
            // InternalDialogParser.g:4589:65: (iv_ruleSadlCardinalityCondition= ruleSadlCardinalityCondition EOF )
            // InternalDialogParser.g:4590:2: iv_ruleSadlCardinalityCondition= ruleSadlCardinalityCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlCardinalityConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlCardinalityCondition=ruleSadlCardinalityCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlCardinalityCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlCardinalityCondition"


    // $ANTLR start "ruleSadlCardinalityCondition"
    // InternalDialogParser.g:4596:1: ruleSadlCardinalityCondition returns [EObject current=null] : ( (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )? ) ;
    public final EObject ruleSadlCardinalityCondition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_operator_3_1=null;
        Token lv_operator_3_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_cardinality_5_0 = null;

        EObject lv_type_10_0 = null;

        EObject lv_facet_11_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4602:2: ( ( (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )? ) )
            // InternalDialogParser.g:4603:2: ( (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )? )
            {
            // InternalDialogParser.g:4603:2: ( (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )? )
            // InternalDialogParser.g:4604:3: (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )?
            {
            // InternalDialogParser.g:4604:3: (otherlv_0= Has | otherlv_1= With )
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==Has) ) {
                alt110=1;
            }
            else if ( (LA110_0==With) ) {
                alt110=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;
            }
            switch (alt110) {
                case 1 :
                    // InternalDialogParser.g:4605:4: otherlv_0= Has
                    {
                    otherlv_0=(Token)match(input,Has,FOLLOW_106); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSadlCardinalityConditionAccess().getHasKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4610:4: otherlv_1= With
                    {
                    otherlv_1=(Token)match(input,With,FOLLOW_106); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSadlCardinalityConditionAccess().getWithKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:4615:3: ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )?
            int alt112=3;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==At) ) {
                alt112=1;
            }
            else if ( (LA112_0==Exactly) ) {
                alt112=2;
            }
            switch (alt112) {
                case 1 :
                    // InternalDialogParser.g:4616:4: (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) )
                    {
                    // InternalDialogParser.g:4616:4: (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) )
                    // InternalDialogParser.g:4617:5: otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) )
                    {
                    otherlv_2=(Token)match(input,At,FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getSadlCardinalityConditionAccess().getAtKeyword_1_0_0());
                      				
                    }
                    // InternalDialogParser.g:4621:5: ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) )
                    // InternalDialogParser.g:4622:6: ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) )
                    {
                    // InternalDialogParser.g:4622:6: ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) )
                    // InternalDialogParser.g:4623:7: (lv_operator_3_1= Least | lv_operator_3_2= Most )
                    {
                    // InternalDialogParser.g:4623:7: (lv_operator_3_1= Least | lv_operator_3_2= Most )
                    int alt111=2;
                    int LA111_0 = input.LA(1);

                    if ( (LA111_0==Least) ) {
                        alt111=1;
                    }
                    else if ( (LA111_0==Most) ) {
                        alt111=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 111, 0, input);

                        throw nvae;
                    }
                    switch (alt111) {
                        case 1 :
                            // InternalDialogParser.g:4624:8: lv_operator_3_1= Least
                            {
                            lv_operator_3_1=(Token)match(input,Least,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_operator_3_1, grammarAccess.getSadlCardinalityConditionAccess().getOperatorLeastKeyword_1_0_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlCardinalityConditionRule());
                              								}
                              								setWithLastConsumed(current, "operator", lv_operator_3_1, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:4635:8: lv_operator_3_2= Most
                            {
                            lv_operator_3_2=(Token)match(input,Most,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_operator_3_2, grammarAccess.getSadlCardinalityConditionAccess().getOperatorMostKeyword_1_0_1_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlCardinalityConditionRule());
                              								}
                              								setWithLastConsumed(current, "operator", lv_operator_3_2, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4650:4: otherlv_4= Exactly
                    {
                    otherlv_4=(Token)match(input,Exactly,FOLLOW_106); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSadlCardinalityConditionAccess().getExactlyKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:4655:3: ( (lv_cardinality_5_0= ruleCardinalityValue ) )
            // InternalDialogParser.g:4656:4: (lv_cardinality_5_0= ruleCardinalityValue )
            {
            // InternalDialogParser.g:4656:4: (lv_cardinality_5_0= ruleCardinalityValue )
            // InternalDialogParser.g:4657:5: lv_cardinality_5_0= ruleCardinalityValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlCardinalityConditionAccess().getCardinalityCardinalityValueParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_108);
            lv_cardinality_5_0=ruleCardinalityValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSadlCardinalityConditionRule());
              					}
              					set(
              						current,
              						"cardinality",
              						lv_cardinality_5_0,
              						"com.ge.research.sadl.SADL.CardinalityValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:4674:3: (otherlv_6= Value | otherlv_7= Values )
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==Value) ) {
                alt113=1;
            }
            else if ( (LA113_0==Values) ) {
                alt113=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 113, 0, input);

                throw nvae;
            }
            switch (alt113) {
                case 1 :
                    // InternalDialogParser.g:4675:4: otherlv_6= Value
                    {
                    otherlv_6=(Token)match(input,Value,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSadlCardinalityConditionAccess().getValueKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4680:4: otherlv_7= Values
                    {
                    otherlv_7=(Token)match(input,Values,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getSadlCardinalityConditionAccess().getValuesKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:4685:3: (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==Of) ) {
                int LA115_1 = input.LA(2);

                if ( (LA115_1==Type) ) {
                    alt115=1;
                }
            }
            switch (alt115) {
                case 1 :
                    // InternalDialogParser.g:4686:4: otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )?
                    {
                    otherlv_8=(Token)match(input,Of,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSadlCardinalityConditionAccess().getOfKeyword_4_0());
                      			
                    }
                    otherlv_9=(Token)match(input,Type,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSadlCardinalityConditionAccess().getTypeKeyword_4_1());
                      			
                    }
                    // InternalDialogParser.g:4694:4: ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:4695:5: (lv_type_10_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:4695:5: (lv_type_10_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:4696:6: lv_type_10_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlCardinalityConditionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_93);
                    lv_type_10_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlCardinalityConditionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_10_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:4713:4: ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )?
                    int alt114=2;
                    int LA114_0 = input.LA(1);

                    if ( (LA114_0==Length||LA114_0==LeftParenthesis||LA114_0==LeftSquareBracket||LA114_0==LeftCurlyBracket||LA114_0==RULE_STRING) ) {
                        alt114=1;
                    }
                    switch (alt114) {
                        case 1 :
                            // InternalDialogParser.g:4714:5: (lv_facet_11_0= ruleSadlDataTypeFacet )
                            {
                            // InternalDialogParser.g:4714:5: (lv_facet_11_0= ruleSadlDataTypeFacet )
                            // InternalDialogParser.g:4715:6: lv_facet_11_0= ruleSadlDataTypeFacet
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSadlCardinalityConditionAccess().getFacetSadlDataTypeFacetParserRuleCall_4_3_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_facet_11_0=ruleSadlDataTypeFacet();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSadlCardinalityConditionRule());
                              						}
                              						set(
                              							current,
                              							"facet",
                              							lv_facet_11_0,
                              							"com.ge.research.sadl.SADL.SadlDataTypeFacet");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlCardinalityCondition"


    // $ANTLR start "entryRuleCardinalityValue"
    // InternalDialogParser.g:4737:1: entryRuleCardinalityValue returns [String current=null] : iv_ruleCardinalityValue= ruleCardinalityValue EOF ;
    public final String entryRuleCardinalityValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCardinalityValue = null;


        try {
            // InternalDialogParser.g:4737:56: (iv_ruleCardinalityValue= ruleCardinalityValue EOF )
            // InternalDialogParser.g:4738:2: iv_ruleCardinalityValue= ruleCardinalityValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCardinalityValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCardinalityValue=ruleCardinalityValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCardinalityValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCardinalityValue"


    // $ANTLR start "ruleCardinalityValue"
    // InternalDialogParser.g:4744:1: ruleCardinalityValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_NUMBER_0= RULE_NUMBER | kw= One ) ;
    public final AntlrDatatypeRuleToken ruleCardinalityValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_NUMBER_0=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:4750:2: ( (this_NUMBER_0= RULE_NUMBER | kw= One ) )
            // InternalDialogParser.g:4751:2: (this_NUMBER_0= RULE_NUMBER | kw= One )
            {
            // InternalDialogParser.g:4751:2: (this_NUMBER_0= RULE_NUMBER | kw= One )
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==RULE_NUMBER) ) {
                alt116=1;
            }
            else if ( (LA116_0==One) ) {
                alt116=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 116, 0, input);

                throw nvae;
            }
            switch (alt116) {
                case 1 :
                    // InternalDialogParser.g:4752:3: this_NUMBER_0= RULE_NUMBER
                    {
                    this_NUMBER_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_NUMBER_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_NUMBER_0, grammarAccess.getCardinalityValueAccess().getNUMBERTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4760:3: kw= One
                    {
                    kw=(Token)match(input,One,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCardinalityValueAccess().getOneKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCardinalityValue"


    // $ANTLR start "entryRuleSadlExplicitValue"
    // InternalDialogParser.g:4769:1: entryRuleSadlExplicitValue returns [EObject current=null] : iv_ruleSadlExplicitValue= ruleSadlExplicitValue EOF ;
    public final EObject entryRuleSadlExplicitValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlExplicitValue = null;


        try {
            // InternalDialogParser.g:4769:58: (iv_ruleSadlExplicitValue= ruleSadlExplicitValue EOF )
            // InternalDialogParser.g:4770:2: iv_ruleSadlExplicitValue= ruleSadlExplicitValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlExplicitValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlExplicitValue=ruleSadlExplicitValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlExplicitValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlExplicitValue"


    // $ANTLR start "ruleSadlExplicitValue"
    // InternalDialogParser.g:4776:1: ruleSadlExplicitValue returns [EObject current=null] : (this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral | ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) ) ) ;
    public final EObject ruleSadlExplicitValue() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_1=null;
        Token lv_operator_2_2=null;
        EObject this_SadlExplicitValueLiteral_0 = null;

        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4782:2: ( (this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral | ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) ) ) )
            // InternalDialogParser.g:4783:2: (this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral | ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) ) )
            {
            // InternalDialogParser.g:4783:2: (this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral | ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) ) )
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==False||LA118_0==Known||LA118_0==True||LA118_0==PI||LA118_0==LeftSquareBracket||LA118_0==E_1||LA118_0==RULE_NUMBER||(LA118_0>=RULE_ID && LA118_0<=RULE_STRING)) ) {
                alt118=1;
            }
            else if ( (LA118_0==HyphenMinus) && (synpred1_InternalDialogParser())) {
                alt118=2;
            }
            else if ( (LA118_0==Not) && (synpred1_InternalDialogParser())) {
                alt118=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 118, 0, input);

                throw nvae;
            }
            switch (alt118) {
                case 1 :
                    // InternalDialogParser.g:4784:3: this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlExplicitValueAccess().getSadlExplicitValueLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlExplicitValueLiteral_0=ruleSadlExplicitValueLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlExplicitValueLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4793:3: ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) )
                    {
                    // InternalDialogParser.g:4793:3: ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) )
                    // InternalDialogParser.g:4794:4: ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) )
                    {
                    // InternalDialogParser.g:4813:4: ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) )
                    // InternalDialogParser.g:4814:5: () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) )
                    {
                    // InternalDialogParser.g:4814:5: ()
                    // InternalDialogParser.g:4815:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSadlExplicitValueAccess().getSadlUnaryExpressionAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalDialogParser.g:4821:5: ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) )
                    // InternalDialogParser.g:4822:6: ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) )
                    {
                    // InternalDialogParser.g:4822:6: ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) )
                    // InternalDialogParser.g:4823:7: (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not )
                    {
                    // InternalDialogParser.g:4823:7: (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not )
                    int alt117=2;
                    int LA117_0 = input.LA(1);

                    if ( (LA117_0==HyphenMinus) ) {
                        alt117=1;
                    }
                    else if ( (LA117_0==Not) ) {
                        alt117=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 117, 0, input);

                        throw nvae;
                    }
                    switch (alt117) {
                        case 1 :
                            // InternalDialogParser.g:4824:8: lv_operator_2_1= HyphenMinus
                            {
                            lv_operator_2_1=(Token)match(input,HyphenMinus,FOLLOW_110); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_operator_2_1, grammarAccess.getSadlExplicitValueAccess().getOperatorHyphenMinusKeyword_1_0_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlExplicitValueRule());
                              								}
                              								setWithLastConsumed(current, "operator", lv_operator_2_1, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:4835:8: lv_operator_2_2= Not
                            {
                            lv_operator_2_2=(Token)match(input,Not,FOLLOW_110); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_operator_2_2, grammarAccess.getSadlExplicitValueAccess().getOperatorNotKeyword_1_0_1_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlExplicitValueRule());
                              								}
                              								setWithLastConsumed(current, "operator", lv_operator_2_2, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:4848:5: ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) )
                    // InternalDialogParser.g:4849:6: (lv_value_3_0= ruleSadlExplicitValueLiteral )
                    {
                    // InternalDialogParser.g:4849:6: (lv_value_3_0= ruleSadlExplicitValueLiteral )
                    // InternalDialogParser.g:4850:7: lv_value_3_0= ruleSadlExplicitValueLiteral
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlExplicitValueAccess().getValueSadlExplicitValueLiteralParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleSadlExplicitValueLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlExplicitValueRule());
                      							}
                      							set(
                      								current,
                      								"value",
                      								lv_value_3_0,
                      								"com.ge.research.sadl.SADL.SadlExplicitValueLiteral");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlExplicitValue"


    // $ANTLR start "entryRuleSadlExplicitValueLiteral"
    // InternalDialogParser.g:4873:1: entryRuleSadlExplicitValueLiteral returns [EObject current=null] : iv_ruleSadlExplicitValueLiteral= ruleSadlExplicitValueLiteral EOF ;
    public final EObject entryRuleSadlExplicitValueLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlExplicitValueLiteral = null;


        try {
            // InternalDialogParser.g:4873:65: (iv_ruleSadlExplicitValueLiteral= ruleSadlExplicitValueLiteral EOF )
            // InternalDialogParser.g:4874:2: iv_ruleSadlExplicitValueLiteral= ruleSadlExplicitValueLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlExplicitValueLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlExplicitValueLiteral=ruleSadlExplicitValueLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlExplicitValueLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlExplicitValueLiteral"


    // $ANTLR start "ruleSadlExplicitValueLiteral"
    // InternalDialogParser.g:4880:1: ruleSadlExplicitValueLiteral returns [EObject current=null] : (this_SadlResource_0= ruleSadlResource | ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? ) | ( () ( (lv_literalString_5_0= RULE_STRING ) ) ) | ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) ) | this_SadlValueList_9= ruleSadlValueList | ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) ) ) ;
    public final EObject ruleSadlExplicitValueLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_literalString_5_0=null;
        Token lv_truethy_7_0=null;
        Token otherlv_8=null;
        Token lv_term_11_1=null;
        Token lv_term_11_2=null;
        Token lv_term_11_3=null;
        EObject this_SadlResource_0 = null;

        AntlrDatatypeRuleToken lv_literalNumber_2_0 = null;

        AntlrDatatypeRuleToken lv_unit_3_0 = null;

        EObject this_SadlValueList_9 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4886:2: ( (this_SadlResource_0= ruleSadlResource | ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? ) | ( () ( (lv_literalString_5_0= RULE_STRING ) ) ) | ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) ) | this_SadlValueList_9= ruleSadlValueList | ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) ) ) )
            // InternalDialogParser.g:4887:2: (this_SadlResource_0= ruleSadlResource | ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? ) | ( () ( (lv_literalString_5_0= RULE_STRING ) ) ) | ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) ) | this_SadlValueList_9= ruleSadlValueList | ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) ) )
            {
            // InternalDialogParser.g:4887:2: (this_SadlResource_0= ruleSadlResource | ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? ) | ( () ( (lv_literalString_5_0= RULE_STRING ) ) ) | ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) ) | this_SadlValueList_9= ruleSadlValueList | ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) ) )
            int alt122=6;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt122=1;
                }
                break;
            case RULE_NUMBER:
                {
                alt122=2;
                }
                break;
            case RULE_STRING:
                {
                alt122=3;
                }
                break;
            case False:
            case True:
                {
                alt122=4;
                }
                break;
            case LeftSquareBracket:
                {
                alt122=5;
                }
                break;
            case Known:
            case PI:
            case E_1:
                {
                alt122=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }

            switch (alt122) {
                case 1 :
                    // InternalDialogParser.g:4888:3: this_SadlResource_0= ruleSadlResource
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getSadlResourceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlResource_0=ruleSadlResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlResource_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4897:3: ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? )
                    {
                    // InternalDialogParser.g:4897:3: ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? )
                    // InternalDialogParser.g:4898:4: () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )?
                    {
                    // InternalDialogParser.g:4898:4: ()
                    // InternalDialogParser.g:4899:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlNumberLiteralAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:4905:4: ( (lv_literalNumber_2_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:4906:5: (lv_literalNumber_2_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:4906:5: (lv_literalNumber_2_0= ruleAnyNumber )
                    // InternalDialogParser.g:4907:6: lv_literalNumber_2_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getLiteralNumberAnyNumberParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_111);
                    lv_literalNumber_2_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlExplicitValueLiteralRule());
                      						}
                      						set(
                      							current,
                      							"literalNumber",
                      							lv_literalNumber_2_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:4924:4: ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )?
                    int alt119=2;
                    alt119 = dfa119.predict(input);
                    switch (alt119) {
                        case 1 :
                            // InternalDialogParser.g:4925:5: ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT )
                            {
                            // InternalDialogParser.g:4926:5: (lv_unit_3_0= ruleUNIT )
                            // InternalDialogParser.g:4927:6: lv_unit_3_0= ruleUNIT
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getUnitUNITParserRuleCall_1_2_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_unit_3_0=ruleUNIT();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSadlExplicitValueLiteralRule());
                              						}
                              						set(
                              							current,
                              							"unit",
                              							lv_unit_3_0,
                              							"com.ge.research.sadl.SADL.UNIT");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:4946:3: ( () ( (lv_literalString_5_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:4946:3: ( () ( (lv_literalString_5_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:4947:4: () ( (lv_literalString_5_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:4947:4: ()
                    // InternalDialogParser.g:4948:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlStringLiteralAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:4954:4: ( (lv_literalString_5_0= RULE_STRING ) )
                    // InternalDialogParser.g:4955:5: (lv_literalString_5_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:4955:5: (lv_literalString_5_0= RULE_STRING )
                    // InternalDialogParser.g:4956:6: lv_literalString_5_0= RULE_STRING
                    {
                    lv_literalString_5_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_literalString_5_0, grammarAccess.getSadlExplicitValueLiteralAccess().getLiteralStringSTRINGTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"literalString",
                      							lv_literalString_5_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:4974:3: ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) )
                    {
                    // InternalDialogParser.g:4974:3: ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) )
                    // InternalDialogParser.g:4975:4: () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False )
                    {
                    // InternalDialogParser.g:4975:4: ()
                    // InternalDialogParser.g:4976:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlBooleanLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:4982:4: ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False )
                    int alt120=2;
                    int LA120_0 = input.LA(1);

                    if ( (LA120_0==True) ) {
                        alt120=1;
                    }
                    else if ( (LA120_0==False) ) {
                        alt120=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 120, 0, input);

                        throw nvae;
                    }
                    switch (alt120) {
                        case 1 :
                            // InternalDialogParser.g:4983:5: ( (lv_truethy_7_0= True ) )
                            {
                            // InternalDialogParser.g:4983:5: ( (lv_truethy_7_0= True ) )
                            // InternalDialogParser.g:4984:6: (lv_truethy_7_0= True )
                            {
                            // InternalDialogParser.g:4984:6: (lv_truethy_7_0= True )
                            // InternalDialogParser.g:4985:7: lv_truethy_7_0= True
                            {
                            lv_truethy_7_0=(Token)match(input,True,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_truethy_7_0, grammarAccess.getSadlExplicitValueLiteralAccess().getTruethyTrueKeyword_3_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                              							}
                              							setWithLastConsumed(current, "truethy", true, "true");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:4998:5: otherlv_8= False
                            {
                            otherlv_8=(Token)match(input,False,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getSadlExplicitValueLiteralAccess().getFalseKeyword_3_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:5005:3: this_SadlValueList_9= ruleSadlValueList
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getSadlValueListParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlValueList_9=ruleSadlValueList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlValueList_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:5014:3: ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) )
                    {
                    // InternalDialogParser.g:5014:3: ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) )
                    // InternalDialogParser.g:5015:4: () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) )
                    {
                    // InternalDialogParser.g:5015:4: ()
                    // InternalDialogParser.g:5016:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlConstantLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:5022:4: ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) )
                    // InternalDialogParser.g:5023:5: ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) )
                    {
                    // InternalDialogParser.g:5023:5: ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) )
                    // InternalDialogParser.g:5024:6: (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known )
                    {
                    // InternalDialogParser.g:5024:6: (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known )
                    int alt121=3;
                    switch ( input.LA(1) ) {
                    case PI:
                        {
                        alt121=1;
                        }
                        break;
                    case E_1:
                        {
                        alt121=2;
                        }
                        break;
                    case Known:
                        {
                        alt121=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 121, 0, input);

                        throw nvae;
                    }

                    switch (alt121) {
                        case 1 :
                            // InternalDialogParser.g:5025:7: lv_term_11_1= PI
                            {
                            lv_term_11_1=(Token)match(input,PI,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_term_11_1, grammarAccess.getSadlExplicitValueLiteralAccess().getTermPIKeyword_5_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                              							}
                              							setWithLastConsumed(current, "term", lv_term_11_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:5036:7: lv_term_11_2= E_1
                            {
                            lv_term_11_2=(Token)match(input,E_1,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_term_11_2, grammarAccess.getSadlExplicitValueLiteralAccess().getTermEKeyword_5_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                              							}
                              							setWithLastConsumed(current, "term", lv_term_11_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:5047:7: lv_term_11_3= Known
                            {
                            lv_term_11_3=(Token)match(input,Known,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_term_11_3, grammarAccess.getSadlExplicitValueLiteralAccess().getTermKnownKeyword_5_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                              							}
                              							setWithLastConsumed(current, "term", lv_term_11_3, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlExplicitValueLiteral"


    // $ANTLR start "entryRuleUNIT"
    // InternalDialogParser.g:5065:1: entryRuleUNIT returns [String current=null] : iv_ruleUNIT= ruleUNIT EOF ;
    public final String entryRuleUNIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUNIT = null;


        try {
            // InternalDialogParser.g:5065:44: (iv_ruleUNIT= ruleUNIT EOF )
            // InternalDialogParser.g:5066:2: iv_ruleUNIT= ruleUNIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUNITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUNIT=ruleUNIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUNIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUNIT"


    // $ANTLR start "ruleUNIT"
    // InternalDialogParser.g:5072:1: ruleUNIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleUNIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_ID_1=null;


        	enterRule();

        try {
            // InternalDialogParser.g:5078:2: ( (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) )
            // InternalDialogParser.g:5079:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            {
            // InternalDialogParser.g:5079:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==RULE_STRING) ) {
                alt123=1;
            }
            else if ( (LA123_0==RULE_ID) ) {
                alt123=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 123, 0, input);

                throw nvae;
            }
            switch (alt123) {
                case 1 :
                    // InternalDialogParser.g:5080:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getUNITAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5088:3: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_1, grammarAccess.getUNITAccess().getIDTerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUNIT"


    // $ANTLR start "entryRuleSadlValueList"
    // InternalDialogParser.g:5099:1: entryRuleSadlValueList returns [EObject current=null] : iv_ruleSadlValueList= ruleSadlValueList EOF ;
    public final EObject entryRuleSadlValueList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlValueList = null;


        try {
            // InternalDialogParser.g:5099:54: (iv_ruleSadlValueList= ruleSadlValueList EOF )
            // InternalDialogParser.g:5100:2: iv_ruleSadlValueList= ruleSadlValueList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlValueListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlValueList=ruleSadlValueList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlValueList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlValueList"


    // $ANTLR start "ruleSadlValueList"
    // InternalDialogParser.g:5106:1: ruleSadlValueList returns [EObject current=null] : ( () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket ) ;
    public final EObject ruleSadlValueList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_explicitValues_2_0 = null;

        EObject lv_explicitValues_4_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5112:2: ( ( () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket ) )
            // InternalDialogParser.g:5113:2: ( () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket )
            {
            // InternalDialogParser.g:5113:2: ( () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket )
            // InternalDialogParser.g:5114:3: () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket
            {
            // InternalDialogParser.g:5114:3: ()
            // InternalDialogParser.g:5115:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSadlValueListAccess().getSadlValueListAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_112); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSadlValueListAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalDialogParser.g:5125:3: ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==False||LA125_0==Known||LA125_0==True||LA125_0==Not||LA125_0==PI||LA125_0==HyphenMinus||LA125_0==LeftSquareBracket||LA125_0==E_1||LA125_0==RULE_NUMBER||(LA125_0>=RULE_ID && LA125_0<=RULE_STRING)) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalDialogParser.g:5126:4: ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )*
                    {
                    // InternalDialogParser.g:5126:4: ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:5127:5: (lv_explicitValues_2_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:5127:5: (lv_explicitValues_2_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:5128:6: lv_explicitValues_2_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlValueListAccess().getExplicitValuesSadlExplicitValueParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_113);
                    lv_explicitValues_2_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlValueListRule());
                      						}
                      						add(
                      							current,
                      							"explicitValues",
                      							lv_explicitValues_2_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:5145:4: (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )*
                    loop124:
                    do {
                        int alt124=2;
                        int LA124_0 = input.LA(1);

                        if ( (LA124_0==Comma) ) {
                            alt124=1;
                        }


                        switch (alt124) {
                    	case 1 :
                    	    // InternalDialogParser.g:5146:5: otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getSadlValueListAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:5150:5: ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) )
                    	    // InternalDialogParser.g:5151:6: (lv_explicitValues_4_0= ruleSadlExplicitValue )
                    	    {
                    	    // InternalDialogParser.g:5151:6: (lv_explicitValues_4_0= ruleSadlExplicitValue )
                    	    // InternalDialogParser.g:5152:7: lv_explicitValues_4_0= ruleSadlExplicitValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlValueListAccess().getExplicitValuesSadlExplicitValueParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_113);
                    	    lv_explicitValues_4_0=ruleSadlExplicitValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlValueListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"explicitValues",
                    	      								lv_explicitValues_4_0,
                    	      								"com.ge.research.sadl.SADL.SadlExplicitValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop124;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getSadlValueListAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlValueList"


    // $ANTLR start "entryRuleAnArticle"
    // InternalDialogParser.g:5179:1: entryRuleAnArticle returns [String current=null] : iv_ruleAnArticle= ruleAnArticle EOF ;
    public final String entryRuleAnArticle() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAnArticle = null;


        try {
            // InternalDialogParser.g:5179:49: (iv_ruleAnArticle= ruleAnArticle EOF )
            // InternalDialogParser.g:5180:2: iv_ruleAnArticle= ruleAnArticle EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnArticleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnArticle=ruleAnArticle();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnArticle.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnArticle"


    // $ANTLR start "ruleAnArticle"
    // InternalDialogParser.g:5186:1: ruleAnArticle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IndefiniteArticle_0= ruleIndefiniteArticle | this_DefiniteArticle_1= ruleDefiniteArticle ) ;
    public final AntlrDatatypeRuleToken ruleAnArticle() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IndefiniteArticle_0 = null;

        AntlrDatatypeRuleToken this_DefiniteArticle_1 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5192:2: ( (this_IndefiniteArticle_0= ruleIndefiniteArticle | this_DefiniteArticle_1= ruleDefiniteArticle ) )
            // InternalDialogParser.g:5193:2: (this_IndefiniteArticle_0= ruleIndefiniteArticle | this_DefiniteArticle_1= ruleDefiniteArticle )
            {
            // InternalDialogParser.g:5193:2: (this_IndefiniteArticle_0= ruleIndefiniteArticle | this_DefiniteArticle_1= ruleDefiniteArticle )
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==Another||LA126_0==Some||LA126_0==Any||LA126_0==An||LA126_0==An_1||LA126_0==A||LA126_0==A_1) ) {
                alt126=1;
            }
            else if ( (LA126_0==The||LA126_0==The_1) ) {
                alt126=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 126, 0, input);

                throw nvae;
            }
            switch (alt126) {
                case 1 :
                    // InternalDialogParser.g:5194:3: this_IndefiniteArticle_0= ruleIndefiniteArticle
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnArticleAccess().getIndefiniteArticleParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IndefiniteArticle_0=ruleIndefiniteArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_IndefiniteArticle_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5205:3: this_DefiniteArticle_1= ruleDefiniteArticle
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnArticleAccess().getDefiniteArticleParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DefiniteArticle_1=ruleDefiniteArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_DefiniteArticle_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnArticle"


    // $ANTLR start "entryRuleIndefiniteArticle"
    // InternalDialogParser.g:5219:1: entryRuleIndefiniteArticle returns [String current=null] : iv_ruleIndefiniteArticle= ruleIndefiniteArticle EOF ;
    public final String entryRuleIndefiniteArticle() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIndefiniteArticle = null;


        try {
            // InternalDialogParser.g:5219:57: (iv_ruleIndefiniteArticle= ruleIndefiniteArticle EOF )
            // InternalDialogParser.g:5220:2: iv_ruleIndefiniteArticle= ruleIndefiniteArticle EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIndefiniteArticleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIndefiniteArticle=ruleIndefiniteArticle();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIndefiniteArticle.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIndefiniteArticle"


    // $ANTLR start "ruleIndefiniteArticle"
    // InternalDialogParser.g:5226:1: ruleIndefiniteArticle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= A | kw= A_1 | kw= An | kw= An_1 | kw= Any | kw= Some | kw= Another ) ;
    public final AntlrDatatypeRuleToken ruleIndefiniteArticle() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:5232:2: ( (kw= A | kw= A_1 | kw= An | kw= An_1 | kw= Any | kw= Some | kw= Another ) )
            // InternalDialogParser.g:5233:2: (kw= A | kw= A_1 | kw= An | kw= An_1 | kw= Any | kw= Some | kw= Another )
            {
            // InternalDialogParser.g:5233:2: (kw= A | kw= A_1 | kw= An | kw= An_1 | kw= Any | kw= Some | kw= Another )
            int alt127=7;
            switch ( input.LA(1) ) {
            case A:
                {
                alt127=1;
                }
                break;
            case A_1:
                {
                alt127=2;
                }
                break;
            case An:
                {
                alt127=3;
                }
                break;
            case An_1:
                {
                alt127=4;
                }
                break;
            case Any:
                {
                alt127=5;
                }
                break;
            case Some:
                {
                alt127=6;
                }
                break;
            case Another:
                {
                alt127=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 127, 0, input);

                throw nvae;
            }

            switch (alt127) {
                case 1 :
                    // InternalDialogParser.g:5234:3: kw= A
                    {
                    kw=(Token)match(input,A,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5240:3: kw= A_1
                    {
                    kw=(Token)match(input,A_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:5246:3: kw= An
                    {
                    kw=(Token)match(input,An,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:5252:3: kw= An_1
                    {
                    kw=(Token)match(input,An_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:5258:3: kw= Any
                    {
                    kw=(Token)match(input,Any,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnyKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:5264:3: kw= Some
                    {
                    kw=(Token)match(input,Some,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getSomeKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:5270:3: kw= Another
                    {
                    kw=(Token)match(input,Another,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnotherKeyword_6());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIndefiniteArticle"


    // $ANTLR start "entryRuleDefiniteArticle"
    // InternalDialogParser.g:5279:1: entryRuleDefiniteArticle returns [String current=null] : iv_ruleDefiniteArticle= ruleDefiniteArticle EOF ;
    public final String entryRuleDefiniteArticle() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDefiniteArticle = null;


        try {
            // InternalDialogParser.g:5279:55: (iv_ruleDefiniteArticle= ruleDefiniteArticle EOF )
            // InternalDialogParser.g:5280:2: iv_ruleDefiniteArticle= ruleDefiniteArticle EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefiniteArticleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefiniteArticle=ruleDefiniteArticle();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefiniteArticle.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefiniteArticle"


    // $ANTLR start "ruleDefiniteArticle"
    // InternalDialogParser.g:5286:1: ruleDefiniteArticle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= The | kw= The_1 ) ;
    public final AntlrDatatypeRuleToken ruleDefiniteArticle() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:5292:2: ( (kw= The | kw= The_1 ) )
            // InternalDialogParser.g:5293:2: (kw= The | kw= The_1 )
            {
            // InternalDialogParser.g:5293:2: (kw= The | kw= The_1 )
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==The) ) {
                alt128=1;
            }
            else if ( (LA128_0==The_1) ) {
                alt128=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }
            switch (alt128) {
                case 1 :
                    // InternalDialogParser.g:5294:3: kw= The
                    {
                    kw=(Token)match(input,The,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDefiniteArticleAccess().getTheKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5300:3: kw= The_1
                    {
                    kw=(Token)match(input,The_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDefiniteArticleAccess().getTheKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefiniteArticle"


    // $ANTLR start "entryRuleOrdinal"
    // InternalDialogParser.g:5309:1: entryRuleOrdinal returns [String current=null] : iv_ruleOrdinal= ruleOrdinal EOF ;
    public final String entryRuleOrdinal() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOrdinal = null;


        try {
            // InternalDialogParser.g:5309:47: (iv_ruleOrdinal= ruleOrdinal EOF )
            // InternalDialogParser.g:5310:2: iv_ruleOrdinal= ruleOrdinal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrdinalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrdinal=ruleOrdinal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrdinal.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrdinal"


    // $ANTLR start "ruleOrdinal"
    // InternalDialogParser.g:5316:1: ruleOrdinal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= First | kw= Second | kw= Other | kw= Third | kw= Fourth | kw= Fifth | kw= Sixth | kw= Seventh | kw= Eighth | kw= Ninth | kw= Tenth ) ;
    public final AntlrDatatypeRuleToken ruleOrdinal() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:5322:2: ( (kw= First | kw= Second | kw= Other | kw= Third | kw= Fourth | kw= Fifth | kw= Sixth | kw= Seventh | kw= Eighth | kw= Ninth | kw= Tenth ) )
            // InternalDialogParser.g:5323:2: (kw= First | kw= Second | kw= Other | kw= Third | kw= Fourth | kw= Fifth | kw= Sixth | kw= Seventh | kw= Eighth | kw= Ninth | kw= Tenth )
            {
            // InternalDialogParser.g:5323:2: (kw= First | kw= Second | kw= Other | kw= Third | kw= Fourth | kw= Fifth | kw= Sixth | kw= Seventh | kw= Eighth | kw= Ninth | kw= Tenth )
            int alt129=11;
            switch ( input.LA(1) ) {
            case First:
                {
                alt129=1;
                }
                break;
            case Second:
                {
                alt129=2;
                }
                break;
            case Other:
                {
                alt129=3;
                }
                break;
            case Third:
                {
                alt129=4;
                }
                break;
            case Fourth:
                {
                alt129=5;
                }
                break;
            case Fifth:
                {
                alt129=6;
                }
                break;
            case Sixth:
                {
                alt129=7;
                }
                break;
            case Seventh:
                {
                alt129=8;
                }
                break;
            case Eighth:
                {
                alt129=9;
                }
                break;
            case Ninth:
                {
                alt129=10;
                }
                break;
            case Tenth:
                {
                alt129=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 129, 0, input);

                throw nvae;
            }

            switch (alt129) {
                case 1 :
                    // InternalDialogParser.g:5324:3: kw= First
                    {
                    kw=(Token)match(input,First,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getFirstKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5330:3: kw= Second
                    {
                    kw=(Token)match(input,Second,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getSecondKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:5336:3: kw= Other
                    {
                    kw=(Token)match(input,Other,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getOtherKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:5342:3: kw= Third
                    {
                    kw=(Token)match(input,Third,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getThirdKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:5348:3: kw= Fourth
                    {
                    kw=(Token)match(input,Fourth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getFourthKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:5354:3: kw= Fifth
                    {
                    kw=(Token)match(input,Fifth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getFifthKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:5360:3: kw= Sixth
                    {
                    kw=(Token)match(input,Sixth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getSixthKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:5366:3: kw= Seventh
                    {
                    kw=(Token)match(input,Seventh,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getSeventhKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalDialogParser.g:5372:3: kw= Eighth
                    {
                    kw=(Token)match(input,Eighth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getEighthKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalDialogParser.g:5378:3: kw= Ninth
                    {
                    kw=(Token)match(input,Ninth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getNinthKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalDialogParser.g:5384:3: kw= Tenth
                    {
                    kw=(Token)match(input,Tenth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getTenthKeyword_10());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrdinal"


    // $ANTLR start "entryRuleNamedStructureAnnotation"
    // InternalDialogParser.g:5393:1: entryRuleNamedStructureAnnotation returns [EObject current=null] : iv_ruleNamedStructureAnnotation= ruleNamedStructureAnnotation EOF ;
    public final EObject entryRuleNamedStructureAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedStructureAnnotation = null;


        try {
            // InternalDialogParser.g:5393:65: (iv_ruleNamedStructureAnnotation= ruleNamedStructureAnnotation EOF )
            // InternalDialogParser.g:5394:2: iv_ruleNamedStructureAnnotation= ruleNamedStructureAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedStructureAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedStructureAnnotation=ruleNamedStructureAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedStructureAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedStructureAnnotation"


    // $ANTLR start "ruleNamedStructureAnnotation"
    // InternalDialogParser.g:5400:1: ruleNamedStructureAnnotation returns [EObject current=null] : ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis ) ;
    public final EObject ruleNamedStructureAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_type_2_0 = null;

        EObject lv_contents_3_0 = null;

        EObject lv_contents_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5406:2: ( ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis ) )
            // InternalDialogParser.g:5407:2: ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis )
            {
            // InternalDialogParser.g:5407:2: ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis )
            // InternalDialogParser.g:5408:3: (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis
            {
            // InternalDialogParser.g:5408:3: (otherlv_0= Comma )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==Comma) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalDialogParser.g:5409:4: otherlv_0= Comma
                    {
                    otherlv_0=(Token)match(input,Comma,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getNamedStructureAnnotationAccess().getCommaKeyword_0());
                      			
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNamedStructureAnnotationAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalDialogParser.g:5418:3: ( (lv_type_2_0= ruleSadlResource ) )
            // InternalDialogParser.g:5419:4: (lv_type_2_0= ruleSadlResource )
            {
            // InternalDialogParser.g:5419:4: (lv_type_2_0= ruleSadlResource )
            // InternalDialogParser.g:5420:5: lv_type_2_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedStructureAnnotationAccess().getTypeSadlResourceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_100);
            lv_type_2_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedStructureAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:5437:3: ( (lv_contents_3_0= ruleSadlExplicitValue ) )
            // InternalDialogParser.g:5438:4: (lv_contents_3_0= ruleSadlExplicitValue )
            {
            // InternalDialogParser.g:5438:4: (lv_contents_3_0= ruleSadlExplicitValue )
            // InternalDialogParser.g:5439:5: lv_contents_3_0= ruleSadlExplicitValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedStructureAnnotationAccess().getContentsSadlExplicitValueParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_27);
            lv_contents_3_0=ruleSadlExplicitValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedStructureAnnotationRule());
              					}
              					add(
              						current,
              						"contents",
              						lv_contents_3_0,
              						"com.ge.research.sadl.SADL.SadlExplicitValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:5456:3: (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )*
            loop131:
            do {
                int alt131=2;
                int LA131_0 = input.LA(1);

                if ( (LA131_0==Comma) ) {
                    alt131=1;
                }


                switch (alt131) {
            	case 1 :
            	    // InternalDialogParser.g:5457:4: otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) )
            	    {
            	    otherlv_4=(Token)match(input,Comma,FOLLOW_100); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getNamedStructureAnnotationAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalDialogParser.g:5461:4: ( (lv_contents_5_0= ruleSadlExplicitValue ) )
            	    // InternalDialogParser.g:5462:5: (lv_contents_5_0= ruleSadlExplicitValue )
            	    {
            	    // InternalDialogParser.g:5462:5: (lv_contents_5_0= ruleSadlExplicitValue )
            	    // InternalDialogParser.g:5463:6: lv_contents_5_0= ruleSadlExplicitValue
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNamedStructureAnnotationAccess().getContentsSadlExplicitValueParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_27);
            	    lv_contents_5_0=ruleSadlExplicitValue();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNamedStructureAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"contents",
            	      							lv_contents_5_0,
            	      							"com.ge.research.sadl.SADL.SadlExplicitValue");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop131;
                }
            } while (true);

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getNamedStructureAnnotationAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedStructureAnnotation"


    // $ANTLR start "entryRuleConstructExpression"
    // InternalDialogParser.g:5489:1: entryRuleConstructExpression returns [EObject current=null] : iv_ruleConstructExpression= ruleConstructExpression EOF ;
    public final EObject entryRuleConstructExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstructExpression = null;


        try {
            // InternalDialogParser.g:5489:60: (iv_ruleConstructExpression= ruleConstructExpression EOF )
            // InternalDialogParser.g:5490:2: iv_ruleConstructExpression= ruleConstructExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstructExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstructExpression=ruleConstructExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstructExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstructExpression"


    // $ANTLR start "ruleConstructExpression"
    // InternalDialogParser.g:5496:1: ruleConstructExpression returns [EObject current=null] : ( () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) ) ;
    public final EObject ruleConstructExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_subj_2_0 = null;

        EObject lv_pred_4_0 = null;

        EObject lv_obj_6_0 = null;

        EObject lv_whereExpression_8_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5502:2: ( ( () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) ) )
            // InternalDialogParser.g:5503:2: ( () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )
            {
            // InternalDialogParser.g:5503:2: ( () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )
            // InternalDialogParser.g:5504:3: () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) )
            {
            // InternalDialogParser.g:5504:3: ()
            // InternalDialogParser.g:5505:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConstructExpressionAccess().getConstructExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Construct,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConstructExpressionAccess().getConstructKeyword_1());
              		
            }
            // InternalDialogParser.g:5515:3: ( (lv_subj_2_0= ruleSadlResource ) )
            // InternalDialogParser.g:5516:4: (lv_subj_2_0= ruleSadlResource )
            {
            // InternalDialogParser.g:5516:4: (lv_subj_2_0= ruleSadlResource )
            // InternalDialogParser.g:5517:5: lv_subj_2_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstructExpressionAccess().getSubjSadlResourceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_114);
            lv_subj_2_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
              					}
              					set(
              						current,
              						"subj",
              						lv_subj_2_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:5534:3: (otherlv_3= Comma )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==Comma) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalDialogParser.g:5535:4: otherlv_3= Comma
                    {
                    otherlv_3=(Token)match(input,Comma,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getConstructExpressionAccess().getCommaKeyword_3());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:5540:3: ( (lv_pred_4_0= ruleSadlResource ) )
            // InternalDialogParser.g:5541:4: (lv_pred_4_0= ruleSadlResource )
            {
            // InternalDialogParser.g:5541:4: (lv_pred_4_0= ruleSadlResource )
            // InternalDialogParser.g:5542:5: lv_pred_4_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstructExpressionAccess().getPredSadlResourceParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_114);
            lv_pred_4_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
              					}
              					set(
              						current,
              						"pred",
              						lv_pred_4_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:5559:3: (otherlv_5= Comma )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==Comma) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalDialogParser.g:5560:4: otherlv_5= Comma
                    {
                    otherlv_5=(Token)match(input,Comma,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getConstructExpressionAccess().getCommaKeyword_5());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:5565:3: ( (lv_obj_6_0= ruleSadlResource ) )
            // InternalDialogParser.g:5566:4: (lv_obj_6_0= ruleSadlResource )
            {
            // InternalDialogParser.g:5566:4: (lv_obj_6_0= ruleSadlResource )
            // InternalDialogParser.g:5567:5: lv_obj_6_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstructExpressionAccess().getObjSadlResourceParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_115);
            lv_obj_6_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
              					}
              					set(
              						current,
              						"obj",
              						lv_obj_6_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,Where,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getConstructExpressionAccess().getWhereKeyword_7());
              		
            }
            // InternalDialogParser.g:5588:3: ( (lv_whereExpression_8_0= ruleExpression ) )
            // InternalDialogParser.g:5589:4: (lv_whereExpression_8_0= ruleExpression )
            {
            // InternalDialogParser.g:5589:4: (lv_whereExpression_8_0= ruleExpression )
            // InternalDialogParser.g:5590:5: lv_whereExpression_8_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstructExpressionAccess().getWhereExpressionExpressionParserRuleCall_8_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_whereExpression_8_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
              					}
              					set(
              						current,
              						"whereExpression",
              						lv_whereExpression_8_0,
              						"com.ge.research.sadl.SADL.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstructExpression"


    // $ANTLR start "entryRuleAskExpression"
    // InternalDialogParser.g:5611:1: entryRuleAskExpression returns [EObject current=null] : iv_ruleAskExpression= ruleAskExpression EOF ;
    public final EObject entryRuleAskExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAskExpression = null;


        try {
            // InternalDialogParser.g:5611:54: (iv_ruleAskExpression= ruleAskExpression EOF )
            // InternalDialogParser.g:5612:2: iv_ruleAskExpression= ruleAskExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAskExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAskExpression=ruleAskExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAskExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAskExpression"


    // $ANTLR start "ruleAskExpression"
    // InternalDialogParser.g:5618:1: ruleAskExpression returns [EObject current=null] : ( () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) ) ) ;
    public final EObject ruleAskExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_whereExpression_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5624:2: ( ( () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) ) ) )
            // InternalDialogParser.g:5625:2: ( () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) ) )
            {
            // InternalDialogParser.g:5625:2: ( () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) ) )
            // InternalDialogParser.g:5626:3: () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) )
            {
            // InternalDialogParser.g:5626:3: ()
            // InternalDialogParser.g:5627:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAskExpressionAccess().getAskExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Ask_1,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAskExpressionAccess().getAskKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,Where,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAskExpressionAccess().getWhereKeyword_2());
              		
            }
            // InternalDialogParser.g:5641:3: ( (lv_whereExpression_3_0= ruleExpression ) )
            // InternalDialogParser.g:5642:4: (lv_whereExpression_3_0= ruleExpression )
            {
            // InternalDialogParser.g:5642:4: (lv_whereExpression_3_0= ruleExpression )
            // InternalDialogParser.g:5643:5: lv_whereExpression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAskExpressionAccess().getWhereExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_whereExpression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAskExpressionRule());
              					}
              					set(
              						current,
              						"whereExpression",
              						lv_whereExpression_3_0,
              						"com.ge.research.sadl.SADL.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAskExpression"


    // $ANTLR start "entryRuleUpdateExpression"
    // InternalDialogParser.g:5664:1: entryRuleUpdateExpression returns [EObject current=null] : iv_ruleUpdateExpression= ruleUpdateExpression EOF ;
    public final EObject entryRuleUpdateExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUpdateExpression = null;


        try {
            // InternalDialogParser.g:5664:57: (iv_ruleUpdateExpression= ruleUpdateExpression EOF )
            // InternalDialogParser.g:5665:2: iv_ruleUpdateExpression= ruleUpdateExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUpdateExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUpdateExpression=ruleUpdateExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUpdateExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUpdateExpression"


    // $ANTLR start "ruleUpdateExpression"
    // InternalDialogParser.g:5671:1: ruleUpdateExpression returns [EObject current=null] : ( () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )? ) ;
    public final EObject ruleUpdateExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_dData_2_0=null;
        Token otherlv_4=null;
        Token lv_iData_5_0=null;
        Token otherlv_7=null;
        EObject lv_deleteExpression_3_0 = null;

        EObject lv_insertExpression_6_0 = null;

        EObject lv_whereExpression_8_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5677:2: ( ( () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )? ) )
            // InternalDialogParser.g:5678:2: ( () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )? )
            {
            // InternalDialogParser.g:5678:2: ( () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )? )
            // InternalDialogParser.g:5679:3: () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )?
            {
            // InternalDialogParser.g:5679:3: ()
            // InternalDialogParser.g:5680:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getUpdateExpressionAccess().getUpdateExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:5686:3: (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==Delete) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalDialogParser.g:5687:4: otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) )
                    {
                    otherlv_1=(Token)match(input,Delete,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getUpdateExpressionAccess().getDeleteKeyword_1_0());
                      			
                    }
                    // InternalDialogParser.g:5691:4: ( (lv_dData_2_0= Data ) )?
                    int alt134=2;
                    int LA134_0 = input.LA(1);

                    if ( (LA134_0==Data) ) {
                        alt134=1;
                    }
                    switch (alt134) {
                        case 1 :
                            // InternalDialogParser.g:5692:5: (lv_dData_2_0= Data )
                            {
                            // InternalDialogParser.g:5692:5: (lv_dData_2_0= Data )
                            // InternalDialogParser.g:5693:6: lv_dData_2_0= Data
                            {
                            lv_dData_2_0=(Token)match(input,Data,FOLLOW_6); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_dData_2_0, grammarAccess.getUpdateExpressionAccess().getDDataDataKeyword_1_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUpdateExpressionRule());
                              						}
                              						setWithLastConsumed(current, "dData", lv_dData_2_0, "data");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:5705:4: ( (lv_deleteExpression_3_0= ruleExpression ) )
                    // InternalDialogParser.g:5706:5: (lv_deleteExpression_3_0= ruleExpression )
                    {
                    // InternalDialogParser.g:5706:5: (lv_deleteExpression_3_0= ruleExpression )
                    // InternalDialogParser.g:5707:6: lv_deleteExpression_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUpdateExpressionAccess().getDeleteExpressionExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_117);
                    lv_deleteExpression_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUpdateExpressionRule());
                      						}
                      						set(
                      							current,
                      							"deleteExpression",
                      							lv_deleteExpression_3_0,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:5725:3: (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==Insert) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalDialogParser.g:5726:4: otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) )
                    {
                    otherlv_4=(Token)match(input,Insert,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getUpdateExpressionAccess().getInsertKeyword_2_0());
                      			
                    }
                    // InternalDialogParser.g:5730:4: ( (lv_iData_5_0= Data ) )?
                    int alt136=2;
                    int LA136_0 = input.LA(1);

                    if ( (LA136_0==Data) ) {
                        alt136=1;
                    }
                    switch (alt136) {
                        case 1 :
                            // InternalDialogParser.g:5731:5: (lv_iData_5_0= Data )
                            {
                            // InternalDialogParser.g:5731:5: (lv_iData_5_0= Data )
                            // InternalDialogParser.g:5732:6: lv_iData_5_0= Data
                            {
                            lv_iData_5_0=(Token)match(input,Data,FOLLOW_6); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_iData_5_0, grammarAccess.getUpdateExpressionAccess().getIDataDataKeyword_2_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUpdateExpressionRule());
                              						}
                              						setWithLastConsumed(current, "iData", lv_iData_5_0, "data");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:5744:4: ( (lv_insertExpression_6_0= ruleExpression ) )
                    // InternalDialogParser.g:5745:5: (lv_insertExpression_6_0= ruleExpression )
                    {
                    // InternalDialogParser.g:5745:5: (lv_insertExpression_6_0= ruleExpression )
                    // InternalDialogParser.g:5746:6: lv_insertExpression_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUpdateExpressionAccess().getInsertExpressionExpressionParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_31);
                    lv_insertExpression_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUpdateExpressionRule());
                      						}
                      						set(
                      							current,
                      							"insertExpression",
                      							lv_insertExpression_6_0,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:5764:3: (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==Where) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalDialogParser.g:5765:4: otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) )
                    {
                    otherlv_7=(Token)match(input,Where,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getUpdateExpressionAccess().getWhereKeyword_3_0());
                      			
                    }
                    // InternalDialogParser.g:5769:4: ( (lv_whereExpression_8_0= ruleExpression ) )
                    // InternalDialogParser.g:5770:5: (lv_whereExpression_8_0= ruleExpression )
                    {
                    // InternalDialogParser.g:5770:5: (lv_whereExpression_8_0= ruleExpression )
                    // InternalDialogParser.g:5771:6: lv_whereExpression_8_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUpdateExpressionAccess().getWhereExpressionExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_whereExpression_8_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUpdateExpressionRule());
                      						}
                      						set(
                      							current,
                      							"whereExpression",
                      							lv_whereExpression_8_0,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUpdateExpression"


    // $ANTLR start "entryRuleExpression"
    // InternalDialogParser.g:5793:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalDialogParser.g:5793:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalDialogParser.g:5794:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalDialogParser.g:5800:1: ruleExpression returns [EObject current=null] : this_SelectExpression_0= norm3_SelectExpression ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_SelectExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5806:2: (this_SelectExpression_0= norm3_SelectExpression )
            // InternalDialogParser.g:5807:2: this_SelectExpression_0= norm3_SelectExpression
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getSelectExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_SelectExpression_0=norm3_SelectExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SelectExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleNestedExpression"
    // InternalDialogParser.g:5818:1: entryRuleNestedExpression returns [EObject current=null] : iv_ruleNestedExpression= ruleNestedExpression EOF ;
    public final EObject entryRuleNestedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNestedExpression = null;


        try {
            // InternalDialogParser.g:5818:57: (iv_ruleNestedExpression= ruleNestedExpression EOF )
            // InternalDialogParser.g:5819:2: iv_ruleNestedExpression= ruleNestedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNestedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNestedExpression=ruleNestedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNestedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNestedExpression"


    // $ANTLR start "ruleNestedExpression"
    // InternalDialogParser.g:5825:1: ruleNestedExpression returns [EObject current=null] : this_SelectExpression_0= norm1_SelectExpression ;
    public final EObject ruleNestedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_SelectExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5831:2: (this_SelectExpression_0= norm1_SelectExpression )
            // InternalDialogParser.g:5832:2: this_SelectExpression_0= norm1_SelectExpression
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getNestedExpressionAccess().getSelectExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_SelectExpression_0=norm1_SelectExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SelectExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNestedExpression"


    // $ANTLR start "entryRuleSelectExpression"
    // InternalDialogParser.g:5843:1: entryRuleSelectExpression returns [EObject current=null] : iv_ruleSelectExpression= ruleSelectExpression EOF ;
    public final EObject entryRuleSelectExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelectExpression = null;


        try {
            // InternalDialogParser.g:5843:57: (iv_ruleSelectExpression= ruleSelectExpression EOF )
            // InternalDialogParser.g:5844:2: iv_ruleSelectExpression= ruleSelectExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelectExpression=ruleSelectExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelectExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelectExpression"


    // $ANTLR start "ruleSelectExpression"
    // InternalDialogParser.g:5850:1: ruleSelectExpression returns [EObject current=null] : ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= ruleExpressionParameterized ) ;
    public final EObject ruleSelectExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_distinct_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_orderby_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_selectFrom_4_0 = null;

        EObject lv_selectFrom_6_0 = null;

        EObject lv_whereExpression_8_0 = null;

        EObject lv_orderList_11_0 = null;

        EObject lv_orderList_13_0 = null;

        EObject this_ExpressionParameterized_14 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5856:2: ( ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= ruleExpressionParameterized ) )
            // InternalDialogParser.g:5857:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= ruleExpressionParameterized )
            {
            // InternalDialogParser.g:5857:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= ruleExpressionParameterized )
            int alt146=2;
            int LA146_0 = input.LA(1);

            if ( (LA146_0==Select) && (synpred3_InternalDialogParser())) {
                alt146=1;
            }
            else if ( (LA146_0==Another||LA146_0==Element||LA146_0==Sublist||LA146_0==Length||(LA146_0>=Count && LA146_0<=False)||LA146_0==First||(LA146_0>=Index && LA146_0<=Known)||LA146_0==There||LA146_0==Value||LA146_0==None||LA146_0==Last||LA146_0==Only||LA146_0==Some||(LA146_0>=True && LA146_0<=Type)||LA146_0==The||LA146_0==Any||LA146_0==Not||LA146_0==The_1||LA146_0==HyphenMinusHyphenMinus||(LA146_0>=An && LA146_0<=An_1)||LA146_0==ExclamationMark||LA146_0==LeftParenthesis||LA146_0==HyphenMinus||LA146_0==A||LA146_0==LeftSquareBracket||(LA146_0>=A_1 && LA146_0<=LeftCurlyBracket)||LA146_0==RULE_NUMBER||(LA146_0>=RULE_ID && LA146_0<=RULE_STRING)) ) {
                alt146=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 146, 0, input);

                throw nvae;
            }
            switch (alt146) {
                case 1 :
                    // InternalDialogParser.g:5858:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    {
                    // InternalDialogParser.g:5858:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    // InternalDialogParser.g:5859:4: ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    {
                    // InternalDialogParser.g:5860:4: ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    // InternalDialogParser.g:5861:5: () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    {
                    // InternalDialogParser.g:5861:5: ()
                    // InternalDialogParser.g:5862:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,Select,FOLLOW_118); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
                      				
                    }
                    // InternalDialogParser.g:5872:5: ( (lv_distinct_2_0= Distinct ) )?
                    int alt139=2;
                    int LA139_0 = input.LA(1);

                    if ( (LA139_0==Distinct) ) {
                        alt139=1;
                    }
                    switch (alt139) {
                        case 1 :
                            // InternalDialogParser.g:5873:6: (lv_distinct_2_0= Distinct )
                            {
                            // InternalDialogParser.g:5873:6: (lv_distinct_2_0= Distinct )
                            // InternalDialogParser.g:5874:7: lv_distinct_2_0= Distinct
                            {
                            lv_distinct_2_0=(Token)match(input,Distinct,FOLLOW_119); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSelectExpressionRule());
                              							}
                              							setWithLastConsumed(current, "distinct", true, "distinct");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:5886:5: (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) )
                    int alt142=2;
                    int LA142_0 = input.LA(1);

                    if ( (LA142_0==Asterisk) ) {
                        alt142=1;
                    }
                    else if ( ((LA142_0>=RULE_ID && LA142_0<=RULE_QNAME_TERMINAL)) ) {
                        alt142=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 142, 0, input);

                        throw nvae;
                    }
                    switch (alt142) {
                        case 1 :
                            // InternalDialogParser.g:5887:6: otherlv_3= Asterisk
                            {
                            otherlv_3=(Token)match(input,Asterisk,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:5892:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            {
                            // InternalDialogParser.g:5892:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            // InternalDialogParser.g:5893:7: ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            {
                            // InternalDialogParser.g:5893:7: ( (lv_selectFrom_4_0= ruleSadlResource ) )
                            // InternalDialogParser.g:5894:8: (lv_selectFrom_4_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:5894:8: (lv_selectFrom_4_0= ruleSadlResource )
                            // InternalDialogParser.g:5895:9: lv_selectFrom_4_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
                              								
                            }
                            pushFollow(FOLLOW_120);
                            lv_selectFrom_4_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              									}
                              									add(
                              										current,
                              										"selectFrom",
                              										lv_selectFrom_4_0,
                              										"com.ge.research.sadl.SADL.SadlResource");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalDialogParser.g:5912:7: ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            loop141:
                            do {
                                int alt141=2;
                                int LA141_0 = input.LA(1);

                                if ( (LA141_0==Comma||(LA141_0>=RULE_ID && LA141_0<=RULE_QNAME_TERMINAL)) ) {
                                    alt141=1;
                                }


                                switch (alt141) {
                            	case 1 :
                            	    // InternalDialogParser.g:5913:8: (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    {
                            	    // InternalDialogParser.g:5913:8: (otherlv_5= Comma )?
                            	    int alt140=2;
                            	    int LA140_0 = input.LA(1);

                            	    if ( (LA140_0==Comma) ) {
                            	        alt140=1;
                            	    }
                            	    switch (alt140) {
                            	        case 1 :
                            	            // InternalDialogParser.g:5914:9: otherlv_5= Comma
                            	            {
                            	            otherlv_5=(Token)match(input,Comma,FOLLOW_9); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:5919:8: ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:5920:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:5920:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:5921:10: lv_selectFrom_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_120);
                            	    lv_selectFrom_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"selectFrom",
                            	      											lv_selectFrom_6_0,
                            	      											"com.ge.research.sadl.SADL.SadlResource");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop141;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,Where,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
                      				
                    }
                    // InternalDialogParser.g:5945:5: ( (lv_whereExpression_8_0= ruleExpressionParameterized ) )
                    // InternalDialogParser.g:5946:6: (lv_whereExpression_8_0= ruleExpressionParameterized )
                    {
                    // InternalDialogParser.g:5946:6: (lv_whereExpression_8_0= ruleExpressionParameterized )
                    // InternalDialogParser.g:5947:7: lv_whereExpression_8_0= ruleExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
                      						
                    }
                    pushFollow(FOLLOW_122);
                    lv_whereExpression_8_0=ruleExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                      							}
                      							set(
                      								current,
                      								"whereExpression",
                      								lv_whereExpression_8_0,
                      								"com.ge.research.sadl.SADL.ExpressionParameterized");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:5964:5: ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    int alt145=2;
                    int LA145_0 = input.LA(1);

                    if ( (LA145_0==Order) ) {
                        alt145=1;
                    }
                    switch (alt145) {
                        case 1 :
                            // InternalDialogParser.g:5965:6: ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            {
                            // InternalDialogParser.g:5965:6: ( (lv_orderby_9_0= Order ) )
                            // InternalDialogParser.g:5966:7: (lv_orderby_9_0= Order )
                            {
                            // InternalDialogParser.g:5966:7: (lv_orderby_9_0= Order )
                            // InternalDialogParser.g:5967:8: lv_orderby_9_0= Order
                            {
                            lv_orderby_9_0=(Token)match(input,Order,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSelectExpressionRule());
                              								}
                              								setWithLastConsumed(current, "orderby", lv_orderby_9_0, "order");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,By,FOLLOW_123); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
                              					
                            }
                            // InternalDialogParser.g:5983:6: ( (lv_orderList_11_0= ruleOrderElement ) )
                            // InternalDialogParser.g:5984:7: (lv_orderList_11_0= ruleOrderElement )
                            {
                            // InternalDialogParser.g:5984:7: (lv_orderList_11_0= ruleOrderElement )
                            // InternalDialogParser.g:5985:8: lv_orderList_11_0= ruleOrderElement
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
                              							
                            }
                            pushFollow(FOLLOW_124);
                            lv_orderList_11_0=ruleOrderElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              								}
                              								add(
                              									current,
                              									"orderList",
                              									lv_orderList_11_0,
                              									"com.ge.research.sadl.SADL.OrderElement");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:6002:6: ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            loop144:
                            do {
                                int alt144=2;
                                int LA144_0 = input.LA(1);

                                if ( (LA144_0==Comma) && (synpred4_InternalDialogParser())) {
                                    alt144=1;
                                }
                                else if ( (LA144_0==Asc) && (synpred4_InternalDialogParser())) {
                                    alt144=1;
                                }
                                else if ( (LA144_0==Desc) && (synpred4_InternalDialogParser())) {
                                    alt144=1;
                                }
                                else if ( (LA144_0==RULE_QNAME_TERMINAL) && (synpred4_InternalDialogParser())) {
                                    alt144=1;
                                }
                                else if ( (LA144_0==RULE_ID) && (synpred4_InternalDialogParser())) {
                                    alt144=1;
                                }


                                switch (alt144) {
                            	case 1 :
                            	    // InternalDialogParser.g:6003:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    {
                            	    // InternalDialogParser.g:6004:7: ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    // InternalDialogParser.g:6005:8: (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    {
                            	    // InternalDialogParser.g:6005:8: (otherlv_12= Comma )?
                            	    int alt143=2;
                            	    int LA143_0 = input.LA(1);

                            	    if ( (LA143_0==Comma) ) {
                            	        alt143=1;
                            	    }
                            	    switch (alt143) {
                            	        case 1 :
                            	            // InternalDialogParser.g:6006:9: otherlv_12= Comma
                            	            {
                            	            otherlv_12=(Token)match(input,Comma,FOLLOW_123); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:6011:8: ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    // InternalDialogParser.g:6012:9: (lv_orderList_13_0= ruleOrderElement )
                            	    {
                            	    // InternalDialogParser.g:6012:9: (lv_orderList_13_0= ruleOrderElement )
                            	    // InternalDialogParser.g:6013:10: lv_orderList_13_0= ruleOrderElement
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_124);
                            	    lv_orderList_13_0=ruleOrderElement();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"orderList",
                            	      											lv_orderList_13_0,
                            	      											"com.ge.research.sadl.SADL.OrderElement");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop144;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6036:3: this_ExpressionParameterized_14= ruleExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionParameterized_14=ruleExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionParameterized_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelectExpression"


    // $ANTLR start "norm1_SelectExpression"
    // InternalDialogParser.g:6049:1: norm1_SelectExpression returns [EObject current=null] : ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm1_ExpressionParameterized ) ;
    public final EObject norm1_SelectExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_distinct_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_orderby_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_selectFrom_4_0 = null;

        EObject lv_selectFrom_6_0 = null;

        EObject lv_whereExpression_8_0 = null;

        EObject lv_orderList_11_0 = null;

        EObject lv_orderList_13_0 = null;

        EObject this_ExpressionParameterized_14 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6055:2: ( ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm1_ExpressionParameterized ) )
            // InternalDialogParser.g:6056:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm1_ExpressionParameterized )
            {
            // InternalDialogParser.g:6056:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm1_ExpressionParameterized )
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==Select) && (synpred5_InternalDialogParser())) {
                alt154=1;
            }
            else if ( (LA154_0==Another||LA154_0==Element||LA154_0==Sublist||LA154_0==Length||(LA154_0>=Count && LA154_0<=False)||LA154_0==First||(LA154_0>=Index && LA154_0<=Known)||LA154_0==There||LA154_0==Value||LA154_0==None||LA154_0==Last||LA154_0==Only||LA154_0==Some||(LA154_0>=True && LA154_0<=Type)||LA154_0==The||LA154_0==Any||LA154_0==Not||LA154_0==The_1||LA154_0==HyphenMinusHyphenMinus||(LA154_0>=An && LA154_0<=An_1)||LA154_0==ExclamationMark||LA154_0==LeftParenthesis||LA154_0==HyphenMinus||LA154_0==A||LA154_0==LeftSquareBracket||(LA154_0>=A_1 && LA154_0<=LeftCurlyBracket)||LA154_0==RULE_NUMBER||(LA154_0>=RULE_ID && LA154_0<=RULE_STRING)) ) {
                alt154=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 154, 0, input);

                throw nvae;
            }
            switch (alt154) {
                case 1 :
                    // InternalDialogParser.g:6057:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    {
                    // InternalDialogParser.g:6057:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    // InternalDialogParser.g:6058:4: ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    {
                    // InternalDialogParser.g:6059:4: ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    // InternalDialogParser.g:6060:5: () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    {
                    // InternalDialogParser.g:6060:5: ()
                    // InternalDialogParser.g:6061:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,Select,FOLLOW_118); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
                      				
                    }
                    // InternalDialogParser.g:6071:5: ( (lv_distinct_2_0= Distinct ) )?
                    int alt147=2;
                    int LA147_0 = input.LA(1);

                    if ( (LA147_0==Distinct) ) {
                        alt147=1;
                    }
                    switch (alt147) {
                        case 1 :
                            // InternalDialogParser.g:6072:6: (lv_distinct_2_0= Distinct )
                            {
                            // InternalDialogParser.g:6072:6: (lv_distinct_2_0= Distinct )
                            // InternalDialogParser.g:6073:7: lv_distinct_2_0= Distinct
                            {
                            lv_distinct_2_0=(Token)match(input,Distinct,FOLLOW_119); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSelectExpressionRule());
                              							}
                              							setWithLastConsumed(current, "distinct", true, "distinct");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:6085:5: (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) )
                    int alt150=2;
                    int LA150_0 = input.LA(1);

                    if ( (LA150_0==Asterisk) ) {
                        alt150=1;
                    }
                    else if ( ((LA150_0>=RULE_ID && LA150_0<=RULE_QNAME_TERMINAL)) ) {
                        alt150=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 150, 0, input);

                        throw nvae;
                    }
                    switch (alt150) {
                        case 1 :
                            // InternalDialogParser.g:6086:6: otherlv_3= Asterisk
                            {
                            otherlv_3=(Token)match(input,Asterisk,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:6091:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            {
                            // InternalDialogParser.g:6091:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            // InternalDialogParser.g:6092:7: ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            {
                            // InternalDialogParser.g:6092:7: ( (lv_selectFrom_4_0= ruleSadlResource ) )
                            // InternalDialogParser.g:6093:8: (lv_selectFrom_4_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:6093:8: (lv_selectFrom_4_0= ruleSadlResource )
                            // InternalDialogParser.g:6094:9: lv_selectFrom_4_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
                              								
                            }
                            pushFollow(FOLLOW_120);
                            lv_selectFrom_4_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              									}
                              									add(
                              										current,
                              										"selectFrom",
                              										lv_selectFrom_4_0,
                              										"com.ge.research.sadl.SADL.SadlResource");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalDialogParser.g:6111:7: ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            loop149:
                            do {
                                int alt149=2;
                                int LA149_0 = input.LA(1);

                                if ( (LA149_0==Comma||(LA149_0>=RULE_ID && LA149_0<=RULE_QNAME_TERMINAL)) ) {
                                    alt149=1;
                                }


                                switch (alt149) {
                            	case 1 :
                            	    // InternalDialogParser.g:6112:8: (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    {
                            	    // InternalDialogParser.g:6112:8: (otherlv_5= Comma )?
                            	    int alt148=2;
                            	    int LA148_0 = input.LA(1);

                            	    if ( (LA148_0==Comma) ) {
                            	        alt148=1;
                            	    }
                            	    switch (alt148) {
                            	        case 1 :
                            	            // InternalDialogParser.g:6113:9: otherlv_5= Comma
                            	            {
                            	            otherlv_5=(Token)match(input,Comma,FOLLOW_9); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:6118:8: ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:6119:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:6119:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:6120:10: lv_selectFrom_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_120);
                            	    lv_selectFrom_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"selectFrom",
                            	      											lv_selectFrom_6_0,
                            	      											"com.ge.research.sadl.SADL.SadlResource");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop149;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,Where,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
                      				
                    }
                    // InternalDialogParser.g:6144:5: ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) )
                    // InternalDialogParser.g:6145:6: (lv_whereExpression_8_0= norm1_ExpressionParameterized )
                    {
                    // InternalDialogParser.g:6145:6: (lv_whereExpression_8_0= norm1_ExpressionParameterized )
                    // InternalDialogParser.g:6146:7: lv_whereExpression_8_0= norm1_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
                      						
                    }
                    pushFollow(FOLLOW_122);
                    lv_whereExpression_8_0=norm1_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                      							}
                      							set(
                      								current,
                      								"whereExpression",
                      								lv_whereExpression_8_0,
                      								"com.ge.research.sadl.SADL.ExpressionParameterized");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:6163:5: ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    int alt153=2;
                    int LA153_0 = input.LA(1);

                    if ( (LA153_0==Order) ) {
                        alt153=1;
                    }
                    switch (alt153) {
                        case 1 :
                            // InternalDialogParser.g:6164:6: ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            {
                            // InternalDialogParser.g:6164:6: ( (lv_orderby_9_0= Order ) )
                            // InternalDialogParser.g:6165:7: (lv_orderby_9_0= Order )
                            {
                            // InternalDialogParser.g:6165:7: (lv_orderby_9_0= Order )
                            // InternalDialogParser.g:6166:8: lv_orderby_9_0= Order
                            {
                            lv_orderby_9_0=(Token)match(input,Order,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSelectExpressionRule());
                              								}
                              								setWithLastConsumed(current, "orderby", lv_orderby_9_0, "order");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,By,FOLLOW_123); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
                              					
                            }
                            // InternalDialogParser.g:6182:6: ( (lv_orderList_11_0= ruleOrderElement ) )
                            // InternalDialogParser.g:6183:7: (lv_orderList_11_0= ruleOrderElement )
                            {
                            // InternalDialogParser.g:6183:7: (lv_orderList_11_0= ruleOrderElement )
                            // InternalDialogParser.g:6184:8: lv_orderList_11_0= ruleOrderElement
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
                              							
                            }
                            pushFollow(FOLLOW_124);
                            lv_orderList_11_0=ruleOrderElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              								}
                              								add(
                              									current,
                              									"orderList",
                              									lv_orderList_11_0,
                              									"com.ge.research.sadl.SADL.OrderElement");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:6201:6: ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            loop152:
                            do {
                                int alt152=2;
                                int LA152_0 = input.LA(1);

                                if ( (LA152_0==Comma) ) {
                                    int LA152_2 = input.LA(2);

                                    if ( (LA152_2==RULE_QNAME_TERMINAL) ) {
                                        int LA152_7 = input.LA(3);

                                        if ( (synpred6_InternalDialogParser()) ) {
                                            alt152=1;
                                        }


                                    }
                                    else if ( (LA152_2==RULE_ID) ) {
                                        int LA152_8 = input.LA(3);

                                        if ( (synpred6_InternalDialogParser()) ) {
                                            alt152=1;
                                        }


                                    }
                                    else if ( (LA152_2==Asc) && (synpred6_InternalDialogParser())) {
                                        alt152=1;
                                    }
                                    else if ( (LA152_2==Desc) && (synpred6_InternalDialogParser())) {
                                        alt152=1;
                                    }


                                }
                                else if ( (LA152_0==Asc) && (synpred6_InternalDialogParser())) {
                                    alt152=1;
                                }
                                else if ( (LA152_0==Desc) && (synpred6_InternalDialogParser())) {
                                    alt152=1;
                                }
                                else if ( (LA152_0==RULE_QNAME_TERMINAL) && (synpred6_InternalDialogParser())) {
                                    alt152=1;
                                }
                                else if ( (LA152_0==RULE_ID) && (synpred6_InternalDialogParser())) {
                                    alt152=1;
                                }


                                switch (alt152) {
                            	case 1 :
                            	    // InternalDialogParser.g:6202:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    {
                            	    // InternalDialogParser.g:6203:7: ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    // InternalDialogParser.g:6204:8: (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    {
                            	    // InternalDialogParser.g:6204:8: (otherlv_12= Comma )?
                            	    int alt151=2;
                            	    int LA151_0 = input.LA(1);

                            	    if ( (LA151_0==Comma) ) {
                            	        alt151=1;
                            	    }
                            	    switch (alt151) {
                            	        case 1 :
                            	            // InternalDialogParser.g:6205:9: otherlv_12= Comma
                            	            {
                            	            otherlv_12=(Token)match(input,Comma,FOLLOW_123); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:6210:8: ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    // InternalDialogParser.g:6211:9: (lv_orderList_13_0= ruleOrderElement )
                            	    {
                            	    // InternalDialogParser.g:6211:9: (lv_orderList_13_0= ruleOrderElement )
                            	    // InternalDialogParser.g:6212:10: lv_orderList_13_0= ruleOrderElement
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_124);
                            	    lv_orderList_13_0=ruleOrderElement();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"orderList",
                            	      											lv_orderList_13_0,
                            	      											"com.ge.research.sadl.SADL.OrderElement");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop152;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6235:3: this_ExpressionParameterized_14= norm1_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionParameterized_14=norm1_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionParameterized_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_SelectExpression"


    // $ANTLR start "norm2_SelectExpression"
    // InternalDialogParser.g:6248:1: norm2_SelectExpression returns [EObject current=null] : ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm2_ExpressionParameterized ) ;
    public final EObject norm2_SelectExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_distinct_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_orderby_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_selectFrom_4_0 = null;

        EObject lv_selectFrom_6_0 = null;

        EObject lv_whereExpression_8_0 = null;

        EObject lv_orderList_11_0 = null;

        EObject lv_orderList_13_0 = null;

        EObject this_ExpressionParameterized_14 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6254:2: ( ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm2_ExpressionParameterized ) )
            // InternalDialogParser.g:6255:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm2_ExpressionParameterized )
            {
            // InternalDialogParser.g:6255:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm2_ExpressionParameterized )
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==Select) && (synpred7_InternalDialogParser())) {
                alt162=1;
            }
            else if ( (LA162_0==Another||LA162_0==Element||LA162_0==Sublist||LA162_0==Length||(LA162_0>=Count && LA162_0<=False)||LA162_0==First||(LA162_0>=Index && LA162_0<=Known)||LA162_0==There||LA162_0==Value||LA162_0==None||LA162_0==Last||LA162_0==Only||LA162_0==Some||(LA162_0>=True && LA162_0<=Type)||LA162_0==The||LA162_0==Any||LA162_0==Not||LA162_0==The_1||LA162_0==HyphenMinusHyphenMinus||(LA162_0>=An && LA162_0<=An_1)||LA162_0==ExclamationMark||LA162_0==LeftParenthesis||LA162_0==HyphenMinus||LA162_0==A||LA162_0==LeftSquareBracket||(LA162_0>=A_1 && LA162_0<=LeftCurlyBracket)||LA162_0==RULE_NUMBER||(LA162_0>=RULE_ID && LA162_0<=RULE_STRING)) ) {
                alt162=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 162, 0, input);

                throw nvae;
            }
            switch (alt162) {
                case 1 :
                    // InternalDialogParser.g:6256:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    {
                    // InternalDialogParser.g:6256:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    // InternalDialogParser.g:6257:4: ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    {
                    // InternalDialogParser.g:6258:4: ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    // InternalDialogParser.g:6259:5: () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    {
                    // InternalDialogParser.g:6259:5: ()
                    // InternalDialogParser.g:6260:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,Select,FOLLOW_118); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
                      				
                    }
                    // InternalDialogParser.g:6270:5: ( (lv_distinct_2_0= Distinct ) )?
                    int alt155=2;
                    int LA155_0 = input.LA(1);

                    if ( (LA155_0==Distinct) ) {
                        alt155=1;
                    }
                    switch (alt155) {
                        case 1 :
                            // InternalDialogParser.g:6271:6: (lv_distinct_2_0= Distinct )
                            {
                            // InternalDialogParser.g:6271:6: (lv_distinct_2_0= Distinct )
                            // InternalDialogParser.g:6272:7: lv_distinct_2_0= Distinct
                            {
                            lv_distinct_2_0=(Token)match(input,Distinct,FOLLOW_119); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSelectExpressionRule());
                              							}
                              							setWithLastConsumed(current, "distinct", true, "distinct");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:6284:5: (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) )
                    int alt158=2;
                    int LA158_0 = input.LA(1);

                    if ( (LA158_0==Asterisk) ) {
                        alt158=1;
                    }
                    else if ( ((LA158_0>=RULE_ID && LA158_0<=RULE_QNAME_TERMINAL)) ) {
                        alt158=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 158, 0, input);

                        throw nvae;
                    }
                    switch (alt158) {
                        case 1 :
                            // InternalDialogParser.g:6285:6: otherlv_3= Asterisk
                            {
                            otherlv_3=(Token)match(input,Asterisk,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:6290:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            {
                            // InternalDialogParser.g:6290:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            // InternalDialogParser.g:6291:7: ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            {
                            // InternalDialogParser.g:6291:7: ( (lv_selectFrom_4_0= ruleSadlResource ) )
                            // InternalDialogParser.g:6292:8: (lv_selectFrom_4_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:6292:8: (lv_selectFrom_4_0= ruleSadlResource )
                            // InternalDialogParser.g:6293:9: lv_selectFrom_4_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
                              								
                            }
                            pushFollow(FOLLOW_120);
                            lv_selectFrom_4_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              									}
                              									add(
                              										current,
                              										"selectFrom",
                              										lv_selectFrom_4_0,
                              										"com.ge.research.sadl.SADL.SadlResource");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalDialogParser.g:6310:7: ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            loop157:
                            do {
                                int alt157=2;
                                int LA157_0 = input.LA(1);

                                if ( (LA157_0==Comma||(LA157_0>=RULE_ID && LA157_0<=RULE_QNAME_TERMINAL)) ) {
                                    alt157=1;
                                }


                                switch (alt157) {
                            	case 1 :
                            	    // InternalDialogParser.g:6311:8: (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    {
                            	    // InternalDialogParser.g:6311:8: (otherlv_5= Comma )?
                            	    int alt156=2;
                            	    int LA156_0 = input.LA(1);

                            	    if ( (LA156_0==Comma) ) {
                            	        alt156=1;
                            	    }
                            	    switch (alt156) {
                            	        case 1 :
                            	            // InternalDialogParser.g:6312:9: otherlv_5= Comma
                            	            {
                            	            otherlv_5=(Token)match(input,Comma,FOLLOW_9); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:6317:8: ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:6318:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:6318:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:6319:10: lv_selectFrom_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_120);
                            	    lv_selectFrom_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"selectFrom",
                            	      											lv_selectFrom_6_0,
                            	      											"com.ge.research.sadl.SADL.SadlResource");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop157;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,Where,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
                      				
                    }
                    // InternalDialogParser.g:6343:5: ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) )
                    // InternalDialogParser.g:6344:6: (lv_whereExpression_8_0= norm2_ExpressionParameterized )
                    {
                    // InternalDialogParser.g:6344:6: (lv_whereExpression_8_0= norm2_ExpressionParameterized )
                    // InternalDialogParser.g:6345:7: lv_whereExpression_8_0= norm2_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
                      						
                    }
                    pushFollow(FOLLOW_122);
                    lv_whereExpression_8_0=norm2_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                      							}
                      							set(
                      								current,
                      								"whereExpression",
                      								lv_whereExpression_8_0,
                      								"com.ge.research.sadl.SADL.ExpressionParameterized");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:6362:5: ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    int alt161=2;
                    int LA161_0 = input.LA(1);

                    if ( (LA161_0==Order) ) {
                        alt161=1;
                    }
                    switch (alt161) {
                        case 1 :
                            // InternalDialogParser.g:6363:6: ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            {
                            // InternalDialogParser.g:6363:6: ( (lv_orderby_9_0= Order ) )
                            // InternalDialogParser.g:6364:7: (lv_orderby_9_0= Order )
                            {
                            // InternalDialogParser.g:6364:7: (lv_orderby_9_0= Order )
                            // InternalDialogParser.g:6365:8: lv_orderby_9_0= Order
                            {
                            lv_orderby_9_0=(Token)match(input,Order,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSelectExpressionRule());
                              								}
                              								setWithLastConsumed(current, "orderby", lv_orderby_9_0, "order");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,By,FOLLOW_123); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
                              					
                            }
                            // InternalDialogParser.g:6381:6: ( (lv_orderList_11_0= ruleOrderElement ) )
                            // InternalDialogParser.g:6382:7: (lv_orderList_11_0= ruleOrderElement )
                            {
                            // InternalDialogParser.g:6382:7: (lv_orderList_11_0= ruleOrderElement )
                            // InternalDialogParser.g:6383:8: lv_orderList_11_0= ruleOrderElement
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
                              							
                            }
                            pushFollow(FOLLOW_124);
                            lv_orderList_11_0=ruleOrderElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              								}
                              								add(
                              									current,
                              									"orderList",
                              									lv_orderList_11_0,
                              									"com.ge.research.sadl.SADL.OrderElement");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:6400:6: ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            loop160:
                            do {
                                int alt160=2;
                                int LA160_0 = input.LA(1);

                                if ( (LA160_0==Comma) && (synpred8_InternalDialogParser())) {
                                    alt160=1;
                                }
                                else if ( (LA160_0==Asc) && (synpred8_InternalDialogParser())) {
                                    alt160=1;
                                }
                                else if ( (LA160_0==Desc) && (synpred8_InternalDialogParser())) {
                                    alt160=1;
                                }
                                else if ( (LA160_0==RULE_QNAME_TERMINAL) && (synpred8_InternalDialogParser())) {
                                    alt160=1;
                                }
                                else if ( (LA160_0==RULE_ID) && (synpred8_InternalDialogParser())) {
                                    alt160=1;
                                }


                                switch (alt160) {
                            	case 1 :
                            	    // InternalDialogParser.g:6401:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    {
                            	    // InternalDialogParser.g:6402:7: ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    // InternalDialogParser.g:6403:8: (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    {
                            	    // InternalDialogParser.g:6403:8: (otherlv_12= Comma )?
                            	    int alt159=2;
                            	    int LA159_0 = input.LA(1);

                            	    if ( (LA159_0==Comma) ) {
                            	        alt159=1;
                            	    }
                            	    switch (alt159) {
                            	        case 1 :
                            	            // InternalDialogParser.g:6404:9: otherlv_12= Comma
                            	            {
                            	            otherlv_12=(Token)match(input,Comma,FOLLOW_123); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:6409:8: ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    // InternalDialogParser.g:6410:9: (lv_orderList_13_0= ruleOrderElement )
                            	    {
                            	    // InternalDialogParser.g:6410:9: (lv_orderList_13_0= ruleOrderElement )
                            	    // InternalDialogParser.g:6411:10: lv_orderList_13_0= ruleOrderElement
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_124);
                            	    lv_orderList_13_0=ruleOrderElement();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"orderList",
                            	      											lv_orderList_13_0,
                            	      											"com.ge.research.sadl.SADL.OrderElement");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop160;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6434:3: this_ExpressionParameterized_14= norm2_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionParameterized_14=norm2_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionParameterized_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_SelectExpression"


    // $ANTLR start "norm3_SelectExpression"
    // InternalDialogParser.g:6447:1: norm3_SelectExpression returns [EObject current=null] : ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm3_ExpressionParameterized ) ;
    public final EObject norm3_SelectExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_distinct_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_orderby_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_selectFrom_4_0 = null;

        EObject lv_selectFrom_6_0 = null;

        EObject lv_whereExpression_8_0 = null;

        EObject lv_orderList_11_0 = null;

        EObject lv_orderList_13_0 = null;

        EObject this_ExpressionParameterized_14 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6453:2: ( ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm3_ExpressionParameterized ) )
            // InternalDialogParser.g:6454:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm3_ExpressionParameterized )
            {
            // InternalDialogParser.g:6454:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm3_ExpressionParameterized )
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==Select) && (synpred9_InternalDialogParser())) {
                alt170=1;
            }
            else if ( (LA170_0==Another||LA170_0==Element||LA170_0==Sublist||LA170_0==Length||(LA170_0>=Count && LA170_0<=False)||LA170_0==First||(LA170_0>=Index && LA170_0<=Known)||LA170_0==There||LA170_0==Value||LA170_0==None||LA170_0==Last||LA170_0==Only||LA170_0==Some||(LA170_0>=True && LA170_0<=Type)||LA170_0==The||LA170_0==Any||LA170_0==Not||LA170_0==The_1||LA170_0==HyphenMinusHyphenMinus||(LA170_0>=An && LA170_0<=An_1)||LA170_0==ExclamationMark||LA170_0==LeftParenthesis||LA170_0==HyphenMinus||LA170_0==A||LA170_0==LeftSquareBracket||(LA170_0>=A_1 && LA170_0<=LeftCurlyBracket)||LA170_0==RULE_NUMBER||(LA170_0>=RULE_ID && LA170_0<=RULE_STRING)) ) {
                alt170=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 170, 0, input);

                throw nvae;
            }
            switch (alt170) {
                case 1 :
                    // InternalDialogParser.g:6455:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    {
                    // InternalDialogParser.g:6455:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    // InternalDialogParser.g:6456:4: ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    {
                    // InternalDialogParser.g:6457:4: ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    // InternalDialogParser.g:6458:5: () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    {
                    // InternalDialogParser.g:6458:5: ()
                    // InternalDialogParser.g:6459:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,Select,FOLLOW_118); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
                      				
                    }
                    // InternalDialogParser.g:6469:5: ( (lv_distinct_2_0= Distinct ) )?
                    int alt163=2;
                    int LA163_0 = input.LA(1);

                    if ( (LA163_0==Distinct) ) {
                        alt163=1;
                    }
                    switch (alt163) {
                        case 1 :
                            // InternalDialogParser.g:6470:6: (lv_distinct_2_0= Distinct )
                            {
                            // InternalDialogParser.g:6470:6: (lv_distinct_2_0= Distinct )
                            // InternalDialogParser.g:6471:7: lv_distinct_2_0= Distinct
                            {
                            lv_distinct_2_0=(Token)match(input,Distinct,FOLLOW_119); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSelectExpressionRule());
                              							}
                              							setWithLastConsumed(current, "distinct", true, "distinct");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:6483:5: (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) )
                    int alt166=2;
                    int LA166_0 = input.LA(1);

                    if ( (LA166_0==Asterisk) ) {
                        alt166=1;
                    }
                    else if ( ((LA166_0>=RULE_ID && LA166_0<=RULE_QNAME_TERMINAL)) ) {
                        alt166=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 166, 0, input);

                        throw nvae;
                    }
                    switch (alt166) {
                        case 1 :
                            // InternalDialogParser.g:6484:6: otherlv_3= Asterisk
                            {
                            otherlv_3=(Token)match(input,Asterisk,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:6489:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            {
                            // InternalDialogParser.g:6489:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            // InternalDialogParser.g:6490:7: ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            {
                            // InternalDialogParser.g:6490:7: ( (lv_selectFrom_4_0= ruleSadlResource ) )
                            // InternalDialogParser.g:6491:8: (lv_selectFrom_4_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:6491:8: (lv_selectFrom_4_0= ruleSadlResource )
                            // InternalDialogParser.g:6492:9: lv_selectFrom_4_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
                              								
                            }
                            pushFollow(FOLLOW_120);
                            lv_selectFrom_4_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              									}
                              									add(
                              										current,
                              										"selectFrom",
                              										lv_selectFrom_4_0,
                              										"com.ge.research.sadl.SADL.SadlResource");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalDialogParser.g:6509:7: ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            loop165:
                            do {
                                int alt165=2;
                                int LA165_0 = input.LA(1);

                                if ( (LA165_0==Comma||(LA165_0>=RULE_ID && LA165_0<=RULE_QNAME_TERMINAL)) ) {
                                    alt165=1;
                                }


                                switch (alt165) {
                            	case 1 :
                            	    // InternalDialogParser.g:6510:8: (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    {
                            	    // InternalDialogParser.g:6510:8: (otherlv_5= Comma )?
                            	    int alt164=2;
                            	    int LA164_0 = input.LA(1);

                            	    if ( (LA164_0==Comma) ) {
                            	        alt164=1;
                            	    }
                            	    switch (alt164) {
                            	        case 1 :
                            	            // InternalDialogParser.g:6511:9: otherlv_5= Comma
                            	            {
                            	            otherlv_5=(Token)match(input,Comma,FOLLOW_9); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:6516:8: ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:6517:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:6517:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:6518:10: lv_selectFrom_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_120);
                            	    lv_selectFrom_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"selectFrom",
                            	      											lv_selectFrom_6_0,
                            	      											"com.ge.research.sadl.SADL.SadlResource");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop165;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,Where,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
                      				
                    }
                    // InternalDialogParser.g:6542:5: ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) )
                    // InternalDialogParser.g:6543:6: (lv_whereExpression_8_0= norm3_ExpressionParameterized )
                    {
                    // InternalDialogParser.g:6543:6: (lv_whereExpression_8_0= norm3_ExpressionParameterized )
                    // InternalDialogParser.g:6544:7: lv_whereExpression_8_0= norm3_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
                      						
                    }
                    pushFollow(FOLLOW_122);
                    lv_whereExpression_8_0=norm3_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                      							}
                      							set(
                      								current,
                      								"whereExpression",
                      								lv_whereExpression_8_0,
                      								"com.ge.research.sadl.SADL.ExpressionParameterized");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:6561:5: ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    int alt169=2;
                    int LA169_0 = input.LA(1);

                    if ( (LA169_0==Order) ) {
                        alt169=1;
                    }
                    switch (alt169) {
                        case 1 :
                            // InternalDialogParser.g:6562:6: ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            {
                            // InternalDialogParser.g:6562:6: ( (lv_orderby_9_0= Order ) )
                            // InternalDialogParser.g:6563:7: (lv_orderby_9_0= Order )
                            {
                            // InternalDialogParser.g:6563:7: (lv_orderby_9_0= Order )
                            // InternalDialogParser.g:6564:8: lv_orderby_9_0= Order
                            {
                            lv_orderby_9_0=(Token)match(input,Order,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSelectExpressionRule());
                              								}
                              								setWithLastConsumed(current, "orderby", lv_orderby_9_0, "order");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,By,FOLLOW_123); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
                              					
                            }
                            // InternalDialogParser.g:6580:6: ( (lv_orderList_11_0= ruleOrderElement ) )
                            // InternalDialogParser.g:6581:7: (lv_orderList_11_0= ruleOrderElement )
                            {
                            // InternalDialogParser.g:6581:7: (lv_orderList_11_0= ruleOrderElement )
                            // InternalDialogParser.g:6582:8: lv_orderList_11_0= ruleOrderElement
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
                              							
                            }
                            pushFollow(FOLLOW_124);
                            lv_orderList_11_0=ruleOrderElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              								}
                              								add(
                              									current,
                              									"orderList",
                              									lv_orderList_11_0,
                              									"com.ge.research.sadl.SADL.OrderElement");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:6599:6: ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            loop168:
                            do {
                                int alt168=2;
                                int LA168_0 = input.LA(1);

                                if ( (LA168_0==Comma) && (synpred10_InternalDialogParser())) {
                                    alt168=1;
                                }
                                else if ( (LA168_0==Asc) && (synpred10_InternalDialogParser())) {
                                    alt168=1;
                                }
                                else if ( (LA168_0==Desc) && (synpred10_InternalDialogParser())) {
                                    alt168=1;
                                }
                                else if ( (LA168_0==RULE_QNAME_TERMINAL) && (synpred10_InternalDialogParser())) {
                                    alt168=1;
                                }
                                else if ( (LA168_0==RULE_ID) && (synpred10_InternalDialogParser())) {
                                    alt168=1;
                                }


                                switch (alt168) {
                            	case 1 :
                            	    // InternalDialogParser.g:6600:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    {
                            	    // InternalDialogParser.g:6601:7: ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    // InternalDialogParser.g:6602:8: (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    {
                            	    // InternalDialogParser.g:6602:8: (otherlv_12= Comma )?
                            	    int alt167=2;
                            	    int LA167_0 = input.LA(1);

                            	    if ( (LA167_0==Comma) ) {
                            	        alt167=1;
                            	    }
                            	    switch (alt167) {
                            	        case 1 :
                            	            // InternalDialogParser.g:6603:9: otherlv_12= Comma
                            	            {
                            	            otherlv_12=(Token)match(input,Comma,FOLLOW_123); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:6608:8: ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    // InternalDialogParser.g:6609:9: (lv_orderList_13_0= ruleOrderElement )
                            	    {
                            	    // InternalDialogParser.g:6609:9: (lv_orderList_13_0= ruleOrderElement )
                            	    // InternalDialogParser.g:6610:10: lv_orderList_13_0= ruleOrderElement
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_124);
                            	    lv_orderList_13_0=ruleOrderElement();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"orderList",
                            	      											lv_orderList_13_0,
                            	      											"com.ge.research.sadl.SADL.OrderElement");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop168;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6633:3: this_ExpressionParameterized_14= norm3_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionParameterized_14=norm3_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionParameterized_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_SelectExpression"


    // $ANTLR start "entryRuleOrderElement"
    // InternalDialogParser.g:6645:1: entryRuleOrderElement returns [EObject current=null] : iv_ruleOrderElement= ruleOrderElement EOF ;
    public final EObject entryRuleOrderElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrderElement = null;


        try {
            // InternalDialogParser.g:6645:53: (iv_ruleOrderElement= ruleOrderElement EOF )
            // InternalDialogParser.g:6646:2: iv_ruleOrderElement= ruleOrderElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrderElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrderElement=ruleOrderElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrderElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrderElement"


    // $ANTLR start "ruleOrderElement"
    // InternalDialogParser.g:6652:1: ruleOrderElement returns [EObject current=null] : ( (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) ) ) ;
    public final EObject ruleOrderElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_desc_1_0=null;
        EObject lv_orderBy_2_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6658:2: ( ( (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) ) ) )
            // InternalDialogParser.g:6659:2: ( (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) ) )
            {
            // InternalDialogParser.g:6659:2: ( (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) ) )
            // InternalDialogParser.g:6660:3: (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) )
            {
            // InternalDialogParser.g:6660:3: (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )?
            int alt171=3;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==Asc) ) {
                alt171=1;
            }
            else if ( (LA171_0==Desc) ) {
                alt171=2;
            }
            switch (alt171) {
                case 1 :
                    // InternalDialogParser.g:6661:4: otherlv_0= Asc
                    {
                    otherlv_0=(Token)match(input,Asc,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getOrderElementAccess().getAscKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6666:4: ( (lv_desc_1_0= Desc ) )
                    {
                    // InternalDialogParser.g:6666:4: ( (lv_desc_1_0= Desc ) )
                    // InternalDialogParser.g:6667:5: (lv_desc_1_0= Desc )
                    {
                    // InternalDialogParser.g:6667:5: (lv_desc_1_0= Desc )
                    // InternalDialogParser.g:6668:6: lv_desc_1_0= Desc
                    {
                    lv_desc_1_0=(Token)match(input,Desc,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_desc_1_0, grammarAccess.getOrderElementAccess().getDescDescKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getOrderElementRule());
                      						}
                      						setWithLastConsumed(current, "desc", true, "desc");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:6681:3: ( (lv_orderBy_2_0= ruleSadlResource ) )
            // InternalDialogParser.g:6682:4: (lv_orderBy_2_0= ruleSadlResource )
            {
            // InternalDialogParser.g:6682:4: (lv_orderBy_2_0= ruleSadlResource )
            // InternalDialogParser.g:6683:5: lv_orderBy_2_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOrderElementAccess().getOrderBySadlResourceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_orderBy_2_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOrderElementRule());
              					}
              					set(
              						current,
              						"orderBy",
              						lv_orderBy_2_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrderElement"


    // $ANTLR start "entryRuleExpressionParameterized"
    // InternalDialogParser.g:6704:1: entryRuleExpressionParameterized returns [EObject current=null] : iv_ruleExpressionParameterized= ruleExpressionParameterized EOF ;
    public final EObject entryRuleExpressionParameterized() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionParameterized = null;


        try {
            // InternalDialogParser.g:6704:64: (iv_ruleExpressionParameterized= ruleExpressionParameterized EOF )
            // InternalDialogParser.g:6705:2: iv_ruleExpressionParameterized= ruleExpressionParameterized EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionParameterizedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionParameterized=ruleExpressionParameterized();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionParameterized; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionParameterized"


    // $ANTLR start "ruleExpressionParameterized"
    // InternalDialogParser.g:6711:1: ruleExpressionParameterized returns [EObject current=null] : ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression ) ;
    public final EObject ruleExpressionParameterized() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_list_4_0 = null;

        EObject lv_where_6_0 = null;

        EObject this_OrExpression_7 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6717:2: ( ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression ) )
            // InternalDialogParser.g:6718:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression )
            {
            // InternalDialogParser.g:6718:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression )
            int alt173=2;
            alt173 = dfa173.predict(input);
            switch (alt173) {
                case 1 :
                    // InternalDialogParser.g:6719:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) )
                    {
                    // InternalDialogParser.g:6719:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) )
                    // InternalDialogParser.g:6720:4: () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) )
                    {
                    // InternalDialogParser.g:6720:4: ()
                    // InternalDialogParser.g:6721:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:6727:4: ( ruleAnArticle )?
                    int alt172=2;
                    int LA172_0 = input.LA(1);

                    if ( (LA172_0==Another||LA172_0==Some||LA172_0==The||LA172_0==Any||LA172_0==The_1||LA172_0==An||LA172_0==An_1||LA172_0==A||LA172_0==A_1) ) {
                        alt172=1;
                    }
                    switch (alt172) {
                        case 1 :
                            // InternalDialogParser.g:6728:5: ruleAnArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_125);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,Sublist,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,Of,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:6744:4: ( (lv_list_4_0= ruleOrExpression ) )
                    // InternalDialogParser.g:6745:5: (lv_list_4_0= ruleOrExpression )
                    {
                    // InternalDialogParser.g:6745:5: (lv_list_4_0= ruleOrExpression )
                    // InternalDialogParser.g:6746:6: lv_list_4_0= ruleOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_126);
                    lv_list_4_0=ruleOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"list",
                      							lv_list_4_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,Matching,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
                      			
                    }
                    // InternalDialogParser.g:6767:4: ( (lv_where_6_0= ruleOrExpression ) )
                    // InternalDialogParser.g:6768:5: (lv_where_6_0= ruleOrExpression )
                    {
                    // InternalDialogParser.g:6768:5: (lv_where_6_0= ruleOrExpression )
                    // InternalDialogParser.g:6769:6: lv_where_6_0= ruleOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_6_0=ruleOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_6_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6788:3: this_OrExpression_7= ruleOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OrExpression_7=ruleOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OrExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionParameterized"


    // $ANTLR start "norm1_ExpressionParameterized"
    // InternalDialogParser.g:6801:1: norm1_ExpressionParameterized returns [EObject current=null] : ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression ) ;
    public final EObject norm1_ExpressionParameterized() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_list_4_0 = null;

        EObject lv_where_6_0 = null;

        EObject this_OrExpression_7 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6807:2: ( ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression ) )
            // InternalDialogParser.g:6808:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression )
            {
            // InternalDialogParser.g:6808:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression )
            int alt175=2;
            alt175 = dfa175.predict(input);
            switch (alt175) {
                case 1 :
                    // InternalDialogParser.g:6809:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) )
                    {
                    // InternalDialogParser.g:6809:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) )
                    // InternalDialogParser.g:6810:4: () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) )
                    {
                    // InternalDialogParser.g:6810:4: ()
                    // InternalDialogParser.g:6811:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:6817:4: ( ruleAnArticle )?
                    int alt174=2;
                    int LA174_0 = input.LA(1);

                    if ( (LA174_0==Another||LA174_0==Some||LA174_0==The||LA174_0==Any||LA174_0==The_1||LA174_0==An||LA174_0==An_1||LA174_0==A||LA174_0==A_1) ) {
                        alt174=1;
                    }
                    switch (alt174) {
                        case 1 :
                            // InternalDialogParser.g:6818:5: ruleAnArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_125);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,Sublist,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,Of,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:6834:4: ( (lv_list_4_0= norm1_OrExpression ) )
                    // InternalDialogParser.g:6835:5: (lv_list_4_0= norm1_OrExpression )
                    {
                    // InternalDialogParser.g:6835:5: (lv_list_4_0= norm1_OrExpression )
                    // InternalDialogParser.g:6836:6: lv_list_4_0= norm1_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_126);
                    lv_list_4_0=norm1_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"list",
                      							lv_list_4_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,Matching,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
                      			
                    }
                    // InternalDialogParser.g:6857:4: ( (lv_where_6_0= norm1_OrExpression ) )
                    // InternalDialogParser.g:6858:5: (lv_where_6_0= norm1_OrExpression )
                    {
                    // InternalDialogParser.g:6858:5: (lv_where_6_0= norm1_OrExpression )
                    // InternalDialogParser.g:6859:6: lv_where_6_0= norm1_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_6_0=norm1_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_6_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6878:3: this_OrExpression_7= norm1_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OrExpression_7=norm1_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OrExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_ExpressionParameterized"


    // $ANTLR start "norm2_ExpressionParameterized"
    // InternalDialogParser.g:6891:1: norm2_ExpressionParameterized returns [EObject current=null] : ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression ) ;
    public final EObject norm2_ExpressionParameterized() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_list_4_0 = null;

        EObject lv_where_6_0 = null;

        EObject this_OrExpression_7 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6897:2: ( ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression ) )
            // InternalDialogParser.g:6898:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression )
            {
            // InternalDialogParser.g:6898:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression )
            int alt177=2;
            alt177 = dfa177.predict(input);
            switch (alt177) {
                case 1 :
                    // InternalDialogParser.g:6899:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) )
                    {
                    // InternalDialogParser.g:6899:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) )
                    // InternalDialogParser.g:6900:4: () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) )
                    {
                    // InternalDialogParser.g:6900:4: ()
                    // InternalDialogParser.g:6901:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:6907:4: ( ruleAnArticle )?
                    int alt176=2;
                    int LA176_0 = input.LA(1);

                    if ( (LA176_0==Another||LA176_0==Some||LA176_0==The||LA176_0==Any||LA176_0==The_1||LA176_0==An||LA176_0==An_1||LA176_0==A||LA176_0==A_1) ) {
                        alt176=1;
                    }
                    switch (alt176) {
                        case 1 :
                            // InternalDialogParser.g:6908:5: ruleAnArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_125);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,Sublist,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,Of,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:6924:4: ( (lv_list_4_0= norm2_OrExpression ) )
                    // InternalDialogParser.g:6925:5: (lv_list_4_0= norm2_OrExpression )
                    {
                    // InternalDialogParser.g:6925:5: (lv_list_4_0= norm2_OrExpression )
                    // InternalDialogParser.g:6926:6: lv_list_4_0= norm2_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_126);
                    lv_list_4_0=norm2_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"list",
                      							lv_list_4_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,Matching,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
                      			
                    }
                    // InternalDialogParser.g:6947:4: ( (lv_where_6_0= norm2_OrExpression ) )
                    // InternalDialogParser.g:6948:5: (lv_where_6_0= norm2_OrExpression )
                    {
                    // InternalDialogParser.g:6948:5: (lv_where_6_0= norm2_OrExpression )
                    // InternalDialogParser.g:6949:6: lv_where_6_0= norm2_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_6_0=norm2_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_6_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6968:3: this_OrExpression_7= norm2_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OrExpression_7=norm2_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OrExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_ExpressionParameterized"


    // $ANTLR start "norm3_ExpressionParameterized"
    // InternalDialogParser.g:6981:1: norm3_ExpressionParameterized returns [EObject current=null] : ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression ) ;
    public final EObject norm3_ExpressionParameterized() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_list_4_0 = null;

        EObject lv_where_6_0 = null;

        EObject this_OrExpression_7 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6987:2: ( ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression ) )
            // InternalDialogParser.g:6988:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression )
            {
            // InternalDialogParser.g:6988:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression )
            int alt179=2;
            alt179 = dfa179.predict(input);
            switch (alt179) {
                case 1 :
                    // InternalDialogParser.g:6989:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) )
                    {
                    // InternalDialogParser.g:6989:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) )
                    // InternalDialogParser.g:6990:4: () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) )
                    {
                    // InternalDialogParser.g:6990:4: ()
                    // InternalDialogParser.g:6991:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:6997:4: ( ruleAnArticle )?
                    int alt178=2;
                    int LA178_0 = input.LA(1);

                    if ( (LA178_0==Another||LA178_0==Some||LA178_0==The||LA178_0==Any||LA178_0==The_1||LA178_0==An||LA178_0==An_1||LA178_0==A||LA178_0==A_1) ) {
                        alt178=1;
                    }
                    switch (alt178) {
                        case 1 :
                            // InternalDialogParser.g:6998:5: ruleAnArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_125);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,Sublist,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,Of,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:7014:4: ( (lv_list_4_0= norm3_OrExpression ) )
                    // InternalDialogParser.g:7015:5: (lv_list_4_0= norm3_OrExpression )
                    {
                    // InternalDialogParser.g:7015:5: (lv_list_4_0= norm3_OrExpression )
                    // InternalDialogParser.g:7016:6: lv_list_4_0= norm3_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_126);
                    lv_list_4_0=norm3_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"list",
                      							lv_list_4_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,Matching,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
                      			
                    }
                    // InternalDialogParser.g:7037:4: ( (lv_where_6_0= norm3_OrExpression ) )
                    // InternalDialogParser.g:7038:5: (lv_where_6_0= norm3_OrExpression )
                    {
                    // InternalDialogParser.g:7038:5: (lv_where_6_0= norm3_OrExpression )
                    // InternalDialogParser.g:7039:6: lv_where_6_0= norm3_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_6_0=norm3_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_6_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:7058:3: this_OrExpression_7= norm3_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OrExpression_7=norm3_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OrExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_ExpressionParameterized"


    // $ANTLR start "entryRuleOrExpression"
    // InternalDialogParser.g:7070:1: entryRuleOrExpression returns [EObject current=null] : iv_ruleOrExpression= ruleOrExpression EOF ;
    public final EObject entryRuleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpression = null;


        try {
            // InternalDialogParser.g:7070:53: (iv_ruleOrExpression= ruleOrExpression EOF )
            // InternalDialogParser.g:7071:2: iv_ruleOrExpression= ruleOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrExpression=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrExpression"


    // $ANTLR start "ruleOrExpression"
    // InternalDialogParser.g:7077:1: ruleOrExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* ) ;
    public final EObject ruleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7083:2: ( (this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* ) )
            // InternalDialogParser.g:7084:2: (this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* )
            {
            // InternalDialogParser.g:7084:2: (this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* )
            // InternalDialogParser.g:7085:3: this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_127);
            this_AndExpression_0=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7093:3: ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )*
            loop180:
            do {
                int alt180=2;
                int LA180_0 = input.LA(1);

                if ( (LA180_0==Or||LA180_0==VerticalLineVerticalLine) ) {
                    alt180=1;
                }


                switch (alt180) {
            	case 1 :
            	    // InternalDialogParser.g:7094:4: () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) )
            	    {
            	    // InternalDialogParser.g:7094:4: ()
            	    // InternalDialogParser.g:7095:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7101:4: ( (lv_op_2_0= ruleOpOr ) )
            	    // InternalDialogParser.g:7102:5: (lv_op_2_0= ruleOpOr )
            	    {
            	    // InternalDialogParser.g:7102:5: (lv_op_2_0= ruleOpOr )
            	    // InternalDialogParser.g:7103:6: lv_op_2_0= ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpOr");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7120:4: ( (lv_right_3_0= ruleAndExpression ) )
            	    // InternalDialogParser.g:7121:5: (lv_right_3_0= ruleAndExpression )
            	    {
            	    // InternalDialogParser.g:7121:5: (lv_right_3_0= ruleAndExpression )
            	    // InternalDialogParser.g:7122:6: lv_right_3_0= ruleAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_right_3_0=ruleAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop180;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrExpression"


    // $ANTLR start "norm1_OrExpression"
    // InternalDialogParser.g:7145:1: norm1_OrExpression returns [EObject current=null] : (this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )* ) ;
    public final EObject norm1_OrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7151:2: ( (this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )* ) )
            // InternalDialogParser.g:7152:2: (this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )* )
            {
            // InternalDialogParser.g:7152:2: (this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )* )
            // InternalDialogParser.g:7153:3: this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_127);
            this_AndExpression_0=norm1_AndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7161:3: ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )*
            loop181:
            do {
                int alt181=2;
                int LA181_0 = input.LA(1);

                if ( (LA181_0==Or||LA181_0==VerticalLineVerticalLine) ) {
                    alt181=1;
                }


                switch (alt181) {
            	case 1 :
            	    // InternalDialogParser.g:7162:4: () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) )
            	    {
            	    // InternalDialogParser.g:7162:4: ()
            	    // InternalDialogParser.g:7163:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7169:4: ( (lv_op_2_0= ruleOpOr ) )
            	    // InternalDialogParser.g:7170:5: (lv_op_2_0= ruleOpOr )
            	    {
            	    // InternalDialogParser.g:7170:5: (lv_op_2_0= ruleOpOr )
            	    // InternalDialogParser.g:7171:6: lv_op_2_0= ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpOr");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7188:4: ( (lv_right_3_0= norm1_AndExpression ) )
            	    // InternalDialogParser.g:7189:5: (lv_right_3_0= norm1_AndExpression )
            	    {
            	    // InternalDialogParser.g:7189:5: (lv_right_3_0= norm1_AndExpression )
            	    // InternalDialogParser.g:7190:6: lv_right_3_0= norm1_AndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_right_3_0=norm1_AndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop181;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_OrExpression"


    // $ANTLR start "norm2_OrExpression"
    // InternalDialogParser.g:7213:1: norm2_OrExpression returns [EObject current=null] : (this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )* ) ;
    public final EObject norm2_OrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7219:2: ( (this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )* ) )
            // InternalDialogParser.g:7220:2: (this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )* )
            {
            // InternalDialogParser.g:7220:2: (this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )* )
            // InternalDialogParser.g:7221:3: this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_127);
            this_AndExpression_0=norm2_AndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7229:3: ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )*
            loop182:
            do {
                int alt182=2;
                int LA182_0 = input.LA(1);

                if ( (LA182_0==Or||LA182_0==VerticalLineVerticalLine) ) {
                    alt182=1;
                }


                switch (alt182) {
            	case 1 :
            	    // InternalDialogParser.g:7230:4: () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) )
            	    {
            	    // InternalDialogParser.g:7230:4: ()
            	    // InternalDialogParser.g:7231:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7237:4: ( (lv_op_2_0= ruleOpOr ) )
            	    // InternalDialogParser.g:7238:5: (lv_op_2_0= ruleOpOr )
            	    {
            	    // InternalDialogParser.g:7238:5: (lv_op_2_0= ruleOpOr )
            	    // InternalDialogParser.g:7239:6: lv_op_2_0= ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpOr");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7256:4: ( (lv_right_3_0= norm2_AndExpression ) )
            	    // InternalDialogParser.g:7257:5: (lv_right_3_0= norm2_AndExpression )
            	    {
            	    // InternalDialogParser.g:7257:5: (lv_right_3_0= norm2_AndExpression )
            	    // InternalDialogParser.g:7258:6: lv_right_3_0= norm2_AndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_right_3_0=norm2_AndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop182;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_OrExpression"


    // $ANTLR start "norm3_OrExpression"
    // InternalDialogParser.g:7281:1: norm3_OrExpression returns [EObject current=null] : (this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )* ) ;
    public final EObject norm3_OrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7287:2: ( (this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )* ) )
            // InternalDialogParser.g:7288:2: (this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )* )
            {
            // InternalDialogParser.g:7288:2: (this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )* )
            // InternalDialogParser.g:7289:3: this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_127);
            this_AndExpression_0=norm3_AndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7297:3: ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )*
            loop183:
            do {
                int alt183=2;
                int LA183_0 = input.LA(1);

                if ( (LA183_0==Or||LA183_0==VerticalLineVerticalLine) ) {
                    alt183=1;
                }


                switch (alt183) {
            	case 1 :
            	    // InternalDialogParser.g:7298:4: () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) )
            	    {
            	    // InternalDialogParser.g:7298:4: ()
            	    // InternalDialogParser.g:7299:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7305:4: ( (lv_op_2_0= ruleOpOr ) )
            	    // InternalDialogParser.g:7306:5: (lv_op_2_0= ruleOpOr )
            	    {
            	    // InternalDialogParser.g:7306:5: (lv_op_2_0= ruleOpOr )
            	    // InternalDialogParser.g:7307:6: lv_op_2_0= ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_op_2_0=ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpOr");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7324:4: ( (lv_right_3_0= norm3_AndExpression ) )
            	    // InternalDialogParser.g:7325:5: (lv_right_3_0= norm3_AndExpression )
            	    {
            	    // InternalDialogParser.g:7325:5: (lv_right_3_0= norm3_AndExpression )
            	    // InternalDialogParser.g:7326:6: lv_right_3_0= norm3_AndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_right_3_0=norm3_AndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop183;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_OrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalDialogParser.g:7348:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalDialogParser.g:7348:44: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalDialogParser.g:7349:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalDialogParser.g:7355:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Or | kw= VerticalLineVerticalLine ) ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:7361:2: ( (kw= Or | kw= VerticalLineVerticalLine ) )
            // InternalDialogParser.g:7362:2: (kw= Or | kw= VerticalLineVerticalLine )
            {
            // InternalDialogParser.g:7362:2: (kw= Or | kw= VerticalLineVerticalLine )
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==Or) ) {
                alt184=1;
            }
            else if ( (LA184_0==VerticalLineVerticalLine) ) {
                alt184=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 184, 0, input);

                throw nvae;
            }
            switch (alt184) {
                case 1 :
                    // InternalDialogParser.g:7363:3: kw= Or
                    {
                    kw=(Token)match(input,Or,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOrAccess().getOrKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:7369:3: kw= VerticalLineVerticalLine
                    {
                    kw=(Token)match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleAndExpression"
    // InternalDialogParser.g:7378:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndExpression = null;


        try {
            // InternalDialogParser.g:7378:54: (iv_ruleAndExpression= ruleAndExpression EOF )
            // InternalDialogParser.g:7379:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndExpression=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndExpression"


    // $ANTLR start "ruleAndExpression"
    // InternalDialogParser.g:7385:1: ruleAndExpression returns [EObject current=null] : (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7391:2: ( (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* ) )
            // InternalDialogParser.g:7392:2: (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* )
            {
            // InternalDialogParser.g:7392:2: (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* )
            // InternalDialogParser.g:7393:3: this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_128);
            this_EqualityExpression_0=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7401:3: ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )*
            loop185:
            do {
                int alt185=2;
                int LA185_0 = input.LA(1);

                if ( (LA185_0==And||LA185_0==AmpersandAmpersand) ) {
                    alt185=1;
                }


                switch (alt185) {
            	case 1 :
            	    // InternalDialogParser.g:7402:4: () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) )
            	    {
            	    // InternalDialogParser.g:7402:4: ()
            	    // InternalDialogParser.g:7403:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7409:4: ( (lv_op_2_0= ruleOpAnd ) )
            	    // InternalDialogParser.g:7410:5: (lv_op_2_0= ruleOpAnd )
            	    {
            	    // InternalDialogParser.g:7410:5: (lv_op_2_0= ruleOpAnd )
            	    // InternalDialogParser.g:7411:6: lv_op_2_0= ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7428:4: ( (lv_right_3_0= ruleEqualityExpression ) )
            	    // InternalDialogParser.g:7429:5: (lv_right_3_0= ruleEqualityExpression )
            	    {
            	    // InternalDialogParser.g:7429:5: (lv_right_3_0= ruleEqualityExpression )
            	    // InternalDialogParser.g:7430:6: lv_right_3_0= ruleEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_right_3_0=ruleEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop185;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndExpression"


    // $ANTLR start "norm1_AndExpression"
    // InternalDialogParser.g:7453:1: norm1_AndExpression returns [EObject current=null] : (this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )* ) ;
    public final EObject norm1_AndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7459:2: ( (this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )* ) )
            // InternalDialogParser.g:7460:2: (this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )* )
            {
            // InternalDialogParser.g:7460:2: (this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )* )
            // InternalDialogParser.g:7461:3: this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_128);
            this_EqualityExpression_0=norm1_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7469:3: ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )*
            loop186:
            do {
                int alt186=2;
                int LA186_0 = input.LA(1);

                if ( (LA186_0==And||LA186_0==AmpersandAmpersand) ) {
                    alt186=1;
                }


                switch (alt186) {
            	case 1 :
            	    // InternalDialogParser.g:7470:4: () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) )
            	    {
            	    // InternalDialogParser.g:7470:4: ()
            	    // InternalDialogParser.g:7471:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7477:4: ( (lv_op_2_0= ruleOpAnd ) )
            	    // InternalDialogParser.g:7478:5: (lv_op_2_0= ruleOpAnd )
            	    {
            	    // InternalDialogParser.g:7478:5: (lv_op_2_0= ruleOpAnd )
            	    // InternalDialogParser.g:7479:6: lv_op_2_0= ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7496:4: ( (lv_right_3_0= norm1_EqualityExpression ) )
            	    // InternalDialogParser.g:7497:5: (lv_right_3_0= norm1_EqualityExpression )
            	    {
            	    // InternalDialogParser.g:7497:5: (lv_right_3_0= norm1_EqualityExpression )
            	    // InternalDialogParser.g:7498:6: lv_right_3_0= norm1_EqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_right_3_0=norm1_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop186;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_AndExpression"


    // $ANTLR start "norm2_AndExpression"
    // InternalDialogParser.g:7521:1: norm2_AndExpression returns [EObject current=null] : (this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )* ) ;
    public final EObject norm2_AndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7527:2: ( (this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )* ) )
            // InternalDialogParser.g:7528:2: (this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )* )
            {
            // InternalDialogParser.g:7528:2: (this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )* )
            // InternalDialogParser.g:7529:3: this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_128);
            this_EqualityExpression_0=norm2_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7537:3: ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )*
            loop187:
            do {
                int alt187=2;
                int LA187_0 = input.LA(1);

                if ( (LA187_0==And||LA187_0==AmpersandAmpersand) ) {
                    alt187=1;
                }


                switch (alt187) {
            	case 1 :
            	    // InternalDialogParser.g:7538:4: () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) )
            	    {
            	    // InternalDialogParser.g:7538:4: ()
            	    // InternalDialogParser.g:7539:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7545:4: ( (lv_op_2_0= ruleOpAnd ) )
            	    // InternalDialogParser.g:7546:5: (lv_op_2_0= ruleOpAnd )
            	    {
            	    // InternalDialogParser.g:7546:5: (lv_op_2_0= ruleOpAnd )
            	    // InternalDialogParser.g:7547:6: lv_op_2_0= ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7564:4: ( (lv_right_3_0= norm2_EqualityExpression ) )
            	    // InternalDialogParser.g:7565:5: (lv_right_3_0= norm2_EqualityExpression )
            	    {
            	    // InternalDialogParser.g:7565:5: (lv_right_3_0= norm2_EqualityExpression )
            	    // InternalDialogParser.g:7566:6: lv_right_3_0= norm2_EqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_right_3_0=norm2_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop187;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_AndExpression"


    // $ANTLR start "norm3_AndExpression"
    // InternalDialogParser.g:7589:1: norm3_AndExpression returns [EObject current=null] : (this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )* ) ;
    public final EObject norm3_AndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7595:2: ( (this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )* ) )
            // InternalDialogParser.g:7596:2: (this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )* )
            {
            // InternalDialogParser.g:7596:2: (this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )* )
            // InternalDialogParser.g:7597:3: this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_128);
            this_EqualityExpression_0=norm3_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7605:3: ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )*
            loop188:
            do {
                int alt188=2;
                int LA188_0 = input.LA(1);

                if ( (LA188_0==And||LA188_0==AmpersandAmpersand) ) {
                    alt188=1;
                }


                switch (alt188) {
            	case 1 :
            	    // InternalDialogParser.g:7606:4: () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) )
            	    {
            	    // InternalDialogParser.g:7606:4: ()
            	    // InternalDialogParser.g:7607:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7613:4: ( (lv_op_2_0= ruleOpAnd ) )
            	    // InternalDialogParser.g:7614:5: (lv_op_2_0= ruleOpAnd )
            	    {
            	    // InternalDialogParser.g:7614:5: (lv_op_2_0= ruleOpAnd )
            	    // InternalDialogParser.g:7615:6: lv_op_2_0= ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_op_2_0=ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7632:4: ( (lv_right_3_0= norm3_EqualityExpression ) )
            	    // InternalDialogParser.g:7633:5: (lv_right_3_0= norm3_EqualityExpression )
            	    {
            	    // InternalDialogParser.g:7633:5: (lv_right_3_0= norm3_EqualityExpression )
            	    // InternalDialogParser.g:7634:6: lv_right_3_0= norm3_EqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_right_3_0=norm3_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop188;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_AndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // InternalDialogParser.g:7656:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalDialogParser.g:7656:45: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalDialogParser.g:7657:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalDialogParser.g:7663:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= And | kw= AmpersandAmpersand ) ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:7669:2: ( (kw= And | kw= AmpersandAmpersand ) )
            // InternalDialogParser.g:7670:2: (kw= And | kw= AmpersandAmpersand )
            {
            // InternalDialogParser.g:7670:2: (kw= And | kw= AmpersandAmpersand )
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==And) ) {
                alt189=1;
            }
            else if ( (LA189_0==AmpersandAmpersand) ) {
                alt189=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 189, 0, input);

                throw nvae;
            }
            switch (alt189) {
                case 1 :
                    // InternalDialogParser.g:7671:3: kw= And
                    {
                    kw=(Token)match(input,And,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAndAccess().getAndKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:7677:3: kw= AmpersandAmpersand
                    {
                    kw=(Token)match(input,AmpersandAmpersand,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleEqualityExpression"
    // InternalDialogParser.g:7686:1: entryRuleEqualityExpression returns [EObject current=null] : iv_ruleEqualityExpression= ruleEqualityExpression EOF ;
    public final EObject entryRuleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpression = null;


        try {
            // InternalDialogParser.g:7686:59: (iv_ruleEqualityExpression= ruleEqualityExpression EOF )
            // InternalDialogParser.g:7687:2: iv_ruleEqualityExpression= ruleEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpression=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityExpression"


    // $ANTLR start "ruleEqualityExpression"
    // InternalDialogParser.g:7693:1: ruleEqualityExpression returns [EObject current=null] : (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )* ) ;
    public final EObject ruleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7699:2: ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )* ) )
            // InternalDialogParser.g:7700:2: (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )* )
            {
            // InternalDialogParser.g:7700:2: (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )* )
            // InternalDialogParser.g:7701:3: this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_129);
            this_RelationalExpression_0=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7709:3: ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )*
            loop190:
            do {
                int alt190=2;
                int LA190_0 = input.LA(1);

                if ( (LA190_0==Contains||LA190_0==Does||LA190_0==ExclamationMarkEqualsSign||LA190_0==EqualsSignEqualsSign||LA190_0==Is||LA190_0==EqualsSign) ) {
                    alt190=1;
                }


                switch (alt190) {
            	case 1 :
            	    // InternalDialogParser.g:7710:4: () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) )
            	    {
            	    // InternalDialogParser.g:7710:4: ()
            	    // InternalDialogParser.g:7711:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7717:4: ( (lv_op_2_0= ruleInfixOperator ) )
            	    // InternalDialogParser.g:7718:5: (lv_op_2_0= ruleInfixOperator )
            	    {
            	    // InternalDialogParser.g:7718:5: (lv_op_2_0= ruleInfixOperator )
            	    // InternalDialogParser.g:7719:6: lv_op_2_0= ruleInfixOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleInfixOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.InfixOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7736:4: ( (lv_right_3_0= ruleRelationalExpression ) )
            	    // InternalDialogParser.g:7737:5: (lv_right_3_0= ruleRelationalExpression )
            	    {
            	    // InternalDialogParser.g:7737:5: (lv_right_3_0= ruleRelationalExpression )
            	    // InternalDialogParser.g:7738:6: lv_right_3_0= ruleRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_129);
            	    lv_right_3_0=ruleRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.RelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop190;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityExpression"


    // $ANTLR start "norm1_EqualityExpression"
    // InternalDialogParser.g:7761:1: norm1_EqualityExpression returns [EObject current=null] : (this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )* ) ;
    public final EObject norm1_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7767:2: ( (this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )* ) )
            // InternalDialogParser.g:7768:2: (this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )* )
            {
            // InternalDialogParser.g:7768:2: (this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )* )
            // InternalDialogParser.g:7769:3: this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_129);
            this_RelationalExpression_0=norm1_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7777:3: ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )*
            loop191:
            do {
                int alt191=2;
                int LA191_0 = input.LA(1);

                if ( (LA191_0==Contains||LA191_0==Does||LA191_0==ExclamationMarkEqualsSign||LA191_0==EqualsSignEqualsSign||LA191_0==Is||LA191_0==EqualsSign) ) {
                    alt191=1;
                }


                switch (alt191) {
            	case 1 :
            	    // InternalDialogParser.g:7778:4: () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) )
            	    {
            	    // InternalDialogParser.g:7778:4: ()
            	    // InternalDialogParser.g:7779:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7785:4: ( (lv_op_2_0= ruleInfixOperator ) )
            	    // InternalDialogParser.g:7786:5: (lv_op_2_0= ruleInfixOperator )
            	    {
            	    // InternalDialogParser.g:7786:5: (lv_op_2_0= ruleInfixOperator )
            	    // InternalDialogParser.g:7787:6: lv_op_2_0= ruleInfixOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleInfixOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.InfixOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7804:4: ( (lv_right_3_0= norm1_RelationalExpression ) )
            	    // InternalDialogParser.g:7805:5: (lv_right_3_0= norm1_RelationalExpression )
            	    {
            	    // InternalDialogParser.g:7805:5: (lv_right_3_0= norm1_RelationalExpression )
            	    // InternalDialogParser.g:7806:6: lv_right_3_0= norm1_RelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_129);
            	    lv_right_3_0=norm1_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.RelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop191;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_EqualityExpression"


    // $ANTLR start "norm2_EqualityExpression"
    // InternalDialogParser.g:7829:1: norm2_EqualityExpression returns [EObject current=null] : (this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )* ) ;
    public final EObject norm2_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7835:2: ( (this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )* ) )
            // InternalDialogParser.g:7836:2: (this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )* )
            {
            // InternalDialogParser.g:7836:2: (this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )* )
            // InternalDialogParser.g:7837:3: this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_129);
            this_RelationalExpression_0=norm2_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7845:3: ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )*
            loop192:
            do {
                int alt192=2;
                int LA192_0 = input.LA(1);

                if ( (LA192_0==Contains||LA192_0==Does||LA192_0==ExclamationMarkEqualsSign||LA192_0==EqualsSignEqualsSign||LA192_0==Is||LA192_0==EqualsSign) ) {
                    alt192=1;
                }


                switch (alt192) {
            	case 1 :
            	    // InternalDialogParser.g:7846:4: () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) )
            	    {
            	    // InternalDialogParser.g:7846:4: ()
            	    // InternalDialogParser.g:7847:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7853:4: ( (lv_op_2_0= ruleInfixOperator ) )
            	    // InternalDialogParser.g:7854:5: (lv_op_2_0= ruleInfixOperator )
            	    {
            	    // InternalDialogParser.g:7854:5: (lv_op_2_0= ruleInfixOperator )
            	    // InternalDialogParser.g:7855:6: lv_op_2_0= ruleInfixOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleInfixOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.InfixOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7872:4: ( (lv_right_3_0= norm2_RelationalExpression ) )
            	    // InternalDialogParser.g:7873:5: (lv_right_3_0= norm2_RelationalExpression )
            	    {
            	    // InternalDialogParser.g:7873:5: (lv_right_3_0= norm2_RelationalExpression )
            	    // InternalDialogParser.g:7874:6: lv_right_3_0= norm2_RelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_129);
            	    lv_right_3_0=norm2_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.RelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop192;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_EqualityExpression"


    // $ANTLR start "norm3_EqualityExpression"
    // InternalDialogParser.g:7897:1: norm3_EqualityExpression returns [EObject current=null] : (this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )* ) ;
    public final EObject norm3_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7903:2: ( (this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )* ) )
            // InternalDialogParser.g:7904:2: (this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )* )
            {
            // InternalDialogParser.g:7904:2: (this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )* )
            // InternalDialogParser.g:7905:3: this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_129);
            this_RelationalExpression_0=norm3_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7913:3: ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )*
            loop193:
            do {
                int alt193=2;
                int LA193_0 = input.LA(1);

                if ( (LA193_0==Contains||LA193_0==Does||LA193_0==ExclamationMarkEqualsSign||LA193_0==EqualsSignEqualsSign||LA193_0==Is||LA193_0==EqualsSign) ) {
                    alt193=1;
                }


                switch (alt193) {
            	case 1 :
            	    // InternalDialogParser.g:7914:4: () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) )
            	    {
            	    // InternalDialogParser.g:7914:4: ()
            	    // InternalDialogParser.g:7915:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7921:4: ( (lv_op_2_0= ruleInfixOperator ) )
            	    // InternalDialogParser.g:7922:5: (lv_op_2_0= ruleInfixOperator )
            	    {
            	    // InternalDialogParser.g:7922:5: (lv_op_2_0= ruleInfixOperator )
            	    // InternalDialogParser.g:7923:6: lv_op_2_0= ruleInfixOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_op_2_0=ruleInfixOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.InfixOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7940:4: ( (lv_right_3_0= norm3_RelationalExpression ) )
            	    // InternalDialogParser.g:7941:5: (lv_right_3_0= norm3_RelationalExpression )
            	    {
            	    // InternalDialogParser.g:7941:5: (lv_right_3_0= norm3_RelationalExpression )
            	    // InternalDialogParser.g:7942:6: lv_right_3_0= norm3_RelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_129);
            	    lv_right_3_0=norm3_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.RelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop193;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_EqualityExpression"


    // $ANTLR start "entryRuleInfixOperator"
    // InternalDialogParser.g:7964:1: entryRuleInfixOperator returns [String current=null] : iv_ruleInfixOperator= ruleInfixOperator EOF ;
    public final String entryRuleInfixOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInfixOperator = null;


        try {
            // InternalDialogParser.g:7964:53: (iv_ruleInfixOperator= ruleInfixOperator EOF )
            // InternalDialogParser.g:7965:2: iv_ruleInfixOperator= ruleInfixOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInfixOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInfixOperator=ruleInfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInfixOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInfixOperator"


    // $ANTLR start "ruleInfixOperator"
    // InternalDialogParser.g:7971:1: ruleInfixOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSign | (kw= Is ( (kw= Not )? kw= Unique kw= In )? ) | kw= Contains | (kw= Does kw= Not kw= Contain ) ) ;
    public final AntlrDatatypeRuleToken ruleInfixOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:7977:2: ( (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSign | (kw= Is ( (kw= Not )? kw= Unique kw= In )? ) | kw= Contains | (kw= Does kw= Not kw= Contain ) ) )
            // InternalDialogParser.g:7978:2: (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSign | (kw= Is ( (kw= Not )? kw= Unique kw= In )? ) | kw= Contains | (kw= Does kw= Not kw= Contain ) )
            {
            // InternalDialogParser.g:7978:2: (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSign | (kw= Is ( (kw= Not )? kw= Unique kw= In )? ) | kw= Contains | (kw= Does kw= Not kw= Contain ) )
            int alt196=6;
            switch ( input.LA(1) ) {
            case EqualsSignEqualsSign:
                {
                alt196=1;
                }
                break;
            case ExclamationMarkEqualsSign:
                {
                alt196=2;
                }
                break;
            case EqualsSign:
                {
                alt196=3;
                }
                break;
            case Is:
                {
                alt196=4;
                }
                break;
            case Contains:
                {
                alt196=5;
                }
                break;
            case Does:
                {
                alt196=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 196, 0, input);

                throw nvae;
            }

            switch (alt196) {
                case 1 :
                    // InternalDialogParser.g:7979:3: kw= EqualsSignEqualsSign
                    {
                    kw=(Token)match(input,EqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:7985:3: kw= ExclamationMarkEqualsSign
                    {
                    kw=(Token)match(input,ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:7991:3: kw= EqualsSign
                    {
                    kw=(Token)match(input,EqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:7997:3: (kw= Is ( (kw= Not )? kw= Unique kw= In )? )
                    {
                    // InternalDialogParser.g:7997:3: (kw= Is ( (kw= Not )? kw= Unique kw= In )? )
                    // InternalDialogParser.g:7998:4: kw= Is ( (kw= Not )? kw= Unique kw= In )?
                    {
                    kw=(Token)match(input,Is,FOLLOW_130); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getIsKeyword_3_0());
                      			
                    }
                    // InternalDialogParser.g:8003:4: ( (kw= Not )? kw= Unique kw= In )?
                    int alt195=2;
                    int LA195_0 = input.LA(1);

                    if ( (LA195_0==Not) ) {
                        int LA195_1 = input.LA(2);

                        if ( (LA195_1==Unique) ) {
                            alt195=1;
                        }
                    }
                    else if ( (LA195_0==Unique) ) {
                        alt195=1;
                    }
                    switch (alt195) {
                        case 1 :
                            // InternalDialogParser.g:8004:5: (kw= Not )? kw= Unique kw= In
                            {
                            // InternalDialogParser.g:8004:5: (kw= Not )?
                            int alt194=2;
                            int LA194_0 = input.LA(1);

                            if ( (LA194_0==Not) ) {
                                alt194=1;
                            }
                            switch (alt194) {
                                case 1 :
                                    // InternalDialogParser.g:8005:6: kw= Not
                                    {
                                    kw=(Token)match(input,Not,FOLLOW_131); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(kw);
                                      						newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getNotKeyword_3_1_0());
                                      					
                                    }

                                    }
                                    break;

                            }

                            kw=(Token)match(input,Unique,FOLLOW_132); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getUniqueKeyword_3_1_1());
                              				
                            }
                            kw=(Token)match(input,In,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getInKeyword_3_1_2());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:8024:3: kw= Contains
                    {
                    kw=(Token)match(input,Contains,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getContainsKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:8030:3: (kw= Does kw= Not kw= Contain )
                    {
                    // InternalDialogParser.g:8030:3: (kw= Does kw= Not kw= Contain )
                    // InternalDialogParser.g:8031:4: kw= Does kw= Not kw= Contain
                    {
                    kw=(Token)match(input,Does,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getDoesKeyword_5_0());
                      			
                    }
                    kw=(Token)match(input,Not,FOLLOW_133); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getNotKeyword_5_1());
                      			
                    }
                    kw=(Token)match(input,Contain,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getContainKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInfixOperator"


    // $ANTLR start "entryRuleRelationalExpression"
    // InternalDialogParser.g:8051:1: entryRuleRelationalExpression returns [EObject current=null] : iv_ruleRelationalExpression= ruleRelationalExpression EOF ;
    public final EObject entryRuleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationalExpression = null;


        try {
            // InternalDialogParser.g:8051:61: (iv_ruleRelationalExpression= ruleRelationalExpression EOF )
            // InternalDialogParser.g:8052:2: iv_ruleRelationalExpression= ruleRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationalExpression=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationalExpression"


    // $ANTLR start "ruleRelationalExpression"
    // InternalDialogParser.g:8058:1: ruleRelationalExpression returns [EObject current=null] : (this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )* ) ;
    public final EObject ruleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Addition_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8064:2: ( (this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )* ) )
            // InternalDialogParser.g:8065:2: (this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )* )
            {
            // InternalDialogParser.g:8065:2: (this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )* )
            // InternalDialogParser.g:8066:3: this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_134);
            this_Addition_0=ruleAddition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Addition_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8074:3: ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )*
            loop197:
            do {
                int alt197=2;
                int LA197_0 = input.LA(1);

                if ( (LA197_0==GreaterThanSignEqualsSign) && (synpred11_InternalDialogParser())) {
                    alt197=1;
                }
                else if ( (LA197_0==LessThanSignEqualsSign) && (synpred11_InternalDialogParser())) {
                    alt197=1;
                }
                else if ( (LA197_0==GreaterThanSign) && (synpred11_InternalDialogParser())) {
                    alt197=1;
                }
                else if ( (LA197_0==LessThanSign) && (synpred11_InternalDialogParser())) {
                    alt197=1;
                }


                switch (alt197) {
            	case 1 :
            	    // InternalDialogParser.g:8075:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) )
            	    {
            	    // InternalDialogParser.g:8076:4: ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) )
            	    // InternalDialogParser.g:8077:5: () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) )
            	    {
            	    // InternalDialogParser.g:8077:5: ()
            	    // InternalDialogParser.g:8078:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalDialogParser.g:8084:5: ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) )
            	    // InternalDialogParser.g:8085:6: ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare )
            	    {
            	    // InternalDialogParser.g:8089:6: (lv_op_2_0= ruleOpCompare )
            	    // InternalDialogParser.g:8090:7: lv_op_2_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"op",
            	      								lv_op_2_0,
            	      								"com.ge.research.sadl.SADL.OpCompare");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8107:5: ( (lv_right_3_0= ruleAddition ) )
            	    // InternalDialogParser.g:8108:6: (lv_right_3_0= ruleAddition )
            	    {
            	    // InternalDialogParser.g:8108:6: (lv_right_3_0= ruleAddition )
            	    // InternalDialogParser.g:8109:7: lv_right_3_0= ruleAddition
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_134);
            	    lv_right_3_0=ruleAddition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"com.ge.research.sadl.SADL.Addition");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop197;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationalExpression"


    // $ANTLR start "norm1_RelationalExpression"
    // InternalDialogParser.g:8133:1: norm1_RelationalExpression returns [EObject current=null] : (this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )* ) ;
    public final EObject norm1_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Addition_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8139:2: ( (this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )* ) )
            // InternalDialogParser.g:8140:2: (this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )* )
            {
            // InternalDialogParser.g:8140:2: (this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )* )
            // InternalDialogParser.g:8141:3: this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_134);
            this_Addition_0=norm1_Addition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Addition_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8149:3: ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )*
            loop198:
            do {
                int alt198=2;
                int LA198_0 = input.LA(1);

                if ( (LA198_0==GreaterThanSignEqualsSign) && (synpred13_InternalDialogParser())) {
                    alt198=1;
                }
                else if ( (LA198_0==LessThanSignEqualsSign) && (synpred13_InternalDialogParser())) {
                    alt198=1;
                }
                else if ( (LA198_0==GreaterThanSign) && (synpred13_InternalDialogParser())) {
                    alt198=1;
                }
                else if ( (LA198_0==LessThanSign) && (synpred13_InternalDialogParser())) {
                    alt198=1;
                }


                switch (alt198) {
            	case 1 :
            	    // InternalDialogParser.g:8150:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) )
            	    {
            	    // InternalDialogParser.g:8151:4: ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) )
            	    // InternalDialogParser.g:8152:5: () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) )
            	    {
            	    // InternalDialogParser.g:8152:5: ()
            	    // InternalDialogParser.g:8153:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalDialogParser.g:8159:5: ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) )
            	    // InternalDialogParser.g:8160:6: ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare )
            	    {
            	    // InternalDialogParser.g:8164:6: (lv_op_2_0= ruleOpCompare )
            	    // InternalDialogParser.g:8165:7: lv_op_2_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"op",
            	      								lv_op_2_0,
            	      								"com.ge.research.sadl.SADL.OpCompare");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8182:5: ( (lv_right_3_0= norm1_Addition ) )
            	    // InternalDialogParser.g:8183:6: (lv_right_3_0= norm1_Addition )
            	    {
            	    // InternalDialogParser.g:8183:6: (lv_right_3_0= norm1_Addition )
            	    // InternalDialogParser.g:8184:7: lv_right_3_0= norm1_Addition
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_134);
            	    lv_right_3_0=norm1_Addition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"com.ge.research.sadl.SADL.Addition");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop198;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_RelationalExpression"


    // $ANTLR start "norm2_RelationalExpression"
    // InternalDialogParser.g:8208:1: norm2_RelationalExpression returns [EObject current=null] : (this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )* ) ;
    public final EObject norm2_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Addition_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8214:2: ( (this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )* ) )
            // InternalDialogParser.g:8215:2: (this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )* )
            {
            // InternalDialogParser.g:8215:2: (this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )* )
            // InternalDialogParser.g:8216:3: this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_134);
            this_Addition_0=norm2_Addition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Addition_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8224:3: ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )*
            loop199:
            do {
                int alt199=2;
                int LA199_0 = input.LA(1);

                if ( (LA199_0==GreaterThanSignEqualsSign) && (synpred15_InternalDialogParser())) {
                    alt199=1;
                }
                else if ( (LA199_0==LessThanSignEqualsSign) && (synpred15_InternalDialogParser())) {
                    alt199=1;
                }
                else if ( (LA199_0==GreaterThanSign) && (synpred15_InternalDialogParser())) {
                    alt199=1;
                }
                else if ( (LA199_0==LessThanSign) && (synpred15_InternalDialogParser())) {
                    alt199=1;
                }


                switch (alt199) {
            	case 1 :
            	    // InternalDialogParser.g:8225:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) )
            	    {
            	    // InternalDialogParser.g:8226:4: ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) )
            	    // InternalDialogParser.g:8227:5: () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) )
            	    {
            	    // InternalDialogParser.g:8227:5: ()
            	    // InternalDialogParser.g:8228:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalDialogParser.g:8234:5: ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) )
            	    // InternalDialogParser.g:8235:6: ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare )
            	    {
            	    // InternalDialogParser.g:8239:6: (lv_op_2_0= ruleOpCompare )
            	    // InternalDialogParser.g:8240:7: lv_op_2_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"op",
            	      								lv_op_2_0,
            	      								"com.ge.research.sadl.SADL.OpCompare");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8257:5: ( (lv_right_3_0= norm2_Addition ) )
            	    // InternalDialogParser.g:8258:6: (lv_right_3_0= norm2_Addition )
            	    {
            	    // InternalDialogParser.g:8258:6: (lv_right_3_0= norm2_Addition )
            	    // InternalDialogParser.g:8259:7: lv_right_3_0= norm2_Addition
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_134);
            	    lv_right_3_0=norm2_Addition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"com.ge.research.sadl.SADL.Addition");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop199;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_RelationalExpression"


    // $ANTLR start "norm3_RelationalExpression"
    // InternalDialogParser.g:8283:1: norm3_RelationalExpression returns [EObject current=null] : (this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )* ) ;
    public final EObject norm3_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Addition_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8289:2: ( (this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )* ) )
            // InternalDialogParser.g:8290:2: (this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )* )
            {
            // InternalDialogParser.g:8290:2: (this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )* )
            // InternalDialogParser.g:8291:3: this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_134);
            this_Addition_0=norm3_Addition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Addition_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8299:3: ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )*
            loop200:
            do {
                int alt200=2;
                int LA200_0 = input.LA(1);

                if ( (LA200_0==GreaterThanSignEqualsSign) && (synpred17_InternalDialogParser())) {
                    alt200=1;
                }
                else if ( (LA200_0==LessThanSignEqualsSign) && (synpred17_InternalDialogParser())) {
                    alt200=1;
                }
                else if ( (LA200_0==GreaterThanSign) && (synpred17_InternalDialogParser())) {
                    alt200=1;
                }
                else if ( (LA200_0==LessThanSign) && (synpred17_InternalDialogParser())) {
                    alt200=1;
                }


                switch (alt200) {
            	case 1 :
            	    // InternalDialogParser.g:8300:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) )
            	    {
            	    // InternalDialogParser.g:8301:4: ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) )
            	    // InternalDialogParser.g:8302:5: () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) )
            	    {
            	    // InternalDialogParser.g:8302:5: ()
            	    // InternalDialogParser.g:8303:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalDialogParser.g:8309:5: ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) )
            	    // InternalDialogParser.g:8310:6: ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare )
            	    {
            	    // InternalDialogParser.g:8314:6: (lv_op_2_0= ruleOpCompare )
            	    // InternalDialogParser.g:8315:7: lv_op_2_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_op_2_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"op",
            	      								lv_op_2_0,
            	      								"com.ge.research.sadl.SADL.OpCompare");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8332:5: ( (lv_right_3_0= norm3_Addition ) )
            	    // InternalDialogParser.g:8333:6: (lv_right_3_0= norm3_Addition )
            	    {
            	    // InternalDialogParser.g:8333:6: (lv_right_3_0= norm3_Addition )
            	    // InternalDialogParser.g:8334:7: lv_right_3_0= norm3_Addition
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_134);
            	    lv_right_3_0=norm3_Addition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"com.ge.research.sadl.SADL.Addition");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop200;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_RelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // InternalDialogParser.g:8357:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalDialogParser.g:8357:49: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalDialogParser.g:8358:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalDialogParser.g:8364:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:8370:2: ( (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign ) )
            // InternalDialogParser.g:8371:2: (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign )
            {
            // InternalDialogParser.g:8371:2: (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign )
            int alt201=4;
            switch ( input.LA(1) ) {
            case GreaterThanSignEqualsSign:
                {
                alt201=1;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt201=2;
                }
                break;
            case GreaterThanSign:
                {
                alt201=3;
                }
                break;
            case LessThanSign:
                {
                alt201=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 201, 0, input);

                throw nvae;
            }

            switch (alt201) {
                case 1 :
                    // InternalDialogParser.g:8372:3: kw= GreaterThanSignEqualsSign
                    {
                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:8378:3: kw= LessThanSignEqualsSign
                    {
                    kw=(Token)match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:8384:3: kw= GreaterThanSign
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:8390:3: kw= LessThanSign
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleAddition"
    // InternalDialogParser.g:8399:1: entryRuleAddition returns [EObject current=null] : iv_ruleAddition= ruleAddition EOF ;
    public final EObject entryRuleAddition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAddition = null;


        try {
            // InternalDialogParser.g:8399:49: (iv_ruleAddition= ruleAddition EOF )
            // InternalDialogParser.g:8400:2: iv_ruleAddition= ruleAddition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAddition=ruleAddition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddition"


    // $ANTLR start "ruleAddition"
    // InternalDialogParser.g:8406:1: ruleAddition returns [EObject current=null] : (this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* ) ;
    public final EObject ruleAddition() throws RecognitionException {
        EObject current = null;

        EObject this_Multiplication_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8412:2: ( (this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* ) )
            // InternalDialogParser.g:8413:2: (this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* )
            {
            // InternalDialogParser.g:8413:2: (this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* )
            // InternalDialogParser.g:8414:3: this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_135);
            this_Multiplication_0=ruleMultiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Multiplication_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8422:3: ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )*
            loop202:
            do {
                int alt202=2;
                int LA202_0 = input.LA(1);

                if ( (LA202_0==PlusSign||LA202_0==HyphenMinus) ) {
                    alt202=1;
                }


                switch (alt202) {
            	case 1 :
            	    // InternalDialogParser.g:8423:4: () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) )
            	    {
            	    // InternalDialogParser.g:8423:4: ()
            	    // InternalDialogParser.g:8424:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:8430:4: ( (lv_op_2_0= ruleAddOp ) )
            	    // InternalDialogParser.g:8431:5: (lv_op_2_0= ruleAddOp )
            	    {
            	    // InternalDialogParser.g:8431:5: (lv_op_2_0= ruleAddOp )
            	    // InternalDialogParser.g:8432:6: lv_op_2_0= ruleAddOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleAddOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.AddOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8449:4: ( (lv_right_3_0= ruleMultiplication ) )
            	    // InternalDialogParser.g:8450:5: (lv_right_3_0= ruleMultiplication )
            	    {
            	    // InternalDialogParser.g:8450:5: (lv_right_3_0= ruleMultiplication )
            	    // InternalDialogParser.g:8451:6: lv_right_3_0= ruleMultiplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_135);
            	    lv_right_3_0=ruleMultiplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Multiplication");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop202;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddition"


    // $ANTLR start "norm1_Addition"
    // InternalDialogParser.g:8474:1: norm1_Addition returns [EObject current=null] : (this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )* ) ;
    public final EObject norm1_Addition() throws RecognitionException {
        EObject current = null;

        EObject this_Multiplication_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8480:2: ( (this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )* ) )
            // InternalDialogParser.g:8481:2: (this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )* )
            {
            // InternalDialogParser.g:8481:2: (this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )* )
            // InternalDialogParser.g:8482:3: this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_135);
            this_Multiplication_0=norm1_Multiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Multiplication_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8490:3: ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )*
            loop203:
            do {
                int alt203=2;
                int LA203_0 = input.LA(1);

                if ( (LA203_0==PlusSign||LA203_0==HyphenMinus) ) {
                    alt203=1;
                }


                switch (alt203) {
            	case 1 :
            	    // InternalDialogParser.g:8491:4: () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) )
            	    {
            	    // InternalDialogParser.g:8491:4: ()
            	    // InternalDialogParser.g:8492:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:8498:4: ( (lv_op_2_0= ruleAddOp ) )
            	    // InternalDialogParser.g:8499:5: (lv_op_2_0= ruleAddOp )
            	    {
            	    // InternalDialogParser.g:8499:5: (lv_op_2_0= ruleAddOp )
            	    // InternalDialogParser.g:8500:6: lv_op_2_0= ruleAddOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleAddOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.AddOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8517:4: ( (lv_right_3_0= norm1_Multiplication ) )
            	    // InternalDialogParser.g:8518:5: (lv_right_3_0= norm1_Multiplication )
            	    {
            	    // InternalDialogParser.g:8518:5: (lv_right_3_0= norm1_Multiplication )
            	    // InternalDialogParser.g:8519:6: lv_right_3_0= norm1_Multiplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_135);
            	    lv_right_3_0=norm1_Multiplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Multiplication");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop203;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_Addition"


    // $ANTLR start "norm2_Addition"
    // InternalDialogParser.g:8542:1: norm2_Addition returns [EObject current=null] : (this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )* ) ;
    public final EObject norm2_Addition() throws RecognitionException {
        EObject current = null;

        EObject this_Multiplication_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8548:2: ( (this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )* ) )
            // InternalDialogParser.g:8549:2: (this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )* )
            {
            // InternalDialogParser.g:8549:2: (this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )* )
            // InternalDialogParser.g:8550:3: this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_135);
            this_Multiplication_0=norm2_Multiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Multiplication_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8558:3: ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )*
            loop204:
            do {
                int alt204=2;
                int LA204_0 = input.LA(1);

                if ( (LA204_0==PlusSign||LA204_0==HyphenMinus) ) {
                    alt204=1;
                }


                switch (alt204) {
            	case 1 :
            	    // InternalDialogParser.g:8559:4: () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) )
            	    {
            	    // InternalDialogParser.g:8559:4: ()
            	    // InternalDialogParser.g:8560:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:8566:4: ( (lv_op_2_0= ruleAddOp ) )
            	    // InternalDialogParser.g:8567:5: (lv_op_2_0= ruleAddOp )
            	    {
            	    // InternalDialogParser.g:8567:5: (lv_op_2_0= ruleAddOp )
            	    // InternalDialogParser.g:8568:6: lv_op_2_0= ruleAddOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleAddOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.AddOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8585:4: ( (lv_right_3_0= norm2_Multiplication ) )
            	    // InternalDialogParser.g:8586:5: (lv_right_3_0= norm2_Multiplication )
            	    {
            	    // InternalDialogParser.g:8586:5: (lv_right_3_0= norm2_Multiplication )
            	    // InternalDialogParser.g:8587:6: lv_right_3_0= norm2_Multiplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_135);
            	    lv_right_3_0=norm2_Multiplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Multiplication");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop204;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_Addition"


    // $ANTLR start "norm3_Addition"
    // InternalDialogParser.g:8610:1: norm3_Addition returns [EObject current=null] : (this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )* ) ;
    public final EObject norm3_Addition() throws RecognitionException {
        EObject current = null;

        EObject this_Multiplication_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8616:2: ( (this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )* ) )
            // InternalDialogParser.g:8617:2: (this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )* )
            {
            // InternalDialogParser.g:8617:2: (this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )* )
            // InternalDialogParser.g:8618:3: this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_135);
            this_Multiplication_0=norm3_Multiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Multiplication_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8626:3: ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )*
            loop205:
            do {
                int alt205=2;
                int LA205_0 = input.LA(1);

                if ( (LA205_0==PlusSign||LA205_0==HyphenMinus) ) {
                    alt205=1;
                }


                switch (alt205) {
            	case 1 :
            	    // InternalDialogParser.g:8627:4: () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) )
            	    {
            	    // InternalDialogParser.g:8627:4: ()
            	    // InternalDialogParser.g:8628:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:8634:4: ( (lv_op_2_0= ruleAddOp ) )
            	    // InternalDialogParser.g:8635:5: (lv_op_2_0= ruleAddOp )
            	    {
            	    // InternalDialogParser.g:8635:5: (lv_op_2_0= ruleAddOp )
            	    // InternalDialogParser.g:8636:6: lv_op_2_0= ruleAddOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_op_2_0=ruleAddOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.AddOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8653:4: ( (lv_right_3_0= norm3_Multiplication ) )
            	    // InternalDialogParser.g:8654:5: (lv_right_3_0= norm3_Multiplication )
            	    {
            	    // InternalDialogParser.g:8654:5: (lv_right_3_0= norm3_Multiplication )
            	    // InternalDialogParser.g:8655:6: lv_right_3_0= norm3_Multiplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_135);
            	    lv_right_3_0=norm3_Multiplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Multiplication");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop205;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_Addition"


    // $ANTLR start "entryRuleAddOp"
    // InternalDialogParser.g:8677:1: entryRuleAddOp returns [String current=null] : iv_ruleAddOp= ruleAddOp EOF ;
    public final String entryRuleAddOp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAddOp = null;


        try {
            // InternalDialogParser.g:8677:45: (iv_ruleAddOp= ruleAddOp EOF )
            // InternalDialogParser.g:8678:2: iv_ruleAddOp= ruleAddOp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddOpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAddOp=ruleAddOp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddOp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddOp"


    // $ANTLR start "ruleAddOp"
    // InternalDialogParser.g:8684:1: ruleAddOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PlusSign | kw= HyphenMinus ) ;
    public final AntlrDatatypeRuleToken ruleAddOp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:8690:2: ( (kw= PlusSign | kw= HyphenMinus ) )
            // InternalDialogParser.g:8691:2: (kw= PlusSign | kw= HyphenMinus )
            {
            // InternalDialogParser.g:8691:2: (kw= PlusSign | kw= HyphenMinus )
            int alt206=2;
            int LA206_0 = input.LA(1);

            if ( (LA206_0==PlusSign) ) {
                alt206=1;
            }
            else if ( (LA206_0==HyphenMinus) ) {
                alt206=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 206, 0, input);

                throw nvae;
            }
            switch (alt206) {
                case 1 :
                    // InternalDialogParser.g:8692:3: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAddOpAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:8698:3: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAddOpAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddOp"


    // $ANTLR start "entryRuleMultiplication"
    // InternalDialogParser.g:8707:1: entryRuleMultiplication returns [EObject current=null] : iv_ruleMultiplication= ruleMultiplication EOF ;
    public final EObject entryRuleMultiplication() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplication = null;


        try {
            // InternalDialogParser.g:8707:55: (iv_ruleMultiplication= ruleMultiplication EOF )
            // InternalDialogParser.g:8708:2: iv_ruleMultiplication= ruleMultiplication EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplication=ruleMultiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplication; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplication"


    // $ANTLR start "ruleMultiplication"
    // InternalDialogParser.g:8714:1: ruleMultiplication returns [EObject current=null] : (this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )* ) ;
    public final EObject ruleMultiplication() throws RecognitionException {
        EObject current = null;

        EObject this_Power_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8720:2: ( (this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )* ) )
            // InternalDialogParser.g:8721:2: (this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )* )
            {
            // InternalDialogParser.g:8721:2: (this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )* )
            // InternalDialogParser.g:8722:3: this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_136);
            this_Power_0=rulePower();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Power_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8730:3: ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )*
            loop207:
            do {
                int alt207=2;
                int LA207_0 = input.LA(1);

                if ( (LA207_0==PercentSign||LA207_0==Asterisk||LA207_0==Solidus) ) {
                    alt207=1;
                }


                switch (alt207) {
            	case 1 :
            	    // InternalDialogParser.g:8731:4: () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) )
            	    {
            	    // InternalDialogParser.g:8731:4: ()
            	    // InternalDialogParser.g:8732:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:8738:4: ( (lv_op_2_0= ruleMultiOp ) )
            	    // InternalDialogParser.g:8739:5: (lv_op_2_0= ruleMultiOp )
            	    {
            	    // InternalDialogParser.g:8739:5: (lv_op_2_0= ruleMultiOp )
            	    // InternalDialogParser.g:8740:6: lv_op_2_0= ruleMultiOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleMultiOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.MultiOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8757:4: ( (lv_right_3_0= rulePower ) )
            	    // InternalDialogParser.g:8758:5: (lv_right_3_0= rulePower )
            	    {
            	    // InternalDialogParser.g:8758:5: (lv_right_3_0= rulePower )
            	    // InternalDialogParser.g:8759:6: lv_right_3_0= rulePower
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_136);
            	    lv_right_3_0=rulePower();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Power");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop207;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplication"


    // $ANTLR start "norm1_Multiplication"
    // InternalDialogParser.g:8782:1: norm1_Multiplication returns [EObject current=null] : (this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )* ) ;
    public final EObject norm1_Multiplication() throws RecognitionException {
        EObject current = null;

        EObject this_Power_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8788:2: ( (this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )* ) )
            // InternalDialogParser.g:8789:2: (this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )* )
            {
            // InternalDialogParser.g:8789:2: (this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )* )
            // InternalDialogParser.g:8790:3: this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_136);
            this_Power_0=norm1_Power();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Power_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8798:3: ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )*
            loop208:
            do {
                int alt208=2;
                int LA208_0 = input.LA(1);

                if ( (LA208_0==PercentSign||LA208_0==Asterisk||LA208_0==Solidus) ) {
                    alt208=1;
                }


                switch (alt208) {
            	case 1 :
            	    // InternalDialogParser.g:8799:4: () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) )
            	    {
            	    // InternalDialogParser.g:8799:4: ()
            	    // InternalDialogParser.g:8800:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:8806:4: ( (lv_op_2_0= ruleMultiOp ) )
            	    // InternalDialogParser.g:8807:5: (lv_op_2_0= ruleMultiOp )
            	    {
            	    // InternalDialogParser.g:8807:5: (lv_op_2_0= ruleMultiOp )
            	    // InternalDialogParser.g:8808:6: lv_op_2_0= ruleMultiOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleMultiOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.MultiOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8825:4: ( (lv_right_3_0= norm1_Power ) )
            	    // InternalDialogParser.g:8826:5: (lv_right_3_0= norm1_Power )
            	    {
            	    // InternalDialogParser.g:8826:5: (lv_right_3_0= norm1_Power )
            	    // InternalDialogParser.g:8827:6: lv_right_3_0= norm1_Power
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_136);
            	    lv_right_3_0=norm1_Power();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Power");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop208;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_Multiplication"


    // $ANTLR start "norm2_Multiplication"
    // InternalDialogParser.g:8850:1: norm2_Multiplication returns [EObject current=null] : (this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )* ) ;
    public final EObject norm2_Multiplication() throws RecognitionException {
        EObject current = null;

        EObject this_Power_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8856:2: ( (this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )* ) )
            // InternalDialogParser.g:8857:2: (this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )* )
            {
            // InternalDialogParser.g:8857:2: (this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )* )
            // InternalDialogParser.g:8858:3: this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_136);
            this_Power_0=norm2_Power();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Power_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8866:3: ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )*
            loop209:
            do {
                int alt209=2;
                int LA209_0 = input.LA(1);

                if ( (LA209_0==PercentSign||LA209_0==Asterisk||LA209_0==Solidus) ) {
                    alt209=1;
                }


                switch (alt209) {
            	case 1 :
            	    // InternalDialogParser.g:8867:4: () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) )
            	    {
            	    // InternalDialogParser.g:8867:4: ()
            	    // InternalDialogParser.g:8868:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:8874:4: ( (lv_op_2_0= ruleMultiOp ) )
            	    // InternalDialogParser.g:8875:5: (lv_op_2_0= ruleMultiOp )
            	    {
            	    // InternalDialogParser.g:8875:5: (lv_op_2_0= ruleMultiOp )
            	    // InternalDialogParser.g:8876:6: lv_op_2_0= ruleMultiOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleMultiOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.MultiOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8893:4: ( (lv_right_3_0= norm2_Power ) )
            	    // InternalDialogParser.g:8894:5: (lv_right_3_0= norm2_Power )
            	    {
            	    // InternalDialogParser.g:8894:5: (lv_right_3_0= norm2_Power )
            	    // InternalDialogParser.g:8895:6: lv_right_3_0= norm2_Power
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_136);
            	    lv_right_3_0=norm2_Power();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Power");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop209;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_Multiplication"


    // $ANTLR start "norm3_Multiplication"
    // InternalDialogParser.g:8918:1: norm3_Multiplication returns [EObject current=null] : (this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )* ) ;
    public final EObject norm3_Multiplication() throws RecognitionException {
        EObject current = null;

        EObject this_Power_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8924:2: ( (this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )* ) )
            // InternalDialogParser.g:8925:2: (this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )* )
            {
            // InternalDialogParser.g:8925:2: (this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )* )
            // InternalDialogParser.g:8926:3: this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_136);
            this_Power_0=norm3_Power();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Power_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8934:3: ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )*
            loop210:
            do {
                int alt210=2;
                int LA210_0 = input.LA(1);

                if ( (LA210_0==PercentSign||LA210_0==Asterisk||LA210_0==Solidus) ) {
                    alt210=1;
                }


                switch (alt210) {
            	case 1 :
            	    // InternalDialogParser.g:8935:4: () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) )
            	    {
            	    // InternalDialogParser.g:8935:4: ()
            	    // InternalDialogParser.g:8936:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:8942:4: ( (lv_op_2_0= ruleMultiOp ) )
            	    // InternalDialogParser.g:8943:5: (lv_op_2_0= ruleMultiOp )
            	    {
            	    // InternalDialogParser.g:8943:5: (lv_op_2_0= ruleMultiOp )
            	    // InternalDialogParser.g:8944:6: lv_op_2_0= ruleMultiOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_op_2_0=ruleMultiOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.MultiOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8961:4: ( (lv_right_3_0= norm3_Power ) )
            	    // InternalDialogParser.g:8962:5: (lv_right_3_0= norm3_Power )
            	    {
            	    // InternalDialogParser.g:8962:5: (lv_right_3_0= norm3_Power )
            	    // InternalDialogParser.g:8963:6: lv_right_3_0= norm3_Power
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_136);
            	    lv_right_3_0=norm3_Power();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Power");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop210;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_Multiplication"


    // $ANTLR start "entryRuleMultiOp"
    // InternalDialogParser.g:8985:1: entryRuleMultiOp returns [String current=null] : iv_ruleMultiOp= ruleMultiOp EOF ;
    public final String entryRuleMultiOp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMultiOp = null;


        try {
            // InternalDialogParser.g:8985:47: (iv_ruleMultiOp= ruleMultiOp EOF )
            // InternalDialogParser.g:8986:2: iv_ruleMultiOp= ruleMultiOp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiOpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiOp=ruleMultiOp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiOp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiOp"


    // $ANTLR start "ruleMultiOp"
    // InternalDialogParser.g:8992:1: ruleMultiOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Asterisk | kw= Solidus | kw= PercentSign ) ;
    public final AntlrDatatypeRuleToken ruleMultiOp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:8998:2: ( (kw= Asterisk | kw= Solidus | kw= PercentSign ) )
            // InternalDialogParser.g:8999:2: (kw= Asterisk | kw= Solidus | kw= PercentSign )
            {
            // InternalDialogParser.g:8999:2: (kw= Asterisk | kw= Solidus | kw= PercentSign )
            int alt211=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt211=1;
                }
                break;
            case Solidus:
                {
                alt211=2;
                }
                break;
            case PercentSign:
                {
                alt211=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 211, 0, input);

                throw nvae;
            }

            switch (alt211) {
                case 1 :
                    // InternalDialogParser.g:9000:3: kw= Asterisk
                    {
                    kw=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiOpAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:9006:3: kw= Solidus
                    {
                    kw=(Token)match(input,Solidus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiOpAccess().getSolidusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:9012:3: kw= PercentSign
                    {
                    kw=(Token)match(input,PercentSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiOpAccess().getPercentSignKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiOp"


    // $ANTLR start "entryRulePower"
    // InternalDialogParser.g:9021:1: entryRulePower returns [EObject current=null] : iv_rulePower= rulePower EOF ;
    public final EObject entryRulePower() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePower = null;


        try {
            // InternalDialogParser.g:9021:46: (iv_rulePower= rulePower EOF )
            // InternalDialogParser.g:9022:2: iv_rulePower= rulePower EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPowerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePower=rulePower();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePower; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePower"


    // $ANTLR start "rulePower"
    // InternalDialogParser.g:9028:1: rulePower returns [EObject current=null] : (this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )* ) ;
    public final EObject rulePower() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_PropOfSubject_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9034:2: ( (this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )* ) )
            // InternalDialogParser.g:9035:2: (this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )* )
            {
            // InternalDialogParser.g:9035:2: (this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )* )
            // InternalDialogParser.g:9036:3: this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_137);
            this_PropOfSubject_0=rulePropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PropOfSubject_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9044:3: ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )*
            loop212:
            do {
                int alt212=2;
                int LA212_0 = input.LA(1);

                if ( (LA212_0==CircumflexAccent) ) {
                    alt212=1;
                }


                switch (alt212) {
            	case 1 :
            	    // InternalDialogParser.g:9045:4: () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) )
            	    {
            	    // InternalDialogParser.g:9045:4: ()
            	    // InternalDialogParser.g:9046:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:9052:4: ( (lv_op_2_0= CircumflexAccent ) )
            	    // InternalDialogParser.g:9053:5: (lv_op_2_0= CircumflexAccent )
            	    {
            	    // InternalDialogParser.g:9053:5: (lv_op_2_0= CircumflexAccent )
            	    // InternalDialogParser.g:9054:6: lv_op_2_0= CircumflexAccent
            	    {
            	    lv_op_2_0=(Token)match(input,CircumflexAccent,FOLLOW_121); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getPowerRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:9066:4: ( (lv_right_3_0= rulePropOfSubject ) )
            	    // InternalDialogParser.g:9067:5: (lv_right_3_0= rulePropOfSubject )
            	    {
            	    // InternalDialogParser.g:9067:5: (lv_right_3_0= rulePropOfSubject )
            	    // InternalDialogParser.g:9068:6: lv_right_3_0= rulePropOfSubject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_right_3_0=rulePropOfSubject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPowerRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.PropOfSubject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop212;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePower"


    // $ANTLR start "norm1_Power"
    // InternalDialogParser.g:9091:1: norm1_Power returns [EObject current=null] : (this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )* ) ;
    public final EObject norm1_Power() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_PropOfSubject_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9097:2: ( (this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )* ) )
            // InternalDialogParser.g:9098:2: (this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )* )
            {
            // InternalDialogParser.g:9098:2: (this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )* )
            // InternalDialogParser.g:9099:3: this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_137);
            this_PropOfSubject_0=norm1_PropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PropOfSubject_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9107:3: ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )*
            loop213:
            do {
                int alt213=2;
                int LA213_0 = input.LA(1);

                if ( (LA213_0==CircumflexAccent) ) {
                    alt213=1;
                }


                switch (alt213) {
            	case 1 :
            	    // InternalDialogParser.g:9108:4: () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) )
            	    {
            	    // InternalDialogParser.g:9108:4: ()
            	    // InternalDialogParser.g:9109:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:9115:4: ( (lv_op_2_0= CircumflexAccent ) )
            	    // InternalDialogParser.g:9116:5: (lv_op_2_0= CircumflexAccent )
            	    {
            	    // InternalDialogParser.g:9116:5: (lv_op_2_0= CircumflexAccent )
            	    // InternalDialogParser.g:9117:6: lv_op_2_0= CircumflexAccent
            	    {
            	    lv_op_2_0=(Token)match(input,CircumflexAccent,FOLLOW_121); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getPowerRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:9129:4: ( (lv_right_3_0= norm1_PropOfSubject ) )
            	    // InternalDialogParser.g:9130:5: (lv_right_3_0= norm1_PropOfSubject )
            	    {
            	    // InternalDialogParser.g:9130:5: (lv_right_3_0= norm1_PropOfSubject )
            	    // InternalDialogParser.g:9131:6: lv_right_3_0= norm1_PropOfSubject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_right_3_0=norm1_PropOfSubject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPowerRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.PropOfSubject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop213;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_Power"


    // $ANTLR start "norm2_Power"
    // InternalDialogParser.g:9154:1: norm2_Power returns [EObject current=null] : (this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )* ) ;
    public final EObject norm2_Power() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_PropOfSubject_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9160:2: ( (this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )* ) )
            // InternalDialogParser.g:9161:2: (this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )* )
            {
            // InternalDialogParser.g:9161:2: (this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )* )
            // InternalDialogParser.g:9162:3: this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_137);
            this_PropOfSubject_0=norm2_PropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PropOfSubject_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9170:3: ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )*
            loop214:
            do {
                int alt214=2;
                int LA214_0 = input.LA(1);

                if ( (LA214_0==CircumflexAccent) ) {
                    alt214=1;
                }


                switch (alt214) {
            	case 1 :
            	    // InternalDialogParser.g:9171:4: () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) )
            	    {
            	    // InternalDialogParser.g:9171:4: ()
            	    // InternalDialogParser.g:9172:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:9178:4: ( (lv_op_2_0= CircumflexAccent ) )
            	    // InternalDialogParser.g:9179:5: (lv_op_2_0= CircumflexAccent )
            	    {
            	    // InternalDialogParser.g:9179:5: (lv_op_2_0= CircumflexAccent )
            	    // InternalDialogParser.g:9180:6: lv_op_2_0= CircumflexAccent
            	    {
            	    lv_op_2_0=(Token)match(input,CircumflexAccent,FOLLOW_121); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getPowerRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:9192:4: ( (lv_right_3_0= norm2_PropOfSubject ) )
            	    // InternalDialogParser.g:9193:5: (lv_right_3_0= norm2_PropOfSubject )
            	    {
            	    // InternalDialogParser.g:9193:5: (lv_right_3_0= norm2_PropOfSubject )
            	    // InternalDialogParser.g:9194:6: lv_right_3_0= norm2_PropOfSubject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_right_3_0=norm2_PropOfSubject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPowerRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.PropOfSubject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop214;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_Power"


    // $ANTLR start "norm3_Power"
    // InternalDialogParser.g:9217:1: norm3_Power returns [EObject current=null] : (this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )* ) ;
    public final EObject norm3_Power() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_PropOfSubject_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9223:2: ( (this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )* ) )
            // InternalDialogParser.g:9224:2: (this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )* )
            {
            // InternalDialogParser.g:9224:2: (this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )* )
            // InternalDialogParser.g:9225:3: this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_137);
            this_PropOfSubject_0=norm3_PropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PropOfSubject_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9233:3: ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )*
            loop215:
            do {
                int alt215=2;
                int LA215_0 = input.LA(1);

                if ( (LA215_0==CircumflexAccent) ) {
                    alt215=1;
                }


                switch (alt215) {
            	case 1 :
            	    // InternalDialogParser.g:9234:4: () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) )
            	    {
            	    // InternalDialogParser.g:9234:4: ()
            	    // InternalDialogParser.g:9235:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:9241:4: ( (lv_op_2_0= CircumflexAccent ) )
            	    // InternalDialogParser.g:9242:5: (lv_op_2_0= CircumflexAccent )
            	    {
            	    // InternalDialogParser.g:9242:5: (lv_op_2_0= CircumflexAccent )
            	    // InternalDialogParser.g:9243:6: lv_op_2_0= CircumflexAccent
            	    {
            	    lv_op_2_0=(Token)match(input,CircumflexAccent,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getPowerRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:9255:4: ( (lv_right_3_0= norm3_PropOfSubject ) )
            	    // InternalDialogParser.g:9256:5: (lv_right_3_0= norm3_PropOfSubject )
            	    {
            	    // InternalDialogParser.g:9256:5: (lv_right_3_0= norm3_PropOfSubject )
            	    // InternalDialogParser.g:9257:6: lv_right_3_0= norm3_PropOfSubject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_right_3_0=norm3_PropOfSubject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPowerRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.PropOfSubject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop215;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_Power"


    // $ANTLR start "entryRulePropOfSubject"
    // InternalDialogParser.g:9279:1: entryRulePropOfSubject returns [EObject current=null] : iv_rulePropOfSubject= rulePropOfSubject EOF ;
    public final EObject entryRulePropOfSubject() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropOfSubject = null;


        try {
            // InternalDialogParser.g:9279:54: (iv_rulePropOfSubject= rulePropOfSubject EOF )
            // InternalDialogParser.g:9280:2: iv_rulePropOfSubject= rulePropOfSubject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropOfSubjectRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropOfSubject=rulePropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropOfSubject; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropOfSubject"


    // $ANTLR start "rulePropOfSubject"
    // InternalDialogParser.g:9286:1: rulePropOfSubject returns [EObject current=null] : (this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )? ) ;
    public final EObject rulePropOfSubject() throws RecognitionException {
        EObject current = null;

        Token lv_of_2_1=null;
        Token lv_of_2_2=null;
        Token lv_of_2_3=null;
        Token otherlv_5=null;
        EObject this_ElementInList_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_prop_6_0 = null;

        EObject lv_right_7_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9292:2: ( (this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )? ) )
            // InternalDialogParser.g:9293:2: (this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )? )
            {
            // InternalDialogParser.g:9293:2: (this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )? )
            // InternalDialogParser.g:9294:3: this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_138);
            this_ElementInList_0=ruleElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementInList_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9302:3: ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )?
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==Of) && (synpred19_InternalDialogParser())) {
                alt221=1;
            }
            else if ( (LA221_0==For) && (synpred19_InternalDialogParser())) {
                alt221=1;
            }
            else if ( (LA221_0==In) && (synpred19_InternalDialogParser())) {
                alt221=1;
            }
            else if ( (LA221_0==Has) && (synpred19_InternalDialogParser())) {
                alt221=1;
            }
            else if ( (LA221_0==RULE_QNAME_TERMINAL) && (synpred19_InternalDialogParser())) {
                alt221=1;
            }
            else if ( (LA221_0==RULE_ID) && (synpred19_InternalDialogParser())) {
                alt221=1;
            }
            switch (alt221) {
                case 1 :
                    // InternalDialogParser.g:9303:4: ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ )
                    {
                    // InternalDialogParser.g:9304:4: ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ )
                    int alt220=2;
                    int LA220_0 = input.LA(1);

                    if ( (LA220_0==For||LA220_0==In||LA220_0==Of) ) {
                        alt220=1;
                    }
                    else if ( (LA220_0==Has||(LA220_0>=RULE_ID && LA220_0<=RULE_QNAME_TERMINAL)) ) {
                        alt220=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 220, 0, input);

                        throw nvae;
                    }
                    switch (alt220) {
                        case 1 :
                            // InternalDialogParser.g:9305:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )
                            {
                            // InternalDialogParser.g:9305:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )
                            // InternalDialogParser.g:9306:6: () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) )
                            {
                            // InternalDialogParser.g:9306:6: ()
                            // InternalDialogParser.g:9307:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:9313:6: ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) )
                            // InternalDialogParser.g:9314:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            {
                            // InternalDialogParser.g:9314:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            // InternalDialogParser.g:9315:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            {
                            // InternalDialogParser.g:9315:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            int alt216=3;
                            switch ( input.LA(1) ) {
                            case Of:
                                {
                                alt216=1;
                                }
                                break;
                            case For:
                                {
                                alt216=2;
                                }
                                break;
                            case In:
                                {
                                alt216=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 216, 0, input);

                                throw nvae;
                            }

                            switch (alt216) {
                                case 1 :
                                    // InternalDialogParser.g:9316:9: lv_of_2_1= Of
                                    {
                                    lv_of_2_1=(Token)match(input,Of,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_1, null);
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:9327:9: lv_of_2_2= For
                                    {
                                    lv_of_2_2=(Token)match(input,For,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_2, null);
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalDialogParser.g:9338:9: lv_of_2_3= In
                                    {
                                    lv_of_2_3=(Token)match(input,In,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_3, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalDialogParser.g:9351:6: ( (lv_right_3_0= rulePropOfSubject ) )
                            // InternalDialogParser.g:9352:7: (lv_right_3_0= rulePropOfSubject )
                            {
                            // InternalDialogParser.g:9352:7: (lv_right_3_0= rulePropOfSubject )
                            // InternalDialogParser.g:9353:8: lv_right_3_0= rulePropOfSubject
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_3_0=rulePropOfSubject();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_3_0,
                              									"com.ge.research.sadl.SADL.PropOfSubject");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:9372:5: ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+
                            {
                            // InternalDialogParser.g:9372:5: ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+
                            int cnt219=0;
                            loop219:
                            do {
                                int alt219=2;
                                int LA219_0 = input.LA(1);

                                if ( (LA219_0==Has) && (synpred20_InternalDialogParser())) {
                                    alt219=1;
                                }
                                else if ( (LA219_0==RULE_QNAME_TERMINAL) && (synpred20_InternalDialogParser())) {
                                    alt219=1;
                                }
                                else if ( (LA219_0==RULE_ID) && (synpred20_InternalDialogParser())) {
                                    alt219=1;
                                }


                                switch (alt219) {
                            	case 1 :
                            	    // InternalDialogParser.g:9373:6: ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? )
                            	    {
                            	    // InternalDialogParser.g:9374:6: ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? )
                            	    // InternalDialogParser.g:9375:7: () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )?
                            	    {
                            	    // InternalDialogParser.g:9375:7: ()
                            	    // InternalDialogParser.g:9376:8: 
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								current = forceCreateModelElementAndSet(
                            	      									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
                            	      									current);
                            	      							
                            	    }

                            	    }

                            	    // InternalDialogParser.g:9382:7: (otherlv_5= Has )?
                            	    int alt217=2;
                            	    int LA217_0 = input.LA(1);

                            	    if ( (LA217_0==Has) ) {
                            	        alt217=1;
                            	    }
                            	    switch (alt217) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9383:8: otherlv_5= Has
                            	            {
                            	            otherlv_5=(Token)match(input,Has,FOLLOW_9); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_5, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:9388:7: ( (lv_prop_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:9389:8: (lv_prop_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:9389:8: (lv_prop_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:9390:9: lv_prop_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_139);
                            	    lv_prop_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	      									}
                            	      									set(
                            	      										current,
                            	      										"prop",
                            	      										lv_prop_6_0,
                            	      										"com.ge.research.sadl.SADL.SadlResource");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }

                            	    // InternalDialogParser.g:9407:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )?
                            	    int alt218=2;
                            	    alt218 = dfa218.predict(input);
                            	    switch (alt218) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9408:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList )
                            	            {
                            	            // InternalDialogParser.g:9409:8: (lv_right_7_0= ruleElementInList )
                            	            // InternalDialogParser.g:9410:9: lv_right_7_0= ruleElementInList
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
                            	              								
                            	            }
                            	            pushFollow(FOLLOW_140);
                            	            lv_right_7_0=ruleElementInList();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									set(
                            	              										current,
                            	              										"right",
                            	              										lv_right_7_0,
                            	              										"com.ge.research.sadl.SADL.ElementInList");
                            	              									afterParserOrEnumRuleCall();
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt219 >= 1 ) break loop219;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(219, input);
                                        throw eee;
                                }
                                cnt219++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropOfSubject"


    // $ANTLR start "norm1_PropOfSubject"
    // InternalDialogParser.g:9436:1: norm1_PropOfSubject returns [EObject current=null] : (this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )? ) ;
    public final EObject norm1_PropOfSubject() throws RecognitionException {
        EObject current = null;

        Token lv_of_2_1=null;
        Token lv_of_2_2=null;
        Token lv_of_2_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_ElementInList_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_prop_7_0 = null;

        EObject lv_right_8_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9442:2: ( (this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )? ) )
            // InternalDialogParser.g:9443:2: (this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )? )
            {
            // InternalDialogParser.g:9443:2: (this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )? )
            // InternalDialogParser.g:9444:3: this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_141);
            this_ElementInList_0=norm1_ElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementInList_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9452:3: ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )?
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==Of) && (synpred22_InternalDialogParser())) {
                alt227=1;
            }
            else if ( (LA227_0==For) && (synpred22_InternalDialogParser())) {
                alt227=1;
            }
            else if ( (LA227_0==In) && (synpred22_InternalDialogParser())) {
                alt227=1;
            }
            else if ( (LA227_0==With) && (synpred22_InternalDialogParser())) {
                alt227=1;
            }
            else if ( (LA227_0==Has) && (synpred22_InternalDialogParser())) {
                alt227=1;
            }
            else if ( (LA227_0==RULE_QNAME_TERMINAL) && (synpred22_InternalDialogParser())) {
                alt227=1;
            }
            else if ( (LA227_0==RULE_ID) && (synpred22_InternalDialogParser())) {
                alt227=1;
            }
            switch (alt227) {
                case 1 :
                    // InternalDialogParser.g:9453:4: ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ )
                    {
                    // InternalDialogParser.g:9454:4: ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ )
                    int alt226=2;
                    int LA226_0 = input.LA(1);

                    if ( (LA226_0==For||LA226_0==In||LA226_0==Of) ) {
                        alt226=1;
                    }
                    else if ( (LA226_0==With||LA226_0==Has||(LA226_0>=RULE_ID && LA226_0<=RULE_QNAME_TERMINAL)) ) {
                        alt226=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 226, 0, input);

                        throw nvae;
                    }
                    switch (alt226) {
                        case 1 :
                            // InternalDialogParser.g:9455:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )
                            {
                            // InternalDialogParser.g:9455:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )
                            // InternalDialogParser.g:9456:6: () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) )
                            {
                            // InternalDialogParser.g:9456:6: ()
                            // InternalDialogParser.g:9457:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:9463:6: ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) )
                            // InternalDialogParser.g:9464:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            {
                            // InternalDialogParser.g:9464:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            // InternalDialogParser.g:9465:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            {
                            // InternalDialogParser.g:9465:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            int alt222=3;
                            switch ( input.LA(1) ) {
                            case Of:
                                {
                                alt222=1;
                                }
                                break;
                            case For:
                                {
                                alt222=2;
                                }
                                break;
                            case In:
                                {
                                alt222=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 222, 0, input);

                                throw nvae;
                            }

                            switch (alt222) {
                                case 1 :
                                    // InternalDialogParser.g:9466:9: lv_of_2_1= Of
                                    {
                                    lv_of_2_1=(Token)match(input,Of,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_1, null);
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:9477:9: lv_of_2_2= For
                                    {
                                    lv_of_2_2=(Token)match(input,For,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_2, null);
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalDialogParser.g:9488:9: lv_of_2_3= In
                                    {
                                    lv_of_2_3=(Token)match(input,In,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_3, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalDialogParser.g:9501:6: ( (lv_right_3_0= norm1_PropOfSubject ) )
                            // InternalDialogParser.g:9502:7: (lv_right_3_0= norm1_PropOfSubject )
                            {
                            // InternalDialogParser.g:9502:7: (lv_right_3_0= norm1_PropOfSubject )
                            // InternalDialogParser.g:9503:8: lv_right_3_0= norm1_PropOfSubject
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_3_0=norm1_PropOfSubject();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_3_0,
                              									"com.ge.research.sadl.SADL.PropOfSubject");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:9522:5: ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+
                            {
                            // InternalDialogParser.g:9522:5: ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+
                            int cnt225=0;
                            loop225:
                            do {
                                int alt225=2;
                                int LA225_0 = input.LA(1);

                                if ( (LA225_0==With) && (synpred23_InternalDialogParser())) {
                                    alt225=1;
                                }
                                else if ( (LA225_0==Has) && (synpred23_InternalDialogParser())) {
                                    alt225=1;
                                }
                                else if ( (LA225_0==RULE_QNAME_TERMINAL) && (synpred23_InternalDialogParser())) {
                                    alt225=1;
                                }
                                else if ( (LA225_0==RULE_ID) && (synpred23_InternalDialogParser())) {
                                    alt225=1;
                                }


                                switch (alt225) {
                            	case 1 :
                            	    // InternalDialogParser.g:9523:6: ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? )
                            	    {
                            	    // InternalDialogParser.g:9524:6: ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? )
                            	    // InternalDialogParser.g:9525:7: () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )?
                            	    {
                            	    // InternalDialogParser.g:9525:7: ()
                            	    // InternalDialogParser.g:9526:8: 
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								current = forceCreateModelElementAndSet(
                            	      									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
                            	      									current);
                            	      							
                            	    }

                            	    }

                            	    // InternalDialogParser.g:9532:7: (otherlv_5= With | otherlv_6= Has )?
                            	    int alt223=3;
                            	    int LA223_0 = input.LA(1);

                            	    if ( (LA223_0==With) ) {
                            	        alt223=1;
                            	    }
                            	    else if ( (LA223_0==Has) ) {
                            	        alt223=2;
                            	    }
                            	    switch (alt223) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9533:8: otherlv_5= With
                            	            {
                            	            otherlv_5=(Token)match(input,With,FOLLOW_9); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_5, grammarAccess.getPropOfSubjectAccess().getWithKeyword_1_0_1_0_2_0_0());
                            	              							
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // InternalDialogParser.g:9538:8: otherlv_6= Has
                            	            {
                            	            otherlv_6=(Token)match(input,Has,FOLLOW_9); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_6, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:9543:7: ( (lv_prop_7_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:9544:8: (lv_prop_7_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:9544:8: (lv_prop_7_0= ruleSadlResource )
                            	    // InternalDialogParser.g:9545:9: lv_prop_7_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_142);
                            	    lv_prop_7_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	      									}
                            	      									set(
                            	      										current,
                            	      										"prop",
                            	      										lv_prop_7_0,
                            	      										"com.ge.research.sadl.SADL.SadlResource");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }

                            	    // InternalDialogParser.g:9562:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )?
                            	    int alt224=2;
                            	    alt224 = dfa224.predict(input);
                            	    switch (alt224) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9563:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList )
                            	            {
                            	            // InternalDialogParser.g:9564:8: (lv_right_8_0= norm1_ElementInList )
                            	            // InternalDialogParser.g:9565:9: lv_right_8_0= norm1_ElementInList
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
                            	              								
                            	            }
                            	            pushFollow(FOLLOW_143);
                            	            lv_right_8_0=norm1_ElementInList();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									set(
                            	              										current,
                            	              										"right",
                            	              										lv_right_8_0,
                            	              										"com.ge.research.sadl.SADL.ElementInList");
                            	              									afterParserOrEnumRuleCall();
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt225 >= 1 ) break loop225;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(225, input);
                                        throw eee;
                                }
                                cnt225++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_PropOfSubject"


    // $ANTLR start "norm2_PropOfSubject"
    // InternalDialogParser.g:9591:1: norm2_PropOfSubject returns [EObject current=null] : (this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )? ) ;
    public final EObject norm2_PropOfSubject() throws RecognitionException {
        EObject current = null;

        Token lv_of_2_1=null;
        Token lv_of_2_2=null;
        Token lv_of_2_3=null;
        Token lv_comma_5_0=null;
        Token otherlv_6=null;
        EObject this_ElementInList_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_prop_7_0 = null;

        EObject lv_right_8_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9597:2: ( (this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )? ) )
            // InternalDialogParser.g:9598:2: (this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )? )
            {
            // InternalDialogParser.g:9598:2: (this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )? )
            // InternalDialogParser.g:9599:3: this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_144);
            this_ElementInList_0=norm2_ElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementInList_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9607:3: ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )?
            int alt234=2;
            int LA234_0 = input.LA(1);

            if ( (LA234_0==Of) && (synpred25_InternalDialogParser())) {
                alt234=1;
            }
            else if ( (LA234_0==For) && (synpred25_InternalDialogParser())) {
                alt234=1;
            }
            else if ( (LA234_0==In) && (synpred25_InternalDialogParser())) {
                alt234=1;
            }
            else if ( (LA234_0==Comma) && (synpred25_InternalDialogParser())) {
                alt234=1;
            }
            else if ( (LA234_0==Has) && (synpred25_InternalDialogParser())) {
                alt234=1;
            }
            else if ( (LA234_0==RULE_QNAME_TERMINAL) && (synpred25_InternalDialogParser())) {
                alt234=1;
            }
            else if ( (LA234_0==RULE_ID) && (synpred25_InternalDialogParser())) {
                alt234=1;
            }
            switch (alt234) {
                case 1 :
                    // InternalDialogParser.g:9608:4: ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ )
                    {
                    // InternalDialogParser.g:9609:4: ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ )
                    int alt233=2;
                    int LA233_0 = input.LA(1);

                    if ( (LA233_0==For||LA233_0==In||LA233_0==Of) ) {
                        alt233=1;
                    }
                    else if ( (LA233_0==Has||LA233_0==Comma||(LA233_0>=RULE_ID && LA233_0<=RULE_QNAME_TERMINAL)) ) {
                        alt233=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 233, 0, input);

                        throw nvae;
                    }
                    switch (alt233) {
                        case 1 :
                            // InternalDialogParser.g:9610:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )
                            {
                            // InternalDialogParser.g:9610:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )
                            // InternalDialogParser.g:9611:6: () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) )
                            {
                            // InternalDialogParser.g:9611:6: ()
                            // InternalDialogParser.g:9612:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:9618:6: ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) )
                            // InternalDialogParser.g:9619:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            {
                            // InternalDialogParser.g:9619:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            // InternalDialogParser.g:9620:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            {
                            // InternalDialogParser.g:9620:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            int alt228=3;
                            switch ( input.LA(1) ) {
                            case Of:
                                {
                                alt228=1;
                                }
                                break;
                            case For:
                                {
                                alt228=2;
                                }
                                break;
                            case In:
                                {
                                alt228=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 228, 0, input);

                                throw nvae;
                            }

                            switch (alt228) {
                                case 1 :
                                    // InternalDialogParser.g:9621:9: lv_of_2_1= Of
                                    {
                                    lv_of_2_1=(Token)match(input,Of,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_1, null);
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:9632:9: lv_of_2_2= For
                                    {
                                    lv_of_2_2=(Token)match(input,For,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_2, null);
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalDialogParser.g:9643:9: lv_of_2_3= In
                                    {
                                    lv_of_2_3=(Token)match(input,In,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_3, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalDialogParser.g:9656:6: ( (lv_right_3_0= norm2_PropOfSubject ) )
                            // InternalDialogParser.g:9657:7: (lv_right_3_0= norm2_PropOfSubject )
                            {
                            // InternalDialogParser.g:9657:7: (lv_right_3_0= norm2_PropOfSubject )
                            // InternalDialogParser.g:9658:8: lv_right_3_0= norm2_PropOfSubject
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_3_0=norm2_PropOfSubject();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_3_0,
                              									"com.ge.research.sadl.SADL.PropOfSubject");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:9677:5: ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+
                            {
                            // InternalDialogParser.g:9677:5: ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+
                            int cnt232=0;
                            loop232:
                            do {
                                int alt232=2;
                                int LA232_0 = input.LA(1);

                                if ( (LA232_0==Comma) && (synpred26_InternalDialogParser())) {
                                    alt232=1;
                                }
                                else if ( (LA232_0==Has) && (synpred26_InternalDialogParser())) {
                                    alt232=1;
                                }
                                else if ( (LA232_0==RULE_QNAME_TERMINAL) && (synpred26_InternalDialogParser())) {
                                    alt232=1;
                                }
                                else if ( (LA232_0==RULE_ID) && (synpred26_InternalDialogParser())) {
                                    alt232=1;
                                }


                                switch (alt232) {
                            	case 1 :
                            	    // InternalDialogParser.g:9678:6: ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? )
                            	    {
                            	    // InternalDialogParser.g:9679:6: ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? )
                            	    // InternalDialogParser.g:9680:7: () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )?
                            	    {
                            	    // InternalDialogParser.g:9680:7: ()
                            	    // InternalDialogParser.g:9681:8: 
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								current = forceCreateModelElementAndSet(
                            	      									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
                            	      									current);
                            	      							
                            	    }

                            	    }

                            	    // InternalDialogParser.g:9687:7: ( (lv_comma_5_0= Comma ) )?
                            	    int alt229=2;
                            	    int LA229_0 = input.LA(1);

                            	    if ( (LA229_0==Comma) ) {
                            	        alt229=1;
                            	    }
                            	    switch (alt229) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9688:8: (lv_comma_5_0= Comma )
                            	            {
                            	            // InternalDialogParser.g:9688:8: (lv_comma_5_0= Comma )
                            	            // InternalDialogParser.g:9689:9: lv_comma_5_0= Comma
                            	            {
                            	            lv_comma_5_0=(Token)match(input,Comma,FOLLOW_145); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_comma_5_0, grammarAccess.getPropOfSubjectAccess().getCommaCommaKeyword_1_0_1_0_1_0_0());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									setWithLastConsumed(current, "comma", true, ",");
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:9701:7: (otherlv_6= Has )?
                            	    int alt230=2;
                            	    int LA230_0 = input.LA(1);

                            	    if ( (LA230_0==Has) ) {
                            	        alt230=1;
                            	    }
                            	    switch (alt230) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9702:8: otherlv_6= Has
                            	            {
                            	            otherlv_6=(Token)match(input,Has,FOLLOW_9); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_6, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:9707:7: ( (lv_prop_7_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:9708:8: (lv_prop_7_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:9708:8: (lv_prop_7_0= ruleSadlResource )
                            	    // InternalDialogParser.g:9709:9: lv_prop_7_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_146);
                            	    lv_prop_7_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	      									}
                            	      									set(
                            	      										current,
                            	      										"prop",
                            	      										lv_prop_7_0,
                            	      										"com.ge.research.sadl.SADL.SadlResource");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }

                            	    // InternalDialogParser.g:9726:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )?
                            	    int alt231=2;
                            	    alt231 = dfa231.predict(input);
                            	    switch (alt231) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9727:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList )
                            	            {
                            	            // InternalDialogParser.g:9728:8: (lv_right_8_0= norm2_ElementInList )
                            	            // InternalDialogParser.g:9729:9: lv_right_8_0= norm2_ElementInList
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
                            	              								
                            	            }
                            	            pushFollow(FOLLOW_147);
                            	            lv_right_8_0=norm2_ElementInList();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									set(
                            	              										current,
                            	              										"right",
                            	              										lv_right_8_0,
                            	              										"com.ge.research.sadl.SADL.ElementInList");
                            	              									afterParserOrEnumRuleCall();
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt232 >= 1 ) break loop232;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(232, input);
                                        throw eee;
                                }
                                cnt232++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_PropOfSubject"


    // $ANTLR start "norm3_PropOfSubject"
    // InternalDialogParser.g:9755:1: norm3_PropOfSubject returns [EObject current=null] : (this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )? ) ;
    public final EObject norm3_PropOfSubject() throws RecognitionException {
        EObject current = null;

        Token lv_of_2_1=null;
        Token lv_of_2_2=null;
        Token lv_of_2_3=null;
        Token lv_comma_5_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject this_ElementInList_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_prop_8_0 = null;

        EObject lv_right_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9761:2: ( (this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )? ) )
            // InternalDialogParser.g:9762:2: (this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )? )
            {
            // InternalDialogParser.g:9762:2: (this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )? )
            // InternalDialogParser.g:9763:3: this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_148);
            this_ElementInList_0=norm3_ElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementInList_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9771:3: ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )?
            int alt241=2;
            alt241 = dfa241.predict(input);
            switch (alt241) {
                case 1 :
                    // InternalDialogParser.g:9772:4: ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ )
                    {
                    // InternalDialogParser.g:9773:4: ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ )
                    int alt240=2;
                    int LA240_0 = input.LA(1);

                    if ( (LA240_0==For||LA240_0==In||LA240_0==Of) ) {
                        alt240=1;
                    }
                    else if ( (LA240_0==With||LA240_0==Has||LA240_0==Comma||(LA240_0>=RULE_ID && LA240_0<=RULE_QNAME_TERMINAL)) ) {
                        alt240=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 240, 0, input);

                        throw nvae;
                    }
                    switch (alt240) {
                        case 1 :
                            // InternalDialogParser.g:9774:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )
                            {
                            // InternalDialogParser.g:9774:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )
                            // InternalDialogParser.g:9775:6: () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) )
                            {
                            // InternalDialogParser.g:9775:6: ()
                            // InternalDialogParser.g:9776:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:9782:6: ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) )
                            // InternalDialogParser.g:9783:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            {
                            // InternalDialogParser.g:9783:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            // InternalDialogParser.g:9784:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            {
                            // InternalDialogParser.g:9784:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            int alt235=3;
                            switch ( input.LA(1) ) {
                            case Of:
                                {
                                alt235=1;
                                }
                                break;
                            case For:
                                {
                                alt235=2;
                                }
                                break;
                            case In:
                                {
                                alt235=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 235, 0, input);

                                throw nvae;
                            }

                            switch (alt235) {
                                case 1 :
                                    // InternalDialogParser.g:9785:9: lv_of_2_1= Of
                                    {
                                    lv_of_2_1=(Token)match(input,Of,FOLLOW_6); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_1, null);
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:9796:9: lv_of_2_2= For
                                    {
                                    lv_of_2_2=(Token)match(input,For,FOLLOW_6); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_2, null);
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalDialogParser.g:9807:9: lv_of_2_3= In
                                    {
                                    lv_of_2_3=(Token)match(input,In,FOLLOW_6); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_3, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalDialogParser.g:9820:6: ( (lv_right_3_0= norm3_PropOfSubject ) )
                            // InternalDialogParser.g:9821:7: (lv_right_3_0= norm3_PropOfSubject )
                            {
                            // InternalDialogParser.g:9821:7: (lv_right_3_0= norm3_PropOfSubject )
                            // InternalDialogParser.g:9822:8: lv_right_3_0= norm3_PropOfSubject
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_3_0=norm3_PropOfSubject();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_3_0,
                              									"com.ge.research.sadl.SADL.PropOfSubject");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:9841:5: ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+
                            {
                            // InternalDialogParser.g:9841:5: ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+
                            int cnt239=0;
                            loop239:
                            do {
                                int alt239=2;
                                int LA239_0 = input.LA(1);

                                if ( (LA239_0==Comma) && (synpred29_InternalDialogParser())) {
                                    alt239=1;
                                }
                                else if ( (LA239_0==With) && (synpred29_InternalDialogParser())) {
                                    alt239=1;
                                }
                                else if ( (LA239_0==Has) && (synpred29_InternalDialogParser())) {
                                    alt239=1;
                                }
                                else if ( (LA239_0==RULE_QNAME_TERMINAL) && (synpred29_InternalDialogParser())) {
                                    alt239=1;
                                }
                                else if ( (LA239_0==RULE_ID) && (synpred29_InternalDialogParser())) {
                                    alt239=1;
                                }


                                switch (alt239) {
                            	case 1 :
                            	    // InternalDialogParser.g:9842:6: ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? )
                            	    {
                            	    // InternalDialogParser.g:9843:6: ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? )
                            	    // InternalDialogParser.g:9844:7: () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )?
                            	    {
                            	    // InternalDialogParser.g:9844:7: ()
                            	    // InternalDialogParser.g:9845:8: 
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								current = forceCreateModelElementAndSet(
                            	      									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
                            	      									current);
                            	      							
                            	    }

                            	    }

                            	    // InternalDialogParser.g:9851:7: ( (lv_comma_5_0= Comma ) )?
                            	    int alt236=2;
                            	    int LA236_0 = input.LA(1);

                            	    if ( (LA236_0==Comma) ) {
                            	        alt236=1;
                            	    }
                            	    switch (alt236) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9852:8: (lv_comma_5_0= Comma )
                            	            {
                            	            // InternalDialogParser.g:9852:8: (lv_comma_5_0= Comma )
                            	            // InternalDialogParser.g:9853:9: lv_comma_5_0= Comma
                            	            {
                            	            lv_comma_5_0=(Token)match(input,Comma,FOLLOW_70); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_comma_5_0, grammarAccess.getPropOfSubjectAccess().getCommaCommaKeyword_1_0_1_0_1_0_0());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									setWithLastConsumed(current, "comma", true, ",");
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:9865:7: (otherlv_6= With | otherlv_7= Has )?
                            	    int alt237=3;
                            	    int LA237_0 = input.LA(1);

                            	    if ( (LA237_0==With) ) {
                            	        alt237=1;
                            	    }
                            	    else if ( (LA237_0==Has) ) {
                            	        alt237=2;
                            	    }
                            	    switch (alt237) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9866:8: otherlv_6= With
                            	            {
                            	            otherlv_6=(Token)match(input,With,FOLLOW_9); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_6, grammarAccess.getPropOfSubjectAccess().getWithKeyword_1_0_1_0_2_0_0());
                            	              							
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // InternalDialogParser.g:9871:8: otherlv_7= Has
                            	            {
                            	            otherlv_7=(Token)match(input,Has,FOLLOW_9); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_7, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:9876:7: ( (lv_prop_8_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:9877:8: (lv_prop_8_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:9877:8: (lv_prop_8_0= ruleSadlResource )
                            	    // InternalDialogParser.g:9878:9: lv_prop_8_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_149);
                            	    lv_prop_8_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	      									}
                            	      									set(
                            	      										current,
                            	      										"prop",
                            	      										lv_prop_8_0,
                            	      										"com.ge.research.sadl.SADL.SadlResource");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }

                            	    // InternalDialogParser.g:9895:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )?
                            	    int alt238=2;
                            	    alt238 = dfa238.predict(input);
                            	    switch (alt238) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9896:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList )
                            	            {
                            	            // InternalDialogParser.g:9897:8: (lv_right_9_0= norm3_ElementInList )
                            	            // InternalDialogParser.g:9898:9: lv_right_9_0= norm3_ElementInList
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
                            	              								
                            	            }
                            	            pushFollow(FOLLOW_150);
                            	            lv_right_9_0=norm3_ElementInList();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									set(
                            	              										current,
                            	              										"right",
                            	              										lv_right_9_0,
                            	              										"com.ge.research.sadl.SADL.ElementInList");
                            	              									afterParserOrEnumRuleCall();
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt239 >= 1 ) break loop239;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(239, input);
                                        throw eee;
                                }
                                cnt239++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_PropOfSubject"


    // $ANTLR start "entryRuleElementInList"
    // InternalDialogParser.g:9923:1: entryRuleElementInList returns [EObject current=null] : iv_ruleElementInList= ruleElementInList EOF ;
    public final EObject entryRuleElementInList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementInList = null;


        try {
            // InternalDialogParser.g:9923:54: (iv_ruleElementInList= ruleElementInList EOF )
            // InternalDialogParser.g:9924:2: iv_ruleElementInList= ruleElementInList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementInListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementInList=ruleElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementInList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementInList"


    // $ANTLR start "ruleElementInList"
    // InternalDialogParser.g:9930:1: ruleElementInList returns [EObject current=null] : (this_UnitExpression_0= ruleUnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) ) ) ;
    public final EObject ruleElementInList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_before_3_0=null;
        Token lv_after_4_0=null;
        EObject this_UnitExpression_0 = null;

        EObject lv_element_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9936:2: ( (this_UnitExpression_0= ruleUnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) ) ) )
            // InternalDialogParser.g:9937:2: (this_UnitExpression_0= ruleUnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) ) )
            {
            // InternalDialogParser.g:9937:2: (this_UnitExpression_0= ruleUnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) ) )
            int alt243=2;
            int LA243_0 = input.LA(1);

            if ( (LA243_0==Another||LA243_0==Length||(LA243_0>=Count && LA243_0<=False)||LA243_0==First||(LA243_0>=Index && LA243_0<=Known)||LA243_0==There||LA243_0==Value||LA243_0==None||LA243_0==Last||LA243_0==Only||LA243_0==Some||(LA243_0>=True && LA243_0<=Type)||LA243_0==The||LA243_0==Any||LA243_0==Not||LA243_0==The_1||LA243_0==HyphenMinusHyphenMinus||(LA243_0>=An && LA243_0<=An_1)||LA243_0==ExclamationMark||LA243_0==LeftParenthesis||LA243_0==HyphenMinus||LA243_0==A||LA243_0==LeftSquareBracket||(LA243_0>=A_1 && LA243_0<=LeftCurlyBracket)||LA243_0==RULE_NUMBER||(LA243_0>=RULE_ID && LA243_0<=RULE_STRING)) ) {
                alt243=1;
            }
            else if ( (LA243_0==Element) ) {
                alt243=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 243, 0, input);

                throw nvae;
            }
            switch (alt243) {
                case 1 :
                    // InternalDialogParser.g:9938:3: this_UnitExpression_0= ruleUnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnitExpression_0=ruleUnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnitExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:9947:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) )
                    {
                    // InternalDialogParser.g:9947:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) )
                    // InternalDialogParser.g:9948:4: () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) )
                    {
                    // InternalDialogParser.g:9948:4: ()
                    // InternalDialogParser.g:9949:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,Element,FOLLOW_151); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:9959:4: ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )?
                    int alt242=3;
                    int LA242_0 = input.LA(1);

                    if ( (LA242_0==Before) ) {
                        alt242=1;
                    }
                    else if ( (LA242_0==After) ) {
                        alt242=2;
                    }
                    switch (alt242) {
                        case 1 :
                            // InternalDialogParser.g:9960:5: ( (lv_before_3_0= Before ) )
                            {
                            // InternalDialogParser.g:9960:5: ( (lv_before_3_0= Before ) )
                            // InternalDialogParser.g:9961:6: (lv_before_3_0= Before )
                            {
                            // InternalDialogParser.g:9961:6: (lv_before_3_0= Before )
                            // InternalDialogParser.g:9962:7: lv_before_3_0= Before
                            {
                            lv_before_3_0=(Token)match(input,Before,FOLLOW_152); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "before", true, "before");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:9975:5: ( (lv_after_4_0= After ) )
                            {
                            // InternalDialogParser.g:9975:5: ( (lv_after_4_0= After ) )
                            // InternalDialogParser.g:9976:6: (lv_after_4_0= After )
                            {
                            // InternalDialogParser.g:9976:6: (lv_after_4_0= After )
                            // InternalDialogParser.g:9977:7: lv_after_4_0= After
                            {
                            lv_after_4_0=(Token)match(input,After,FOLLOW_152); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "after", true, "after");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:9990:4: ( (lv_element_5_0= ruleUnitExpression ) )
                    // InternalDialogParser.g:9991:5: (lv_element_5_0= ruleUnitExpression )
                    {
                    // InternalDialogParser.g:9991:5: (lv_element_5_0= ruleUnitExpression )
                    // InternalDialogParser.g:9992:6: lv_element_5_0= ruleUnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_element_5_0=ruleUnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElementInListRule());
                      						}
                      						set(
                      							current,
                      							"element",
                      							lv_element_5_0,
                      							"com.ge.research.sadl.SADL.UnitExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementInList"


    // $ANTLR start "norm1_ElementInList"
    // InternalDialogParser.g:10015:1: norm1_ElementInList returns [EObject current=null] : (this_UnitExpression_0= norm1_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) ) ) ;
    public final EObject norm1_ElementInList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_before_3_0=null;
        Token lv_after_4_0=null;
        EObject this_UnitExpression_0 = null;

        EObject lv_element_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10021:2: ( (this_UnitExpression_0= norm1_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) ) ) )
            // InternalDialogParser.g:10022:2: (this_UnitExpression_0= norm1_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) ) )
            {
            // InternalDialogParser.g:10022:2: (this_UnitExpression_0= norm1_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) ) )
            int alt245=2;
            int LA245_0 = input.LA(1);

            if ( (LA245_0==Another||LA245_0==Length||(LA245_0>=Count && LA245_0<=False)||LA245_0==First||(LA245_0>=Index && LA245_0<=Known)||LA245_0==There||LA245_0==Value||LA245_0==None||LA245_0==Last||LA245_0==Only||LA245_0==Some||(LA245_0>=True && LA245_0<=Type)||LA245_0==The||LA245_0==Any||LA245_0==Not||LA245_0==The_1||LA245_0==HyphenMinusHyphenMinus||(LA245_0>=An && LA245_0<=An_1)||LA245_0==ExclamationMark||LA245_0==LeftParenthesis||LA245_0==HyphenMinus||LA245_0==A||LA245_0==LeftSquareBracket||(LA245_0>=A_1 && LA245_0<=LeftCurlyBracket)||LA245_0==RULE_NUMBER||(LA245_0>=RULE_ID && LA245_0<=RULE_STRING)) ) {
                alt245=1;
            }
            else if ( (LA245_0==Element) ) {
                alt245=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 245, 0, input);

                throw nvae;
            }
            switch (alt245) {
                case 1 :
                    // InternalDialogParser.g:10023:3: this_UnitExpression_0= norm1_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnitExpression_0=norm1_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnitExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10032:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) )
                    {
                    // InternalDialogParser.g:10032:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) )
                    // InternalDialogParser.g:10033:4: () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) )
                    {
                    // InternalDialogParser.g:10033:4: ()
                    // InternalDialogParser.g:10034:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,Element,FOLLOW_151); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:10044:4: ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )?
                    int alt244=3;
                    int LA244_0 = input.LA(1);

                    if ( (LA244_0==Before) ) {
                        alt244=1;
                    }
                    else if ( (LA244_0==After) ) {
                        alt244=2;
                    }
                    switch (alt244) {
                        case 1 :
                            // InternalDialogParser.g:10045:5: ( (lv_before_3_0= Before ) )
                            {
                            // InternalDialogParser.g:10045:5: ( (lv_before_3_0= Before ) )
                            // InternalDialogParser.g:10046:6: (lv_before_3_0= Before )
                            {
                            // InternalDialogParser.g:10046:6: (lv_before_3_0= Before )
                            // InternalDialogParser.g:10047:7: lv_before_3_0= Before
                            {
                            lv_before_3_0=(Token)match(input,Before,FOLLOW_152); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "before", true, "before");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10060:5: ( (lv_after_4_0= After ) )
                            {
                            // InternalDialogParser.g:10060:5: ( (lv_after_4_0= After ) )
                            // InternalDialogParser.g:10061:6: (lv_after_4_0= After )
                            {
                            // InternalDialogParser.g:10061:6: (lv_after_4_0= After )
                            // InternalDialogParser.g:10062:7: lv_after_4_0= After
                            {
                            lv_after_4_0=(Token)match(input,After,FOLLOW_152); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "after", true, "after");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:10075:4: ( (lv_element_5_0= norm1_UnitExpression ) )
                    // InternalDialogParser.g:10076:5: (lv_element_5_0= norm1_UnitExpression )
                    {
                    // InternalDialogParser.g:10076:5: (lv_element_5_0= norm1_UnitExpression )
                    // InternalDialogParser.g:10077:6: lv_element_5_0= norm1_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_element_5_0=norm1_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElementInListRule());
                      						}
                      						set(
                      							current,
                      							"element",
                      							lv_element_5_0,
                      							"com.ge.research.sadl.SADL.UnitExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_ElementInList"


    // $ANTLR start "norm2_ElementInList"
    // InternalDialogParser.g:10100:1: norm2_ElementInList returns [EObject current=null] : (this_UnitExpression_0= norm2_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) ) ) ;
    public final EObject norm2_ElementInList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_before_3_0=null;
        Token lv_after_4_0=null;
        EObject this_UnitExpression_0 = null;

        EObject lv_element_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10106:2: ( (this_UnitExpression_0= norm2_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) ) ) )
            // InternalDialogParser.g:10107:2: (this_UnitExpression_0= norm2_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) ) )
            {
            // InternalDialogParser.g:10107:2: (this_UnitExpression_0= norm2_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) ) )
            int alt247=2;
            int LA247_0 = input.LA(1);

            if ( (LA247_0==Another||LA247_0==Length||(LA247_0>=Count && LA247_0<=False)||LA247_0==First||(LA247_0>=Index && LA247_0<=Known)||LA247_0==There||LA247_0==Value||LA247_0==None||LA247_0==Last||LA247_0==Only||LA247_0==Some||(LA247_0>=True && LA247_0<=Type)||LA247_0==The||LA247_0==Any||LA247_0==Not||LA247_0==The_1||LA247_0==HyphenMinusHyphenMinus||(LA247_0>=An && LA247_0<=An_1)||LA247_0==ExclamationMark||LA247_0==LeftParenthesis||LA247_0==HyphenMinus||LA247_0==A||LA247_0==LeftSquareBracket||(LA247_0>=A_1 && LA247_0<=LeftCurlyBracket)||LA247_0==RULE_NUMBER||(LA247_0>=RULE_ID && LA247_0<=RULE_STRING)) ) {
                alt247=1;
            }
            else if ( (LA247_0==Element) ) {
                alt247=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 247, 0, input);

                throw nvae;
            }
            switch (alt247) {
                case 1 :
                    // InternalDialogParser.g:10108:3: this_UnitExpression_0= norm2_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnitExpression_0=norm2_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnitExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10117:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) )
                    {
                    // InternalDialogParser.g:10117:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) )
                    // InternalDialogParser.g:10118:4: () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) )
                    {
                    // InternalDialogParser.g:10118:4: ()
                    // InternalDialogParser.g:10119:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,Element,FOLLOW_151); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:10129:4: ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )?
                    int alt246=3;
                    int LA246_0 = input.LA(1);

                    if ( (LA246_0==Before) ) {
                        alt246=1;
                    }
                    else if ( (LA246_0==After) ) {
                        alt246=2;
                    }
                    switch (alt246) {
                        case 1 :
                            // InternalDialogParser.g:10130:5: ( (lv_before_3_0= Before ) )
                            {
                            // InternalDialogParser.g:10130:5: ( (lv_before_3_0= Before ) )
                            // InternalDialogParser.g:10131:6: (lv_before_3_0= Before )
                            {
                            // InternalDialogParser.g:10131:6: (lv_before_3_0= Before )
                            // InternalDialogParser.g:10132:7: lv_before_3_0= Before
                            {
                            lv_before_3_0=(Token)match(input,Before,FOLLOW_152); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "before", true, "before");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10145:5: ( (lv_after_4_0= After ) )
                            {
                            // InternalDialogParser.g:10145:5: ( (lv_after_4_0= After ) )
                            // InternalDialogParser.g:10146:6: (lv_after_4_0= After )
                            {
                            // InternalDialogParser.g:10146:6: (lv_after_4_0= After )
                            // InternalDialogParser.g:10147:7: lv_after_4_0= After
                            {
                            lv_after_4_0=(Token)match(input,After,FOLLOW_152); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "after", true, "after");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:10160:4: ( (lv_element_5_0= norm2_UnitExpression ) )
                    // InternalDialogParser.g:10161:5: (lv_element_5_0= norm2_UnitExpression )
                    {
                    // InternalDialogParser.g:10161:5: (lv_element_5_0= norm2_UnitExpression )
                    // InternalDialogParser.g:10162:6: lv_element_5_0= norm2_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_element_5_0=norm2_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElementInListRule());
                      						}
                      						set(
                      							current,
                      							"element",
                      							lv_element_5_0,
                      							"com.ge.research.sadl.SADL.UnitExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_ElementInList"


    // $ANTLR start "norm3_ElementInList"
    // InternalDialogParser.g:10185:1: norm3_ElementInList returns [EObject current=null] : (this_UnitExpression_0= norm3_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) ) ) ;
    public final EObject norm3_ElementInList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_before_3_0=null;
        Token lv_after_4_0=null;
        EObject this_UnitExpression_0 = null;

        EObject lv_element_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10191:2: ( (this_UnitExpression_0= norm3_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) ) ) )
            // InternalDialogParser.g:10192:2: (this_UnitExpression_0= norm3_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) ) )
            {
            // InternalDialogParser.g:10192:2: (this_UnitExpression_0= norm3_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) ) )
            int alt249=2;
            int LA249_0 = input.LA(1);

            if ( (LA249_0==Another||LA249_0==Length||(LA249_0>=Count && LA249_0<=False)||LA249_0==First||(LA249_0>=Index && LA249_0<=Known)||LA249_0==There||LA249_0==Value||LA249_0==None||LA249_0==Last||LA249_0==Only||LA249_0==Some||(LA249_0>=True && LA249_0<=Type)||LA249_0==The||LA249_0==Any||LA249_0==Not||LA249_0==The_1||LA249_0==HyphenMinusHyphenMinus||(LA249_0>=An && LA249_0<=An_1)||LA249_0==ExclamationMark||LA249_0==LeftParenthesis||LA249_0==HyphenMinus||LA249_0==A||LA249_0==LeftSquareBracket||(LA249_0>=A_1 && LA249_0<=LeftCurlyBracket)||LA249_0==RULE_NUMBER||(LA249_0>=RULE_ID && LA249_0<=RULE_STRING)) ) {
                alt249=1;
            }
            else if ( (LA249_0==Element) ) {
                alt249=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 249, 0, input);

                throw nvae;
            }
            switch (alt249) {
                case 1 :
                    // InternalDialogParser.g:10193:3: this_UnitExpression_0= norm3_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnitExpression_0=norm3_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnitExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10202:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) )
                    {
                    // InternalDialogParser.g:10202:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) )
                    // InternalDialogParser.g:10203:4: () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) )
                    {
                    // InternalDialogParser.g:10203:4: ()
                    // InternalDialogParser.g:10204:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,Element,FOLLOW_151); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:10214:4: ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )?
                    int alt248=3;
                    int LA248_0 = input.LA(1);

                    if ( (LA248_0==Before) ) {
                        alt248=1;
                    }
                    else if ( (LA248_0==After) ) {
                        alt248=2;
                    }
                    switch (alt248) {
                        case 1 :
                            // InternalDialogParser.g:10215:5: ( (lv_before_3_0= Before ) )
                            {
                            // InternalDialogParser.g:10215:5: ( (lv_before_3_0= Before ) )
                            // InternalDialogParser.g:10216:6: (lv_before_3_0= Before )
                            {
                            // InternalDialogParser.g:10216:6: (lv_before_3_0= Before )
                            // InternalDialogParser.g:10217:7: lv_before_3_0= Before
                            {
                            lv_before_3_0=(Token)match(input,Before,FOLLOW_152); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "before", true, "before");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10230:5: ( (lv_after_4_0= After ) )
                            {
                            // InternalDialogParser.g:10230:5: ( (lv_after_4_0= After ) )
                            // InternalDialogParser.g:10231:6: (lv_after_4_0= After )
                            {
                            // InternalDialogParser.g:10231:6: (lv_after_4_0= After )
                            // InternalDialogParser.g:10232:7: lv_after_4_0= After
                            {
                            lv_after_4_0=(Token)match(input,After,FOLLOW_152); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "after", true, "after");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:10245:4: ( (lv_element_5_0= norm3_UnitExpression ) )
                    // InternalDialogParser.g:10246:5: (lv_element_5_0= norm3_UnitExpression )
                    {
                    // InternalDialogParser.g:10246:5: (lv_element_5_0= norm3_UnitExpression )
                    // InternalDialogParser.g:10247:6: lv_element_5_0= norm3_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_element_5_0=norm3_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElementInListRule());
                      						}
                      						set(
                      							current,
                      							"element",
                      							lv_element_5_0,
                      							"com.ge.research.sadl.SADL.UnitExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_ElementInList"


    // $ANTLR start "entryRuleUnitExpression"
    // InternalDialogParser.g:10269:1: entryRuleUnitExpression returns [EObject current=null] : iv_ruleUnitExpression= ruleUnitExpression EOF ;
    public final EObject entryRuleUnitExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnitExpression = null;


        try {
            // InternalDialogParser.g:10269:55: (iv_ruleUnitExpression= ruleUnitExpression EOF )
            // InternalDialogParser.g:10270:2: iv_ruleUnitExpression= ruleUnitExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnitExpression=ruleUnitExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnitExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnitExpression"


    // $ANTLR start "ruleUnitExpression"
    // InternalDialogParser.g:10276:1: ruleUnitExpression returns [EObject current=null] : (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleUnitExpression() throws RecognitionException {
        EObject current = null;

        Token lv_unit_2_0=null;
        EObject this_UnaryExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10282:2: ( (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) )
            // InternalDialogParser.g:10283:2: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            {
            // InternalDialogParser.g:10283:2: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            // InternalDialogParser.g:10284:3: this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_153);
            this_UnaryExpression_0=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:10292:3: ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            int alt250=2;
            int LA250_0 = input.LA(1);

            if ( (LA250_0==RULE_STRING) ) {
                alt250=1;
            }
            switch (alt250) {
                case 1 :
                    // InternalDialogParser.g:10293:4: () ( (lv_unit_2_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:10293:4: ()
                    // InternalDialogParser.g:10294:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10300:4: ( (lv_unit_2_0= RULE_STRING ) )
                    // InternalDialogParser.g:10301:5: (lv_unit_2_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:10301:5: (lv_unit_2_0= RULE_STRING )
                    // InternalDialogParser.g:10302:6: lv_unit_2_0= RULE_STRING
                    {
                    lv_unit_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnitExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitExpression"


    // $ANTLR start "norm1_UnitExpression"
    // InternalDialogParser.g:10324:1: norm1_UnitExpression returns [EObject current=null] : (this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) ;
    public final EObject norm1_UnitExpression() throws RecognitionException {
        EObject current = null;

        Token lv_unit_2_0=null;
        EObject this_UnaryExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10330:2: ( (this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) )
            // InternalDialogParser.g:10331:2: (this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            {
            // InternalDialogParser.g:10331:2: (this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            // InternalDialogParser.g:10332:3: this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_153);
            this_UnaryExpression_0=norm1_UnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:10340:3: ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( (LA251_0==RULE_STRING) ) {
                alt251=1;
            }
            switch (alt251) {
                case 1 :
                    // InternalDialogParser.g:10341:4: () ( (lv_unit_2_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:10341:4: ()
                    // InternalDialogParser.g:10342:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10348:4: ( (lv_unit_2_0= RULE_STRING ) )
                    // InternalDialogParser.g:10349:5: (lv_unit_2_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:10349:5: (lv_unit_2_0= RULE_STRING )
                    // InternalDialogParser.g:10350:6: lv_unit_2_0= RULE_STRING
                    {
                    lv_unit_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnitExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_UnitExpression"


    // $ANTLR start "norm2_UnitExpression"
    // InternalDialogParser.g:10372:1: norm2_UnitExpression returns [EObject current=null] : (this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) ;
    public final EObject norm2_UnitExpression() throws RecognitionException {
        EObject current = null;

        Token lv_unit_2_0=null;
        EObject this_UnaryExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10378:2: ( (this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) )
            // InternalDialogParser.g:10379:2: (this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            {
            // InternalDialogParser.g:10379:2: (this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            // InternalDialogParser.g:10380:3: this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_153);
            this_UnaryExpression_0=norm2_UnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:10388:3: ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            int alt252=2;
            int LA252_0 = input.LA(1);

            if ( (LA252_0==RULE_STRING) ) {
                alt252=1;
            }
            switch (alt252) {
                case 1 :
                    // InternalDialogParser.g:10389:4: () ( (lv_unit_2_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:10389:4: ()
                    // InternalDialogParser.g:10390:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10396:4: ( (lv_unit_2_0= RULE_STRING ) )
                    // InternalDialogParser.g:10397:5: (lv_unit_2_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:10397:5: (lv_unit_2_0= RULE_STRING )
                    // InternalDialogParser.g:10398:6: lv_unit_2_0= RULE_STRING
                    {
                    lv_unit_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnitExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_UnitExpression"


    // $ANTLR start "norm3_UnitExpression"
    // InternalDialogParser.g:10420:1: norm3_UnitExpression returns [EObject current=null] : (this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) ;
    public final EObject norm3_UnitExpression() throws RecognitionException {
        EObject current = null;

        Token lv_unit_2_0=null;
        EObject this_UnaryExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10426:2: ( (this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) )
            // InternalDialogParser.g:10427:2: (this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            {
            // InternalDialogParser.g:10427:2: (this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            // InternalDialogParser.g:10428:3: this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_153);
            this_UnaryExpression_0=norm3_UnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:10436:3: ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==RULE_STRING) ) {
                alt253=1;
            }
            switch (alt253) {
                case 1 :
                    // InternalDialogParser.g:10437:4: () ( (lv_unit_2_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:10437:4: ()
                    // InternalDialogParser.g:10438:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10444:4: ( (lv_unit_2_0= RULE_STRING ) )
                    // InternalDialogParser.g:10445:5: (lv_unit_2_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:10445:5: (lv_unit_2_0= RULE_STRING )
                    // InternalDialogParser.g:10446:6: lv_unit_2_0= RULE_STRING
                    {
                    lv_unit_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnitExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_UnitExpression"


    // $ANTLR start "entryRuleUnaryExpression"
    // InternalDialogParser.g:10467:1: entryRuleUnaryExpression returns [EObject current=null] : iv_ruleUnaryExpression= ruleUnaryExpression EOF ;
    public final EObject entryRuleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpression = null;


        try {
            // InternalDialogParser.g:10467:56: (iv_ruleUnaryExpression= ruleUnaryExpression EOF )
            // InternalDialogParser.g:10468:2: iv_ruleUnaryExpression= ruleUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpression=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryExpression"


    // $ANTLR start "ruleUnaryExpression"
    // InternalDialogParser.g:10474:1: ruleUnaryExpression returns [EObject current=null] : (this_PrimaryExpression_0= rulePrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) ) ) ;
    public final EObject ruleUnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject this_PrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_5 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10480:2: ( (this_PrimaryExpression_0= rulePrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) ) ) )
            // InternalDialogParser.g:10481:2: (this_PrimaryExpression_0= rulePrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) ) )
            {
            // InternalDialogParser.g:10481:2: (this_PrimaryExpression_0= rulePrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) ) )
            int alt255=2;
            int LA255_0 = input.LA(1);

            if ( (LA255_0==Another||LA255_0==Length||(LA255_0>=Count && LA255_0<=False)||LA255_0==First||(LA255_0>=Index && LA255_0<=Known)||LA255_0==Value||LA255_0==None||LA255_0==Last||LA255_0==Some||(LA255_0>=True && LA255_0<=Type)||LA255_0==The||LA255_0==Any||LA255_0==The_1||LA255_0==HyphenMinusHyphenMinus||(LA255_0>=An && LA255_0<=An_1)||LA255_0==LeftParenthesis||LA255_0==A||LA255_0==LeftSquareBracket||(LA255_0>=A_1 && LA255_0<=LeftCurlyBracket)||LA255_0==RULE_NUMBER||(LA255_0>=RULE_ID && LA255_0<=RULE_STRING)) ) {
                alt255=1;
            }
            else if ( (LA255_0==There||LA255_0==Only||LA255_0==Not||LA255_0==ExclamationMark||LA255_0==HyphenMinus) ) {
                alt255=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 255, 0, input);

                throw nvae;
            }
            switch (alt255) {
                case 1 :
                    // InternalDialogParser.g:10482:3: this_PrimaryExpression_0= rulePrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_0=rulePrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10491:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) )
                    {
                    // InternalDialogParser.g:10491:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) )
                    // InternalDialogParser.g:10492:4: () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) )
                    {
                    // InternalDialogParser.g:10492:4: ()
                    // InternalDialogParser.g:10493:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10499:4: ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) )
                    // InternalDialogParser.g:10500:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    {
                    // InternalDialogParser.g:10500:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    // InternalDialogParser.g:10501:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    {
                    // InternalDialogParser.g:10501:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    int alt254=5;
                    switch ( input.LA(1) ) {
                    case Not:
                        {
                        alt254=1;
                        }
                        break;
                    case ExclamationMark:
                        {
                        alt254=2;
                        }
                        break;
                    case Only:
                        {
                        alt254=3;
                        }
                        break;
                    case HyphenMinus:
                        {
                        alt254=4;
                        }
                        break;
                    case There:
                        {
                        alt254=5;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 254, 0, input);

                        throw nvae;
                    }

                    switch (alt254) {
                        case 1 :
                            // InternalDialogParser.g:10502:7: lv_op_2_1= Not
                            {
                            lv_op_2_1=(Token)match(input,Not,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10513:7: lv_op_2_2= ExclamationMark
                            {
                            lv_op_2_2=(Token)match(input,ExclamationMark,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:10524:7: lv_op_2_3= Only
                            {
                            lv_op_2_3=(Token)match(input,Only,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalDialogParser.g:10535:7: lv_op_2_4= HyphenMinus
                            {
                            lv_op_2_4=(Token)match(input,HyphenMinus,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalDialogParser.g:10546:7: lv_op_2_5= ruleThereExists
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
                              						
                            }
                            pushFollow(FOLLOW_154);
                            lv_op_2_5=ruleThereExists();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                              							}
                              							set(
                              								current,
                              								"op",
                              								lv_op_2_5,
                              								"com.ge.research.sadl.SADL.ThereExists");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:10564:4: ( (lv_expr_3_0= rulePrimaryExpression ) )
                    // InternalDialogParser.g:10565:5: (lv_expr_3_0= rulePrimaryExpression )
                    {
                    // InternalDialogParser.g:10565:5: (lv_expr_3_0= rulePrimaryExpression )
                    // InternalDialogParser.g:10566:6: lv_expr_3_0= rulePrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=rulePrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_0,
                      							"com.ge.research.sadl.SADL.PrimaryExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryExpression"


    // $ANTLR start "norm1_UnaryExpression"
    // InternalDialogParser.g:10589:1: norm1_UnaryExpression returns [EObject current=null] : (this_PrimaryExpression_0= norm1_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) ) ) ;
    public final EObject norm1_UnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject this_PrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_5 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10595:2: ( (this_PrimaryExpression_0= norm1_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) ) ) )
            // InternalDialogParser.g:10596:2: (this_PrimaryExpression_0= norm1_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) ) )
            {
            // InternalDialogParser.g:10596:2: (this_PrimaryExpression_0= norm1_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) ) )
            int alt257=2;
            int LA257_0 = input.LA(1);

            if ( (LA257_0==Another||LA257_0==Length||(LA257_0>=Count && LA257_0<=False)||LA257_0==First||(LA257_0>=Index && LA257_0<=Known)||LA257_0==Value||LA257_0==None||LA257_0==Last||LA257_0==Some||(LA257_0>=True && LA257_0<=Type)||LA257_0==The||LA257_0==Any||LA257_0==The_1||LA257_0==HyphenMinusHyphenMinus||(LA257_0>=An && LA257_0<=An_1)||LA257_0==LeftParenthesis||LA257_0==A||LA257_0==LeftSquareBracket||(LA257_0>=A_1 && LA257_0<=LeftCurlyBracket)||LA257_0==RULE_NUMBER||(LA257_0>=RULE_ID && LA257_0<=RULE_STRING)) ) {
                alt257=1;
            }
            else if ( (LA257_0==There||LA257_0==Only||LA257_0==Not||LA257_0==ExclamationMark||LA257_0==HyphenMinus) ) {
                alt257=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 257, 0, input);

                throw nvae;
            }
            switch (alt257) {
                case 1 :
                    // InternalDialogParser.g:10597:3: this_PrimaryExpression_0= norm1_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_0=norm1_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10606:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) )
                    {
                    // InternalDialogParser.g:10606:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) )
                    // InternalDialogParser.g:10607:4: () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) )
                    {
                    // InternalDialogParser.g:10607:4: ()
                    // InternalDialogParser.g:10608:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10614:4: ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) )
                    // InternalDialogParser.g:10615:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    {
                    // InternalDialogParser.g:10615:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    // InternalDialogParser.g:10616:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    {
                    // InternalDialogParser.g:10616:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    int alt256=5;
                    switch ( input.LA(1) ) {
                    case Not:
                        {
                        alt256=1;
                        }
                        break;
                    case ExclamationMark:
                        {
                        alt256=2;
                        }
                        break;
                    case Only:
                        {
                        alt256=3;
                        }
                        break;
                    case HyphenMinus:
                        {
                        alt256=4;
                        }
                        break;
                    case There:
                        {
                        alt256=5;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 256, 0, input);

                        throw nvae;
                    }

                    switch (alt256) {
                        case 1 :
                            // InternalDialogParser.g:10617:7: lv_op_2_1= Not
                            {
                            lv_op_2_1=(Token)match(input,Not,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10628:7: lv_op_2_2= ExclamationMark
                            {
                            lv_op_2_2=(Token)match(input,ExclamationMark,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:10639:7: lv_op_2_3= Only
                            {
                            lv_op_2_3=(Token)match(input,Only,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalDialogParser.g:10650:7: lv_op_2_4= HyphenMinus
                            {
                            lv_op_2_4=(Token)match(input,HyphenMinus,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalDialogParser.g:10661:7: lv_op_2_5= ruleThereExists
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
                              						
                            }
                            pushFollow(FOLLOW_154);
                            lv_op_2_5=ruleThereExists();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                              							}
                              							set(
                              								current,
                              								"op",
                              								lv_op_2_5,
                              								"com.ge.research.sadl.SADL.ThereExists");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:10679:4: ( (lv_expr_3_0= norm1_PrimaryExpression ) )
                    // InternalDialogParser.g:10680:5: (lv_expr_3_0= norm1_PrimaryExpression )
                    {
                    // InternalDialogParser.g:10680:5: (lv_expr_3_0= norm1_PrimaryExpression )
                    // InternalDialogParser.g:10681:6: lv_expr_3_0= norm1_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=norm1_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_0,
                      							"com.ge.research.sadl.SADL.PrimaryExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_UnaryExpression"


    // $ANTLR start "norm2_UnaryExpression"
    // InternalDialogParser.g:10704:1: norm2_UnaryExpression returns [EObject current=null] : (this_PrimaryExpression_0= norm2_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) ) ) ;
    public final EObject norm2_UnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject this_PrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_5 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10710:2: ( (this_PrimaryExpression_0= norm2_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) ) ) )
            // InternalDialogParser.g:10711:2: (this_PrimaryExpression_0= norm2_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) ) )
            {
            // InternalDialogParser.g:10711:2: (this_PrimaryExpression_0= norm2_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) ) )
            int alt259=2;
            int LA259_0 = input.LA(1);

            if ( (LA259_0==Another||LA259_0==Length||(LA259_0>=Count && LA259_0<=False)||LA259_0==First||(LA259_0>=Index && LA259_0<=Known)||LA259_0==Value||LA259_0==None||LA259_0==Last||LA259_0==Some||(LA259_0>=True && LA259_0<=Type)||LA259_0==The||LA259_0==Any||LA259_0==The_1||LA259_0==HyphenMinusHyphenMinus||(LA259_0>=An && LA259_0<=An_1)||LA259_0==LeftParenthesis||LA259_0==A||LA259_0==LeftSquareBracket||(LA259_0>=A_1 && LA259_0<=LeftCurlyBracket)||LA259_0==RULE_NUMBER||(LA259_0>=RULE_ID && LA259_0<=RULE_STRING)) ) {
                alt259=1;
            }
            else if ( (LA259_0==There||LA259_0==Only||LA259_0==Not||LA259_0==ExclamationMark||LA259_0==HyphenMinus) ) {
                alt259=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 259, 0, input);

                throw nvae;
            }
            switch (alt259) {
                case 1 :
                    // InternalDialogParser.g:10712:3: this_PrimaryExpression_0= norm2_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_0=norm2_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10721:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) )
                    {
                    // InternalDialogParser.g:10721:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) )
                    // InternalDialogParser.g:10722:4: () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) )
                    {
                    // InternalDialogParser.g:10722:4: ()
                    // InternalDialogParser.g:10723:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10729:4: ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) )
                    // InternalDialogParser.g:10730:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    {
                    // InternalDialogParser.g:10730:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    // InternalDialogParser.g:10731:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    {
                    // InternalDialogParser.g:10731:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    int alt258=5;
                    switch ( input.LA(1) ) {
                    case Not:
                        {
                        alt258=1;
                        }
                        break;
                    case ExclamationMark:
                        {
                        alt258=2;
                        }
                        break;
                    case Only:
                        {
                        alt258=3;
                        }
                        break;
                    case HyphenMinus:
                        {
                        alt258=4;
                        }
                        break;
                    case There:
                        {
                        alt258=5;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 258, 0, input);

                        throw nvae;
                    }

                    switch (alt258) {
                        case 1 :
                            // InternalDialogParser.g:10732:7: lv_op_2_1= Not
                            {
                            lv_op_2_1=(Token)match(input,Not,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10743:7: lv_op_2_2= ExclamationMark
                            {
                            lv_op_2_2=(Token)match(input,ExclamationMark,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:10754:7: lv_op_2_3= Only
                            {
                            lv_op_2_3=(Token)match(input,Only,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalDialogParser.g:10765:7: lv_op_2_4= HyphenMinus
                            {
                            lv_op_2_4=(Token)match(input,HyphenMinus,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalDialogParser.g:10776:7: lv_op_2_5= ruleThereExists
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
                              						
                            }
                            pushFollow(FOLLOW_154);
                            lv_op_2_5=ruleThereExists();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                              							}
                              							set(
                              								current,
                              								"op",
                              								lv_op_2_5,
                              								"com.ge.research.sadl.SADL.ThereExists");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:10794:4: ( (lv_expr_3_0= norm2_PrimaryExpression ) )
                    // InternalDialogParser.g:10795:5: (lv_expr_3_0= norm2_PrimaryExpression )
                    {
                    // InternalDialogParser.g:10795:5: (lv_expr_3_0= norm2_PrimaryExpression )
                    // InternalDialogParser.g:10796:6: lv_expr_3_0= norm2_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=norm2_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_0,
                      							"com.ge.research.sadl.SADL.PrimaryExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_UnaryExpression"


    // $ANTLR start "norm3_UnaryExpression"
    // InternalDialogParser.g:10819:1: norm3_UnaryExpression returns [EObject current=null] : (this_PrimaryExpression_0= norm3_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) ) ) ;
    public final EObject norm3_UnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject this_PrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_5 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10825:2: ( (this_PrimaryExpression_0= norm3_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) ) ) )
            // InternalDialogParser.g:10826:2: (this_PrimaryExpression_0= norm3_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) ) )
            {
            // InternalDialogParser.g:10826:2: (this_PrimaryExpression_0= norm3_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) ) )
            int alt261=2;
            int LA261_0 = input.LA(1);

            if ( (LA261_0==Another||LA261_0==Length||(LA261_0>=Count && LA261_0<=False)||LA261_0==First||(LA261_0>=Index && LA261_0<=Known)||LA261_0==Value||LA261_0==None||LA261_0==Last||LA261_0==Some||(LA261_0>=True && LA261_0<=Type)||LA261_0==The||LA261_0==Any||LA261_0==The_1||LA261_0==HyphenMinusHyphenMinus||(LA261_0>=An && LA261_0<=An_1)||LA261_0==LeftParenthesis||LA261_0==A||LA261_0==LeftSquareBracket||(LA261_0>=A_1 && LA261_0<=LeftCurlyBracket)||LA261_0==RULE_NUMBER||(LA261_0>=RULE_ID && LA261_0<=RULE_STRING)) ) {
                alt261=1;
            }
            else if ( (LA261_0==There||LA261_0==Only||LA261_0==Not||LA261_0==ExclamationMark||LA261_0==HyphenMinus) ) {
                alt261=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 261, 0, input);

                throw nvae;
            }
            switch (alt261) {
                case 1 :
                    // InternalDialogParser.g:10827:3: this_PrimaryExpression_0= norm3_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_0=norm3_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10836:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) )
                    {
                    // InternalDialogParser.g:10836:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) )
                    // InternalDialogParser.g:10837:4: () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) )
                    {
                    // InternalDialogParser.g:10837:4: ()
                    // InternalDialogParser.g:10838:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10844:4: ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) )
                    // InternalDialogParser.g:10845:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    {
                    // InternalDialogParser.g:10845:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    // InternalDialogParser.g:10846:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    {
                    // InternalDialogParser.g:10846:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    int alt260=5;
                    switch ( input.LA(1) ) {
                    case Not:
                        {
                        alt260=1;
                        }
                        break;
                    case ExclamationMark:
                        {
                        alt260=2;
                        }
                        break;
                    case Only:
                        {
                        alt260=3;
                        }
                        break;
                    case HyphenMinus:
                        {
                        alt260=4;
                        }
                        break;
                    case There:
                        {
                        alt260=5;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 260, 0, input);

                        throw nvae;
                    }

                    switch (alt260) {
                        case 1 :
                            // InternalDialogParser.g:10847:7: lv_op_2_1= Not
                            {
                            lv_op_2_1=(Token)match(input,Not,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10858:7: lv_op_2_2= ExclamationMark
                            {
                            lv_op_2_2=(Token)match(input,ExclamationMark,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:10869:7: lv_op_2_3= Only
                            {
                            lv_op_2_3=(Token)match(input,Only,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalDialogParser.g:10880:7: lv_op_2_4= HyphenMinus
                            {
                            lv_op_2_4=(Token)match(input,HyphenMinus,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalDialogParser.g:10891:7: lv_op_2_5= ruleThereExists
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
                              						
                            }
                            pushFollow(FOLLOW_154);
                            lv_op_2_5=ruleThereExists();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                              							}
                              							set(
                              								current,
                              								"op",
                              								lv_op_2_5,
                              								"com.ge.research.sadl.SADL.ThereExists");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:10909:4: ( (lv_expr_3_0= norm3_PrimaryExpression ) )
                    // InternalDialogParser.g:10910:5: (lv_expr_3_0= norm3_PrimaryExpression )
                    {
                    // InternalDialogParser.g:10910:5: (lv_expr_3_0= norm3_PrimaryExpression )
                    // InternalDialogParser.g:10911:6: lv_expr_3_0= norm3_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=norm3_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_0,
                      							"com.ge.research.sadl.SADL.PrimaryExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_UnaryExpression"


    // $ANTLR start "entryRuleThereExists"
    // InternalDialogParser.g:10933:1: entryRuleThereExists returns [String current=null] : iv_ruleThereExists= ruleThereExists EOF ;
    public final String entryRuleThereExists() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleThereExists = null;


        try {
            // InternalDialogParser.g:10933:51: (iv_ruleThereExists= ruleThereExists EOF )
            // InternalDialogParser.g:10934:2: iv_ruleThereExists= ruleThereExists EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThereExistsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThereExists=ruleThereExists();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThereExists.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleThereExists"


    // $ANTLR start "ruleThereExists"
    // InternalDialogParser.g:10940:1: ruleThereExists returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= There kw= Exists ) ;
    public final AntlrDatatypeRuleToken ruleThereExists() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:10946:2: ( (kw= There kw= Exists ) )
            // InternalDialogParser.g:10947:2: (kw= There kw= Exists )
            {
            // InternalDialogParser.g:10947:2: (kw= There kw= Exists )
            // InternalDialogParser.g:10948:3: kw= There kw= Exists
            {
            kw=(Token)match(input,There,FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getThereExistsAccess().getThereKeyword_0());
              		
            }
            kw=(Token)match(input,Exists,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getThereExistsAccess().getExistsKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleThereExists"


    // $ANTLR start "entryRulePrimaryExpression"
    // InternalDialogParser.g:10962:1: entryRulePrimaryExpression returns [EObject current=null] : iv_rulePrimaryExpression= rulePrimaryExpression EOF ;
    public final EObject entryRulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpression = null;


        try {
            // InternalDialogParser.g:10962:58: (iv_rulePrimaryExpression= rulePrimaryExpression EOF )
            // InternalDialogParser.g:10963:2: iv_rulePrimaryExpression= rulePrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpression=rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpression"


    // $ANTLR start "rulePrimaryExpression"
    // InternalDialogParser.g:10969:1: rulePrimaryExpression returns [EObject current=null] : ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) ;
    public final EObject rulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_maxlen_16_2=null;
        Token lv_value_18_0=null;
        EObject this_SelectExpression_1 = null;

        EObject this_Name_3 = null;

        AntlrDatatypeRuleToken lv_article_5_0 = null;

        AntlrDatatypeRuleToken lv_ordinal_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_arglist_9_0 = null;

        EObject lv_arglist_11_0 = null;

        AntlrDatatypeRuleToken lv_len_14_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_16_1 = null;

        AntlrDatatypeRuleToken lv_value_20_0 = null;

        AntlrDatatypeRuleToken lv_value_22_0 = null;

        AntlrDatatypeRuleToken lv_constant_24_0 = null;

        EObject lv_valueTable_26_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10975:2: ( ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) )
            // InternalDialogParser.g:10976:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            {
            // InternalDialogParser.g:10976:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            int alt268=8;
            alt268 = dfa268.predict(input);
            switch (alt268) {
                case 1 :
                    // InternalDialogParser.g:10977:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis )
                    {
                    // InternalDialogParser.g:10977:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis )
                    // InternalDialogParser.g:10978:4: otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_72);
                    this_SelectExpression_1=ruleSelectExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SelectExpression_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10996:3: this_Name_3= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Name_3=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Name_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:11005:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    {
                    // InternalDialogParser.g:11005:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    // InternalDialogParser.g:11006:4: () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    {
                    // InternalDialogParser.g:11006:4: ()
                    // InternalDialogParser.g:11007:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11013:4: ( (lv_article_5_0= ruleAnArticle ) )
                    // InternalDialogParser.g:11014:5: (lv_article_5_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:11014:5: (lv_article_5_0= ruleAnArticle )
                    // InternalDialogParser.g:11015:6: lv_article_5_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_157);
                    lv_article_5_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"article",
                      							lv_article_5_0,
                      							"com.ge.research.sadl.SADL.AnArticle");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:11032:4: ( (lv_ordinal_6_0= ruleOrdinal ) )?
                    int alt262=2;
                    int LA262_0 = input.LA(1);

                    if ( (LA262_0==Seventh||LA262_0==Eighth||LA262_0==Fourth||LA262_0==Second||(LA262_0>=Fifth && LA262_0<=First)||LA262_0==Ninth||(LA262_0>=Other && LA262_0<=Tenth)||LA262_0==Third) ) {
                        alt262=1;
                    }
                    switch (alt262) {
                        case 1 :
                            // InternalDialogParser.g:11033:5: (lv_ordinal_6_0= ruleOrdinal )
                            {
                            // InternalDialogParser.g:11033:5: (lv_ordinal_6_0= ruleOrdinal )
                            // InternalDialogParser.g:11034:6: lv_ordinal_6_0= ruleOrdinal
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FOLLOW_12);
                            lv_ordinal_6_0=ruleOrdinal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              						}
                              						set(
                              							current,
                              							"ordinal",
                              							lv_ordinal_6_0,
                              							"com.ge.research.sadl.SADL.Ordinal");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:11051:4: ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:11052:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:11052:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:11053:6: lv_type_7_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_158);
                    lv_type_7_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_7_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:11070:4: ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    int alt267=3;
                    int LA267_0 = input.LA(1);

                    if ( (LA267_0==LeftSquareBracket) ) {
                        alt267=1;
                    }
                    else if ( (LA267_0==Length) ) {
                        alt267=2;
                    }
                    switch (alt267) {
                        case 1 :
                            // InternalDialogParser.g:11071:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            {
                            // InternalDialogParser.g:11071:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            // InternalDialogParser.g:11072:6: otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket
                            {
                            otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_159); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
                              					
                            }
                            // InternalDialogParser.g:11076:6: ( (lv_arglist_9_0= ruleNestedExpression ) )?
                            int alt263=2;
                            int LA263_0 = input.LA(1);

                            if ( (LA263_0==Another||LA263_0==Element||LA263_0==Sublist||LA263_0==Length||LA263_0==Select||(LA263_0>=Count && LA263_0<=False)||LA263_0==First||(LA263_0>=Index && LA263_0<=Known)||LA263_0==There||LA263_0==Value||LA263_0==None||LA263_0==Last||LA263_0==Only||LA263_0==Some||(LA263_0>=True && LA263_0<=Type)||LA263_0==The||LA263_0==Any||LA263_0==Not||LA263_0==The_1||LA263_0==HyphenMinusHyphenMinus||(LA263_0>=An && LA263_0<=An_1)||LA263_0==ExclamationMark||LA263_0==LeftParenthesis||LA263_0==HyphenMinus||LA263_0==A||LA263_0==LeftSquareBracket||(LA263_0>=A_1 && LA263_0<=LeftCurlyBracket)||LA263_0==RULE_NUMBER||(LA263_0>=RULE_ID && LA263_0<=RULE_STRING)) ) {
                                alt263=1;
                            }
                            switch (alt263) {
                                case 1 :
                                    // InternalDialogParser.g:11077:7: (lv_arglist_9_0= ruleNestedExpression )
                                    {
                                    // InternalDialogParser.g:11077:7: (lv_arglist_9_0= ruleNestedExpression )
                                    // InternalDialogParser.g:11078:8: lv_arglist_9_0= ruleNestedExpression
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_113);
                                    lv_arglist_9_0=ruleNestedExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                      								}
                                      								add(
                                      									current,
                                      									"arglist",
                                      									lv_arglist_9_0,
                                      									"com.ge.research.sadl.SADL.NestedExpression");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:11095:6: (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )*
                            loop264:
                            do {
                                int alt264=2;
                                int LA264_0 = input.LA(1);

                                if ( (LA264_0==Comma) ) {
                                    alt264=1;
                                }


                                switch (alt264) {
                            	case 1 :
                            	    // InternalDialogParser.g:11096:7: otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_156); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:11100:7: ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    // InternalDialogParser.g:11101:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    {
                            	    // InternalDialogParser.g:11101:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    // InternalDialogParser.g:11102:9: lv_arglist_11_0= ruleNestedExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_113);
                            	    lv_arglist_11_0=ruleNestedExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arglist",
                            	      										lv_arglist_11_0,
                            	      										"com.ge.research.sadl.SADL.NestedExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop264;
                                }
                            } while (true);

                            otherlv_12=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:11126:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            {
                            // InternalDialogParser.g:11126:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            // InternalDialogParser.g:11127:6: otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            {
                            otherlv_13=(Token)match(input,Length,FOLLOW_78); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:11131:6: ( (lv_len_14_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:11132:7: (lv_len_14_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:11132:7: (lv_len_14_0= ruleFacetNumber )
                            // InternalDialogParser.g:11133:8: lv_len_14_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_160);
                            lv_len_14_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              								}
                              								set(
                              									current,
                              									"len",
                              									lv_len_14_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:11150:6: ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            int alt266=2;
                            int LA266_0 = input.LA(1);

                            if ( (LA266_0==HyphenMinus) ) {
                                int LA266_1 = input.LA(2);

                                if ( (LA266_1==HyphenMinus) ) {
                                    int LA266_3 = input.LA(3);

                                    if ( (LA266_3==RULE_NUMBER) ) {
                                        int LA266_6 = input.LA(4);

                                        if ( (synpred31_InternalDialogParser()) ) {
                                            alt266=1;
                                        }
                                    }
                                }
                                else if ( (LA266_1==RULE_NUMBER) ) {
                                    int LA266_4 = input.LA(3);

                                    if ( (synpred31_InternalDialogParser()) ) {
                                        alt266=1;
                                    }
                                }
                                else if ( (LA266_1==Asterisk) && (synpred31_InternalDialogParser())) {
                                    alt266=1;
                                }
                            }
                            switch (alt266) {
                                case 1 :
                                    // InternalDialogParser.g:11151:7: ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    {
                                    // InternalDialogParser.g:11152:7: (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    // InternalDialogParser.g:11153:8: otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    {
                                    otherlv_15=(Token)match(input,HyphenMinus,FOLLOW_80); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
                                      							
                                    }
                                    // InternalDialogParser.g:11157:8: ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    // InternalDialogParser.g:11158:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    {
                                    // InternalDialogParser.g:11158:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    // InternalDialogParser.g:11159:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    {
                                    // InternalDialogParser.g:11159:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    int alt265=2;
                                    int LA265_0 = input.LA(1);

                                    if ( (LA265_0==HyphenMinus||LA265_0==RULE_NUMBER) ) {
                                        alt265=1;
                                    }
                                    else if ( (LA265_0==Asterisk) ) {
                                        alt265=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 265, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt265) {
                                        case 1 :
                                            // InternalDialogParser.g:11160:11: lv_maxlen_16_1= ruleFacetNumber
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_2);
                                            lv_maxlen_16_1=ruleFacetNumber();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											set(
                                              												current,
                                              												"maxlen",
                                              												lv_maxlen_16_1,
                                              												"com.ge.research.sadl.SADL.FacetNumber");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalDialogParser.g:11176:11: lv_maxlen_16_2= Asterisk
                                            {
                                            lv_maxlen_16_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											setWithLastConsumed(current, "maxlen", lv_maxlen_16_2, null);
                                              										
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:11195:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:11195:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:11196:4: () ( (lv_value_18_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:11196:4: ()
                    // InternalDialogParser.g:11197:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11203:4: ( (lv_value_18_0= RULE_STRING ) )
                    // InternalDialogParser.g:11204:5: (lv_value_18_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:11204:5: (lv_value_18_0= RULE_STRING )
                    // InternalDialogParser.g:11205:6: lv_value_18_0= RULE_STRING
                    {
                    lv_value_18_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_18_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:11223:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    {
                    // InternalDialogParser.g:11223:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    // InternalDialogParser.g:11224:4: () ( (lv_value_20_0= ruleAnyNumber ) )
                    {
                    // InternalDialogParser.g:11224:4: ()
                    // InternalDialogParser.g:11225:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11231:4: ( (lv_value_20_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:11232:5: (lv_value_20_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:11232:5: (lv_value_20_0= ruleAnyNumber )
                    // InternalDialogParser.g:11233:6: lv_value_20_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_20_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_20_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:11252:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    {
                    // InternalDialogParser.g:11252:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    // InternalDialogParser.g:11253:4: () ( (lv_value_22_0= ruleBooleanValue ) )
                    {
                    // InternalDialogParser.g:11253:4: ()
                    // InternalDialogParser.g:11254:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11260:4: ( (lv_value_22_0= ruleBooleanValue ) )
                    // InternalDialogParser.g:11261:5: (lv_value_22_0= ruleBooleanValue )
                    {
                    // InternalDialogParser.g:11261:5: (lv_value_22_0= ruleBooleanValue )
                    // InternalDialogParser.g:11262:6: lv_value_22_0= ruleBooleanValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_22_0=ruleBooleanValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_22_0,
                      							"com.ge.research.sadl.SADL.BooleanValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:11281:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    {
                    // InternalDialogParser.g:11281:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    // InternalDialogParser.g:11282:4: () ( (lv_constant_24_0= ruleConstants ) )
                    {
                    // InternalDialogParser.g:11282:4: ()
                    // InternalDialogParser.g:11283:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11289:4: ( (lv_constant_24_0= ruleConstants ) )
                    // InternalDialogParser.g:11290:5: (lv_constant_24_0= ruleConstants )
                    {
                    // InternalDialogParser.g:11290:5: (lv_constant_24_0= ruleConstants )
                    // InternalDialogParser.g:11291:6: lv_constant_24_0= ruleConstants
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_24_0=ruleConstants();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"constant",
                      							lv_constant_24_0,
                      							"com.ge.research.sadl.SADL.Constants");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:11310:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    {
                    // InternalDialogParser.g:11310:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    // InternalDialogParser.g:11311:4: () ( (lv_valueTable_26_0= ruleValueTable ) )
                    {
                    // InternalDialogParser.g:11311:4: ()
                    // InternalDialogParser.g:11312:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11318:4: ( (lv_valueTable_26_0= ruleValueTable ) )
                    // InternalDialogParser.g:11319:5: (lv_valueTable_26_0= ruleValueTable )
                    {
                    // InternalDialogParser.g:11319:5: (lv_valueTable_26_0= ruleValueTable )
                    // InternalDialogParser.g:11320:6: lv_valueTable_26_0= ruleValueTable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_valueTable_26_0=ruleValueTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"valueTable",
                      							lv_valueTable_26_0,
                      							"com.ge.research.sadl.SADL.ValueTable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpression"


    // $ANTLR start "norm1_PrimaryExpression"
    // InternalDialogParser.g:11343:1: norm1_PrimaryExpression returns [EObject current=null] : ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) ;
    public final EObject norm1_PrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_maxlen_16_2=null;
        Token lv_value_18_0=null;
        EObject this_SelectExpression_1 = null;

        EObject this_Name_3 = null;

        AntlrDatatypeRuleToken lv_article_5_0 = null;

        AntlrDatatypeRuleToken lv_ordinal_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_arglist_9_0 = null;

        EObject lv_arglist_11_0 = null;

        AntlrDatatypeRuleToken lv_len_14_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_16_1 = null;

        AntlrDatatypeRuleToken lv_value_20_0 = null;

        AntlrDatatypeRuleToken lv_value_22_0 = null;

        AntlrDatatypeRuleToken lv_constant_24_0 = null;

        EObject lv_valueTable_26_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:11349:2: ( ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) )
            // InternalDialogParser.g:11350:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            {
            // InternalDialogParser.g:11350:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            int alt275=8;
            alt275 = dfa275.predict(input);
            switch (alt275) {
                case 1 :
                    // InternalDialogParser.g:11351:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis )
                    {
                    // InternalDialogParser.g:11351:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis )
                    // InternalDialogParser.g:11352:4: otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_72);
                    this_SelectExpression_1=norm1_SelectExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SelectExpression_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:11370:3: this_Name_3= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Name_3=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Name_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:11379:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    {
                    // InternalDialogParser.g:11379:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    // InternalDialogParser.g:11380:4: () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    {
                    // InternalDialogParser.g:11380:4: ()
                    // InternalDialogParser.g:11381:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11387:4: ( (lv_article_5_0= ruleAnArticle ) )
                    // InternalDialogParser.g:11388:5: (lv_article_5_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:11388:5: (lv_article_5_0= ruleAnArticle )
                    // InternalDialogParser.g:11389:6: lv_article_5_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_157);
                    lv_article_5_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"article",
                      							lv_article_5_0,
                      							"com.ge.research.sadl.SADL.AnArticle");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:11406:4: ( (lv_ordinal_6_0= ruleOrdinal ) )?
                    int alt269=2;
                    int LA269_0 = input.LA(1);

                    if ( (LA269_0==Seventh||LA269_0==Eighth||LA269_0==Fourth||LA269_0==Second||(LA269_0>=Fifth && LA269_0<=First)||LA269_0==Ninth||(LA269_0>=Other && LA269_0<=Tenth)||LA269_0==Third) ) {
                        alt269=1;
                    }
                    switch (alt269) {
                        case 1 :
                            // InternalDialogParser.g:11407:5: (lv_ordinal_6_0= ruleOrdinal )
                            {
                            // InternalDialogParser.g:11407:5: (lv_ordinal_6_0= ruleOrdinal )
                            // InternalDialogParser.g:11408:6: lv_ordinal_6_0= ruleOrdinal
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FOLLOW_12);
                            lv_ordinal_6_0=ruleOrdinal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              						}
                              						set(
                              							current,
                              							"ordinal",
                              							lv_ordinal_6_0,
                              							"com.ge.research.sadl.SADL.Ordinal");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:11425:4: ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:11426:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:11426:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:11427:6: lv_type_7_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_158);
                    lv_type_7_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_7_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:11444:4: ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    int alt274=3;
                    int LA274_0 = input.LA(1);

                    if ( (LA274_0==LeftSquareBracket) ) {
                        alt274=1;
                    }
                    else if ( (LA274_0==Length) ) {
                        alt274=2;
                    }
                    switch (alt274) {
                        case 1 :
                            // InternalDialogParser.g:11445:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            {
                            // InternalDialogParser.g:11445:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            // InternalDialogParser.g:11446:6: otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket
                            {
                            otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_159); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
                              					
                            }
                            // InternalDialogParser.g:11450:6: ( (lv_arglist_9_0= ruleNestedExpression ) )?
                            int alt270=2;
                            int LA270_0 = input.LA(1);

                            if ( (LA270_0==Another||LA270_0==Element||LA270_0==Sublist||LA270_0==Length||LA270_0==Select||(LA270_0>=Count && LA270_0<=False)||LA270_0==First||(LA270_0>=Index && LA270_0<=Known)||LA270_0==There||LA270_0==Value||LA270_0==None||LA270_0==Last||LA270_0==Only||LA270_0==Some||(LA270_0>=True && LA270_0<=Type)||LA270_0==The||LA270_0==Any||LA270_0==Not||LA270_0==The_1||LA270_0==HyphenMinusHyphenMinus||(LA270_0>=An && LA270_0<=An_1)||LA270_0==ExclamationMark||LA270_0==LeftParenthesis||LA270_0==HyphenMinus||LA270_0==A||LA270_0==LeftSquareBracket||(LA270_0>=A_1 && LA270_0<=LeftCurlyBracket)||LA270_0==RULE_NUMBER||(LA270_0>=RULE_ID && LA270_0<=RULE_STRING)) ) {
                                alt270=1;
                            }
                            switch (alt270) {
                                case 1 :
                                    // InternalDialogParser.g:11451:7: (lv_arglist_9_0= ruleNestedExpression )
                                    {
                                    // InternalDialogParser.g:11451:7: (lv_arglist_9_0= ruleNestedExpression )
                                    // InternalDialogParser.g:11452:8: lv_arglist_9_0= ruleNestedExpression
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_113);
                                    lv_arglist_9_0=ruleNestedExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                      								}
                                      								add(
                                      									current,
                                      									"arglist",
                                      									lv_arglist_9_0,
                                      									"com.ge.research.sadl.SADL.NestedExpression");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:11469:6: (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )*
                            loop271:
                            do {
                                int alt271=2;
                                int LA271_0 = input.LA(1);

                                if ( (LA271_0==Comma) ) {
                                    alt271=1;
                                }


                                switch (alt271) {
                            	case 1 :
                            	    // InternalDialogParser.g:11470:7: otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_156); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:11474:7: ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    // InternalDialogParser.g:11475:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    {
                            	    // InternalDialogParser.g:11475:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    // InternalDialogParser.g:11476:9: lv_arglist_11_0= ruleNestedExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_113);
                            	    lv_arglist_11_0=ruleNestedExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arglist",
                            	      										lv_arglist_11_0,
                            	      										"com.ge.research.sadl.SADL.NestedExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop271;
                                }
                            } while (true);

                            otherlv_12=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:11500:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            {
                            // InternalDialogParser.g:11500:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            // InternalDialogParser.g:11501:6: otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            {
                            otherlv_13=(Token)match(input,Length,FOLLOW_78); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:11505:6: ( (lv_len_14_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:11506:7: (lv_len_14_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:11506:7: (lv_len_14_0= ruleFacetNumber )
                            // InternalDialogParser.g:11507:8: lv_len_14_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_160);
                            lv_len_14_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              								}
                              								set(
                              									current,
                              									"len",
                              									lv_len_14_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:11524:6: ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            int alt273=2;
                            int LA273_0 = input.LA(1);

                            if ( (LA273_0==HyphenMinus) ) {
                                int LA273_1 = input.LA(2);

                                if ( (LA273_1==HyphenMinus) ) {
                                    int LA273_3 = input.LA(3);

                                    if ( (LA273_3==RULE_NUMBER) ) {
                                        int LA273_6 = input.LA(4);

                                        if ( (synpred32_InternalDialogParser()) ) {
                                            alt273=1;
                                        }
                                    }
                                }
                                else if ( (LA273_1==RULE_NUMBER) ) {
                                    int LA273_4 = input.LA(3);

                                    if ( (synpred32_InternalDialogParser()) ) {
                                        alt273=1;
                                    }
                                }
                                else if ( (LA273_1==Asterisk) && (synpred32_InternalDialogParser())) {
                                    alt273=1;
                                }
                            }
                            switch (alt273) {
                                case 1 :
                                    // InternalDialogParser.g:11525:7: ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    {
                                    // InternalDialogParser.g:11526:7: (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    // InternalDialogParser.g:11527:8: otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    {
                                    otherlv_15=(Token)match(input,HyphenMinus,FOLLOW_80); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
                                      							
                                    }
                                    // InternalDialogParser.g:11531:8: ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    // InternalDialogParser.g:11532:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    {
                                    // InternalDialogParser.g:11532:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    // InternalDialogParser.g:11533:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    {
                                    // InternalDialogParser.g:11533:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    int alt272=2;
                                    int LA272_0 = input.LA(1);

                                    if ( (LA272_0==HyphenMinus||LA272_0==RULE_NUMBER) ) {
                                        alt272=1;
                                    }
                                    else if ( (LA272_0==Asterisk) ) {
                                        alt272=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 272, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt272) {
                                        case 1 :
                                            // InternalDialogParser.g:11534:11: lv_maxlen_16_1= ruleFacetNumber
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_2);
                                            lv_maxlen_16_1=ruleFacetNumber();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											set(
                                              												current,
                                              												"maxlen",
                                              												lv_maxlen_16_1,
                                              												"com.ge.research.sadl.SADL.FacetNumber");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalDialogParser.g:11550:11: lv_maxlen_16_2= Asterisk
                                            {
                                            lv_maxlen_16_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											setWithLastConsumed(current, "maxlen", lv_maxlen_16_2, null);
                                              										
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:11569:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:11569:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:11570:4: () ( (lv_value_18_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:11570:4: ()
                    // InternalDialogParser.g:11571:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11577:4: ( (lv_value_18_0= RULE_STRING ) )
                    // InternalDialogParser.g:11578:5: (lv_value_18_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:11578:5: (lv_value_18_0= RULE_STRING )
                    // InternalDialogParser.g:11579:6: lv_value_18_0= RULE_STRING
                    {
                    lv_value_18_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_18_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:11597:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    {
                    // InternalDialogParser.g:11597:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    // InternalDialogParser.g:11598:4: () ( (lv_value_20_0= ruleAnyNumber ) )
                    {
                    // InternalDialogParser.g:11598:4: ()
                    // InternalDialogParser.g:11599:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11605:4: ( (lv_value_20_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:11606:5: (lv_value_20_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:11606:5: (lv_value_20_0= ruleAnyNumber )
                    // InternalDialogParser.g:11607:6: lv_value_20_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_20_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_20_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:11626:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    {
                    // InternalDialogParser.g:11626:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    // InternalDialogParser.g:11627:4: () ( (lv_value_22_0= ruleBooleanValue ) )
                    {
                    // InternalDialogParser.g:11627:4: ()
                    // InternalDialogParser.g:11628:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11634:4: ( (lv_value_22_0= ruleBooleanValue ) )
                    // InternalDialogParser.g:11635:5: (lv_value_22_0= ruleBooleanValue )
                    {
                    // InternalDialogParser.g:11635:5: (lv_value_22_0= ruleBooleanValue )
                    // InternalDialogParser.g:11636:6: lv_value_22_0= ruleBooleanValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_22_0=ruleBooleanValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_22_0,
                      							"com.ge.research.sadl.SADL.BooleanValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:11655:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    {
                    // InternalDialogParser.g:11655:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    // InternalDialogParser.g:11656:4: () ( (lv_constant_24_0= ruleConstants ) )
                    {
                    // InternalDialogParser.g:11656:4: ()
                    // InternalDialogParser.g:11657:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11663:4: ( (lv_constant_24_0= ruleConstants ) )
                    // InternalDialogParser.g:11664:5: (lv_constant_24_0= ruleConstants )
                    {
                    // InternalDialogParser.g:11664:5: (lv_constant_24_0= ruleConstants )
                    // InternalDialogParser.g:11665:6: lv_constant_24_0= ruleConstants
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_24_0=ruleConstants();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"constant",
                      							lv_constant_24_0,
                      							"com.ge.research.sadl.SADL.Constants");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:11684:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    {
                    // InternalDialogParser.g:11684:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    // InternalDialogParser.g:11685:4: () ( (lv_valueTable_26_0= ruleValueTable ) )
                    {
                    // InternalDialogParser.g:11685:4: ()
                    // InternalDialogParser.g:11686:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11692:4: ( (lv_valueTable_26_0= ruleValueTable ) )
                    // InternalDialogParser.g:11693:5: (lv_valueTable_26_0= ruleValueTable )
                    {
                    // InternalDialogParser.g:11693:5: (lv_valueTable_26_0= ruleValueTable )
                    // InternalDialogParser.g:11694:6: lv_valueTable_26_0= ruleValueTable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_valueTable_26_0=ruleValueTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"valueTable",
                      							lv_valueTable_26_0,
                      							"com.ge.research.sadl.SADL.ValueTable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_PrimaryExpression"


    // $ANTLR start "norm2_PrimaryExpression"
    // InternalDialogParser.g:11717:1: norm2_PrimaryExpression returns [EObject current=null] : ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) ;
    public final EObject norm2_PrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_maxlen_16_2=null;
        Token lv_value_18_0=null;
        EObject this_SelectExpression_1 = null;

        EObject this_Name_3 = null;

        AntlrDatatypeRuleToken lv_article_5_0 = null;

        AntlrDatatypeRuleToken lv_ordinal_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_arglist_9_0 = null;

        EObject lv_arglist_11_0 = null;

        AntlrDatatypeRuleToken lv_len_14_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_16_1 = null;

        AntlrDatatypeRuleToken lv_value_20_0 = null;

        AntlrDatatypeRuleToken lv_value_22_0 = null;

        AntlrDatatypeRuleToken lv_constant_24_0 = null;

        EObject lv_valueTable_26_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:11723:2: ( ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) )
            // InternalDialogParser.g:11724:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            {
            // InternalDialogParser.g:11724:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            int alt282=8;
            alt282 = dfa282.predict(input);
            switch (alt282) {
                case 1 :
                    // InternalDialogParser.g:11725:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis )
                    {
                    // InternalDialogParser.g:11725:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis )
                    // InternalDialogParser.g:11726:4: otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_72);
                    this_SelectExpression_1=norm2_SelectExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SelectExpression_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:11744:3: this_Name_3= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Name_3=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Name_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:11753:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    {
                    // InternalDialogParser.g:11753:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    // InternalDialogParser.g:11754:4: () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    {
                    // InternalDialogParser.g:11754:4: ()
                    // InternalDialogParser.g:11755:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11761:4: ( (lv_article_5_0= ruleAnArticle ) )
                    // InternalDialogParser.g:11762:5: (lv_article_5_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:11762:5: (lv_article_5_0= ruleAnArticle )
                    // InternalDialogParser.g:11763:6: lv_article_5_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_157);
                    lv_article_5_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"article",
                      							lv_article_5_0,
                      							"com.ge.research.sadl.SADL.AnArticle");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:11780:4: ( (lv_ordinal_6_0= ruleOrdinal ) )?
                    int alt276=2;
                    int LA276_0 = input.LA(1);

                    if ( (LA276_0==Seventh||LA276_0==Eighth||LA276_0==Fourth||LA276_0==Second||(LA276_0>=Fifth && LA276_0<=First)||LA276_0==Ninth||(LA276_0>=Other && LA276_0<=Tenth)||LA276_0==Third) ) {
                        alt276=1;
                    }
                    switch (alt276) {
                        case 1 :
                            // InternalDialogParser.g:11781:5: (lv_ordinal_6_0= ruleOrdinal )
                            {
                            // InternalDialogParser.g:11781:5: (lv_ordinal_6_0= ruleOrdinal )
                            // InternalDialogParser.g:11782:6: lv_ordinal_6_0= ruleOrdinal
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FOLLOW_12);
                            lv_ordinal_6_0=ruleOrdinal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              						}
                              						set(
                              							current,
                              							"ordinal",
                              							lv_ordinal_6_0,
                              							"com.ge.research.sadl.SADL.Ordinal");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:11799:4: ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:11800:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:11800:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:11801:6: lv_type_7_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_158);
                    lv_type_7_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_7_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:11818:4: ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    int alt281=3;
                    int LA281_0 = input.LA(1);

                    if ( (LA281_0==LeftSquareBracket) ) {
                        alt281=1;
                    }
                    else if ( (LA281_0==Length) ) {
                        alt281=2;
                    }
                    switch (alt281) {
                        case 1 :
                            // InternalDialogParser.g:11819:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            {
                            // InternalDialogParser.g:11819:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            // InternalDialogParser.g:11820:6: otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket
                            {
                            otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_159); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
                              					
                            }
                            // InternalDialogParser.g:11824:6: ( (lv_arglist_9_0= ruleNestedExpression ) )?
                            int alt277=2;
                            int LA277_0 = input.LA(1);

                            if ( (LA277_0==Another||LA277_0==Element||LA277_0==Sublist||LA277_0==Length||LA277_0==Select||(LA277_0>=Count && LA277_0<=False)||LA277_0==First||(LA277_0>=Index && LA277_0<=Known)||LA277_0==There||LA277_0==Value||LA277_0==None||LA277_0==Last||LA277_0==Only||LA277_0==Some||(LA277_0>=True && LA277_0<=Type)||LA277_0==The||LA277_0==Any||LA277_0==Not||LA277_0==The_1||LA277_0==HyphenMinusHyphenMinus||(LA277_0>=An && LA277_0<=An_1)||LA277_0==ExclamationMark||LA277_0==LeftParenthesis||LA277_0==HyphenMinus||LA277_0==A||LA277_0==LeftSquareBracket||(LA277_0>=A_1 && LA277_0<=LeftCurlyBracket)||LA277_0==RULE_NUMBER||(LA277_0>=RULE_ID && LA277_0<=RULE_STRING)) ) {
                                alt277=1;
                            }
                            switch (alt277) {
                                case 1 :
                                    // InternalDialogParser.g:11825:7: (lv_arglist_9_0= ruleNestedExpression )
                                    {
                                    // InternalDialogParser.g:11825:7: (lv_arglist_9_0= ruleNestedExpression )
                                    // InternalDialogParser.g:11826:8: lv_arglist_9_0= ruleNestedExpression
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_113);
                                    lv_arglist_9_0=ruleNestedExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                      								}
                                      								add(
                                      									current,
                                      									"arglist",
                                      									lv_arglist_9_0,
                                      									"com.ge.research.sadl.SADL.NestedExpression");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:11843:6: (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )*
                            loop278:
                            do {
                                int alt278=2;
                                int LA278_0 = input.LA(1);

                                if ( (LA278_0==Comma) ) {
                                    alt278=1;
                                }


                                switch (alt278) {
                            	case 1 :
                            	    // InternalDialogParser.g:11844:7: otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_156); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:11848:7: ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    // InternalDialogParser.g:11849:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    {
                            	    // InternalDialogParser.g:11849:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    // InternalDialogParser.g:11850:9: lv_arglist_11_0= ruleNestedExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_113);
                            	    lv_arglist_11_0=ruleNestedExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arglist",
                            	      										lv_arglist_11_0,
                            	      										"com.ge.research.sadl.SADL.NestedExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop278;
                                }
                            } while (true);

                            otherlv_12=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:11874:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            {
                            // InternalDialogParser.g:11874:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            // InternalDialogParser.g:11875:6: otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            {
                            otherlv_13=(Token)match(input,Length,FOLLOW_78); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:11879:6: ( (lv_len_14_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:11880:7: (lv_len_14_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:11880:7: (lv_len_14_0= ruleFacetNumber )
                            // InternalDialogParser.g:11881:8: lv_len_14_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_160);
                            lv_len_14_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              								}
                              								set(
                              									current,
                              									"len",
                              									lv_len_14_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:11898:6: ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            int alt280=2;
                            int LA280_0 = input.LA(1);

                            if ( (LA280_0==HyphenMinus) ) {
                                int LA280_1 = input.LA(2);

                                if ( (LA280_1==HyphenMinus) ) {
                                    int LA280_3 = input.LA(3);

                                    if ( (LA280_3==RULE_NUMBER) ) {
                                        int LA280_6 = input.LA(4);

                                        if ( (synpred33_InternalDialogParser()) ) {
                                            alt280=1;
                                        }
                                    }
                                }
                                else if ( (LA280_1==RULE_NUMBER) ) {
                                    int LA280_4 = input.LA(3);

                                    if ( (synpred33_InternalDialogParser()) ) {
                                        alt280=1;
                                    }
                                }
                                else if ( (LA280_1==Asterisk) && (synpred33_InternalDialogParser())) {
                                    alt280=1;
                                }
                            }
                            switch (alt280) {
                                case 1 :
                                    // InternalDialogParser.g:11899:7: ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    {
                                    // InternalDialogParser.g:11900:7: (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    // InternalDialogParser.g:11901:8: otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    {
                                    otherlv_15=(Token)match(input,HyphenMinus,FOLLOW_80); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
                                      							
                                    }
                                    // InternalDialogParser.g:11905:8: ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    // InternalDialogParser.g:11906:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    {
                                    // InternalDialogParser.g:11906:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    // InternalDialogParser.g:11907:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    {
                                    // InternalDialogParser.g:11907:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    int alt279=2;
                                    int LA279_0 = input.LA(1);

                                    if ( (LA279_0==HyphenMinus||LA279_0==RULE_NUMBER) ) {
                                        alt279=1;
                                    }
                                    else if ( (LA279_0==Asterisk) ) {
                                        alt279=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 279, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt279) {
                                        case 1 :
                                            // InternalDialogParser.g:11908:11: lv_maxlen_16_1= ruleFacetNumber
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_2);
                                            lv_maxlen_16_1=ruleFacetNumber();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											set(
                                              												current,
                                              												"maxlen",
                                              												lv_maxlen_16_1,
                                              												"com.ge.research.sadl.SADL.FacetNumber");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalDialogParser.g:11924:11: lv_maxlen_16_2= Asterisk
                                            {
                                            lv_maxlen_16_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											setWithLastConsumed(current, "maxlen", lv_maxlen_16_2, null);
                                              										
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:11943:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:11943:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:11944:4: () ( (lv_value_18_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:11944:4: ()
                    // InternalDialogParser.g:11945:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11951:4: ( (lv_value_18_0= RULE_STRING ) )
                    // InternalDialogParser.g:11952:5: (lv_value_18_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:11952:5: (lv_value_18_0= RULE_STRING )
                    // InternalDialogParser.g:11953:6: lv_value_18_0= RULE_STRING
                    {
                    lv_value_18_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_18_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:11971:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    {
                    // InternalDialogParser.g:11971:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    // InternalDialogParser.g:11972:4: () ( (lv_value_20_0= ruleAnyNumber ) )
                    {
                    // InternalDialogParser.g:11972:4: ()
                    // InternalDialogParser.g:11973:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11979:4: ( (lv_value_20_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:11980:5: (lv_value_20_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:11980:5: (lv_value_20_0= ruleAnyNumber )
                    // InternalDialogParser.g:11981:6: lv_value_20_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_20_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_20_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:12000:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    {
                    // InternalDialogParser.g:12000:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    // InternalDialogParser.g:12001:4: () ( (lv_value_22_0= ruleBooleanValue ) )
                    {
                    // InternalDialogParser.g:12001:4: ()
                    // InternalDialogParser.g:12002:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12008:4: ( (lv_value_22_0= ruleBooleanValue ) )
                    // InternalDialogParser.g:12009:5: (lv_value_22_0= ruleBooleanValue )
                    {
                    // InternalDialogParser.g:12009:5: (lv_value_22_0= ruleBooleanValue )
                    // InternalDialogParser.g:12010:6: lv_value_22_0= ruleBooleanValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_22_0=ruleBooleanValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_22_0,
                      							"com.ge.research.sadl.SADL.BooleanValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:12029:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    {
                    // InternalDialogParser.g:12029:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    // InternalDialogParser.g:12030:4: () ( (lv_constant_24_0= ruleConstants ) )
                    {
                    // InternalDialogParser.g:12030:4: ()
                    // InternalDialogParser.g:12031:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12037:4: ( (lv_constant_24_0= ruleConstants ) )
                    // InternalDialogParser.g:12038:5: (lv_constant_24_0= ruleConstants )
                    {
                    // InternalDialogParser.g:12038:5: (lv_constant_24_0= ruleConstants )
                    // InternalDialogParser.g:12039:6: lv_constant_24_0= ruleConstants
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_24_0=ruleConstants();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"constant",
                      							lv_constant_24_0,
                      							"com.ge.research.sadl.SADL.Constants");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:12058:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    {
                    // InternalDialogParser.g:12058:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    // InternalDialogParser.g:12059:4: () ( (lv_valueTable_26_0= ruleValueTable ) )
                    {
                    // InternalDialogParser.g:12059:4: ()
                    // InternalDialogParser.g:12060:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12066:4: ( (lv_valueTable_26_0= ruleValueTable ) )
                    // InternalDialogParser.g:12067:5: (lv_valueTable_26_0= ruleValueTable )
                    {
                    // InternalDialogParser.g:12067:5: (lv_valueTable_26_0= ruleValueTable )
                    // InternalDialogParser.g:12068:6: lv_valueTable_26_0= ruleValueTable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_valueTable_26_0=ruleValueTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"valueTable",
                      							lv_valueTable_26_0,
                      							"com.ge.research.sadl.SADL.ValueTable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_PrimaryExpression"


    // $ANTLR start "norm3_PrimaryExpression"
    // InternalDialogParser.g:12091:1: norm3_PrimaryExpression returns [EObject current=null] : ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) ;
    public final EObject norm3_PrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_maxlen_16_2=null;
        Token lv_value_18_0=null;
        EObject this_SelectExpression_1 = null;

        EObject this_Name_3 = null;

        AntlrDatatypeRuleToken lv_article_5_0 = null;

        AntlrDatatypeRuleToken lv_ordinal_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_arglist_9_0 = null;

        EObject lv_arglist_11_0 = null;

        AntlrDatatypeRuleToken lv_len_14_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_16_1 = null;

        AntlrDatatypeRuleToken lv_value_20_0 = null;

        AntlrDatatypeRuleToken lv_value_22_0 = null;

        AntlrDatatypeRuleToken lv_constant_24_0 = null;

        EObject lv_valueTable_26_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:12097:2: ( ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) )
            // InternalDialogParser.g:12098:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            {
            // InternalDialogParser.g:12098:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            int alt289=8;
            alt289 = dfa289.predict(input);
            switch (alt289) {
                case 1 :
                    // InternalDialogParser.g:12099:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis )
                    {
                    // InternalDialogParser.g:12099:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis )
                    // InternalDialogParser.g:12100:4: otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_72);
                    this_SelectExpression_1=norm3_SelectExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SelectExpression_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:12118:3: this_Name_3= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Name_3=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Name_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:12127:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    {
                    // InternalDialogParser.g:12127:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    // InternalDialogParser.g:12128:4: () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    {
                    // InternalDialogParser.g:12128:4: ()
                    // InternalDialogParser.g:12129:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12135:4: ( (lv_article_5_0= ruleAnArticle ) )
                    // InternalDialogParser.g:12136:5: (lv_article_5_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:12136:5: (lv_article_5_0= ruleAnArticle )
                    // InternalDialogParser.g:12137:6: lv_article_5_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_157);
                    lv_article_5_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"article",
                      							lv_article_5_0,
                      							"com.ge.research.sadl.SADL.AnArticle");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:12154:4: ( (lv_ordinal_6_0= ruleOrdinal ) )?
                    int alt283=2;
                    int LA283_0 = input.LA(1);

                    if ( (LA283_0==Seventh||LA283_0==Eighth||LA283_0==Fourth||LA283_0==Second||(LA283_0>=Fifth && LA283_0<=First)||LA283_0==Ninth||(LA283_0>=Other && LA283_0<=Tenth)||LA283_0==Third) ) {
                        alt283=1;
                    }
                    switch (alt283) {
                        case 1 :
                            // InternalDialogParser.g:12155:5: (lv_ordinal_6_0= ruleOrdinal )
                            {
                            // InternalDialogParser.g:12155:5: (lv_ordinal_6_0= ruleOrdinal )
                            // InternalDialogParser.g:12156:6: lv_ordinal_6_0= ruleOrdinal
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FOLLOW_12);
                            lv_ordinal_6_0=ruleOrdinal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              						}
                              						set(
                              							current,
                              							"ordinal",
                              							lv_ordinal_6_0,
                              							"com.ge.research.sadl.SADL.Ordinal");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:12173:4: ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:12174:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:12174:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:12175:6: lv_type_7_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_158);
                    lv_type_7_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_7_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:12192:4: ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    int alt288=3;
                    int LA288_0 = input.LA(1);

                    if ( (LA288_0==LeftSquareBracket) ) {
                        alt288=1;
                    }
                    else if ( (LA288_0==Length) ) {
                        alt288=2;
                    }
                    switch (alt288) {
                        case 1 :
                            // InternalDialogParser.g:12193:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            {
                            // InternalDialogParser.g:12193:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            // InternalDialogParser.g:12194:6: otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket
                            {
                            otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_159); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
                              					
                            }
                            // InternalDialogParser.g:12198:6: ( (lv_arglist_9_0= ruleNestedExpression ) )?
                            int alt284=2;
                            int LA284_0 = input.LA(1);

                            if ( (LA284_0==Another||LA284_0==Element||LA284_0==Sublist||LA284_0==Length||LA284_0==Select||(LA284_0>=Count && LA284_0<=False)||LA284_0==First||(LA284_0>=Index && LA284_0<=Known)||LA284_0==There||LA284_0==Value||LA284_0==None||LA284_0==Last||LA284_0==Only||LA284_0==Some||(LA284_0>=True && LA284_0<=Type)||LA284_0==The||LA284_0==Any||LA284_0==Not||LA284_0==The_1||LA284_0==HyphenMinusHyphenMinus||(LA284_0>=An && LA284_0<=An_1)||LA284_0==ExclamationMark||LA284_0==LeftParenthesis||LA284_0==HyphenMinus||LA284_0==A||LA284_0==LeftSquareBracket||(LA284_0>=A_1 && LA284_0<=LeftCurlyBracket)||LA284_0==RULE_NUMBER||(LA284_0>=RULE_ID && LA284_0<=RULE_STRING)) ) {
                                alt284=1;
                            }
                            switch (alt284) {
                                case 1 :
                                    // InternalDialogParser.g:12199:7: (lv_arglist_9_0= ruleNestedExpression )
                                    {
                                    // InternalDialogParser.g:12199:7: (lv_arglist_9_0= ruleNestedExpression )
                                    // InternalDialogParser.g:12200:8: lv_arglist_9_0= ruleNestedExpression
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_113);
                                    lv_arglist_9_0=ruleNestedExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                      								}
                                      								add(
                                      									current,
                                      									"arglist",
                                      									lv_arglist_9_0,
                                      									"com.ge.research.sadl.SADL.NestedExpression");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:12217:6: (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )*
                            loop285:
                            do {
                                int alt285=2;
                                int LA285_0 = input.LA(1);

                                if ( (LA285_0==Comma) ) {
                                    alt285=1;
                                }


                                switch (alt285) {
                            	case 1 :
                            	    // InternalDialogParser.g:12218:7: otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_156); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:12222:7: ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    // InternalDialogParser.g:12223:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    {
                            	    // InternalDialogParser.g:12223:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    // InternalDialogParser.g:12224:9: lv_arglist_11_0= ruleNestedExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_113);
                            	    lv_arglist_11_0=ruleNestedExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arglist",
                            	      										lv_arglist_11_0,
                            	      										"com.ge.research.sadl.SADL.NestedExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop285;
                                }
                            } while (true);

                            otherlv_12=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:12248:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            {
                            // InternalDialogParser.g:12248:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            // InternalDialogParser.g:12249:6: otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            {
                            otherlv_13=(Token)match(input,Length,FOLLOW_78); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:12253:6: ( (lv_len_14_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:12254:7: (lv_len_14_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:12254:7: (lv_len_14_0= ruleFacetNumber )
                            // InternalDialogParser.g:12255:8: lv_len_14_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_160);
                            lv_len_14_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              								}
                              								set(
                              									current,
                              									"len",
                              									lv_len_14_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:12272:6: ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            int alt287=2;
                            int LA287_0 = input.LA(1);

                            if ( (LA287_0==HyphenMinus) ) {
                                int LA287_1 = input.LA(2);

                                if ( (LA287_1==RULE_NUMBER) ) {
                                    int LA287_3 = input.LA(3);

                                    if ( (synpred34_InternalDialogParser()) ) {
                                        alt287=1;
                                    }
                                }
                                else if ( (LA287_1==HyphenMinus) ) {
                                    int LA287_4 = input.LA(3);

                                    if ( (LA287_4==RULE_NUMBER) ) {
                                        int LA287_6 = input.LA(4);

                                        if ( (synpred34_InternalDialogParser()) ) {
                                            alt287=1;
                                        }
                                    }
                                }
                                else if ( (LA287_1==Asterisk) && (synpred34_InternalDialogParser())) {
                                    alt287=1;
                                }
                            }
                            switch (alt287) {
                                case 1 :
                                    // InternalDialogParser.g:12273:7: ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    {
                                    // InternalDialogParser.g:12274:7: (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    // InternalDialogParser.g:12275:8: otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    {
                                    otherlv_15=(Token)match(input,HyphenMinus,FOLLOW_80); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
                                      							
                                    }
                                    // InternalDialogParser.g:12279:8: ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    // InternalDialogParser.g:12280:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    {
                                    // InternalDialogParser.g:12280:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    // InternalDialogParser.g:12281:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    {
                                    // InternalDialogParser.g:12281:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    int alt286=2;
                                    int LA286_0 = input.LA(1);

                                    if ( (LA286_0==HyphenMinus||LA286_0==RULE_NUMBER) ) {
                                        alt286=1;
                                    }
                                    else if ( (LA286_0==Asterisk) ) {
                                        alt286=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 286, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt286) {
                                        case 1 :
                                            // InternalDialogParser.g:12282:11: lv_maxlen_16_1= ruleFacetNumber
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_2);
                                            lv_maxlen_16_1=ruleFacetNumber();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											set(
                                              												current,
                                              												"maxlen",
                                              												lv_maxlen_16_1,
                                              												"com.ge.research.sadl.SADL.FacetNumber");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalDialogParser.g:12298:11: lv_maxlen_16_2= Asterisk
                                            {
                                            lv_maxlen_16_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											setWithLastConsumed(current, "maxlen", lv_maxlen_16_2, null);
                                              										
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:12317:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:12317:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:12318:4: () ( (lv_value_18_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:12318:4: ()
                    // InternalDialogParser.g:12319:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12325:4: ( (lv_value_18_0= RULE_STRING ) )
                    // InternalDialogParser.g:12326:5: (lv_value_18_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:12326:5: (lv_value_18_0= RULE_STRING )
                    // InternalDialogParser.g:12327:6: lv_value_18_0= RULE_STRING
                    {
                    lv_value_18_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_18_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:12345:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    {
                    // InternalDialogParser.g:12345:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    // InternalDialogParser.g:12346:4: () ( (lv_value_20_0= ruleAnyNumber ) )
                    {
                    // InternalDialogParser.g:12346:4: ()
                    // InternalDialogParser.g:12347:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12353:4: ( (lv_value_20_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:12354:5: (lv_value_20_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:12354:5: (lv_value_20_0= ruleAnyNumber )
                    // InternalDialogParser.g:12355:6: lv_value_20_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_20_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_20_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:12374:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    {
                    // InternalDialogParser.g:12374:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    // InternalDialogParser.g:12375:4: () ( (lv_value_22_0= ruleBooleanValue ) )
                    {
                    // InternalDialogParser.g:12375:4: ()
                    // InternalDialogParser.g:12376:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12382:4: ( (lv_value_22_0= ruleBooleanValue ) )
                    // InternalDialogParser.g:12383:5: (lv_value_22_0= ruleBooleanValue )
                    {
                    // InternalDialogParser.g:12383:5: (lv_value_22_0= ruleBooleanValue )
                    // InternalDialogParser.g:12384:6: lv_value_22_0= ruleBooleanValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_22_0=ruleBooleanValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_22_0,
                      							"com.ge.research.sadl.SADL.BooleanValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:12403:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    {
                    // InternalDialogParser.g:12403:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    // InternalDialogParser.g:12404:4: () ( (lv_constant_24_0= ruleConstants ) )
                    {
                    // InternalDialogParser.g:12404:4: ()
                    // InternalDialogParser.g:12405:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12411:4: ( (lv_constant_24_0= ruleConstants ) )
                    // InternalDialogParser.g:12412:5: (lv_constant_24_0= ruleConstants )
                    {
                    // InternalDialogParser.g:12412:5: (lv_constant_24_0= ruleConstants )
                    // InternalDialogParser.g:12413:6: lv_constant_24_0= ruleConstants
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_24_0=ruleConstants();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"constant",
                      							lv_constant_24_0,
                      							"com.ge.research.sadl.SADL.Constants");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:12432:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    {
                    // InternalDialogParser.g:12432:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    // InternalDialogParser.g:12433:4: () ( (lv_valueTable_26_0= ruleValueTable ) )
                    {
                    // InternalDialogParser.g:12433:4: ()
                    // InternalDialogParser.g:12434:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12440:4: ( (lv_valueTable_26_0= ruleValueTable ) )
                    // InternalDialogParser.g:12441:5: (lv_valueTable_26_0= ruleValueTable )
                    {
                    // InternalDialogParser.g:12441:5: (lv_valueTable_26_0= ruleValueTable )
                    // InternalDialogParser.g:12442:6: lv_valueTable_26_0= ruleValueTable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_valueTable_26_0=ruleValueTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"valueTable",
                      							lv_valueTable_26_0,
                      							"com.ge.research.sadl.SADL.ValueTable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_PrimaryExpression"


    // $ANTLR start "entryRuleName"
    // InternalDialogParser.g:12464:1: entryRuleName returns [EObject current=null] : iv_ruleName= ruleName EOF ;
    public final EObject entryRuleName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleName = null;


        try {
            // InternalDialogParser.g:12464:45: (iv_ruleName= ruleName EOF )
            // InternalDialogParser.g:12465:2: iv_ruleName= ruleName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleName=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleName"


    // $ANTLR start "ruleName"
    // InternalDialogParser.g:12471:1: ruleName returns [EObject current=null] : ( () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )? ) ;
    public final EObject ruleName() throws RecognitionException {
        EObject current = null;

        Token lv_function_2_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_arglist_3_0 = null;

        EObject lv_arglist_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:12477:2: ( ( () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )? ) )
            // InternalDialogParser.g:12478:2: ( () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )? )
            {
            // InternalDialogParser.g:12478:2: ( () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )? )
            // InternalDialogParser.g:12479:3: () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )?
            {
            // InternalDialogParser.g:12479:3: ()
            // InternalDialogParser.g:12480:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNameAccess().getNameAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:12486:3: ( ( ruleQNAME ) )
            // InternalDialogParser.g:12487:4: ( ruleQNAME )
            {
            // InternalDialogParser.g:12487:4: ( ruleQNAME )
            // InternalDialogParser.g:12488:5: ruleQNAME
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNameRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNameAccess().getNameSadlResourceCrossReference_1_0());
              				
            }
            pushFollow(FOLLOW_161);
            ruleQNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:12502:3: ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )?
            int alt292=2;
            int LA292_0 = input.LA(1);

            if ( (LA292_0==LeftParenthesis) && (synpred35_InternalDialogParser())) {
                alt292=1;
            }
            switch (alt292) {
                case 1 :
                    // InternalDialogParser.g:12503:4: ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis )
                    {
                    // InternalDialogParser.g:12504:4: ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis )
                    // InternalDialogParser.g:12505:5: ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis
                    {
                    // InternalDialogParser.g:12505:5: ( (lv_function_2_0= LeftParenthesis ) )
                    // InternalDialogParser.g:12506:6: (lv_function_2_0= LeftParenthesis )
                    {
                    // InternalDialogParser.g:12506:6: (lv_function_2_0= LeftParenthesis )
                    // InternalDialogParser.g:12507:7: lv_function_2_0= LeftParenthesis
                    {
                    lv_function_2_0=(Token)match(input,LeftParenthesis,FOLLOW_162); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_function_2_0, grammarAccess.getNameAccess().getFunctionLeftParenthesisKeyword_2_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNameRule());
                      							}
                      							setWithLastConsumed(current, "function", true, "(");
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:12519:5: ( (lv_arglist_3_0= ruleNestedExpression ) )?
                    int alt290=2;
                    int LA290_0 = input.LA(1);

                    if ( (LA290_0==Another||LA290_0==Element||LA290_0==Sublist||LA290_0==Length||LA290_0==Select||(LA290_0>=Count && LA290_0<=False)||LA290_0==First||(LA290_0>=Index && LA290_0<=Known)||LA290_0==There||LA290_0==Value||LA290_0==None||LA290_0==Last||LA290_0==Only||LA290_0==Some||(LA290_0>=True && LA290_0<=Type)||LA290_0==The||LA290_0==Any||LA290_0==Not||LA290_0==The_1||LA290_0==HyphenMinusHyphenMinus||(LA290_0>=An && LA290_0<=An_1)||LA290_0==ExclamationMark||LA290_0==LeftParenthesis||LA290_0==HyphenMinus||LA290_0==A||LA290_0==LeftSquareBracket||(LA290_0>=A_1 && LA290_0<=LeftCurlyBracket)||LA290_0==RULE_NUMBER||(LA290_0>=RULE_ID && LA290_0<=RULE_STRING)) ) {
                        alt290=1;
                    }
                    switch (alt290) {
                        case 1 :
                            // InternalDialogParser.g:12520:6: (lv_arglist_3_0= ruleNestedExpression )
                            {
                            // InternalDialogParser.g:12520:6: (lv_arglist_3_0= ruleNestedExpression )
                            // InternalDialogParser.g:12521:7: lv_arglist_3_0= ruleNestedExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getNameAccess().getArglistNestedExpressionParserRuleCall_2_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_27);
                            lv_arglist_3_0=ruleNestedExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getNameRule());
                              							}
                              							add(
                              								current,
                              								"arglist",
                              								lv_arglist_3_0,
                              								"com.ge.research.sadl.SADL.NestedExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:12538:5: (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )*
                    loop291:
                    do {
                        int alt291=2;
                        int LA291_0 = input.LA(1);

                        if ( (LA291_0==Comma) ) {
                            alt291=1;
                        }


                        switch (alt291) {
                    	case 1 :
                    	    // InternalDialogParser.g:12539:6: otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_156); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getNameAccess().getCommaKeyword_2_0_2_0());
                    	      					
                    	    }
                    	    // InternalDialogParser.g:12543:6: ( (lv_arglist_5_0= ruleNestedExpression ) )
                    	    // InternalDialogParser.g:12544:7: (lv_arglist_5_0= ruleNestedExpression )
                    	    {
                    	    // InternalDialogParser.g:12544:7: (lv_arglist_5_0= ruleNestedExpression )
                    	    // InternalDialogParser.g:12545:8: lv_arglist_5_0= ruleNestedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getNameAccess().getArglistNestedExpressionParserRuleCall_2_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_27);
                    	    lv_arglist_5_0=ruleNestedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getNameRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"arglist",
                    	      									lv_arglist_5_0,
                    	      									"com.ge.research.sadl.SADL.NestedExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop291;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getNameAccess().getRightParenthesisKeyword_2_0_3());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleName"


    // $ANTLR start "entryRuleValueTable"
    // InternalDialogParser.g:12573:1: entryRuleValueTable returns [EObject current=null] : iv_ruleValueTable= ruleValueTable EOF ;
    public final EObject entryRuleValueTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueTable = null;


        try {
            // InternalDialogParser.g:12573:51: (iv_ruleValueTable= ruleValueTable EOF )
            // InternalDialogParser.g:12574:2: iv_ruleValueTable= ruleValueTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueTable=ruleValueTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueTable"


    // $ANTLR start "ruleValueTable"
    // InternalDialogParser.g:12580:1: ruleValueTable returns [EObject current=null] : ( (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket ) | (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket ) ) ;
    public final EObject ruleValueTable() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_row_1_0 = null;

        EObject lv_rows_5_0 = null;

        EObject lv_rows_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:12586:2: ( ( (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket ) | (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket ) ) )
            // InternalDialogParser.g:12587:2: ( (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket ) | (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket ) )
            {
            // InternalDialogParser.g:12587:2: ( (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket ) | (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket ) )
            int alt295=2;
            int LA295_0 = input.LA(1);

            if ( (LA295_0==LeftSquareBracket) ) {
                alt295=1;
            }
            else if ( (LA295_0==LeftCurlyBracket) ) {
                alt295=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 295, 0, input);

                throw nvae;
            }
            switch (alt295) {
                case 1 :
                    // InternalDialogParser.g:12588:3: (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket )
                    {
                    // InternalDialogParser.g:12588:3: (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket )
                    // InternalDialogParser.g:12589:4: otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket
                    {
                    otherlv_0=(Token)match(input,LeftSquareBracket,FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_0_0());
                      			
                    }
                    // InternalDialogParser.g:12593:4: ( (lv_row_1_0= ruleValueRow ) )
                    // InternalDialogParser.g:12594:5: (lv_row_1_0= ruleValueRow )
                    {
                    // InternalDialogParser.g:12594:5: (lv_row_1_0= ruleValueRow )
                    // InternalDialogParser.g:12595:6: lv_row_1_0= ruleValueRow
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValueTableAccess().getRowValueRowParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_163);
                    lv_row_1_0=ruleValueRow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValueTableRule());
                      						}
                      						set(
                      							current,
                      							"row",
                      							lv_row_1_0,
                      							"com.ge.research.sadl.SADL.ValueRow");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:12618:3: (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:12618:3: (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket )
                    // InternalDialogParser.g:12619:4: otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket
                    {
                    otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_164); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getValueTableAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    otherlv_4=(Token)match(input,LeftSquareBracket,FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:12627:4: ( (lv_rows_5_0= ruleValueRow ) )
                    // InternalDialogParser.g:12628:5: (lv_rows_5_0= ruleValueRow )
                    {
                    // InternalDialogParser.g:12628:5: (lv_rows_5_0= ruleValueRow )
                    // InternalDialogParser.g:12629:6: lv_rows_5_0= ruleValueRow
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValueTableAccess().getRowsValueRowParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_163);
                    lv_rows_5_0=ruleValueRow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValueTableRule());
                      						}
                      						add(
                      							current,
                      							"rows",
                      							lv_rows_5_0,
                      							"com.ge.research.sadl.SADL.ValueRow");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,RightSquareBracket,FOLLOW_165); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_1_3());
                      			
                    }
                    // InternalDialogParser.g:12650:4: ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )*
                    loop294:
                    do {
                        int alt294=2;
                        int LA294_0 = input.LA(1);

                        if ( (LA294_0==Comma||LA294_0==LeftSquareBracket) ) {
                            alt294=1;
                        }


                        switch (alt294) {
                    	case 1 :
                    	    // InternalDialogParser.g:12651:5: (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket
                    	    {
                    	    // InternalDialogParser.g:12651:5: (otherlv_7= Comma )?
                    	    int alt293=2;
                    	    int LA293_0 = input.LA(1);

                    	    if ( (LA293_0==Comma) ) {
                    	        alt293=1;
                    	    }
                    	    switch (alt293) {
                    	        case 1 :
                    	            // InternalDialogParser.g:12652:6: otherlv_7= Comma
                    	            {
                    	            otherlv_7=(Token)match(input,Comma,FOLLOW_164); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_7, grammarAccess.getValueTableAccess().getCommaKeyword_1_4_0());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_156); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_1_4_1());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:12661:5: ( (lv_rows_9_0= ruleValueRow ) )
                    	    // InternalDialogParser.g:12662:6: (lv_rows_9_0= ruleValueRow )
                    	    {
                    	    // InternalDialogParser.g:12662:6: (lv_rows_9_0= ruleValueRow )
                    	    // InternalDialogParser.g:12663:7: lv_rows_9_0= ruleValueRow
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getValueTableAccess().getRowsValueRowParserRuleCall_1_4_2_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_163);
                    	    lv_rows_9_0=ruleValueRow();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getValueTableRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"rows",
                    	      								lv_rows_9_0,
                    	      								"com.ge.research.sadl.SADL.ValueRow");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_10=(Token)match(input,RightSquareBracket,FOLLOW_165); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_1_4_3());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop294;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getValueTableAccess().getRightCurlyBracketKeyword_1_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueTable"


    // $ANTLR start "entryRuleBooleanValue"
    // InternalDialogParser.g:12694:1: entryRuleBooleanValue returns [String current=null] : iv_ruleBooleanValue= ruleBooleanValue EOF ;
    public final String entryRuleBooleanValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBooleanValue = null;


        try {
            // InternalDialogParser.g:12694:52: (iv_ruleBooleanValue= ruleBooleanValue EOF )
            // InternalDialogParser.g:12695:2: iv_ruleBooleanValue= ruleBooleanValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanValue=ruleBooleanValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanValue"


    // $ANTLR start "ruleBooleanValue"
    // InternalDialogParser.g:12701:1: ruleBooleanValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= True | kw= False ) ;
    public final AntlrDatatypeRuleToken ruleBooleanValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:12707:2: ( (kw= True | kw= False ) )
            // InternalDialogParser.g:12708:2: (kw= True | kw= False )
            {
            // InternalDialogParser.g:12708:2: (kw= True | kw= False )
            int alt296=2;
            int LA296_0 = input.LA(1);

            if ( (LA296_0==True) ) {
                alt296=1;
            }
            else if ( (LA296_0==False) ) {
                alt296=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 296, 0, input);

                throw nvae;
            }
            switch (alt296) {
                case 1 :
                    // InternalDialogParser.g:12709:3: kw= True
                    {
                    kw=(Token)match(input,True,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getTrueKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:12715:3: kw= False
                    {
                    kw=(Token)match(input,False,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getFalseKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanValue"


    // $ANTLR start "entryRuleConstants"
    // InternalDialogParser.g:12724:1: entryRuleConstants returns [String current=null] : iv_ruleConstants= ruleConstants EOF ;
    public final String entryRuleConstants() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleConstants = null;


        try {
            // InternalDialogParser.g:12724:49: (iv_ruleConstants= ruleConstants EOF )
            // InternalDialogParser.g:12725:2: iv_ruleConstants= ruleConstants EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstants=ruleConstants();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstants.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstants"


    // $ANTLR start "ruleConstants"
    // InternalDialogParser.g:12731:1: ruleConstants returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value ) ;
    public final AntlrDatatypeRuleToken ruleConstants() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DefiniteArticle_7 = null;

        AntlrDatatypeRuleToken this_DefiniteArticle_10 = null;

        AntlrDatatypeRuleToken this_AnArticle_14 = null;

        AntlrDatatypeRuleToken this_Ordinal_15 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:12737:2: ( (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value ) )
            // InternalDialogParser.g:12738:2: (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value )
            {
            // InternalDialogParser.g:12738:2: (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value )
            int alt302=11;
            alt302 = dfa302.predict(input);
            switch (alt302) {
                case 1 :
                    // InternalDialogParser.g:12739:3: kw= PI
                    {
                    kw=(Token)match(input,PI,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getPIKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:12745:3: kw= Known
                    {
                    kw=(Token)match(input,Known,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getKnownKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:12751:3: kw= E_1
                    {
                    kw=(Token)match(input,E_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getEKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:12757:3: kw= HyphenMinusHyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getHyphenMinusHyphenMinusKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:12763:3: kw= None
                    {
                    kw=(Token)match(input,None,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getNoneKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:12769:3: ( (kw= A_1 )? kw= Type )
                    {
                    // InternalDialogParser.g:12769:3: ( (kw= A_1 )? kw= Type )
                    // InternalDialogParser.g:12770:4: (kw= A_1 )? kw= Type
                    {
                    // InternalDialogParser.g:12770:4: (kw= A_1 )?
                    int alt297=2;
                    int LA297_0 = input.LA(1);

                    if ( (LA297_0==A_1) ) {
                        alt297=1;
                    }
                    switch (alt297) {
                        case 1 :
                            // InternalDialogParser.g:12771:5: kw= A_1
                            {
                            kw=(Token)match(input,A_1,FOLLOW_17); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getConstantsAccess().getAKeyword_5_0());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,Type,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getConstantsAccess().getTypeKeyword_5_1());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:12784:3: ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length )
                    {
                    // InternalDialogParser.g:12784:3: ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length )
                    // InternalDialogParser.g:12785:4: (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length
                    {
                    // InternalDialogParser.g:12785:4: (this_DefiniteArticle_7= ruleDefiniteArticle )?
                    int alt298=2;
                    int LA298_0 = input.LA(1);

                    if ( (LA298_0==The||LA298_0==The_1) ) {
                        alt298=1;
                    }
                    switch (alt298) {
                        case 1 :
                            // InternalDialogParser.g:12786:5: this_DefiniteArticle_7= ruleDefiniteArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getConstantsAccess().getDefiniteArticleParserRuleCall_6_0());
                              				
                            }
                            pushFollow(FOLLOW_166);
                            this_DefiniteArticle_7=ruleDefiniteArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DefiniteArticle_7);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,Length,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getConstantsAccess().getLengthKeyword_6_1());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:12804:3: kw= Count
                    {
                    kw=(Token)match(input,Count,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getCountKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalDialogParser.g:12810:3: ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index )
                    {
                    // InternalDialogParser.g:12810:3: ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index )
                    // InternalDialogParser.g:12811:4: (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index
                    {
                    // InternalDialogParser.g:12811:4: (this_DefiniteArticle_10= ruleDefiniteArticle )?
                    int alt299=2;
                    int LA299_0 = input.LA(1);

                    if ( (LA299_0==The||LA299_0==The_1) ) {
                        alt299=1;
                    }
                    switch (alt299) {
                        case 1 :
                            // InternalDialogParser.g:12812:5: this_DefiniteArticle_10= ruleDefiniteArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getConstantsAccess().getDefiniteArticleParserRuleCall_8_0());
                              				
                            }
                            pushFollow(FOLLOW_167);
                            this_DefiniteArticle_10=ruleDefiniteArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DefiniteArticle_10);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,Index,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getConstantsAccess().getIndexKeyword_8_1());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalDialogParser.g:12830:3: ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element )
                    {
                    // InternalDialogParser.g:12830:3: ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element )
                    // InternalDialogParser.g:12831:4: (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element
                    {
                    // InternalDialogParser.g:12831:4: (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) )
                    int alt301=3;
                    switch ( input.LA(1) ) {
                    case First:
                        {
                        alt301=1;
                        }
                        break;
                    case Last:
                        {
                        alt301=2;
                        }
                        break;
                    case Another:
                    case Some:
                    case The:
                    case Any:
                    case The_1:
                    case An:
                    case An_1:
                    case A:
                    case A_1:
                        {
                        alt301=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 301, 0, input);

                        throw nvae;
                    }

                    switch (alt301) {
                        case 1 :
                            // InternalDialogParser.g:12832:5: kw= First
                            {
                            kw=(Token)match(input,First,FOLLOW_168); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getConstantsAccess().getFirstKeyword_9_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:12838:5: kw= Last
                            {
                            kw=(Token)match(input,Last,FOLLOW_168); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getConstantsAccess().getLastKeyword_9_0_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:12844:5: (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? )
                            {
                            // InternalDialogParser.g:12844:5: (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? )
                            // InternalDialogParser.g:12845:6: this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )?
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getConstantsAccess().getAnArticleParserRuleCall_9_0_2_0());
                              					
                            }
                            pushFollow(FOLLOW_169);
                            this_AnArticle_14=ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current.merge(this_AnArticle_14);
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						afterParserOrEnumRuleCall();
                              					
                            }
                            // InternalDialogParser.g:12855:6: (this_Ordinal_15= ruleOrdinal )?
                            int alt300=2;
                            int LA300_0 = input.LA(1);

                            if ( (LA300_0==Seventh||LA300_0==Eighth||LA300_0==Fourth||LA300_0==Second||(LA300_0>=Fifth && LA300_0<=First)||LA300_0==Ninth||(LA300_0>=Other && LA300_0<=Tenth)||LA300_0==Third) ) {
                                alt300=1;
                            }
                            switch (alt300) {
                                case 1 :
                                    // InternalDialogParser.g:12856:7: this_Ordinal_15= ruleOrdinal
                                    {
                                    if ( state.backtracking==0 ) {

                                      							newCompositeNode(grammarAccess.getConstantsAccess().getOrdinalParserRuleCall_9_0_2_1());
                                      						
                                    }
                                    pushFollow(FOLLOW_168);
                                    this_Ordinal_15=ruleOrdinal();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							current.merge(this_Ordinal_15);
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							afterParserOrEnumRuleCall();
                                      						
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    kw=(Token)match(input,Element,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getConstantsAccess().getElementKeyword_9_1());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalDialogParser.g:12876:3: kw= Value
                    {
                    kw=(Token)match(input,Value,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getValueKeyword_10());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstants"


    // $ANTLR start "entryRuleValueRow"
    // InternalDialogParser.g:12885:1: entryRuleValueRow returns [EObject current=null] : iv_ruleValueRow= ruleValueRow EOF ;
    public final EObject entryRuleValueRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueRow = null;


        try {
            // InternalDialogParser.g:12885:49: (iv_ruleValueRow= ruleValueRow EOF )
            // InternalDialogParser.g:12886:2: iv_ruleValueRow= ruleValueRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueRow=ruleValueRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueRow"


    // $ANTLR start "ruleValueRow"
    // InternalDialogParser.g:12892:1: ruleValueRow returns [EObject current=null] : ( ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )* ) ;
    public final EObject ruleValueRow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_explicitValues_0_0 = null;

        EObject lv_explicitValues_2_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:12898:2: ( ( ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )* ) )
            // InternalDialogParser.g:12899:2: ( ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )* )
            {
            // InternalDialogParser.g:12899:2: ( ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )* )
            // InternalDialogParser.g:12900:3: ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )*
            {
            // InternalDialogParser.g:12900:3: ( (lv_explicitValues_0_0= ruleNestedExpression ) )
            // InternalDialogParser.g:12901:4: (lv_explicitValues_0_0= ruleNestedExpression )
            {
            // InternalDialogParser.g:12901:4: (lv_explicitValues_0_0= ruleNestedExpression )
            // InternalDialogParser.g:12902:5: lv_explicitValues_0_0= ruleNestedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueRowAccess().getExplicitValuesNestedExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_170);
            lv_explicitValues_0_0=ruleNestedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueRowRule());
              					}
              					add(
              						current,
              						"explicitValues",
              						lv_explicitValues_0_0,
              						"com.ge.research.sadl.SADL.NestedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:12919:3: (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )*
            loop303:
            do {
                int alt303=2;
                int LA303_0 = input.LA(1);

                if ( (LA303_0==Comma) ) {
                    alt303=1;
                }


                switch (alt303) {
            	case 1 :
            	    // InternalDialogParser.g:12920:4: otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) )
            	    {
            	    otherlv_1=(Token)match(input,Comma,FOLLOW_156); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getValueRowAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalDialogParser.g:12924:4: ( (lv_explicitValues_2_0= ruleNestedExpression ) )
            	    // InternalDialogParser.g:12925:5: (lv_explicitValues_2_0= ruleNestedExpression )
            	    {
            	    // InternalDialogParser.g:12925:5: (lv_explicitValues_2_0= ruleNestedExpression )
            	    // InternalDialogParser.g:12926:6: lv_explicitValues_2_0= ruleNestedExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValueRowAccess().getExplicitValuesNestedExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_170);
            	    lv_explicitValues_2_0=ruleNestedExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValueRowRule());
            	      						}
            	      						add(
            	      							current,
            	      							"explicitValues",
            	      							lv_explicitValues_2_0,
            	      							"com.ge.research.sadl.SADL.NestedExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop303;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueRow"


    // $ANTLR start "entryRuleAnyNumber"
    // InternalDialogParser.g:12948:1: entryRuleAnyNumber returns [String current=null] : iv_ruleAnyNumber= ruleAnyNumber EOF ;
    public final String entryRuleAnyNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAnyNumber = null;


        try {
            // InternalDialogParser.g:12948:49: (iv_ruleAnyNumber= ruleAnyNumber EOF )
            // InternalDialogParser.g:12949:2: iv_ruleAnyNumber= ruleAnyNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnyNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnyNumber=ruleAnyNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnyNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnyNumber"


    // $ANTLR start "ruleAnyNumber"
    // InternalDialogParser.g:12955:1: ruleAnyNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )? ) ;
    public final AntlrDatatypeRuleToken ruleAnyNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_DecimalNumber_0 = null;

        AntlrDatatypeRuleToken this_EXPONENT_1 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:12961:2: ( (this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )? ) )
            // InternalDialogParser.g:12962:2: (this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )? )
            {
            // InternalDialogParser.g:12962:2: (this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )? )
            // InternalDialogParser.g:12963:3: this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAnyNumberAccess().getDecimalNumberParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_171);
            this_DecimalNumber_0=ruleDecimalNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_DecimalNumber_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:12973:3: (this_EXPONENT_1= ruleEXPONENT )?
            int alt304=2;
            int LA304_0 = input.LA(1);

            if ( (LA304_0==E||LA304_0==E_1) ) {
                alt304=1;
            }
            switch (alt304) {
                case 1 :
                    // InternalDialogParser.g:12974:4: this_EXPONENT_1= ruleEXPONENT
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAnyNumberAccess().getEXPONENTParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_EXPONENT_1=ruleEXPONENT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_EXPONENT_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnyNumber"


    // $ANTLR start "entryRuleDecimalNumber"
    // InternalDialogParser.g:12989:1: entryRuleDecimalNumber returns [String current=null] : iv_ruleDecimalNumber= ruleDecimalNumber EOF ;
    public final String entryRuleDecimalNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDecimalNumber = null;


        try {
            // InternalDialogParser.g:12989:53: (iv_ruleDecimalNumber= ruleDecimalNumber EOF )
            // InternalDialogParser.g:12990:2: iv_ruleDecimalNumber= ruleDecimalNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDecimalNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDecimalNumber=ruleDecimalNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDecimalNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDecimalNumber"


    // $ANTLR start "ruleDecimalNumber"
    // InternalDialogParser.g:12996:1: ruleDecimalNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_NUMBER_0= RULE_NUMBER ;
    public final AntlrDatatypeRuleToken ruleDecimalNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_NUMBER_0=null;


        	enterRule();

        try {
            // InternalDialogParser.g:13002:2: (this_NUMBER_0= RULE_NUMBER )
            // InternalDialogParser.g:13003:2: this_NUMBER_0= RULE_NUMBER
            {
            this_NUMBER_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_NUMBER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_NUMBER_0, grammarAccess.getDecimalNumberAccess().getNUMBERTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDecimalNumber"


    // $ANTLR start "entryRuleEXPONENT"
    // InternalDialogParser.g:13013:1: entryRuleEXPONENT returns [String current=null] : iv_ruleEXPONENT= ruleEXPONENT EOF ;
    public final String entryRuleEXPONENT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEXPONENT = null;


        try {
            // InternalDialogParser.g:13013:48: (iv_ruleEXPONENT= ruleEXPONENT EOF )
            // InternalDialogParser.g:13014:2: iv_ruleEXPONENT= ruleEXPONENT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEXPONENTRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEXPONENT=ruleEXPONENT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEXPONENT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEXPONENT"


    // $ANTLR start "ruleEXPONENT"
    // InternalDialogParser.g:13020:1: ruleEXPONENT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber ) ;
    public final AntlrDatatypeRuleToken ruleEXPONENT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DecimalNumber_4 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:13026:2: ( ( (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber ) )
            // InternalDialogParser.g:13027:2: ( (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber )
            {
            // InternalDialogParser.g:13027:2: ( (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber )
            // InternalDialogParser.g:13028:3: (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber
            {
            // InternalDialogParser.g:13028:3: (kw= E_1 | kw= E )
            int alt305=2;
            int LA305_0 = input.LA(1);

            if ( (LA305_0==E_1) ) {
                alt305=1;
            }
            else if ( (LA305_0==E) ) {
                alt305=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 305, 0, input);

                throw nvae;
            }
            switch (alt305) {
                case 1 :
                    // InternalDialogParser.g:13029:4: kw= E_1
                    {
                    kw=(Token)match(input,E_1,FOLLOW_172); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getEKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:13035:4: kw= E
                    {
                    kw=(Token)match(input,E,FOLLOW_172); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getEKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:13041:3: (kw= HyphenMinus | kw= PlusSign )?
            int alt306=3;
            int LA306_0 = input.LA(1);

            if ( (LA306_0==HyphenMinus) ) {
                alt306=1;
            }
            else if ( (LA306_0==PlusSign) ) {
                alt306=2;
            }
            switch (alt306) {
                case 1 :
                    // InternalDialogParser.g:13042:4: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getHyphenMinusKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:13048:4: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getPlusSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEXPONENTAccess().getDecimalNumberParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_DecimalNumber_4=ruleDecimalNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_DecimalNumber_4);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEXPONENT"


    // $ANTLR start "entrySuperEOS"
    // InternalDialogParser.g:13068:1: entrySuperEOS returns [String current=null] : iv_superEOS= superEOS EOF ;
    public final String entrySuperEOS() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_superEOS = null;


        try {
            // InternalDialogParser.g:13068:44: (iv_superEOS= superEOS EOF )
            // InternalDialogParser.g:13069:2: iv_superEOS= superEOS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSADLEOSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_superEOS=superEOS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superEOS.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperEOS"


    // $ANTLR start "superEOS"
    // InternalDialogParser.g:13075:1: superEOS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= FullStop ;
    public final AntlrDatatypeRuleToken superEOS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:13081:2: (kw= FullStop )
            // InternalDialogParser.g:13082:2: kw= FullStop
            {
            kw=(Token)match(input,FullStop,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getSADLEOSAccess().getFullStopKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superEOS"


    // $ANTLR start "entryRuleQNAME"
    // InternalDialogParser.g:13090:1: entryRuleQNAME returns [String current=null] : iv_ruleQNAME= ruleQNAME EOF ;
    public final String entryRuleQNAME() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQNAME = null;


        try {
            // InternalDialogParser.g:13090:45: (iv_ruleQNAME= ruleQNAME EOF )
            // InternalDialogParser.g:13091:2: iv_ruleQNAME= ruleQNAME EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQNAMERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQNAME=ruleQNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQNAME.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQNAME"


    // $ANTLR start "ruleQNAME"
    // InternalDialogParser.g:13097:1: ruleQNAME returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL | this_ID_1= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleQNAME() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_QNAME_TERMINAL_0=null;
        Token this_ID_1=null;


        	enterRule();

        try {
            // InternalDialogParser.g:13103:2: ( (this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL | this_ID_1= RULE_ID ) )
            // InternalDialogParser.g:13104:2: (this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL | this_ID_1= RULE_ID )
            {
            // InternalDialogParser.g:13104:2: (this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL | this_ID_1= RULE_ID )
            int alt307=2;
            int LA307_0 = input.LA(1);

            if ( (LA307_0==RULE_QNAME_TERMINAL) ) {
                alt307=1;
            }
            else if ( (LA307_0==RULE_ID) ) {
                alt307=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 307, 0, input);

                throw nvae;
            }
            switch (alt307) {
                case 1 :
                    // InternalDialogParser.g:13105:3: this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL
                    {
                    this_QNAME_TERMINAL_0=(Token)match(input,RULE_QNAME_TERMINAL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_QNAME_TERMINAL_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_QNAME_TERMINAL_0, grammarAccess.getQNAMEAccess().getQNAME_TERMINALTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:13113:3: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_1, grammarAccess.getQNAMEAccess().getIDTerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQNAME"


    // $ANTLR start "ruleSadlDataType"
    // InternalDialogParser.g:13124:1: ruleSadlDataType returns [Enumerator current=null] : ( (enumLiteral_0= String ) | (enumLiteral_1= Boolean ) | (enumLiteral_2= Decimal ) | (enumLiteral_3= Int ) | (enumLiteral_4= Long ) | (enumLiteral_5= Float ) | (enumLiteral_6= Double ) | (enumLiteral_7= Duration ) | (enumLiteral_8= DateTime ) | (enumLiteral_9= Time ) | (enumLiteral_10= Date ) | (enumLiteral_11= GYearMonth ) | (enumLiteral_12= GYear ) | (enumLiteral_13= GMonthDay ) | (enumLiteral_14= GDay ) | (enumLiteral_15= GMonth ) | (enumLiteral_16= HexBinary ) | (enumLiteral_17= Base64Binary ) | (enumLiteral_18= AnyURI ) | (enumLiteral_19= Integer ) | (enumLiteral_20= NegativeInteger ) | (enumLiteral_21= NonNegativeInteger ) | (enumLiteral_22= PositiveInteger ) | (enumLiteral_23= NonPositiveInteger ) | (enumLiteral_24= Byte ) | (enumLiteral_25= UnsignedByte ) | (enumLiteral_26= UnsignedInt ) | (enumLiteral_27= AnySimpleType ) ) ;
    public final Enumerator ruleSadlDataType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;
        Token enumLiteral_9=null;
        Token enumLiteral_10=null;
        Token enumLiteral_11=null;
        Token enumLiteral_12=null;
        Token enumLiteral_13=null;
        Token enumLiteral_14=null;
        Token enumLiteral_15=null;
        Token enumLiteral_16=null;
        Token enumLiteral_17=null;
        Token enumLiteral_18=null;
        Token enumLiteral_19=null;
        Token enumLiteral_20=null;
        Token enumLiteral_21=null;
        Token enumLiteral_22=null;
        Token enumLiteral_23=null;
        Token enumLiteral_24=null;
        Token enumLiteral_25=null;
        Token enumLiteral_26=null;
        Token enumLiteral_27=null;


        	enterRule();

        try {
            // InternalDialogParser.g:13130:2: ( ( (enumLiteral_0= String ) | (enumLiteral_1= Boolean ) | (enumLiteral_2= Decimal ) | (enumLiteral_3= Int ) | (enumLiteral_4= Long ) | (enumLiteral_5= Float ) | (enumLiteral_6= Double ) | (enumLiteral_7= Duration ) | (enumLiteral_8= DateTime ) | (enumLiteral_9= Time ) | (enumLiteral_10= Date ) | (enumLiteral_11= GYearMonth ) | (enumLiteral_12= GYear ) | (enumLiteral_13= GMonthDay ) | (enumLiteral_14= GDay ) | (enumLiteral_15= GMonth ) | (enumLiteral_16= HexBinary ) | (enumLiteral_17= Base64Binary ) | (enumLiteral_18= AnyURI ) | (enumLiteral_19= Integer ) | (enumLiteral_20= NegativeInteger ) | (enumLiteral_21= NonNegativeInteger ) | (enumLiteral_22= PositiveInteger ) | (enumLiteral_23= NonPositiveInteger ) | (enumLiteral_24= Byte ) | (enumLiteral_25= UnsignedByte ) | (enumLiteral_26= UnsignedInt ) | (enumLiteral_27= AnySimpleType ) ) )
            // InternalDialogParser.g:13131:2: ( (enumLiteral_0= String ) | (enumLiteral_1= Boolean ) | (enumLiteral_2= Decimal ) | (enumLiteral_3= Int ) | (enumLiteral_4= Long ) | (enumLiteral_5= Float ) | (enumLiteral_6= Double ) | (enumLiteral_7= Duration ) | (enumLiteral_8= DateTime ) | (enumLiteral_9= Time ) | (enumLiteral_10= Date ) | (enumLiteral_11= GYearMonth ) | (enumLiteral_12= GYear ) | (enumLiteral_13= GMonthDay ) | (enumLiteral_14= GDay ) | (enumLiteral_15= GMonth ) | (enumLiteral_16= HexBinary ) | (enumLiteral_17= Base64Binary ) | (enumLiteral_18= AnyURI ) | (enumLiteral_19= Integer ) | (enumLiteral_20= NegativeInteger ) | (enumLiteral_21= NonNegativeInteger ) | (enumLiteral_22= PositiveInteger ) | (enumLiteral_23= NonPositiveInteger ) | (enumLiteral_24= Byte ) | (enumLiteral_25= UnsignedByte ) | (enumLiteral_26= UnsignedInt ) | (enumLiteral_27= AnySimpleType ) )
            {
            // InternalDialogParser.g:13131:2: ( (enumLiteral_0= String ) | (enumLiteral_1= Boolean ) | (enumLiteral_2= Decimal ) | (enumLiteral_3= Int ) | (enumLiteral_4= Long ) | (enumLiteral_5= Float ) | (enumLiteral_6= Double ) | (enumLiteral_7= Duration ) | (enumLiteral_8= DateTime ) | (enumLiteral_9= Time ) | (enumLiteral_10= Date ) | (enumLiteral_11= GYearMonth ) | (enumLiteral_12= GYear ) | (enumLiteral_13= GMonthDay ) | (enumLiteral_14= GDay ) | (enumLiteral_15= GMonth ) | (enumLiteral_16= HexBinary ) | (enumLiteral_17= Base64Binary ) | (enumLiteral_18= AnyURI ) | (enumLiteral_19= Integer ) | (enumLiteral_20= NegativeInteger ) | (enumLiteral_21= NonNegativeInteger ) | (enumLiteral_22= PositiveInteger ) | (enumLiteral_23= NonPositiveInteger ) | (enumLiteral_24= Byte ) | (enumLiteral_25= UnsignedByte ) | (enumLiteral_26= UnsignedInt ) | (enumLiteral_27= AnySimpleType ) )
            int alt308=28;
            switch ( input.LA(1) ) {
            case String:
                {
                alt308=1;
                }
                break;
            case Boolean:
                {
                alt308=2;
                }
                break;
            case Decimal:
                {
                alt308=3;
                }
                break;
            case Int:
                {
                alt308=4;
                }
                break;
            case Long:
                {
                alt308=5;
                }
                break;
            case Float:
                {
                alt308=6;
                }
                break;
            case Double:
                {
                alt308=7;
                }
                break;
            case Duration:
                {
                alt308=8;
                }
                break;
            case DateTime:
                {
                alt308=9;
                }
                break;
            case Time:
                {
                alt308=10;
                }
                break;
            case Date:
                {
                alt308=11;
                }
                break;
            case GYearMonth:
                {
                alt308=12;
                }
                break;
            case GYear:
                {
                alt308=13;
                }
                break;
            case GMonthDay:
                {
                alt308=14;
                }
                break;
            case GDay:
                {
                alt308=15;
                }
                break;
            case GMonth:
                {
                alt308=16;
                }
                break;
            case HexBinary:
                {
                alt308=17;
                }
                break;
            case Base64Binary:
                {
                alt308=18;
                }
                break;
            case AnyURI:
                {
                alt308=19;
                }
                break;
            case Integer:
                {
                alt308=20;
                }
                break;
            case NegativeInteger:
                {
                alt308=21;
                }
                break;
            case NonNegativeInteger:
                {
                alt308=22;
                }
                break;
            case PositiveInteger:
                {
                alt308=23;
                }
                break;
            case NonPositiveInteger:
                {
                alt308=24;
                }
                break;
            case Byte:
                {
                alt308=25;
                }
                break;
            case UnsignedByte:
                {
                alt308=26;
                }
                break;
            case UnsignedInt:
                {
                alt308=27;
                }
                break;
            case AnySimpleType:
                {
                alt308=28;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 308, 0, input);

                throw nvae;
            }

            switch (alt308) {
                case 1 :
                    // InternalDialogParser.g:13132:3: (enumLiteral_0= String )
                    {
                    // InternalDialogParser.g:13132:3: (enumLiteral_0= String )
                    // InternalDialogParser.g:13133:4: enumLiteral_0= String
                    {
                    enumLiteral_0=(Token)match(input,String,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getSadlDataTypeAccess().getStringEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:13140:3: (enumLiteral_1= Boolean )
                    {
                    // InternalDialogParser.g:13140:3: (enumLiteral_1= Boolean )
                    // InternalDialogParser.g:13141:4: enumLiteral_1= Boolean
                    {
                    enumLiteral_1=(Token)match(input,Boolean,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getBooleanEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getSadlDataTypeAccess().getBooleanEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:13148:3: (enumLiteral_2= Decimal )
                    {
                    // InternalDialogParser.g:13148:3: (enumLiteral_2= Decimal )
                    // InternalDialogParser.g:13149:4: enumLiteral_2= Decimal
                    {
                    enumLiteral_2=(Token)match(input,Decimal,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDecimalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getSadlDataTypeAccess().getDecimalEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:13156:3: (enumLiteral_3= Int )
                    {
                    // InternalDialogParser.g:13156:3: (enumLiteral_3= Int )
                    // InternalDialogParser.g:13157:4: enumLiteral_3= Int
                    {
                    enumLiteral_3=(Token)match(input,Int,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getIntEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getSadlDataTypeAccess().getIntEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:13164:3: (enumLiteral_4= Long )
                    {
                    // InternalDialogParser.g:13164:3: (enumLiteral_4= Long )
                    // InternalDialogParser.g:13165:4: enumLiteral_4= Long
                    {
                    enumLiteral_4=(Token)match(input,Long,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getLongEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getSadlDataTypeAccess().getLongEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:13172:3: (enumLiteral_5= Float )
                    {
                    // InternalDialogParser.g:13172:3: (enumLiteral_5= Float )
                    // InternalDialogParser.g:13173:4: enumLiteral_5= Float
                    {
                    enumLiteral_5=(Token)match(input,Float,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getFloatEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getSadlDataTypeAccess().getFloatEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:13180:3: (enumLiteral_6= Double )
                    {
                    // InternalDialogParser.g:13180:3: (enumLiteral_6= Double )
                    // InternalDialogParser.g:13181:4: enumLiteral_6= Double
                    {
                    enumLiteral_6=(Token)match(input,Double,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDoubleEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getSadlDataTypeAccess().getDoubleEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:13188:3: (enumLiteral_7= Duration )
                    {
                    // InternalDialogParser.g:13188:3: (enumLiteral_7= Duration )
                    // InternalDialogParser.g:13189:4: enumLiteral_7= Duration
                    {
                    enumLiteral_7=(Token)match(input,Duration,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDurationEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getSadlDataTypeAccess().getDurationEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalDialogParser.g:13196:3: (enumLiteral_8= DateTime )
                    {
                    // InternalDialogParser.g:13196:3: (enumLiteral_8= DateTime )
                    // InternalDialogParser.g:13197:4: enumLiteral_8= DateTime
                    {
                    enumLiteral_8=(Token)match(input,DateTime,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDateTimeEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_8, grammarAccess.getSadlDataTypeAccess().getDateTimeEnumLiteralDeclaration_8());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalDialogParser.g:13204:3: (enumLiteral_9= Time )
                    {
                    // InternalDialogParser.g:13204:3: (enumLiteral_9= Time )
                    // InternalDialogParser.g:13205:4: enumLiteral_9= Time
                    {
                    enumLiteral_9=(Token)match(input,Time,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getTimeEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_9, grammarAccess.getSadlDataTypeAccess().getTimeEnumLiteralDeclaration_9());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalDialogParser.g:13212:3: (enumLiteral_10= Date )
                    {
                    // InternalDialogParser.g:13212:3: (enumLiteral_10= Date )
                    // InternalDialogParser.g:13213:4: enumLiteral_10= Date
                    {
                    enumLiteral_10=(Token)match(input,Date,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDateEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_10, grammarAccess.getSadlDataTypeAccess().getDateEnumLiteralDeclaration_10());
                      			
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalDialogParser.g:13220:3: (enumLiteral_11= GYearMonth )
                    {
                    // InternalDialogParser.g:13220:3: (enumLiteral_11= GYearMonth )
                    // InternalDialogParser.g:13221:4: enumLiteral_11= GYearMonth
                    {
                    enumLiteral_11=(Token)match(input,GYearMonth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGYearMonthEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_11, grammarAccess.getSadlDataTypeAccess().getGYearMonthEnumLiteralDeclaration_11());
                      			
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalDialogParser.g:13228:3: (enumLiteral_12= GYear )
                    {
                    // InternalDialogParser.g:13228:3: (enumLiteral_12= GYear )
                    // InternalDialogParser.g:13229:4: enumLiteral_12= GYear
                    {
                    enumLiteral_12=(Token)match(input,GYear,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGYearEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_12, grammarAccess.getSadlDataTypeAccess().getGYearEnumLiteralDeclaration_12());
                      			
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalDialogParser.g:13236:3: (enumLiteral_13= GMonthDay )
                    {
                    // InternalDialogParser.g:13236:3: (enumLiteral_13= GMonthDay )
                    // InternalDialogParser.g:13237:4: enumLiteral_13= GMonthDay
                    {
                    enumLiteral_13=(Token)match(input,GMonthDay,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGMonthDayEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_13, grammarAccess.getSadlDataTypeAccess().getGMonthDayEnumLiteralDeclaration_13());
                      			
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalDialogParser.g:13244:3: (enumLiteral_14= GDay )
                    {
                    // InternalDialogParser.g:13244:3: (enumLiteral_14= GDay )
                    // InternalDialogParser.g:13245:4: enumLiteral_14= GDay
                    {
                    enumLiteral_14=(Token)match(input,GDay,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGDayEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_14, grammarAccess.getSadlDataTypeAccess().getGDayEnumLiteralDeclaration_14());
                      			
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalDialogParser.g:13252:3: (enumLiteral_15= GMonth )
                    {
                    // InternalDialogParser.g:13252:3: (enumLiteral_15= GMonth )
                    // InternalDialogParser.g:13253:4: enumLiteral_15= GMonth
                    {
                    enumLiteral_15=(Token)match(input,GMonth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGMonthEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_15, grammarAccess.getSadlDataTypeAccess().getGMonthEnumLiteralDeclaration_15());
                      			
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalDialogParser.g:13260:3: (enumLiteral_16= HexBinary )
                    {
                    // InternalDialogParser.g:13260:3: (enumLiteral_16= HexBinary )
                    // InternalDialogParser.g:13261:4: enumLiteral_16= HexBinary
                    {
                    enumLiteral_16=(Token)match(input,HexBinary,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getHexBinaryEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_16, grammarAccess.getSadlDataTypeAccess().getHexBinaryEnumLiteralDeclaration_16());
                      			
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalDialogParser.g:13268:3: (enumLiteral_17= Base64Binary )
                    {
                    // InternalDialogParser.g:13268:3: (enumLiteral_17= Base64Binary )
                    // InternalDialogParser.g:13269:4: enumLiteral_17= Base64Binary
                    {
                    enumLiteral_17=(Token)match(input,Base64Binary,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getBase64BinaryEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_17, grammarAccess.getSadlDataTypeAccess().getBase64BinaryEnumLiteralDeclaration_17());
                      			
                    }

                    }


                    }
                    break;
                case 19 :
                    // InternalDialogParser.g:13276:3: (enumLiteral_18= AnyURI )
                    {
                    // InternalDialogParser.g:13276:3: (enumLiteral_18= AnyURI )
                    // InternalDialogParser.g:13277:4: enumLiteral_18= AnyURI
                    {
                    enumLiteral_18=(Token)match(input,AnyURI,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getAnyURIEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_18, grammarAccess.getSadlDataTypeAccess().getAnyURIEnumLiteralDeclaration_18());
                      			
                    }

                    }


                    }
                    break;
                case 20 :
                    // InternalDialogParser.g:13284:3: (enumLiteral_19= Integer )
                    {
                    // InternalDialogParser.g:13284:3: (enumLiteral_19= Integer )
                    // InternalDialogParser.g:13285:4: enumLiteral_19= Integer
                    {
                    enumLiteral_19=(Token)match(input,Integer,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getIntegerEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_19, grammarAccess.getSadlDataTypeAccess().getIntegerEnumLiteralDeclaration_19());
                      			
                    }

                    }


                    }
                    break;
                case 21 :
                    // InternalDialogParser.g:13292:3: (enumLiteral_20= NegativeInteger )
                    {
                    // InternalDialogParser.g:13292:3: (enumLiteral_20= NegativeInteger )
                    // InternalDialogParser.g:13293:4: enumLiteral_20= NegativeInteger
                    {
                    enumLiteral_20=(Token)match(input,NegativeInteger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getNegativeIntegerEnumLiteralDeclaration_20().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_20, grammarAccess.getSadlDataTypeAccess().getNegativeIntegerEnumLiteralDeclaration_20());
                      			
                    }

                    }


                    }
                    break;
                case 22 :
                    // InternalDialogParser.g:13300:3: (enumLiteral_21= NonNegativeInteger )
                    {
                    // InternalDialogParser.g:13300:3: (enumLiteral_21= NonNegativeInteger )
                    // InternalDialogParser.g:13301:4: enumLiteral_21= NonNegativeInteger
                    {
                    enumLiteral_21=(Token)match(input,NonNegativeInteger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getNonNegativeIntegerEnumLiteralDeclaration_21().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_21, grammarAccess.getSadlDataTypeAccess().getNonNegativeIntegerEnumLiteralDeclaration_21());
                      			
                    }

                    }


                    }
                    break;
                case 23 :
                    // InternalDialogParser.g:13308:3: (enumLiteral_22= PositiveInteger )
                    {
                    // InternalDialogParser.g:13308:3: (enumLiteral_22= PositiveInteger )
                    // InternalDialogParser.g:13309:4: enumLiteral_22= PositiveInteger
                    {
                    enumLiteral_22=(Token)match(input,PositiveInteger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getPositiveIntegerEnumLiteralDeclaration_22().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_22, grammarAccess.getSadlDataTypeAccess().getPositiveIntegerEnumLiteralDeclaration_22());
                      			
                    }

                    }


                    }
                    break;
                case 24 :
                    // InternalDialogParser.g:13316:3: (enumLiteral_23= NonPositiveInteger )
                    {
                    // InternalDialogParser.g:13316:3: (enumLiteral_23= NonPositiveInteger )
                    // InternalDialogParser.g:13317:4: enumLiteral_23= NonPositiveInteger
                    {
                    enumLiteral_23=(Token)match(input,NonPositiveInteger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getNonPositiveIntegerEnumLiteralDeclaration_23().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_23, grammarAccess.getSadlDataTypeAccess().getNonPositiveIntegerEnumLiteralDeclaration_23());
                      			
                    }

                    }


                    }
                    break;
                case 25 :
                    // InternalDialogParser.g:13324:3: (enumLiteral_24= Byte )
                    {
                    // InternalDialogParser.g:13324:3: (enumLiteral_24= Byte )
                    // InternalDialogParser.g:13325:4: enumLiteral_24= Byte
                    {
                    enumLiteral_24=(Token)match(input,Byte,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getByteEnumLiteralDeclaration_24().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_24, grammarAccess.getSadlDataTypeAccess().getByteEnumLiteralDeclaration_24());
                      			
                    }

                    }


                    }
                    break;
                case 26 :
                    // InternalDialogParser.g:13332:3: (enumLiteral_25= UnsignedByte )
                    {
                    // InternalDialogParser.g:13332:3: (enumLiteral_25= UnsignedByte )
                    // InternalDialogParser.g:13333:4: enumLiteral_25= UnsignedByte
                    {
                    enumLiteral_25=(Token)match(input,UnsignedByte,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getUnsignedByteEnumLiteralDeclaration_25().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_25, grammarAccess.getSadlDataTypeAccess().getUnsignedByteEnumLiteralDeclaration_25());
                      			
                    }

                    }


                    }
                    break;
                case 27 :
                    // InternalDialogParser.g:13340:3: (enumLiteral_26= UnsignedInt )
                    {
                    // InternalDialogParser.g:13340:3: (enumLiteral_26= UnsignedInt )
                    // InternalDialogParser.g:13341:4: enumLiteral_26= UnsignedInt
                    {
                    enumLiteral_26=(Token)match(input,UnsignedInt,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getUnsignedIntEnumLiteralDeclaration_26().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_26, grammarAccess.getSadlDataTypeAccess().getUnsignedIntEnumLiteralDeclaration_26());
                      			
                    }

                    }


                    }
                    break;
                case 28 :
                    // InternalDialogParser.g:13348:3: (enumLiteral_27= AnySimpleType )
                    {
                    // InternalDialogParser.g:13348:3: (enumLiteral_27= AnySimpleType )
                    // InternalDialogParser.g:13349:4: enumLiteral_27= AnySimpleType
                    {
                    enumLiteral_27=(Token)match(input,AnySimpleType,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getAnySimpleTypeEnumLiteralDeclaration_27().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_27, grammarAccess.getSadlDataTypeAccess().getAnySimpleTypeEnumLiteralDeclaration_27());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlDataType"

    // $ANTLR start synpred1_InternalDialogParser
    public final void synpred1_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:4794:4: ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )
        // InternalDialogParser.g:4794:5: ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) )
        {
        // InternalDialogParser.g:4794:5: ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) )
        // InternalDialogParser.g:4795:5: () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) )
        {
        // InternalDialogParser.g:4795:5: ()
        // InternalDialogParser.g:4796:5: 
        {
        }

        // InternalDialogParser.g:4797:5: ( ( ( HyphenMinus | Not ) ) )
        // InternalDialogParser.g:4798:6: ( ( HyphenMinus | Not ) )
        {
        // InternalDialogParser.g:4798:6: ( ( HyphenMinus | Not ) )
        // InternalDialogParser.g:4799:7: ( HyphenMinus | Not )
        {
        if ( input.LA(1)==Not||input.LA(1)==HyphenMinus ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }

        // InternalDialogParser.g:4806:5: ( ( ruleSadlExplicitValueLiteral ) )
        // InternalDialogParser.g:4807:6: ( ruleSadlExplicitValueLiteral )
        {
        // InternalDialogParser.g:4807:6: ( ruleSadlExplicitValueLiteral )
        // InternalDialogParser.g:4808:7: ruleSadlExplicitValueLiteral
        {
        pushFollow(FOLLOW_2);
        ruleSadlExplicitValueLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred1_InternalDialogParser

    // $ANTLR start synpred2_InternalDialogParser
    public final void synpred2_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:4925:5: ( RULE_STRING | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==RULE_ID||input.LA(1)==RULE_STRING ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred2_InternalDialogParser

    // $ANTLR start synpred3_InternalDialogParser
    public final void synpred3_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:5859:4: ( Select )
        // InternalDialogParser.g:5859:5: Select
        {
        match(input,Select,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_InternalDialogParser

    // $ANTLR start synpred4_InternalDialogParser
    public final void synpred4_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6003:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Desc||input.LA(1)==Asc||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred4_InternalDialogParser

    // $ANTLR start synpred5_InternalDialogParser
    public final void synpred5_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6058:4: ( Select )
        // InternalDialogParser.g:6058:5: Select
        {
        match(input,Select,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred5_InternalDialogParser

    // $ANTLR start synpred6_InternalDialogParser
    public final void synpred6_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6202:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Desc||input.LA(1)==Asc||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred6_InternalDialogParser

    // $ANTLR start synpred7_InternalDialogParser
    public final void synpred7_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6257:4: ( Select )
        // InternalDialogParser.g:6257:5: Select
        {
        match(input,Select,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred7_InternalDialogParser

    // $ANTLR start synpred8_InternalDialogParser
    public final void synpred8_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6401:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Desc||input.LA(1)==Asc||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred8_InternalDialogParser

    // $ANTLR start synpred9_InternalDialogParser
    public final void synpred9_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6456:4: ( Select )
        // InternalDialogParser.g:6456:5: Select
        {
        match(input,Select,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred9_InternalDialogParser

    // $ANTLR start synpred10_InternalDialogParser
    public final void synpred10_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6600:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Desc||input.LA(1)==Asc||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred10_InternalDialogParser

    // $ANTLR start synpred11_InternalDialogParser
    public final void synpred11_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8075:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==LessThanSignEqualsSign||input.LA(1)==GreaterThanSignEqualsSign||input.LA(1)==LessThanSign||input.LA(1)==GreaterThanSign ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred11_InternalDialogParser

    // $ANTLR start synpred13_InternalDialogParser
    public final void synpred13_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8150:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==LessThanSignEqualsSign||input.LA(1)==GreaterThanSignEqualsSign||input.LA(1)==LessThanSign||input.LA(1)==GreaterThanSign ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred13_InternalDialogParser

    // $ANTLR start synpred15_InternalDialogParser
    public final void synpred15_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8225:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==LessThanSignEqualsSign||input.LA(1)==GreaterThanSignEqualsSign||input.LA(1)==LessThanSign||input.LA(1)==GreaterThanSign ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred15_InternalDialogParser

    // $ANTLR start synpred17_InternalDialogParser
    public final void synpred17_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8300:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==LessThanSignEqualsSign||input.LA(1)==GreaterThanSignEqualsSign||input.LA(1)==LessThanSign||input.LA(1)==GreaterThanSign ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred17_InternalDialogParser

    // $ANTLR start synpred19_InternalDialogParser
    public final void synpred19_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9303:4: ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( (input.LA(1)>=For && input.LA(1)<=Has)||input.LA(1)==In||input.LA(1)==Of||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred19_InternalDialogParser

    // $ANTLR start synpred20_InternalDialogParser
    public final void synpred20_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9373:6: ( Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Has||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred20_InternalDialogParser

    // $ANTLR start synpred21_InternalDialogParser
    public final void synpred21_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9408:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Another||input.LA(1)==Element||input.LA(1)==Length||(input.LA(1)>=Count && input.LA(1)<=False)||input.LA(1)==First||(input.LA(1)>=Index && input.LA(1)<=Known)||input.LA(1)==There||input.LA(1)==Value||input.LA(1)==None||input.LA(1)==Last||input.LA(1)==Only||input.LA(1)==Some||(input.LA(1)>=True && input.LA(1)<=Type)||input.LA(1)==The||input.LA(1)==Any||input.LA(1)==Not||input.LA(1)==The_1||input.LA(1)==HyphenMinusHyphenMinus||(input.LA(1)>=An && input.LA(1)<=An_1)||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==HyphenMinus||input.LA(1)==A||input.LA(1)==LeftSquareBracket||(input.LA(1)>=A_1 && input.LA(1)<=LeftCurlyBracket)||input.LA(1)==RULE_NUMBER||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred21_InternalDialogParser

    // $ANTLR start synpred22_InternalDialogParser
    public final void synpred22_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9453:4: ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==With||(input.LA(1)>=For && input.LA(1)<=Has)||input.LA(1)==In||input.LA(1)==Of||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred22_InternalDialogParser

    // $ANTLR start synpred23_InternalDialogParser
    public final void synpred23_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9523:6: ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==With||input.LA(1)==Has||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred23_InternalDialogParser

    // $ANTLR start synpred24_InternalDialogParser
    public final void synpred24_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9563:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Another||input.LA(1)==Element||input.LA(1)==Length||(input.LA(1)>=Count && input.LA(1)<=False)||input.LA(1)==First||(input.LA(1)>=Index && input.LA(1)<=Known)||input.LA(1)==There||input.LA(1)==Value||input.LA(1)==None||input.LA(1)==Last||input.LA(1)==Only||input.LA(1)==Some||(input.LA(1)>=True && input.LA(1)<=Type)||input.LA(1)==The||input.LA(1)==Any||input.LA(1)==Not||input.LA(1)==The_1||input.LA(1)==HyphenMinusHyphenMinus||(input.LA(1)>=An && input.LA(1)<=An_1)||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==HyphenMinus||input.LA(1)==A||input.LA(1)==LeftSquareBracket||(input.LA(1)>=A_1 && input.LA(1)<=LeftCurlyBracket)||input.LA(1)==RULE_NUMBER||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred24_InternalDialogParser

    // $ANTLR start synpred25_InternalDialogParser
    public final void synpred25_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9608:4: ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( (input.LA(1)>=For && input.LA(1)<=Has)||input.LA(1)==In||input.LA(1)==Of||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred25_InternalDialogParser

    // $ANTLR start synpred26_InternalDialogParser
    public final void synpred26_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9678:6: ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Has||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred26_InternalDialogParser

    // $ANTLR start synpred27_InternalDialogParser
    public final void synpred27_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9727:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Another||input.LA(1)==Element||input.LA(1)==Length||(input.LA(1)>=Count && input.LA(1)<=False)||input.LA(1)==First||(input.LA(1)>=Index && input.LA(1)<=Known)||input.LA(1)==There||input.LA(1)==Value||input.LA(1)==None||input.LA(1)==Last||input.LA(1)==Only||input.LA(1)==Some||(input.LA(1)>=True && input.LA(1)<=Type)||input.LA(1)==The||input.LA(1)==Any||input.LA(1)==Not||input.LA(1)==The_1||input.LA(1)==HyphenMinusHyphenMinus||(input.LA(1)>=An && input.LA(1)<=An_1)||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==HyphenMinus||input.LA(1)==A||input.LA(1)==LeftSquareBracket||(input.LA(1)>=A_1 && input.LA(1)<=LeftCurlyBracket)||input.LA(1)==RULE_NUMBER||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred27_InternalDialogParser

    // $ANTLR start synpred28_InternalDialogParser
    public final void synpred28_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9772:4: ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==With||(input.LA(1)>=For && input.LA(1)<=Has)||input.LA(1)==In||input.LA(1)==Of||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred28_InternalDialogParser

    // $ANTLR start synpred29_InternalDialogParser
    public final void synpred29_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9842:6: ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==With||input.LA(1)==Has||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred29_InternalDialogParser

    // $ANTLR start synpred30_InternalDialogParser
    public final void synpred30_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9896:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Another||input.LA(1)==Element||input.LA(1)==Length||(input.LA(1)>=Count && input.LA(1)<=False)||input.LA(1)==First||(input.LA(1)>=Index && input.LA(1)<=Known)||input.LA(1)==There||input.LA(1)==Value||input.LA(1)==None||input.LA(1)==Last||input.LA(1)==Only||input.LA(1)==Some||(input.LA(1)>=True && input.LA(1)<=Type)||input.LA(1)==The||input.LA(1)==Any||input.LA(1)==Not||input.LA(1)==The_1||input.LA(1)==HyphenMinusHyphenMinus||(input.LA(1)>=An && input.LA(1)<=An_1)||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==HyphenMinus||input.LA(1)==A||input.LA(1)==LeftSquareBracket||(input.LA(1)>=A_1 && input.LA(1)<=LeftCurlyBracket)||input.LA(1)==RULE_NUMBER||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred30_InternalDialogParser

    // $ANTLR start synpred31_InternalDialogParser
    public final void synpred31_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:11151:7: ( HyphenMinus )
        // InternalDialogParser.g:11151:8: HyphenMinus
        {
        match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred31_InternalDialogParser

    // $ANTLR start synpred32_InternalDialogParser
    public final void synpred32_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:11525:7: ( HyphenMinus )
        // InternalDialogParser.g:11525:8: HyphenMinus
        {
        match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred32_InternalDialogParser

    // $ANTLR start synpred33_InternalDialogParser
    public final void synpred33_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:11899:7: ( HyphenMinus )
        // InternalDialogParser.g:11899:8: HyphenMinus
        {
        match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred33_InternalDialogParser

    // $ANTLR start synpred34_InternalDialogParser
    public final void synpred34_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:12273:7: ( HyphenMinus )
        // InternalDialogParser.g:12273:8: HyphenMinus
        {
        match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred34_InternalDialogParser

    // $ANTLR start synpred35_InternalDialogParser
    public final void synpred35_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:12503:4: ( LeftParenthesis )
        // InternalDialogParser.g:12503:5: LeftParenthesis
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred35_InternalDialogParser

    // Delegated rules

    public final boolean synpred20_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA63 dfa63 = new DFA63(this);
    protected DFA50 dfa50 = new DFA50(this);
    protected DFA59 dfa59 = new DFA59(this);
    protected DFA72 dfa72 = new DFA72(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA104 dfa104 = new DFA104(this);
    protected DFA119 dfa119 = new DFA119(this);
    protected DFA173 dfa173 = new DFA173(this);
    protected DFA175 dfa175 = new DFA175(this);
    protected DFA177 dfa177 = new DFA177(this);
    protected DFA179 dfa179 = new DFA179(this);
    protected DFA218 dfa218 = new DFA218(this);
    protected DFA224 dfa224 = new DFA224(this);
    protected DFA231 dfa231 = new DFA231(this);
    protected DFA241 dfa241 = new DFA241(this);
    protected DFA238 dfa238 = new DFA238(this);
    protected DFA268 dfa268 = new DFA268(this);
    protected DFA275 dfa275 = new DFA275(this);
    protected DFA282 dfa282 = new DFA282(this);
    protected DFA289 dfa289 = new DFA289(this);
    protected DFA302 dfa302 = new DFA302(this);
    static final String dfa_1s = "\16\uffff";
    static final String dfa_2s = "\1\12\2\uffff\11\4\2\uffff";
    static final String dfa_3s = "\1\u00c6\2\uffff\11\u00c6\2\uffff";
    static final String dfa_4s = "\1\uffff\1\1\1\2\11\uffff\1\3\1\4";
    static final String dfa_5s = "\16\uffff}>";
    static final String[] dfa_6s = {
            "\1\14\30\uffff\1\11\130\uffff\1\10\12\uffff\1\12\1\uffff\1\7\12\uffff\1\13\10\uffff\1\5\1\uffff\1\6\32\uffff\1\3\4\uffff\1\4\1\uffff\1\2\3\uffff\2\1",
            "",
            "",
            "\6\15\1\14\1\15\1\uffff\1\15\2\uffff\1\15\4\uffff\2\15\6\uffff\1\15\2\uffff\1\15\3\uffff\1\15\2\uffff\1\15\3\uffff\1\15\13\uffff\1\15\2\uffff\1\15\3\uffff\1\15\7\uffff\1\15\17\uffff\2\15\24\uffff\1\15\1\uffff\1\15\3\uffff\1\15\2\uffff\1\15\10\uffff\1\15\22\uffff\1\15\33\uffff\1\15\23\uffff\1\15\3\uffff\2\15",
            "\6\15\1\14\1\15\1\uffff\1\15\2\uffff\1\15\4\uffff\2\15\6\uffff\1\15\2\uffff\1\15\3\uffff\1\15\2\uffff\1\15\3\uffff\1\15\13\uffff\1\15\2\uffff\1\15\3\uffff\1\15\7\uffff\1\15\17\uffff\2\15\24\uffff\1\15\1\uffff\1\15\3\uffff\1\15\2\uffff\1\15\10\uffff\1\15\22\uffff\1\15\33\uffff\1\15\23\uffff\1\15\3\uffff\2\15",
            "\6\15\1\14\1\15\1\uffff\1\15\2\uffff\1\15\4\uffff\2\15\6\uffff\1\15\2\uffff\1\15\3\uffff\1\15\2\uffff\1\15\3\uffff\1\15\13\uffff\1\15\2\uffff\1\15\3\uffff\1\15\7\uffff\1\15\17\uffff\2\15\24\uffff\1\15\1\uffff\1\15\3\uffff\1\15\2\uffff\1\15\10\uffff\1\15\22\uffff\1\15\33\uffff\1\15\23\uffff\1\15\3\uffff\2\15",
            "\6\15\1\14\1\15\1\uffff\1\15\2\uffff\1\15\4\uffff\2\15\6\uffff\1\15\2\uffff\1\15\3\uffff\1\15\2\uffff\1\15\3\uffff\1\15\13\uffff\1\15\2\uffff\1\15\3\uffff\1\15\7\uffff\1\15\17\uffff\2\15\24\uffff\1\15\1\uffff\1\15\3\uffff\1\15\2\uffff\1\15\10\uffff\1\15\22\uffff\1\15\33\uffff\1\15\23\uffff\1\15\3\uffff\2\15",
            "\6\15\1\14\1\15\1\uffff\1\15\2\uffff\1\15\4\uffff\2\15\6\uffff\1\15\2\uffff\1\15\3\uffff\1\15\2\uffff\1\15\3\uffff\1\15\13\uffff\1\15\2\uffff\1\15\3\uffff\1\15\7\uffff\1\15\17\uffff\2\15\24\uffff\1\15\1\uffff\1\15\3\uffff\1\15\2\uffff\1\15\10\uffff\1\15\22\uffff\1\15\33\uffff\1\15\23\uffff\1\15\3\uffff\2\15",
            "\6\15\1\14\1\15\1\uffff\1\15\2\uffff\1\15\4\uffff\2\15\6\uffff\1\15\2\uffff\1\15\3\uffff\1\15\2\uffff\1\15\3\uffff\1\15\13\uffff\1\15\2\uffff\1\15\3\uffff\1\15\7\uffff\1\15\17\uffff\2\15\24\uffff\1\15\1\uffff\1\15\3\uffff\1\15\2\uffff\1\15\10\uffff\1\15\22\uffff\1\15\33\uffff\1\15\23\uffff\1\15\3\uffff\2\15",
            "\6\15\1\14\1\15\1\uffff\1\15\2\uffff\1\15\4\uffff\2\15\6\uffff\1\15\2\uffff\1\15\3\uffff\1\15\2\uffff\1\15\3\uffff\1\15\13\uffff\1\15\2\uffff\1\15\3\uffff\1\15\7\uffff\1\15\17\uffff\2\15\24\uffff\1\15\1\uffff\1\15\3\uffff\1\15\2\uffff\1\15\10\uffff\1\15\22\uffff\1\15\33\uffff\1\15\23\uffff\1\15\3\uffff\2\15",
            "\6\15\1\14\1\15\1\uffff\1\15\2\uffff\1\15\4\uffff\2\15\6\uffff\1\15\2\uffff\1\15\3\uffff\1\15\2\uffff\1\15\3\uffff\1\15\13\uffff\1\15\2\uffff\1\15\3\uffff\1\15\7\uffff\1\15\17\uffff\2\15\24\uffff\1\15\1\uffff\1\15\3\uffff\1\15\2\uffff\1\15\10\uffff\1\15\22\uffff\1\15\33\uffff\1\15\23\uffff\1\15\3\uffff\2\15",
            "\6\15\1\14\1\15\1\uffff\1\15\2\uffff\1\15\4\uffff\2\15\6\uffff\1\15\2\uffff\1\15\3\uffff\1\15\2\uffff\1\15\3\uffff\1\15\13\uffff\1\15\2\uffff\1\15\3\uffff\1\15\7\uffff\1\15\17\uffff\2\15\24\uffff\1\15\1\uffff\1\15\3\uffff\1\15\2\uffff\1\15\10\uffff\1\15\22\uffff\1\15\33\uffff\1\15\23\uffff\1\15\3\uffff\2\15",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "1634:2: ( (this_SadlResource_0= ruleSadlResource ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) ) ) | ( () otherlv_48= LeftCurlyBracket ( (lv_classOrProperty_49_0= ruleSadlResource ) ) (otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) ) )* otherlv_52= RightCurlyBracket otherlv_53= Are ( ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* ) | ( () otherlv_62= Disjoint ) | ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same ) ) ) | ( () ( ruleAnArticle )? otherlv_69= Relationship otherlv_70= Of ( (lv_from_71_0= ruleSadlTypeReference ) ) otherlv_72= To ( (lv_to_73_0= ruleSadlTypeReference ) ) otherlv_74= Is ( (lv_property_75_0= ruleSadlResource ) ) ) | ( ruleAnArticle this_SadlTypeReference_77= ruleSadlTypeReference ( ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* ) | ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* ) ) ) )";
        }
    }
    static final String dfa_7s = "\25\uffff";
    static final String dfa_8s = "\1\7\14\uffff\2\3\6\uffff";
    static final String dfa_9s = "\1\24\1\14\1\24\1\uffff\1\50\1\52\1\4\2\uffff\1\4\1\uffff\1\4\1\14\2\24\2\uffff\1\u00a7\1\uffff\1\14\1\4";
    static final String dfa_10s = "\3\u00c6\1\uffff\3\u00c6\2\uffff\1\u00c6\1\uffff\2\u00c6\2\u00b9\2\uffff\1\u00a7\1\uffff\1\u00c7\1\u00c6";
    static final String dfa_11s = "\3\uffff\1\3\3\uffff\1\6\1\7\1\uffff\1\5\4\uffff\1\2\1\1\1\uffff\1\4\2\uffff";
    static final String dfa_12s = "\25\uffff}>";
    static final String[] dfa_13s = {
            "\1\3\41\uffff\1\3\101\uffff\1\3\1\uffff\1\3\7\uffff\1\5\5\uffff\1\10\4\uffff\1\3\1\uffff\1\4\26\uffff\1\1\1\6\11\uffff\1\2\1\uffff\1\7\5\uffff\1\7\2\uffff\1\7\10\uffff\2\7",
            "\1\3\4\uffff\1\3\21\uffff\1\7\130\uffff\1\7\12\uffff\1\7\1\uffff\1\7\10\uffff\1\12\1\uffff\1\13\10\uffff\1\7\1\uffff\1\7\32\uffff\1\7\4\uffff\1\11\5\uffff\2\7",
            "\1\3\41\uffff\1\3\101\uffff\1\3\1\uffff\1\3\7\uffff\1\5\12\uffff\1\3\1\uffff\1\4\26\uffff\1\14\1\6\35\uffff\2\7",
            "",
            "\1\3\1\uffff\1\3\35\uffff\1\3\23\uffff\1\3\66\uffff\1\3\15\uffff\1\3\35\uffff\1\3\3\uffff\1\3\1\uffff\2\7",
            "\1\3\35\uffff\1\3\112\uffff\1\3\15\uffff\1\3\35\uffff\1\3\3\uffff\1\3\1\uffff\2\7",
            "\6\3\1\uffff\1\3\1\uffff\1\3\2\uffff\1\3\4\uffff\2\3\6\uffff\1\3\2\uffff\1\3\3\uffff\1\3\2\uffff\1\3\3\uffff\1\3\13\uffff\1\3\2\uffff\1\3\3\uffff\1\3\7\uffff\1\3\17\uffff\2\3\24\uffff\1\3\1\uffff\1\3\3\uffff\1\3\2\uffff\1\3\10\uffff\1\3\22\uffff\1\3\33\uffff\1\3\23\uffff\1\3\3\uffff\1\16\1\15",
            "",
            "",
            "\6\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\4\uffff\2\7\1\uffff\1\20\4\uffff\1\7\2\uffff\1\7\1\uffff\1\17\1\uffff\1\7\2\uffff\1\7\3\uffff\1\7\13\uffff\1\7\2\uffff\1\7\3\uffff\1\7\7\uffff\1\7\12\uffff\1\20\4\uffff\2\7\24\uffff\1\7\1\uffff\1\7\3\uffff\1\7\2\uffff\1\7\10\uffff\1\7\1\uffff\1\21\20\uffff\1\7\33\uffff\1\7\23\uffff\1\7\3\uffff\2\7",
            "",
            "\6\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\4\uffff\2\7\6\uffff\1\7\2\uffff\1\7\3\uffff\1\7\2\uffff\1\7\3\uffff\1\7\1\3\12\uffff\1\7\2\uffff\1\7\3\uffff\1\7\7\uffff\1\7\17\uffff\2\7\24\uffff\1\7\1\uffff\1\7\3\uffff\1\7\2\uffff\1\7\5\uffff\1\22\2\uffff\1\7\22\uffff\1\7\33\uffff\1\7\23\uffff\1\7\3\uffff\2\7",
            "\1\3\4\uffff\1\3\u0082\uffff\1\3\52\uffff\1\3\5\uffff\2\7",
            "\1\3\41\uffff\1\3\61\uffff\1\3\17\uffff\1\3\1\uffff\1\3\7\uffff\1\3\5\uffff\1\3\4\uffff\1\3\1\uffff\1\3\26\uffff\1\23\2\3\10\uffff\1\3\1\uffff\1\3\5\uffff\1\3",
            "\1\3\41\uffff\1\3\61\uffff\1\3\17\uffff\1\3\1\uffff\1\3\7\uffff\1\3\5\uffff\1\3\4\uffff\1\3\1\uffff\1\3\26\uffff\1\23\2\3\10\uffff\1\3\1\uffff\1\3\5\uffff\1\3",
            "",
            "",
            "\1\24",
            "",
            "\1\3\4\uffff\1\3\101\uffff\1\7\6\uffff\1\7\44\uffff\1\7\22\uffff\1\7\1\uffff\1\3\11\uffff\1\7\16\uffff\1\7\4\uffff\1\7\11\uffff\1\7\2\uffff\1\3\1\7\2\uffff\1\7\1\uffff\3\7",
            "\6\20\1\uffff\1\20\1\uffff\1\20\1\uffff\1\3\1\20\4\uffff\2\20\6\uffff\1\20\2\uffff\1\20\3\uffff\1\20\2\uffff\1\20\3\uffff\1\20\13\uffff\1\20\2\uffff\1\20\3\uffff\1\20\7\uffff\1\20\17\uffff\2\20\24\uffff\1\20\1\uffff\1\20\3\uffff\1\20\2\uffff\1\20\10\uffff\1\20\22\uffff\1\20\33\uffff\1\20\23\uffff\1\20\3\uffff\2\20"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA50 extends DFA {

        public DFA50(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 50;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "1644:4: ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) )";
        }
    }
    static final String dfa_14s = "\14\uffff";
    static final String dfa_15s = "\1\3\2\7\1\uffff\2\3\3\uffff\2\7\1\uffff";
    static final String dfa_16s = "\1\u0082\2\123\1\uffff\2\123\1\43\1\uffff\1\43\2\123\1\43";
    static final String dfa_17s = "\1\u00c6\2\u00c7\1\uffff\2\u00c7\1\u00c6\1\uffff\1\u00c6\2\u00c7\1\u00c6";
    static final String dfa_18s = "\3\uffff\1\2\3\uffff\1\1\4\uffff";
    static final String dfa_19s = "\14\uffff}>";
    static final String[] dfa_20s = {
            "\1\3\14\uffff\1\3\26\uffff\2\3\11\uffff\1\3\1\uffff\1\3\5\uffff\1\3\13\uffff\1\2\1\1",
            "\1\3\6\uffff\1\3\44\uffff\1\3\2\uffff\1\7\14\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\6\3\uffff\1\7\1\3\1\7\5\uffff\1\7\2\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\6\uffff\1\3\44\uffff\1\3\2\uffff\1\7\14\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\6\3\uffff\1\7\1\3\1\7\5\uffff\1\7\2\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "",
            "\1\7\6\uffff\1\7\44\uffff\1\7\2\uffff\1\3\14\uffff\1\3\2\uffff\1\7\13\uffff\1\7\7\uffff\2\3\5\uffff\1\10\3\uffff\1\3\1\7\1\3\5\uffff\1\3\2\uffff\1\7\3\uffff\1\7\2\uffff\1\7\1\uffff\1\12\1\11\1\7",
            "\1\7\6\uffff\1\7\44\uffff\1\7\2\uffff\1\3\14\uffff\1\3\2\uffff\1\7\13\uffff\1\7\7\uffff\2\3\5\uffff\1\10\3\uffff\1\3\1\7\1\3\5\uffff\1\3\2\uffff\1\7\3\uffff\1\7\2\uffff\1\7\1\uffff\1\12\1\11\1\7",
            "\1\3\54\uffff\1\7\50\uffff\1\7\2\uffff\1\3\12\uffff\1\3\1\uffff\1\3\12\uffff\1\3\10\uffff\1\3\1\uffff\1\3\32\uffff\1\3\4\uffff\1\3\5\uffff\2\3",
            "",
            "\1\7\54\uffff\1\3\50\uffff\1\3\2\uffff\1\7\12\uffff\1\7\1\uffff\1\7\12\uffff\1\7\10\uffff\1\7\1\uffff\1\7\32\uffff\1\7\4\uffff\1\7\5\uffff\2\7",
            "\1\3\6\uffff\1\3\44\uffff\1\3\2\uffff\1\7\14\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\13\3\uffff\1\7\1\3\1\7\5\uffff\1\7\2\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\6\uffff\1\3\44\uffff\1\3\2\uffff\1\7\14\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\13\3\uffff\1\7\1\3\1\7\5\uffff\1\7\2\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\54\uffff\1\7\50\uffff\1\7\2\uffff\1\3\12\uffff\1\3\1\uffff\1\3\12\uffff\1\3\10\uffff\1\3\1\uffff\1\3\32\uffff\1\3\4\uffff\1\3\5\uffff\2\3"
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA59 extends DFA {

        public DFA59(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 59;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "2430:6: ( (lv_instance_79_0= ruleSadlResource ) )?";
        }
    }
    static final String dfa_21s = "\1\3\2\7\1\uffff\2\3\2\uffff\2\7\2\uffff";
    static final String dfa_22s = "\1\u0082\2\123\1\uffff\2\123\1\43\1\uffff\2\123\2\43";
    static final String dfa_23s = "\1\u00c6\2\u00c7\1\uffff\2\u00c7\1\u00c6\1\uffff\2\u00c7\2\u00c6";
    static final String[] dfa_24s = {
            "\1\3\14\uffff\1\3\26\uffff\2\3\6\uffff\1\3\2\uffff\1\3\23\uffff\1\2\1\1",
            "\1\3\6\uffff\1\3\44\uffff\1\3\2\uffff\1\7\14\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\6\1\7\2\uffff\1\7\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\6\uffff\1\3\44\uffff\1\3\2\uffff\1\7\14\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\6\1\7\2\uffff\1\7\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "",
            "\1\7\6\uffff\1\7\44\uffff\1\7\2\uffff\1\3\14\uffff\1\3\2\uffff\1\7\13\uffff\1\7\7\uffff\2\3\5\uffff\1\12\1\3\2\uffff\1\3\1\7\11\uffff\1\7\3\uffff\1\7\2\uffff\1\7\1\uffff\1\11\1\10\1\7",
            "\1\7\6\uffff\1\7\44\uffff\1\7\2\uffff\1\3\14\uffff\1\3\2\uffff\1\7\13\uffff\1\7\7\uffff\2\3\5\uffff\1\12\1\3\2\uffff\1\3\1\7\11\uffff\1\7\3\uffff\1\7\2\uffff\1\7\1\uffff\1\11\1\10\1\7",
            "\1\3\54\uffff\1\7\50\uffff\1\7\2\uffff\1\3\12\uffff\1\3\1\uffff\1\3\12\uffff\1\3\10\uffff\1\3\1\uffff\1\3\32\uffff\1\3\4\uffff\1\3\5\uffff\2\3",
            "",
            "\1\3\6\uffff\1\3\44\uffff\1\3\2\uffff\1\7\14\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\13\1\7\2\uffff\1\7\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\6\uffff\1\3\44\uffff\1\3\2\uffff\1\7\14\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\13\1\7\2\uffff\1\7\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\7\54\uffff\1\3\50\uffff\1\3\2\uffff\1\7\12\uffff\1\7\1\uffff\1\7\12\uffff\1\7\10\uffff\1\7\1\uffff\1\7\32\uffff\1\7\4\uffff\1\7\5\uffff\2\7",
            "\1\3\54\uffff\1\7\50\uffff\1\7\2\uffff\1\3\12\uffff\1\3\1\uffff\1\3\12\uffff\1\3\10\uffff\1\3\1\uffff\1\3\32\uffff\1\3\4\uffff\1\3\5\uffff\2\3"
    };
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA72 extends DFA {

        public DFA72(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = dfa_14;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "3004:5: ( (lv_instance_8_0= ruleSadlResource ) )?";
        }
    }
    static final String dfa_25s = "\12\uffff";
    static final String dfa_26s = "\2\uffff\1\5\6\uffff\1\5";
    static final String dfa_27s = "\1\u00b2\1\u00c3\1\23\2\u00b0\2\uffff\2\u00c3\1\23";
    static final String dfa_28s = "\2\u00c3\1\u00c0\2\u00c3\2\uffff\2\u00c3\1\u00b9";
    static final String dfa_29s = "\5\uffff\1\1\1\2\3\uffff";
    static final String dfa_30s = "\12\uffff}>";
    static final String[] dfa_31s = {
            "\1\1\20\uffff\1\2",
            "\1\2",
            "\2\5\41\uffff\1\5\101\uffff\1\5\1\uffff\1\5\7\uffff\1\5\5\uffff\1\5\4\uffff\1\5\1\uffff\1\5\26\uffff\2\5\6\uffff\1\5\2\uffff\1\5\1\6\1\5\5\uffff\1\5\1\uffff\1\4\4\uffff\1\3",
            "\1\10\1\uffff\1\7\20\uffff\1\11",
            "\1\10\1\uffff\1\7\20\uffff\1\11",
            "",
            "",
            "\1\11",
            "\1\11",
            "\2\5\41\uffff\1\5\101\uffff\1\5\1\uffff\1\5\7\uffff\1\5\5\uffff\1\5\4\uffff\1\5\1\uffff\1\5\26\uffff\2\5\6\uffff\1\5\2\uffff\1\5\1\6\1\5\5\uffff\1\5"
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_25;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "3235:4: ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) )";
        }
    }
    static final String dfa_32s = "\23\uffff";
    static final String dfa_33s = "\17\uffff\1\20\1\uffff\1\20\1\uffff";
    static final String dfa_34s = "\1\24\1\uffff\1\50\1\52\1\uffff\1\14\3\uffff\1\105\5\uffff\1\23\1\uffff\1\23\1\4";
    static final String dfa_35s = "\1\u00a7\1\uffff\2\u00c3\1\uffff\1\u00bf\3\uffff\1\105\5\uffff\1\u00b9\1\uffff\1\u00b9\1\u00c6";
    static final String dfa_36s = "\1\uffff\1\1\2\uffff\1\2\1\uffff\1\12\1\13\1\10\1\uffff\1\3\1\7\1\6\1\4\1\5\1\uffff\1\11\2\uffff";
    static final String dfa_37s = "\23\uffff}>";
    static final String[] dfa_38s = {
            "\1\4\41\uffff\1\1\101\uffff\1\6\1\uffff\1\1\7\uffff\1\3\12\uffff\1\7\1\uffff\1\2\26\uffff\1\5\1\4",
            "",
            "\1\10\1\uffff\1\1\35\uffff\1\12\23\uffff\1\10\66\uffff\1\1\15\uffff\1\1\35\uffff\1\11\3\uffff\1\1",
            "\1\1\35\uffff\1\12\112\uffff\1\1\15\uffff\1\1\35\uffff\1\12\3\uffff\1\1",
            "",
            "\1\14\4\uffff\1\16\u0082\uffff\1\15\52\uffff\1\13",
            "",
            "",
            "",
            "\1\17",
            "",
            "",
            "",
            "",
            "",
            "\2\20\33\uffff\1\20\5\uffff\1\20\57\uffff\1\21\21\uffff\1\20\1\uffff\1\20\7\uffff\1\20\12\uffff\1\20\1\uffff\1\20\26\uffff\2\20\11\uffff\1\20\1\uffff\1\20\5\uffff\1\20",
            "",
            "\2\20\41\uffff\1\20\101\uffff\1\20\1\uffff\1\20\7\uffff\1\20\12\uffff\1\20\1\uffff\1\20\26\uffff\1\20\1\22\11\uffff\1\20\1\uffff\1\20\5\uffff\1\20",
            "\6\20\1\uffff\1\20\1\uffff\1\20\2\uffff\1\20\4\uffff\2\20\6\uffff\1\20\2\uffff\1\20\3\uffff\1\20\2\uffff\1\20\3\uffff\1\20\13\uffff\1\20\2\uffff\1\20\3\uffff\1\20\7\uffff\1\20\17\uffff\2\20\24\uffff\1\20\1\uffff\1\20\3\uffff\1\20\2\uffff\1\20\10\uffff\1\20\1\uffff\1\12\20\uffff\1\20\33\uffff\1\20\23\uffff\1\20\3\uffff\2\20"
    };

    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA104 extends DFA {

        public DFA104(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 104;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "3816:2: (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) )";
        }
    }
    static final String dfa_39s = "\72\uffff";
    static final String dfa_40s = "\1\3\1\uffff\1\10\1\uffff\2\3\23\uffff\2\62\37\uffff";
    static final String dfa_41s = "\1\23\1\uffff\1\23\1\uffff\2\123\22\uffff\1\43\2\123\26\uffff\1\43\10\uffff";
    static final String dfa_42s = "\1\u00c7\1\uffff\1\u00c7\1\uffff\2\u00c7\22\uffff\1\u00c6\2\u00c7\26\uffff\1\u00c6\10\uffff";
    static final String dfa_43s = "\1\uffff\1\1\1\uffff\1\2\2\uffff\22\1\3\uffff\26\1\1\uffff\10\1";
    static final String dfa_44s = "\1\2\1\uffff\1\3\1\uffff\1\6\1\7\22\uffff\1\0\1\1\1\5\26\uffff\1\4\10\uffff}>";
    static final String[] dfa_45s = {
            "\2\3\41\uffff\1\3\101\uffff\1\3\1\uffff\1\3\7\uffff\1\3\5\uffff\1\3\4\uffff\1\3\1\uffff\1\3\26\uffff\2\3\6\uffff\1\3\2\uffff\1\3\1\uffff\1\3\5\uffff\1\3\3\uffff\1\3\4\uffff\1\3\2\uffff\1\2\1\3\1\1",
            "",
            "\1\24\1\21\41\uffff\1\20\34\uffff\1\3\6\uffff\1\3\35\uffff\1\22\1\uffff\1\17\4\uffff\1\3\2\uffff\1\12\5\uffff\1\26\4\uffff\1\23\1\uffff\1\13\2\uffff\1\3\13\uffff\1\3\7\uffff\1\14\1\15\5\uffff\1\3\1\16\2\uffff\1\11\1\3\1\6\5\uffff\1\7\2\uffff\1\3\1\27\2\uffff\1\3\1\uffff\1\25\1\3\1\uffff\1\5\1\4\1\3",
            "",
            "\1\36\6\uffff\1\42\44\uffff\1\35\2\uffff\1\3\14\uffff\1\3\2\uffff\1\44\13\uffff\1\40\7\uffff\2\3\5\uffff\1\30\1\3\2\uffff\1\3\1\43\1\3\5\uffff\1\3\2\uffff\1\37\3\uffff\1\41\2\uffff\1\33\1\uffff\1\32\1\31\1\34",
            "\1\36\6\uffff\1\42\44\uffff\1\35\2\uffff\1\3\14\uffff\1\3\2\uffff\1\44\13\uffff\1\40\7\uffff\2\3\5\uffff\1\30\1\3\2\uffff\1\3\1\43\1\3\5\uffff\1\3\2\uffff\1\37\3\uffff\1\41\2\uffff\1\33\1\uffff\1\32\1\31\1\34",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\55\54\uffff\1\3\50\uffff\1\3\2\uffff\1\54\12\uffff\1\56\1\uffff\1\53\12\uffff\1\57\10\uffff\1\51\1\uffff\1\52\32\uffff\1\47\4\uffff\1\50\5\uffff\1\46\1\45",
            "\1\3\6\uffff\1\3\44\uffff\1\3\2\uffff\1\63\14\uffff\1\64\2\uffff\1\3\13\uffff\1\3\7\uffff\1\65\1\66\5\uffff\1\61\1\67\2\uffff\1\60\1\3\1\6\5\uffff\1\7\2\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\6\uffff\1\3\44\uffff\1\3\2\uffff\1\63\14\uffff\1\64\2\uffff\1\3\13\uffff\1\3\7\uffff\1\65\1\66\5\uffff\1\61\1\67\2\uffff\1\60\1\3\1\6\5\uffff\1\7\2\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\3\54\uffff\1\70\50\uffff\1\71\2\uffff\1\3\12\uffff\1\3\1\uffff\1\3\12\uffff\1\3\10\uffff\1\3\1\uffff\1\3\32\uffff\1\3\4\uffff\1\3\5\uffff\2\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA119 extends DFA {

        public DFA119(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 119;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "4924:4: ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA119_24 = input.LA(1);

                         
                        int index119_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA119_24==Alias||LA119_24==Note) ) {s = 3;}

                        else if ( (LA119_24==RULE_QNAME_TERMINAL) && (synpred2_InternalDialogParser())) {s = 37;}

                        else if ( (LA119_24==RULE_ID) && (synpred2_InternalDialogParser())) {s = 38;}

                        else if ( (LA119_24==A) && (synpred2_InternalDialogParser())) {s = 39;}

                        else if ( (LA119_24==A_1) && (synpred2_InternalDialogParser())) {s = 40;}

                        else if ( (LA119_24==An) && (synpred2_InternalDialogParser())) {s = 41;}

                        else if ( (LA119_24==An_1) && (synpred2_InternalDialogParser())) {s = 42;}

                        else if ( (LA119_24==Any) && (synpred2_InternalDialogParser())) {s = 43;}

                        else if ( (LA119_24==Some) && (synpred2_InternalDialogParser())) {s = 44;}

                        else if ( (LA119_24==Another) && (synpred2_InternalDialogParser())) {s = 45;}

                        else if ( (LA119_24==The) && (synpred2_InternalDialogParser())) {s = 46;}

                        else if ( (LA119_24==The_1) && (synpred2_InternalDialogParser())) {s = 47;}

                         
                        input.seek(index119_24);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA119_25 = input.LA(1);

                         
                        int index119_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA119_25==Comma) && (synpred2_InternalDialogParser())) {s = 48;}

                        else if ( (LA119_25==LeftParenthesis) ) {s = 49;}

                        else if ( (LA119_25==FullStop) && (synpred2_InternalDialogParser())) {s = 6;}

                        else if ( (LA119_25==QuestionMark) && (synpred2_InternalDialogParser())) {s = 7;}

                        else if ( (LA119_25==EOF) && (synpred2_InternalDialogParser())) {s = 50;}

                        else if ( (LA119_25==With) && (synpred2_InternalDialogParser())) {s = 51;}

                        else if ( (LA119_25==Has) && (synpred2_InternalDialogParser())) {s = 52;}

                        else if ( (LA119_25==RULE_QNAME_TERMINAL) ) {s = 4;}

                        else if ( (LA119_25==RULE_ID) ) {s = 5;}

                        else if ( (LA119_25==Is) && (synpred2_InternalDialogParser())) {s = 53;}

                        else if ( (LA119_25==Of) && (synpred2_InternalDialogParser())) {s = 54;}

                        else if ( (LA119_25==RightParenthesis) && (synpred2_InternalDialogParser())) {s = 55;}

                        else if ( (LA119_25==False||LA119_25==Known||LA119_25==True||LA119_25==Not||LA119_25==PI||LA119_25==HyphenMinus||LA119_25==LeftSquareBracket||LA119_25==E_1||LA119_25==RULE_NUMBER||LA119_25==RULE_STRING) ) {s = 3;}

                         
                        input.seek(index119_25);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA119_0 = input.LA(1);

                         
                        int index119_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA119_0==RULE_STRING) && (synpred2_InternalDialogParser())) {s = 1;}

                        else if ( (LA119_0==RULE_ID) ) {s = 2;}

                        else if ( (LA119_0==EOF||(LA119_0>=Described && LA119_0<=Describes)||LA119_0==Always||LA119_0==Must||LA119_0==Only||LA119_0==With||LA119_0==And||LA119_0==Can||LA119_0==Has||(LA119_0>=Is && LA119_0<=Of)||LA119_0==RightParenthesis||LA119_0==Comma||LA119_0==FullStop||LA119_0==QuestionMark||LA119_0==RightSquareBracket||LA119_0==RightCurlyBracket||LA119_0==RULE_QNAME_TERMINAL) ) {s = 3;}

                         
                        input.seek(index119_0);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA119_2 = input.LA(1);

                         
                        int index119_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA119_2==RULE_QNAME_TERMINAL) ) {s = 4;}

                        else if ( (LA119_2==RULE_ID) ) {s = 5;}

                        else if ( (LA119_2==False||LA119_2==Known||LA119_2==True||LA119_2==Not||LA119_2==PI||LA119_2==LeftParenthesis||LA119_2==HyphenMinus||LA119_2==LeftSquareBracket||LA119_2==E_1||LA119_2==RULE_NUMBER||LA119_2==RULE_STRING) ) {s = 3;}

                        else if ( (LA119_2==FullStop) && (synpred2_InternalDialogParser())) {s = 6;}

                        else if ( (LA119_2==QuestionMark) && (synpred2_InternalDialogParser())) {s = 7;}

                        else if ( (LA119_2==EOF) && (synpred2_InternalDialogParser())) {s = 8;}

                        else if ( (LA119_2==Comma) && (synpred2_InternalDialogParser())) {s = 9;}

                        else if ( (LA119_2==With) && (synpred2_InternalDialogParser())) {s = 10;}

                        else if ( (LA119_2==Has) && (synpred2_InternalDialogParser())) {s = 11;}

                        else if ( (LA119_2==Is) && (synpred2_InternalDialogParser())) {s = 12;}

                        else if ( (LA119_2==Of) && (synpred2_InternalDialogParser())) {s = 13;}

                        else if ( (LA119_2==RightParenthesis) && (synpred2_InternalDialogParser())) {s = 14;}

                        else if ( (LA119_2==Only) && (synpred2_InternalDialogParser())) {s = 15;}

                        else if ( (LA119_2==Always) && (synpred2_InternalDialogParser())) {s = 16;}

                        else if ( (LA119_2==Describes) && (synpred2_InternalDialogParser())) {s = 17;}

                        else if ( (LA119_2==Must) && (synpred2_InternalDialogParser())) {s = 18;}

                        else if ( (LA119_2==Can) && (synpred2_InternalDialogParser())) {s = 19;}

                        else if ( (LA119_2==Described) && (synpred2_InternalDialogParser())) {s = 20;}

                        else if ( (LA119_2==RightCurlyBracket) && (synpred2_InternalDialogParser())) {s = 21;}

                        else if ( (LA119_2==And) && (synpred2_InternalDialogParser())) {s = 22;}

                        else if ( (LA119_2==RightSquareBracket) && (synpred2_InternalDialogParser())) {s = 23;}

                         
                        input.seek(index119_2);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA119_49 = input.LA(1);

                         
                        int index119_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA119_49==Alias) && (synpred2_InternalDialogParser())) {s = 56;}

                        else if ( (LA119_49==Note) && (synpred2_InternalDialogParser())) {s = 57;}

                        else if ( (LA119_49==Another||LA119_49==Some||LA119_49==The||LA119_49==Any||LA119_49==The_1||LA119_49==An||LA119_49==An_1||LA119_49==A||LA119_49==A_1||(LA119_49>=RULE_ID && LA119_49<=RULE_QNAME_TERMINAL)) ) {s = 3;}

                         
                        input.seek(index119_49);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA119_26 = input.LA(1);

                         
                        int index119_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA119_26==RULE_QNAME_TERMINAL) ) {s = 4;}

                        else if ( (LA119_26==RULE_ID) ) {s = 5;}

                        else if ( (LA119_26==False||LA119_26==Known||LA119_26==True||LA119_26==Not||LA119_26==PI||LA119_26==HyphenMinus||LA119_26==LeftSquareBracket||LA119_26==E_1||LA119_26==RULE_NUMBER||LA119_26==RULE_STRING) ) {s = 3;}

                        else if ( (LA119_26==LeftParenthesis) ) {s = 49;}

                        else if ( (LA119_26==Comma) && (synpred2_InternalDialogParser())) {s = 48;}

                        else if ( (LA119_26==RightParenthesis) && (synpred2_InternalDialogParser())) {s = 55;}

                        else if ( (LA119_26==EOF) && (synpred2_InternalDialogParser())) {s = 50;}

                        else if ( (LA119_26==With) && (synpred2_InternalDialogParser())) {s = 51;}

                        else if ( (LA119_26==Has) && (synpred2_InternalDialogParser())) {s = 52;}

                        else if ( (LA119_26==Is) && (synpred2_InternalDialogParser())) {s = 53;}

                        else if ( (LA119_26==Of) && (synpred2_InternalDialogParser())) {s = 54;}

                        else if ( (LA119_26==FullStop) && (synpred2_InternalDialogParser())) {s = 6;}

                        else if ( (LA119_26==QuestionMark) && (synpred2_InternalDialogParser())) {s = 7;}

                         
                        input.seek(index119_26);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA119_4 = input.LA(1);

                         
                        int index119_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA119_4==EOF||LA119_4==With||LA119_4==Has||(LA119_4>=Is && LA119_4<=Of)||LA119_4==RightParenthesis||LA119_4==Comma||LA119_4==FullStop||LA119_4==QuestionMark) ) {s = 3;}

                        else if ( (LA119_4==LeftParenthesis) ) {s = 24;}

                        else if ( (LA119_4==RULE_QNAME_TERMINAL) ) {s = 25;}

                        else if ( (LA119_4==RULE_ID) ) {s = 26;}

                        else if ( (LA119_4==RULE_NUMBER) && (synpred2_InternalDialogParser())) {s = 27;}

                        else if ( (LA119_4==RULE_STRING) && (synpred2_InternalDialogParser())) {s = 28;}

                        else if ( (LA119_4==True) && (synpred2_InternalDialogParser())) {s = 29;}

                        else if ( (LA119_4==False) && (synpred2_InternalDialogParser())) {s = 30;}

                        else if ( (LA119_4==LeftSquareBracket) && (synpred2_InternalDialogParser())) {s = 31;}

                        else if ( (LA119_4==PI) && (synpred2_InternalDialogParser())) {s = 32;}

                        else if ( (LA119_4==E_1) && (synpred2_InternalDialogParser())) {s = 33;}

                        else if ( (LA119_4==Known) && (synpred2_InternalDialogParser())) {s = 34;}

                        else if ( (LA119_4==HyphenMinus) && (synpred2_InternalDialogParser())) {s = 35;}

                        else if ( (LA119_4==Not) && (synpred2_InternalDialogParser())) {s = 36;}

                         
                        input.seek(index119_4);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA119_5 = input.LA(1);

                         
                        int index119_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA119_5==RULE_QNAME_TERMINAL) ) {s = 25;}

                        else if ( (LA119_5==RULE_ID) ) {s = 26;}

                        else if ( (LA119_5==RULE_NUMBER) && (synpred2_InternalDialogParser())) {s = 27;}

                        else if ( (LA119_5==RULE_STRING) && (synpred2_InternalDialogParser())) {s = 28;}

                        else if ( (LA119_5==True) && (synpred2_InternalDialogParser())) {s = 29;}

                        else if ( (LA119_5==False) && (synpred2_InternalDialogParser())) {s = 30;}

                        else if ( (LA119_5==LeftSquareBracket) && (synpred2_InternalDialogParser())) {s = 31;}

                        else if ( (LA119_5==PI) && (synpred2_InternalDialogParser())) {s = 32;}

                        else if ( (LA119_5==E_1) && (synpred2_InternalDialogParser())) {s = 33;}

                        else if ( (LA119_5==Known) && (synpred2_InternalDialogParser())) {s = 34;}

                        else if ( (LA119_5==HyphenMinus) && (synpred2_InternalDialogParser())) {s = 35;}

                        else if ( (LA119_5==Not) && (synpred2_InternalDialogParser())) {s = 36;}

                        else if ( (LA119_5==LeftParenthesis) ) {s = 24;}

                        else if ( (LA119_5==EOF||LA119_5==With||LA119_5==Has||(LA119_5>=Is && LA119_5<=Of)||LA119_5==RightParenthesis||LA119_5==Comma||LA119_5==FullStop||LA119_5==QuestionMark) ) {s = 3;}

                         
                        input.seek(index119_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 119, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\1\43\11\4\2\uffff";
    static final String dfa_47s = "\1\u00c7\11\u00c6\2\uffff";
    static final String dfa_48s = "\12\uffff\1\1\1\2";
    static final String[] dfa_49s = {
            "\1\7\5\uffff\1\13\7\uffff\1\12\17\uffff\1\13\20\uffff\2\13\1\uffff\1\13\3\uffff\2\13\7\uffff\1\13\3\uffff\1\13\2\uffff\1\13\12\uffff\1\13\5\uffff\1\13\1\uffff\1\6\2\uffff\2\13\6\uffff\1\10\1\uffff\1\5\10\uffff\1\13\1\uffff\1\11\3\uffff\1\13\4\uffff\1\3\1\13\1\4\13\uffff\1\13\1\uffff\1\13\4\uffff\1\13\7\uffff\1\1\1\uffff\1\13\2\uffff\1\2\2\13\1\uffff\1\13\1\uffff\3\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\22\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\1\uffff\1\13\20\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\22\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\22\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\22\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\22\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\5\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\22\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\2\uffff\1\13\1\uffff\1\13\2\uffff\1\13\15\uffff\4\13\1\uffff\1\13\3\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\22\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\2\uffff\1\13\1\uffff\1\13\2\uffff\1\13\15\uffff\4\13\1\uffff\1\13\3\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\22\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "",
            ""
    };
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA173 extends DFA {

        public DFA173(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 173;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_19;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "6718:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression )";
        }
    }

    class DFA175 extends DFA {

        public DFA175(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 175;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_19;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "6808:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression )";
        }
    }

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_19;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "6898:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression )";
        }
    }

    class DFA179 extends DFA {

        public DFA179(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 179;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_19;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "6988:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression )";
        }
    }
    static final String dfa_50s = "\75\uffff";
    static final String dfa_51s = "\1\45\74\uffff";
    static final String dfa_52s = "\1\34\1\uffff\2\0\36\uffff\1\0\32\uffff";
    static final String dfa_53s = "\1\u00c7\1\uffff\2\0\36\uffff\1\0\32\uffff";
    static final String dfa_54s = "\1\uffff\1\1\2\uffff\36\1\1\uffff\2\1\1\2\27\uffff";
    static final String dfa_55s = "\1\0\1\uffff\1\1\1\2\36\uffff\1\3\32\uffff}>";
    static final String[] dfa_56s = {
            "\1\45\4\uffff\1\45\1\uffff\1\12\5\uffff\1\44\27\uffff\1\27\20\uffff\1\30\1\20\1\uffff\1\32\3\uffff\1\31\1\22\3\uffff\1\45\3\uffff\1\43\3\uffff\1\34\2\uffff\1\25\6\uffff\1\45\3\uffff\1\33\5\uffff\1\41\1\uffff\1\11\2\uffff\1\17\1\26\6\uffff\1\13\1\45\1\10\5\uffff\1\45\2\uffff\1\37\1\uffff\1\14\1\uffff\2\45\1\24\2\45\1\uffff\1\45\1\6\1\21\1\7\6\uffff\1\45\1\uffff\1\45\1\uffff\1\45\1\40\1\45\1\1\3\45\1\uffff\1\42\1\uffff\1\45\1\uffff\3\45\1\uffff\1\4\1\uffff\1\35\1\uffff\1\45\1\5\1\23\1\36\1\uffff\1\16\1\uffff\1\3\1\2\1\15",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[][] dfa_56 = unpackEncodedStringArray(dfa_56s);

    class DFA218 extends DFA {

        public DFA218(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 218;
            this.eot = dfa_50;
            this.eof = dfa_51;
            this.min = dfa_52;
            this.max = dfa_53;
            this.accept = dfa_54;
            this.special = dfa_55;
            this.transition = dfa_56;
        }
        public String getDescription() {
            return "9407:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA218_0 = input.LA(1);

                         
                        int index218_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA218_0==LeftParenthesis) && (synpred21_InternalDialogParser())) {s = 1;}

                        else if ( (LA218_0==RULE_QNAME_TERMINAL) ) {s = 2;}

                        else if ( (LA218_0==RULE_ID) ) {s = 3;}

                        else if ( (LA218_0==A) && (synpred21_InternalDialogParser())) {s = 4;}

                        else if ( (LA218_0==A_1) && (synpred21_InternalDialogParser())) {s = 5;}

                        else if ( (LA218_0==An) && (synpred21_InternalDialogParser())) {s = 6;}

                        else if ( (LA218_0==An_1) && (synpred21_InternalDialogParser())) {s = 7;}

                        else if ( (LA218_0==Any) && (synpred21_InternalDialogParser())) {s = 8;}

                        else if ( (LA218_0==Some) && (synpred21_InternalDialogParser())) {s = 9;}

                        else if ( (LA218_0==Another) && (synpred21_InternalDialogParser())) {s = 10;}

                        else if ( (LA218_0==The) && (synpred21_InternalDialogParser())) {s = 11;}

                        else if ( (LA218_0==The_1) && (synpred21_InternalDialogParser())) {s = 12;}

                        else if ( (LA218_0==RULE_STRING) && (synpred21_InternalDialogParser())) {s = 13;}

                        else if ( (LA218_0==RULE_NUMBER) && (synpred21_InternalDialogParser())) {s = 14;}

                        else if ( (LA218_0==True) && (synpred21_InternalDialogParser())) {s = 15;}

                        else if ( (LA218_0==False) && (synpred21_InternalDialogParser())) {s = 16;}

                        else if ( (LA218_0==PI) && (synpred21_InternalDialogParser())) {s = 17;}

                        else if ( (LA218_0==Known) && (synpred21_InternalDialogParser())) {s = 18;}

                        else if ( (LA218_0==E_1) && (synpred21_InternalDialogParser())) {s = 19;}

                        else if ( (LA218_0==HyphenMinusHyphenMinus) && (synpred21_InternalDialogParser())) {s = 20;}

                        else if ( (LA218_0==None) && (synpred21_InternalDialogParser())) {s = 21;}

                        else if ( (LA218_0==Type) && (synpred21_InternalDialogParser())) {s = 22;}

                        else if ( (LA218_0==Length) && (synpred21_InternalDialogParser())) {s = 23;}

                        else if ( (LA218_0==Count) && (synpred21_InternalDialogParser())) {s = 24;}

                        else if ( (LA218_0==Index) && (synpred21_InternalDialogParser())) {s = 25;}

                        else if ( (LA218_0==First) && (synpred21_InternalDialogParser())) {s = 26;}

                        else if ( (LA218_0==Last) && (synpred21_InternalDialogParser())) {s = 27;}

                        else if ( (LA218_0==Value) && (synpred21_InternalDialogParser())) {s = 28;}

                        else if ( (LA218_0==LeftSquareBracket) && (synpred21_InternalDialogParser())) {s = 29;}

                        else if ( (LA218_0==LeftCurlyBracket) && (synpred21_InternalDialogParser())) {s = 30;}

                        else if ( (LA218_0==Not) && (synpred21_InternalDialogParser())) {s = 31;}

                        else if ( (LA218_0==ExclamationMark) && (synpred21_InternalDialogParser())) {s = 32;}

                        else if ( (LA218_0==Only) && (synpred21_InternalDialogParser())) {s = 33;}

                        else if ( (LA218_0==HyphenMinus) ) {s = 34;}

                        else if ( (LA218_0==There) && (synpred21_InternalDialogParser())) {s = 35;}

                        else if ( (LA218_0==Element) && (synpred21_InternalDialogParser())) {s = 36;}

                        else if ( (LA218_0==EOF||LA218_0==Contains||LA218_0==Matching||LA218_0==Order||LA218_0==Does||LA218_0==And||LA218_0==Has||(LA218_0>=ExclamationMarkEqualsSign && LA218_0<=AmpersandAmpersand)||(LA218_0>=LessThanSignEqualsSign && LA218_0<=EqualsSignEqualsSign)||LA218_0==GreaterThanSignEqualsSign||LA218_0==Is||LA218_0==Or||LA218_0==VerticalLineVerticalLine||LA218_0==PercentSign||(LA218_0>=RightParenthesis && LA218_0<=PlusSign)||LA218_0==Solidus||(LA218_0>=LessThanSign && LA218_0<=GreaterThanSign)||LA218_0==CircumflexAccent) ) {s = 37;}

                         
                        input.seek(index218_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA218_2 = input.LA(1);

                         
                        int index218_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index218_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA218_3 = input.LA(1);

                         
                        int index218_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index218_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA218_34 = input.LA(1);

                         
                        int index218_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index218_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 218, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_57s = "\100\uffff";
    static final String dfa_58s = "\1\45\77\uffff";
    static final String dfa_59s = "\1\34\1\uffff\2\0\36\uffff\1\0\35\uffff";
    static final String dfa_60s = "\1\u00c7\1\uffff\2\0\36\uffff\1\0\35\uffff";
    static final String dfa_61s = "\1\uffff\1\1\2\uffff\36\1\1\uffff\2\1\1\2\32\uffff";
    static final String dfa_62s = "\1\0\1\uffff\1\1\1\2\36\uffff\1\3\35\uffff}>";
    static final String[] dfa_63s = {
            "\1\45\4\uffff\1\45\1\uffff\1\12\5\uffff\1\44\27\uffff\1\27\20\uffff\1\30\1\20\1\uffff\1\32\3\uffff\1\31\1\22\3\uffff\1\45\3\uffff\1\43\3\uffff\1\34\2\uffff\1\25\6\uffff\1\45\3\uffff\1\33\5\uffff\1\41\1\uffff\1\11\2\uffff\1\17\1\26\1\uffff\1\45\4\uffff\1\13\1\45\1\10\5\uffff\1\45\2\uffff\1\37\1\uffff\1\14\1\uffff\2\45\1\24\2\45\1\uffff\1\45\1\6\1\21\1\7\6\uffff\1\45\1\uffff\1\45\1\uffff\1\45\1\40\1\45\1\1\4\45\1\42\1\uffff\1\45\1\uffff\3\45\1\uffff\1\4\1\uffff\1\35\2\45\1\5\1\23\1\36\1\uffff\1\16\1\uffff\1\3\1\2\1\15",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);

    class DFA224 extends DFA {

        public DFA224(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 224;
            this.eot = dfa_57;
            this.eof = dfa_58;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_61;
            this.special = dfa_62;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "9562:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA224_0 = input.LA(1);

                         
                        int index224_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA224_0==LeftParenthesis) && (synpred24_InternalDialogParser())) {s = 1;}

                        else if ( (LA224_0==RULE_QNAME_TERMINAL) ) {s = 2;}

                        else if ( (LA224_0==RULE_ID) ) {s = 3;}

                        else if ( (LA224_0==A) && (synpred24_InternalDialogParser())) {s = 4;}

                        else if ( (LA224_0==A_1) && (synpred24_InternalDialogParser())) {s = 5;}

                        else if ( (LA224_0==An) && (synpred24_InternalDialogParser())) {s = 6;}

                        else if ( (LA224_0==An_1) && (synpred24_InternalDialogParser())) {s = 7;}

                        else if ( (LA224_0==Any) && (synpred24_InternalDialogParser())) {s = 8;}

                        else if ( (LA224_0==Some) && (synpred24_InternalDialogParser())) {s = 9;}

                        else if ( (LA224_0==Another) && (synpred24_InternalDialogParser())) {s = 10;}

                        else if ( (LA224_0==The) && (synpred24_InternalDialogParser())) {s = 11;}

                        else if ( (LA224_0==The_1) && (synpred24_InternalDialogParser())) {s = 12;}

                        else if ( (LA224_0==RULE_STRING) && (synpred24_InternalDialogParser())) {s = 13;}

                        else if ( (LA224_0==RULE_NUMBER) && (synpred24_InternalDialogParser())) {s = 14;}

                        else if ( (LA224_0==True) && (synpred24_InternalDialogParser())) {s = 15;}

                        else if ( (LA224_0==False) && (synpred24_InternalDialogParser())) {s = 16;}

                        else if ( (LA224_0==PI) && (synpred24_InternalDialogParser())) {s = 17;}

                        else if ( (LA224_0==Known) && (synpred24_InternalDialogParser())) {s = 18;}

                        else if ( (LA224_0==E_1) && (synpred24_InternalDialogParser())) {s = 19;}

                        else if ( (LA224_0==HyphenMinusHyphenMinus) && (synpred24_InternalDialogParser())) {s = 20;}

                        else if ( (LA224_0==None) && (synpred24_InternalDialogParser())) {s = 21;}

                        else if ( (LA224_0==Type) && (synpred24_InternalDialogParser())) {s = 22;}

                        else if ( (LA224_0==Length) && (synpred24_InternalDialogParser())) {s = 23;}

                        else if ( (LA224_0==Count) && (synpred24_InternalDialogParser())) {s = 24;}

                        else if ( (LA224_0==Index) && (synpred24_InternalDialogParser())) {s = 25;}

                        else if ( (LA224_0==First) && (synpred24_InternalDialogParser())) {s = 26;}

                        else if ( (LA224_0==Last) && (synpred24_InternalDialogParser())) {s = 27;}

                        else if ( (LA224_0==Value) && (synpred24_InternalDialogParser())) {s = 28;}

                        else if ( (LA224_0==LeftSquareBracket) && (synpred24_InternalDialogParser())) {s = 29;}

                        else if ( (LA224_0==LeftCurlyBracket) && (synpred24_InternalDialogParser())) {s = 30;}

                        else if ( (LA224_0==Not) && (synpred24_InternalDialogParser())) {s = 31;}

                        else if ( (LA224_0==ExclamationMark) && (synpred24_InternalDialogParser())) {s = 32;}

                        else if ( (LA224_0==Only) && (synpred24_InternalDialogParser())) {s = 33;}

                        else if ( (LA224_0==HyphenMinus) ) {s = 34;}

                        else if ( (LA224_0==There) && (synpred24_InternalDialogParser())) {s = 35;}

                        else if ( (LA224_0==Element) && (synpred24_InternalDialogParser())) {s = 36;}

                        else if ( (LA224_0==EOF||LA224_0==Contains||LA224_0==Matching||LA224_0==Order||LA224_0==Does||LA224_0==With||LA224_0==And||LA224_0==Has||(LA224_0>=ExclamationMarkEqualsSign && LA224_0<=AmpersandAmpersand)||(LA224_0>=LessThanSignEqualsSign && LA224_0<=EqualsSignEqualsSign)||LA224_0==GreaterThanSignEqualsSign||LA224_0==Is||LA224_0==Or||LA224_0==VerticalLineVerticalLine||LA224_0==PercentSign||(LA224_0>=RightParenthesis && LA224_0<=Comma)||LA224_0==Solidus||(LA224_0>=LessThanSign && LA224_0<=GreaterThanSign)||(LA224_0>=RightSquareBracket && LA224_0<=CircumflexAccent)) ) {s = 37;}

                         
                        input.seek(index224_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA224_2 = input.LA(1);

                         
                        int index224_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index224_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA224_3 = input.LA(1);

                         
                        int index224_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index224_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA224_34 = input.LA(1);

                         
                        int index224_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index224_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 224, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_64s = {
            "\1\45\4\uffff\1\45\1\uffff\1\12\5\uffff\1\44\27\uffff\1\27\20\uffff\1\30\1\20\1\uffff\1\32\3\uffff\1\31\1\22\3\uffff\1\45\3\uffff\1\43\3\uffff\1\34\2\uffff\1\25\6\uffff\1\45\3\uffff\1\33\5\uffff\1\41\1\uffff\1\11\2\uffff\1\17\1\26\6\uffff\1\13\1\45\1\10\5\uffff\1\45\2\uffff\1\37\1\uffff\1\14\1\uffff\2\45\1\24\2\45\1\uffff\1\45\1\6\1\21\1\7\6\uffff\1\45\1\uffff\1\45\1\uffff\1\45\1\40\1\45\1\1\4\45\1\42\1\uffff\1\45\1\uffff\3\45\1\uffff\1\4\1\uffff\1\35\1\uffff\1\45\1\5\1\23\1\36\1\uffff\1\16\1\uffff\1\3\1\2\1\15",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_64 = unpackEncodedStringArray(dfa_64s);

    class DFA231 extends DFA {

        public DFA231(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 231;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_52;
            this.max = dfa_53;
            this.accept = dfa_54;
            this.special = dfa_55;
            this.transition = dfa_64;
        }
        public String getDescription() {
            return "9726:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA231_0 = input.LA(1);

                         
                        int index231_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA231_0==LeftParenthesis) && (synpred27_InternalDialogParser())) {s = 1;}

                        else if ( (LA231_0==RULE_QNAME_TERMINAL) ) {s = 2;}

                        else if ( (LA231_0==RULE_ID) ) {s = 3;}

                        else if ( (LA231_0==A) && (synpred27_InternalDialogParser())) {s = 4;}

                        else if ( (LA231_0==A_1) && (synpred27_InternalDialogParser())) {s = 5;}

                        else if ( (LA231_0==An) && (synpred27_InternalDialogParser())) {s = 6;}

                        else if ( (LA231_0==An_1) && (synpred27_InternalDialogParser())) {s = 7;}

                        else if ( (LA231_0==Any) && (synpred27_InternalDialogParser())) {s = 8;}

                        else if ( (LA231_0==Some) && (synpred27_InternalDialogParser())) {s = 9;}

                        else if ( (LA231_0==Another) && (synpred27_InternalDialogParser())) {s = 10;}

                        else if ( (LA231_0==The) && (synpred27_InternalDialogParser())) {s = 11;}

                        else if ( (LA231_0==The_1) && (synpred27_InternalDialogParser())) {s = 12;}

                        else if ( (LA231_0==RULE_STRING) && (synpred27_InternalDialogParser())) {s = 13;}

                        else if ( (LA231_0==RULE_NUMBER) && (synpred27_InternalDialogParser())) {s = 14;}

                        else if ( (LA231_0==True) && (synpred27_InternalDialogParser())) {s = 15;}

                        else if ( (LA231_0==False) && (synpred27_InternalDialogParser())) {s = 16;}

                        else if ( (LA231_0==PI) && (synpred27_InternalDialogParser())) {s = 17;}

                        else if ( (LA231_0==Known) && (synpred27_InternalDialogParser())) {s = 18;}

                        else if ( (LA231_0==E_1) && (synpred27_InternalDialogParser())) {s = 19;}

                        else if ( (LA231_0==HyphenMinusHyphenMinus) && (synpred27_InternalDialogParser())) {s = 20;}

                        else if ( (LA231_0==None) && (synpred27_InternalDialogParser())) {s = 21;}

                        else if ( (LA231_0==Type) && (synpred27_InternalDialogParser())) {s = 22;}

                        else if ( (LA231_0==Length) && (synpred27_InternalDialogParser())) {s = 23;}

                        else if ( (LA231_0==Count) && (synpred27_InternalDialogParser())) {s = 24;}

                        else if ( (LA231_0==Index) && (synpred27_InternalDialogParser())) {s = 25;}

                        else if ( (LA231_0==First) && (synpred27_InternalDialogParser())) {s = 26;}

                        else if ( (LA231_0==Last) && (synpred27_InternalDialogParser())) {s = 27;}

                        else if ( (LA231_0==Value) && (synpred27_InternalDialogParser())) {s = 28;}

                        else if ( (LA231_0==LeftSquareBracket) && (synpred27_InternalDialogParser())) {s = 29;}

                        else if ( (LA231_0==LeftCurlyBracket) && (synpred27_InternalDialogParser())) {s = 30;}

                        else if ( (LA231_0==Not) && (synpred27_InternalDialogParser())) {s = 31;}

                        else if ( (LA231_0==ExclamationMark) && (synpred27_InternalDialogParser())) {s = 32;}

                        else if ( (LA231_0==Only) && (synpred27_InternalDialogParser())) {s = 33;}

                        else if ( (LA231_0==HyphenMinus) ) {s = 34;}

                        else if ( (LA231_0==There) && (synpred27_InternalDialogParser())) {s = 35;}

                        else if ( (LA231_0==Element) && (synpred27_InternalDialogParser())) {s = 36;}

                        else if ( (LA231_0==Contains||LA231_0==Matching||LA231_0==Order||LA231_0==Does||LA231_0==And||LA231_0==Has||(LA231_0>=ExclamationMarkEqualsSign && LA231_0<=AmpersandAmpersand)||(LA231_0>=LessThanSignEqualsSign && LA231_0<=EqualsSignEqualsSign)||LA231_0==GreaterThanSignEqualsSign||LA231_0==Is||LA231_0==Or||LA231_0==VerticalLineVerticalLine||LA231_0==PercentSign||(LA231_0>=RightParenthesis && LA231_0<=Comma)||LA231_0==Solidus||(LA231_0>=LessThanSign && LA231_0<=GreaterThanSign)||LA231_0==CircumflexAccent) ) {s = 37;}

                         
                        input.seek(index231_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA231_2 = input.LA(1);

                         
                        int index231_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index231_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA231_3 = input.LA(1);

                         
                        int index231_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index231_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA231_34 = input.LA(1);

                         
                        int index231_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index231_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 231, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_65s = "\1\11\11\uffff";
    static final String dfa_66s = "\1\34\11\uffff";
    static final String dfa_67s = "\1\u00c6\11\uffff";
    static final String dfa_68s = "\1\uffff\10\1\1\2";
    static final String dfa_69s = "\1\0\11\uffff}>";
    static final String[] dfa_70s = {
            "\1\11\4\uffff\1\11\36\uffff\1\11\1\uffff\1\11\33\uffff\1\11\10\uffff\1\11\10\uffff\1\11\21\uffff\1\5\5\uffff\1\11\5\uffff\1\2\1\6\6\uffff\2\11\1\uffff\2\11\1\uffff\1\11\10\uffff\1\3\1\11\1\1\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\3\11\1\4\3\11\1\uffff\4\11\4\uffff\1\11\6\uffff\1\10\1\7",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[][] dfa_70 = unpackEncodedStringArray(dfa_70s);

    class DFA241 extends DFA {

        public DFA241(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 241;
            this.eot = dfa_25;
            this.eof = dfa_65;
            this.min = dfa_66;
            this.max = dfa_67;
            this.accept = dfa_68;
            this.special = dfa_69;
            this.transition = dfa_70;
        }
        public String getDescription() {
            return "9771:3: ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA241_0 = input.LA(1);

                         
                        int index241_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA241_0==Of) && (synpred28_InternalDialogParser())) {s = 1;}

                        else if ( (LA241_0==For) && (synpred28_InternalDialogParser())) {s = 2;}

                        else if ( (LA241_0==In) && (synpred28_InternalDialogParser())) {s = 3;}

                        else if ( (LA241_0==Comma) && (synpred28_InternalDialogParser())) {s = 4;}

                        else if ( (LA241_0==With) && (synpred28_InternalDialogParser())) {s = 5;}

                        else if ( (LA241_0==Has) && (synpred28_InternalDialogParser())) {s = 6;}

                        else if ( (LA241_0==RULE_QNAME_TERMINAL) && (synpred28_InternalDialogParser())) {s = 7;}

                        else if ( (LA241_0==RULE_ID) && (synpred28_InternalDialogParser())) {s = 8;}

                        else if ( (LA241_0==EOF||LA241_0==Contains||LA241_0==Matching||LA241_0==Insert||LA241_0==Return||LA241_0==Order||LA241_0==Where||LA241_0==Does||LA241_0==And||(LA241_0>=ExclamationMarkEqualsSign && LA241_0<=AmpersandAmpersand)||(LA241_0>=LessThanSignEqualsSign && LA241_0<=EqualsSignEqualsSign)||LA241_0==GreaterThanSignEqualsSign||LA241_0==Is||LA241_0==Or||LA241_0==VerticalLineVerticalLine||LA241_0==PercentSign||(LA241_0>=RightParenthesis && LA241_0<=PlusSign)||(LA241_0>=HyphenMinus && LA241_0<=Solidus)||(LA241_0>=LessThanSign && LA241_0<=QuestionMark)||LA241_0==CircumflexAccent) ) {s = 9;}

                         
                        input.seek(index241_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 241, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_71s = "\104\uffff";
    static final String dfa_72s = "\1\45\103\uffff";
    static final String dfa_73s = "\1\34\1\uffff\2\0\36\uffff\1\0\41\uffff";
    static final String dfa_74s = "\1\u00c7\1\uffff\2\0\36\uffff\1\0\41\uffff";
    static final String dfa_75s = "\1\uffff\1\1\2\uffff\36\1\1\uffff\2\1\1\2\36\uffff";
    static final String dfa_76s = "\1\0\1\uffff\1\1\1\2\36\uffff\1\3\41\uffff}>";
    static final String[] dfa_77s = {
            "\1\45\4\uffff\1\45\1\uffff\1\12\5\uffff\1\44\26\uffff\1\45\1\27\1\45\17\uffff\1\30\1\20\1\uffff\1\32\3\uffff\1\31\1\22\3\uffff\1\45\3\uffff\1\43\3\uffff\1\34\1\45\1\uffff\1\25\6\uffff\1\45\3\uffff\1\33\5\uffff\1\41\1\uffff\1\11\2\uffff\1\17\1\26\1\uffff\1\45\4\uffff\1\13\1\45\1\10\5\uffff\1\45\2\uffff\1\37\1\uffff\1\14\1\uffff\2\45\1\24\2\45\1\uffff\1\45\1\6\1\21\1\7\6\uffff\1\45\1\uffff\1\45\1\uffff\1\45\1\40\1\45\1\1\4\45\1\42\2\45\1\uffff\4\45\1\4\1\uffff\1\35\1\uffff\1\45\1\5\1\23\1\36\1\uffff\1\16\1\uffff\1\3\1\2\1\15",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final char[] dfa_73 = DFA.unpackEncodedStringToUnsignedChars(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[][] dfa_77 = unpackEncodedStringArray(dfa_77s);

    class DFA238 extends DFA {

        public DFA238(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 238;
            this.eot = dfa_71;
            this.eof = dfa_72;
            this.min = dfa_73;
            this.max = dfa_74;
            this.accept = dfa_75;
            this.special = dfa_76;
            this.transition = dfa_77;
        }
        public String getDescription() {
            return "9895:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA238_0 = input.LA(1);

                         
                        int index238_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA238_0==LeftParenthesis) && (synpred30_InternalDialogParser())) {s = 1;}

                        else if ( (LA238_0==RULE_QNAME_TERMINAL) ) {s = 2;}

                        else if ( (LA238_0==RULE_ID) ) {s = 3;}

                        else if ( (LA238_0==A) && (synpred30_InternalDialogParser())) {s = 4;}

                        else if ( (LA238_0==A_1) && (synpred30_InternalDialogParser())) {s = 5;}

                        else if ( (LA238_0==An) && (synpred30_InternalDialogParser())) {s = 6;}

                        else if ( (LA238_0==An_1) && (synpred30_InternalDialogParser())) {s = 7;}

                        else if ( (LA238_0==Any) && (synpred30_InternalDialogParser())) {s = 8;}

                        else if ( (LA238_0==Some) && (synpred30_InternalDialogParser())) {s = 9;}

                        else if ( (LA238_0==Another) && (synpred30_InternalDialogParser())) {s = 10;}

                        else if ( (LA238_0==The) && (synpred30_InternalDialogParser())) {s = 11;}

                        else if ( (LA238_0==The_1) && (synpred30_InternalDialogParser())) {s = 12;}

                        else if ( (LA238_0==RULE_STRING) && (synpred30_InternalDialogParser())) {s = 13;}

                        else if ( (LA238_0==RULE_NUMBER) && (synpred30_InternalDialogParser())) {s = 14;}

                        else if ( (LA238_0==True) && (synpred30_InternalDialogParser())) {s = 15;}

                        else if ( (LA238_0==False) && (synpred30_InternalDialogParser())) {s = 16;}

                        else if ( (LA238_0==PI) && (synpred30_InternalDialogParser())) {s = 17;}

                        else if ( (LA238_0==Known) && (synpred30_InternalDialogParser())) {s = 18;}

                        else if ( (LA238_0==E_1) && (synpred30_InternalDialogParser())) {s = 19;}

                        else if ( (LA238_0==HyphenMinusHyphenMinus) && (synpred30_InternalDialogParser())) {s = 20;}

                        else if ( (LA238_0==None) && (synpred30_InternalDialogParser())) {s = 21;}

                        else if ( (LA238_0==Type) && (synpred30_InternalDialogParser())) {s = 22;}

                        else if ( (LA238_0==Length) && (synpred30_InternalDialogParser())) {s = 23;}

                        else if ( (LA238_0==Count) && (synpred30_InternalDialogParser())) {s = 24;}

                        else if ( (LA238_0==Index) && (synpred30_InternalDialogParser())) {s = 25;}

                        else if ( (LA238_0==First) && (synpred30_InternalDialogParser())) {s = 26;}

                        else if ( (LA238_0==Last) && (synpred30_InternalDialogParser())) {s = 27;}

                        else if ( (LA238_0==Value) && (synpred30_InternalDialogParser())) {s = 28;}

                        else if ( (LA238_0==LeftSquareBracket) && (synpred30_InternalDialogParser())) {s = 29;}

                        else if ( (LA238_0==LeftCurlyBracket) && (synpred30_InternalDialogParser())) {s = 30;}

                        else if ( (LA238_0==Not) && (synpred30_InternalDialogParser())) {s = 31;}

                        else if ( (LA238_0==ExclamationMark) && (synpred30_InternalDialogParser())) {s = 32;}

                        else if ( (LA238_0==Only) && (synpred30_InternalDialogParser())) {s = 33;}

                        else if ( (LA238_0==HyphenMinus) ) {s = 34;}

                        else if ( (LA238_0==There) && (synpred30_InternalDialogParser())) {s = 35;}

                        else if ( (LA238_0==Element) && (synpred30_InternalDialogParser())) {s = 36;}

                        else if ( (LA238_0==EOF||LA238_0==Contains||LA238_0==Matching||LA238_0==Insert||LA238_0==Return||LA238_0==Order||LA238_0==Where||LA238_0==Does||LA238_0==With||LA238_0==And||LA238_0==Has||(LA238_0>=ExclamationMarkEqualsSign && LA238_0<=AmpersandAmpersand)||(LA238_0>=LessThanSignEqualsSign && LA238_0<=EqualsSignEqualsSign)||LA238_0==GreaterThanSignEqualsSign||LA238_0==Is||LA238_0==Or||LA238_0==VerticalLineVerticalLine||LA238_0==PercentSign||(LA238_0>=RightParenthesis && LA238_0<=Comma)||(LA238_0>=FullStop && LA238_0<=Solidus)||(LA238_0>=LessThanSign && LA238_0<=QuestionMark)||LA238_0==CircumflexAccent) ) {s = 37;}

                         
                        input.seek(index238_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA238_2 = input.LA(1);

                         
                        int index238_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index238_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA238_3 = input.LA(1);

                         
                        int index238_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index238_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA238_34 = input.LA(1);

                         
                        int index238_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index238_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 238, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_78s = "\35\uffff";
    static final String dfa_79s = "\1\43\2\uffff\11\4\5\uffff\13\4\1\uffff";
    static final String dfa_80s = "\1\u00c7\2\uffff\11\u00c6\5\uffff\13\u00c6\1\uffff";
    static final String dfa_81s = "\1\uffff\1\1\1\2\11\uffff\1\4\1\5\1\6\1\7\1\10\13\uffff\1\3";
    static final String dfa_82s = "\35\uffff}>";
    static final String[] dfa_83s = {
            "\1\11\35\uffff\1\17\20\uffff\1\17\1\16\1\uffff\1\17\3\uffff\2\17\13\uffff\1\17\2\uffff\1\17\12\uffff\1\17\7\uffff\1\10\2\uffff\1\16\1\17\6\uffff\1\12\1\uffff\1\7\12\uffff\1\13\3\uffff\1\17\4\uffff\1\5\1\17\1\6\15\uffff\1\1\14\uffff\1\3\1\uffff\1\20\2\uffff\1\4\1\17\1\20\1\uffff\1\15\1\uffff\2\2\1\14",
            "",
            "",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\1\uffff\1\17\20\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\5\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\2\uffff\1\17\1\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\1\uffff\1\17\3\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\2\uffff\1\17\1\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\1\uffff\1\17\3\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "",
            "",
            "",
            "",
            "",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\24\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            ""
    };

    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[][] dfa_83 = unpackEncodedStringArray(dfa_83s);

    class DFA268 extends DFA {

        public DFA268(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 268;
            this.eot = dfa_78;
            this.eof = dfa_78;
            this.min = dfa_79;
            this.max = dfa_80;
            this.accept = dfa_81;
            this.special = dfa_82;
            this.transition = dfa_83;
        }
        public String getDescription() {
            return "10976:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )";
        }
    }

    class DFA275 extends DFA {

        public DFA275(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 275;
            this.eot = dfa_78;
            this.eof = dfa_78;
            this.min = dfa_79;
            this.max = dfa_80;
            this.accept = dfa_81;
            this.special = dfa_82;
            this.transition = dfa_83;
        }
        public String getDescription() {
            return "11350:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )";
        }
    }

    class DFA282 extends DFA {

        public DFA282(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 282;
            this.eot = dfa_78;
            this.eof = dfa_78;
            this.min = dfa_79;
            this.max = dfa_80;
            this.accept = dfa_81;
            this.special = dfa_82;
            this.transition = dfa_83;
        }
        public String getDescription() {
            return "11724:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )";
        }
    }

    class DFA289 extends DFA {

        public DFA289(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 289;
            this.eot = dfa_78;
            this.eof = dfa_78;
            this.min = dfa_79;
            this.max = dfa_80;
            this.accept = dfa_81;
            this.special = dfa_82;
            this.transition = dfa_83;
        }
        public String getDescription() {
            return "12098:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )";
        }
    }
    static final String dfa_84s = "\17\uffff";
    static final String dfa_85s = "\1\43\5\uffff\1\51\1\uffff\2\51\5\uffff";
    static final String dfa_86s = "\1\u00c0\5\uffff\1\u0080\1\uffff\2\143\5\uffff";
    static final String dfa_87s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\uffff\1\6\2\uffff\1\7\1\10\1\11\1\12\1\13";
    static final String dfa_88s = "\17\uffff}>";
    static final String[] dfa_89s = {
            "\1\15\35\uffff\1\12\20\uffff\1\13\2\uffff\1\15\3\uffff\1\14\1\2\13\uffff\1\16\2\uffff\1\5\12\uffff\1\15\7\uffff\1\15\3\uffff\1\7\6\uffff\1\10\1\uffff\1\15\12\uffff\1\11\3\uffff\1\4\4\uffff\1\15\1\1\1\15\32\uffff\1\15\4\uffff\1\6\1\3",
            "",
            "",
            "",
            "",
            "",
            "\1\15\5\uffff\1\15\13\uffff\1\15\1\uffff\1\15\5\uffff\1\15\20\uffff\2\15\7\uffff\1\15\1\uffff\3\15\1\uffff\1\15\34\uffff\1\7",
            "",
            "\1\15\5\uffff\1\15\13\uffff\1\15\1\uffff\1\15\3\uffff\1\12\1\uffff\1\15\20\uffff\2\15\3\uffff\1\14\3\uffff\1\15\1\uffff\3\15\1\uffff\1\15",
            "\1\15\5\uffff\1\15\13\uffff\1\15\1\uffff\1\15\3\uffff\1\12\1\uffff\1\15\20\uffff\2\15\3\uffff\1\14\3\uffff\1\15\1\uffff\3\15\1\uffff\1\15",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[][] dfa_89 = unpackEncodedStringArray(dfa_89s);

    class DFA302 extends DFA {

        public DFA302(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 302;
            this.eot = dfa_84;
            this.eof = dfa_84;
            this.min = dfa_85;
            this.max = dfa_86;
            this.accept = dfa_87;
            this.special = dfa_88;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "12738:2: (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x000000080A000400L,0x1000000000000000L,0x84000000A0100280L,0x0000000000000062L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0208000000000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0002020800040000L,0x94100244062C0012L,0x94042800E1141281L,0x00000000000000EBL});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000100L,0x0000004000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000800000000L,0x1000000000000000L,0x84000000A0100280L,0x0000000000000060L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000060L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x4480089920612BF0L,0x5024500000C00040L,0x84002000A0120280L,0x0000000000000062L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000008000002000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0004000000000000L,0x0000000000010000L,0x020A200000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x020A200000000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x020A200000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x8000000000000002L,0x0000080000000000L,0x0000000000011072L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L,0x0000000000011072L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x0200000000010000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0002400000000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0208000100000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0002020800040002L,0x941002C4062C0016L,0x94042800E1141281L,0x00000000000000EBL});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000004L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000200000000002L,0x0000008000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x4480089920612BF0L,0x5024500000C00040L,0x84006000A1120288L,0x0000000000000062L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x4480089920612BF0L,0x5024500000C00040L,0x84002000A1120288L,0x0000000000000062L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x4480089920612BF0L,0x5024520000C00040L,0x84002000A1120280L,0x0000000000000062L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0022000000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0040000000100002L,0x0500000000000000L,0x100200C00000A104L,0x0000000000000060L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x8000000000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000001000000L,0x0000000000020000L,0x0000000000000001L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0040000000180002L,0x0500000000000000L,0x000200C00000A004L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0040000000180002L,0x0500000000000002L,0x100220C00000A004L,0x0000000000000082L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000080002L,0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0040000000100000L,0x0500000000000000L,0x000200C00000A004L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0040000000100002L,0x0500000000000000L,0x000200C00000A004L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x4480089920612BF0L,0x5024500000C00040L,0x84002000A0160280L,0x0000000000000062L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000800000000L,0x1000000000000000L,0x84000000A0100280L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x100200C000008004L,0x0000000000000060L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x000200C000008004L,0x0000000000000060L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000500L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0002000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000002041800000L,0x0000001000000000L,0x0000000000140000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0040000000000000L,0x0400000000000000L,0x0000000000008004L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000008004L,0x0000000000000060L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x8000000004080000L,0x1004200040040000L,0x00000000000000E9L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0002200000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0006000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x2004400000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x2000400000000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0004800000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000088L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0006000000000000L,0x000000000000008CL});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L,0x8000000000000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x4480089920612BF0L,0x5024700000C20040L,0x84002000A0120280L,0x0000000000000062L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L,0x1000200000000000L,0x0000000000000082L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000010000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x8000000004080000L,0x1004000040040000L,0x00000000000000E9L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0001000000000002L,0x0000004000000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000008004L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000000L,0x0000000200080000L,0x0000000000000008L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000000L,0x0080000008000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000100L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000000L,0x8000000004080000L,0x1000000040000000L,0x00000000000000E9L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x00000000000000A0L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000000L,0x8000000004080000L,0x3004000040040000L,0x00000000000000E9L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x2002000000000000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0002000000000000L,0x0000000000000060L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0002020800040000L,0x94102244062C0012L,0x94042800E1141281L,0x00000000000000EBL});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000001L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000080000000L,0x0000000000000000L,0x0000800000000000L,0x0000000000000060L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000800000000000L,0x0000000000000060L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L,0x0002000000000000L,0x0000000000000060L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0002020800000000L,0x94100244062C0002L,0x94042800E1140281L,0x00000000000000EBL});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000002L,0x0000000040000000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L,0x0000000000000800L,0x0000000000000060L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000002L,0x0000800000000000L,0x0002000000000800L,0x0000000000000060L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000050000000000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000800100L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000010000002L,0x0001000000000000L,0x0080004004400000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L,0x0000000000040000L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0140000012000000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0005000000000000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0010900000000000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x000000A00000C000L,0x0000000000000060L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0002020800000002L,0x94100244062C0002L,0x94042800E1148281L,0x00000000000000EBL});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000008000L,0x0000000000000060L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x000000A00000C004L,0x0000000000000060L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0002020800000002L,0x94100244062C0002L,0x94042800E1148285L,0x00000000000000EBL});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000008004L,0x0000000000000060L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x000200A00000C000L,0x0000000000000060L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000008000L,0x0000000000000060L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0002020800000002L,0x94100244062C0002L,0x94062800E1148281L,0x00000000000000EBL});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0002000000008000L,0x0000000000000060L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x000200A00000C004L,0x0000000000000060L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0002020800040002L,0x94100244062C0012L,0x94062800E1149285L,0x00000000000000EBL});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0002000000008004L,0x0000000000000060L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0100000800000000L,0x94100244062C8002L,0x94042800E1140281L,0x00000000000000EBL});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000000800000000L,0x94100244062C0002L,0x94042800E1140281L,0x00000000000000EBL});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000000800000000L,0x90100240062C0002L,0x94002000E1100281L,0x00000000000000EBL});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0002020800000000L,0x94100244062C0012L,0x94042800E1140281L,0x00000000000000EBL});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x6C80889920612BF0L,0x5024500BA0F00048L,0x84002000A0120280L,0x0000000000000062L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0002020800000000L,0x94100244062C0012L,0xB4062800E1140281L,0x00000000000000EBL});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0002020800000000L,0x94100244062C0012L,0x94066800E1140281L,0x00000000000000EBL});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x1002000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x2800820000000000L,0x0000000BA0300008L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0800000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0005000000000000L,0x0000000000000008L});

}
