package com.ge.research.sadl.darpa.aske.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.ge.research.sadl.darpa.aske.services.DialogGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalDialogParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "NonNegativeInteger", "NonPositiveInteger", "NegativeInteger", "PositiveInteger", "AnySimpleType", "Base64Binary", "Relationship", "UnsignedByte", "Symmetrical", "UnsignedInt", "Deductions", "Annotation", "GYearMonth", "Transitive", "Construct", "Described", "Describes", "GMonthDay", "HexBinary", "Instances", "TopLevel", "Equation", "Explain", "External", "Contains", "DateTime", "Disjoint", "Distinct", "Duration", "Matching", "Property", "Another", "Boolean", "Classes", "Contain", "Decimal", "Default", "Element", "Exactly", "Integer", "Inverse", "Located", "Returns", "Seventh", "Subject", "Sublist", "Version", "Print", "Update", "Write", "Always", "AnyURI", "Before", "Delete", "Double", "Eighth", "Exists", "Fourth", "GMonth", "Import", "Insert", "Length", "Return", "Second", "Select", "Single", "String", "Unique", "Values", "Expr", "Graph", "Model", "Read", "Stage", "Test", "After", "Alias", "Class", "Count", "False", "Fifth", "First", "Float", "GYear", "Given", "Graph_1", "Index", "Known", "Least", "Level", "Ninth", "Order", "Other", "Sixth", "Tenth", "There", "Third", "Types", "Using", "Value", "Where", "List", "None", "Rule", "What", "Byte", "Data", "Date", "Desc", "Does", "From", "GDay", "Have", "Last", "Long", "Many", "Most", "Must", "Note", "Only", "Same", "Some", "Then", "Time", "True", "Type", "What_1", "With", "FullStopFullStopFullStop", "Ask", "CM", "How", "The", "And", "Any", "Are", "Asc", "Ask_1", "Can", "For", "Has", "How_1", "Int", "Not", "One", "The_1", "Uri", "ExclamationMarkEqualsSign", "AmpersandAmpersand", "HyphenMinusHyphenMinus", "LessThanSignEqualsSign", "EqualsSignEqualsSign", "EqualsSignGreaterThanSign", "GreaterThanSignEqualsSign", "An", "PI", "An_1", "As", "At", "Be", "By", "If", "In", "Is", "Of", "Or", "To", "VerticalLineVerticalLine", "ExclamationMark", "PercentSign", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "LessThanSign", "EqualsSign", "GreaterThanSign", "QuestionMark", "A", "E", "LeftSquareBracket", "RightSquareBracket", "CircumflexAccent", "A_1", "E_1", "LeftCurlyBracket", "RightCurlyBracket", "RULE_NUMBER", "RULE_WS", "RULE_ID", "RULE_QNAME_TERMINAL", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_ANY_OTHER"
    };
    public static final int Delete=57;
    public static final int Described=19;
    public static final int Ask_1=141;
    public static final int Or=169;
    public static final int EqualsSignGreaterThanSign=156;
    public static final int String=70;
    public static final int Insert=64;
    public static final int Must=121;
    public static final int LessThanSign=183;
    public static final int Print=51;
    public static final int Distinct=31;
    public static final int Decimal=39;
    public static final int Least=92;
    public static final int Stage=77;
    public static final int Then=126;
    public static final int Classes=37;
    public static final int GreaterThanSign=185;
    public static final int RULE_ID=198;
    public static final int GreaterThanSignEqualsSign=157;
    public static final int Describes=20;
    public static final int Float=86;
    public static final int How=135;
    public static final int Expr=73;
    public static final int Are=139;
    public static final int Note=122;
    public static final int Contains=28;
    public static final int Where=104;
    public static final int A=187;
    public static final int E=188;
    public static final int One=148;
    public static final int Transitive=17;
    public static final int An=158;
    public static final int The=136;
    public static final int Asc=140;
    public static final int As=161;
    public static final int At=162;
    public static final int Located=45;
    public static final int Ask=133;
    public static final int Disjoint=30;
    public static final int NegativeInteger=6;
    public static final int Many=119;
    public static final int Solidus=181;
    public static final int RightCurlyBracket=195;
    public static final int FullStop=180;
    public static final int Be=163;
    public static final int CM=134;
    public static final int UnsignedByte=11;
    public static final int Eighth=59;
    public static final int Length=65;
    public static final int Sixth=97;
    public static final int QuestionMark=186;
    public static final int Relationship=10;
    public static final int By=164;
    public static final int Select=68;
    public static final int After=79;
    public static final int Has=144;
    public static final int TopLevel=24;
    public static final int Other=96;
    public static final int HyphenMinusHyphenMinus=153;
    public static final int Types=101;
    public static final int Using=102;
    public static final int Index=90;
    public static final int Seventh=47;
    public static final int Graph_1=89;
    public static final int Desc=112;
    public static final int Last=117;
    public static final int There=99;
    public static final int Version=50;
    public static final int Test=78;
    public static final int List=105;
    public static final int First=85;
    public static final int To=170;
    public static final int Another=35;
    public static final int An_1=160;
    public static final int Same=124;
    public static final int For=143;
    public static final int RightParenthesis=175;
    public static final int Duration=32;
    public static final int Not=147;
    public static final int E_1=193;
    public static final int External=27;
    public static final int Long=118;
    public static final int Does=113;
    public static final int Unique=71;
    public static final int Class=81;
    public static final int Element=41;
    public static final int Time=127;
    public static final int What=108;
    public static final int With=131;
    public static final int RULE_SL_COMMENT=202;
    public static final int NonPositiveInteger=5;
    public static final int AmpersandAmpersand=152;
    public static final int Colon=182;
    public static final int EOF=-1;
    public static final int Asterisk=176;
    public static final int Return=66;
    public static final int NonNegativeInteger=4;
    public static final int LeftCurlyBracket=194;
    public static final int RULE_NUMBER=196;
    public static final int Subject=48;
    public static final int CircumflexAccent=191;
    public static final int Integer=43;
    public static final int Exactly=42;
    public static final int Exists=60;
    public static final int Base64Binary=9;
    public static final int Import=63;
    public static final int Values=72;
    public static final int Count=82;
    public static final int False=83;
    public static final int DateTime=29;
    public static final int The_1=149;
    public static final int LeftParenthesis=174;
    public static final int Inverse=44;
    public static final int Boolean=36;
    public static final int ExclamationMark=172;
    public static final int AnyURI=55;
    public static final int EqualsSignEqualsSign=155;
    public static final int Graph=74;
    public static final int Some=125;
    public static final int UnsignedInt=13;
    public static final int GYear=87;
    public static final int PlusSign=177;
    public static final int Byte=109;
    public static final int RULE_QNAME_TERMINAL=199;
    public static final int RULE_ML_COMMENT=201;
    public static final int Level=93;
    public static final int LeftSquareBracket=189;
    public static final int Always=54;
    public static final int Rule=107;
    public static final int If=165;
    public static final int HexBinary=22;
    public static final int Write=53;
    public static final int In=166;
    public static final int VerticalLineVerticalLine=171;
    public static final int Given=88;
    public static final int Is=167;
    public static final int Uri=150;
    public static final int Comma=178;
    public static final int HyphenMinus=179;
    public static final int Contain=38;
    public static final int LessThanSignEqualsSign=154;
    public static final int Property=34;
    public static final int Sublist=49;
    public static final int PositiveInteger=7;
    public static final int Default=40;
    public static final int Annotation=15;
    public static final int Instances=23;
    public static final int Type=129;
    public static final int Known=91;
    public static final int Model=75;
    public static final int ExclamationMarkEqualsSign=151;
    public static final int None=106;
    public static final int Most=120;
    public static final int GYearMonth=16;
    public static final int True=128;
    public static final int Update=52;
    public static final int FullStopFullStopFullStop=132;
    public static final int Matching=33;
    public static final int Read=76;
    public static final int Returns=46;
    public static final int PercentSign=173;
    public static final int Third=100;
    public static final int Fifth=84;
    public static final int Symmetrical=12;
    public static final int RightSquareBracket=190;
    public static final int Order=95;
    public static final int Have=116;
    public static final int Double=58;
    public static final int Can=142;
    public static final int GMonthDay=21;
    public static final int A_1=192;
    public static final int And=137;
    public static final int Value=103;
    public static final int Before=56;
    public static final int AnySimpleType=8;
    public static final int How_1=145;
    public static final int RULE_STRING=200;
    public static final int What_1=130;
    public static final int Any=138;
    public static final int Int=146;
    public static final int EqualsSign=184;
    public static final int Ninth=94;
    public static final int GMonth=62;
    public static final int RULE_WS=197;
    public static final int Explain=26;
    public static final int Equation=25;
    public static final int Only=123;
    public static final int Data=110;
    public static final int From=114;
    public static final int RULE_ANY_OTHER=203;
    public static final int Date=111;
    public static final int Second=67;
    public static final int GDay=115;
    public static final int Single=69;
    public static final int Alias=80;
    public static final int Of=168;
    public static final int Construct=18;
    public static final int PI=159;
    public static final int Deductions=14;
    public static final int Fourth=61;
    public static final int Tenth=98;

    // delegates
    // delegators


        public InternalDialogParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalDialogParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalDialogParser.tokenNames; }
    public String getGrammarFileName() { return "InternalDialogParser.g"; }



     	private DialogGrammarAccess grammarAccess;

        public InternalDialogParser(TokenStream input, DialogGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "DialogModel";
       	}

       	@Override
       	protected DialogGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleDialogModel"
    // InternalDialogParser.g:58:1: entryRuleDialogModel returns [EObject current=null] : iv_ruleDialogModel= ruleDialogModel EOF ;
    public final EObject entryRuleDialogModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDialogModel = null;


        try {
            // InternalDialogParser.g:58:52: (iv_ruleDialogModel= ruleDialogModel EOF )
            // InternalDialogParser.g:59:2: iv_ruleDialogModel= ruleDialogModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDialogModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDialogModel=ruleDialogModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDialogModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDialogModel"


    // $ANTLR start "ruleDialogModel"
    // InternalDialogParser.g:65:1: ruleDialogModel returns [EObject current=null] : this_SadlModel_0= ruleSadlModel ;
    public final EObject ruleDialogModel() throws RecognitionException {
        EObject current = null;

        EObject this_SadlModel_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:71:2: (this_SadlModel_0= ruleSadlModel )
            // InternalDialogParser.g:72:2: this_SadlModel_0= ruleSadlModel
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getDialogModelAccess().getSadlModelParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_SadlModel_0=ruleSadlModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SadlModel_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDialogModel"


    // $ANTLR start "entryRuleSadlModelElement"
    // InternalDialogParser.g:83:1: entryRuleSadlModelElement returns [EObject current=null] : iv_ruleSadlModelElement= ruleSadlModelElement EOF ;
    public final EObject entryRuleSadlModelElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlModelElement = null;


        try {
            // InternalDialogParser.g:83:57: (iv_ruleSadlModelElement= ruleSadlModelElement EOF )
            // InternalDialogParser.g:84:2: iv_ruleSadlModelElement= ruleSadlModelElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlModelElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlModelElement=ruleSadlModelElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlModelElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlModelElement"


    // $ANTLR start "ruleSadlModelElement"
    // InternalDialogParser.g:90:1: ruleSadlModelElement returns [EObject current=null] : ( (this_ResponseStatement_0= ruleResponseStatement ruleEOS ) | (this_ModifiedAskStatement_2= ruleModifiedAskStatement ruleEOS ) | (this_WhatStatement_4= ruleWhatStatement ruleEOS ) | (this_HowManyValuesStatement_6= ruleHowManyValuesStatement ruleEOS ) ) ;
    public final EObject ruleSadlModelElement() throws RecognitionException {
        EObject current = null;

        EObject this_ResponseStatement_0 = null;

        EObject this_ModifiedAskStatement_2 = null;

        EObject this_WhatStatement_4 = null;

        EObject this_HowManyValuesStatement_6 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:96:2: ( ( (this_ResponseStatement_0= ruleResponseStatement ruleEOS ) | (this_ModifiedAskStatement_2= ruleModifiedAskStatement ruleEOS ) | (this_WhatStatement_4= ruleWhatStatement ruleEOS ) | (this_HowManyValuesStatement_6= ruleHowManyValuesStatement ruleEOS ) ) )
            // InternalDialogParser.g:97:2: ( (this_ResponseStatement_0= ruleResponseStatement ruleEOS ) | (this_ModifiedAskStatement_2= ruleModifiedAskStatement ruleEOS ) | (this_WhatStatement_4= ruleWhatStatement ruleEOS ) | (this_HowManyValuesStatement_6= ruleHowManyValuesStatement ruleEOS ) )
            {
            // InternalDialogParser.g:97:2: ( (this_ResponseStatement_0= ruleResponseStatement ruleEOS ) | (this_ModifiedAskStatement_2= ruleModifiedAskStatement ruleEOS ) | (this_WhatStatement_4= ruleWhatStatement ruleEOS ) | (this_HowManyValuesStatement_6= ruleHowManyValuesStatement ruleEOS ) )
            int alt1=4;
            switch ( input.LA(1) ) {
            case CM:
                {
                alt1=1;
                }
                break;
            case Graph:
            case Graph_1:
            case Ask:
            case Ask_1:
                {
                alt1=2;
                }
                break;
            case What:
            case What_1:
                {
                alt1=3;
                }
                break;
            case How:
            case How_1:
                {
                alt1=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }

            switch (alt1) {
                case 1 :
                    // InternalDialogParser.g:98:3: (this_ResponseStatement_0= ruleResponseStatement ruleEOS )
                    {
                    // InternalDialogParser.g:98:3: (this_ResponseStatement_0= ruleResponseStatement ruleEOS )
                    // InternalDialogParser.g:99:4: this_ResponseStatement_0= ruleResponseStatement ruleEOS
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getResponseStatementParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_3);
                    this_ResponseStatement_0=ruleResponseStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ResponseStatement_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getEOSParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleEOS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:116:3: (this_ModifiedAskStatement_2= ruleModifiedAskStatement ruleEOS )
                    {
                    // InternalDialogParser.g:116:3: (this_ModifiedAskStatement_2= ruleModifiedAskStatement ruleEOS )
                    // InternalDialogParser.g:117:4: this_ModifiedAskStatement_2= ruleModifiedAskStatement ruleEOS
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getModifiedAskStatementParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FOLLOW_3);
                    this_ModifiedAskStatement_2=ruleModifiedAskStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ModifiedAskStatement_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getEOSParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleEOS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:134:3: (this_WhatStatement_4= ruleWhatStatement ruleEOS )
                    {
                    // InternalDialogParser.g:134:3: (this_WhatStatement_4= ruleWhatStatement ruleEOS )
                    // InternalDialogParser.g:135:4: this_WhatStatement_4= ruleWhatStatement ruleEOS
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getWhatStatementParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FOLLOW_3);
                    this_WhatStatement_4=ruleWhatStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_WhatStatement_4;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getEOSParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleEOS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:152:3: (this_HowManyValuesStatement_6= ruleHowManyValuesStatement ruleEOS )
                    {
                    // InternalDialogParser.g:152:3: (this_HowManyValuesStatement_6= ruleHowManyValuesStatement ruleEOS )
                    // InternalDialogParser.g:153:4: this_HowManyValuesStatement_6= ruleHowManyValuesStatement ruleEOS
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getHowManyValuesStatementParserRuleCall_3_0());
                      			
                    }
                    pushFollow(FOLLOW_3);
                    this_HowManyValuesStatement_6=ruleHowManyValuesStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_HowManyValuesStatement_6;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlModelElementAccess().getEOSParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    ruleEOS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlModelElement"


    // $ANTLR start "entryRuleResponseStatement"
    // InternalDialogParser.g:173:1: entryRuleResponseStatement returns [EObject current=null] : iv_ruleResponseStatement= ruleResponseStatement EOF ;
    public final EObject entryRuleResponseStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleResponseStatement = null;


        try {
            // InternalDialogParser.g:173:58: (iv_ruleResponseStatement= ruleResponseStatement EOF )
            // InternalDialogParser.g:174:2: iv_ruleResponseStatement= ruleResponseStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getResponseStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleResponseStatement=ruleResponseStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleResponseStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleResponseStatement"


    // $ANTLR start "ruleResponseStatement"
    // InternalDialogParser.g:180:1: ruleResponseStatement returns [EObject current=null] : (otherlv_0= CM ( ( ( (lv_sstmt_1_1= ruleSadlStatement | lv_sstmt_1_2= ruleEquationStatement | lv_sstmt_1_3= ruleExternalEquationStatement ) ) ) | ( (lv_str_2_0= RULE_STRING ) ) ) ) ;
    public final EObject ruleResponseStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_str_2_0=null;
        EObject lv_sstmt_1_1 = null;

        EObject lv_sstmt_1_2 = null;

        EObject lv_sstmt_1_3 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:186:2: ( (otherlv_0= CM ( ( ( (lv_sstmt_1_1= ruleSadlStatement | lv_sstmt_1_2= ruleEquationStatement | lv_sstmt_1_3= ruleExternalEquationStatement ) ) ) | ( (lv_str_2_0= RULE_STRING ) ) ) ) )
            // InternalDialogParser.g:187:2: (otherlv_0= CM ( ( ( (lv_sstmt_1_1= ruleSadlStatement | lv_sstmt_1_2= ruleEquationStatement | lv_sstmt_1_3= ruleExternalEquationStatement ) ) ) | ( (lv_str_2_0= RULE_STRING ) ) ) )
            {
            // InternalDialogParser.g:187:2: (otherlv_0= CM ( ( ( (lv_sstmt_1_1= ruleSadlStatement | lv_sstmt_1_2= ruleEquationStatement | lv_sstmt_1_3= ruleExternalEquationStatement ) ) ) | ( (lv_str_2_0= RULE_STRING ) ) ) )
            // InternalDialogParser.g:188:3: otherlv_0= CM ( ( ( (lv_sstmt_1_1= ruleSadlStatement | lv_sstmt_1_2= ruleEquationStatement | lv_sstmt_1_3= ruleExternalEquationStatement ) ) ) | ( (lv_str_2_0= RULE_STRING ) ) )
            {
            otherlv_0=(Token)match(input,CM,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getResponseStatementAccess().getCMKeyword_0());
              		
            }
            // InternalDialogParser.g:192:3: ( ( ( (lv_sstmt_1_1= ruleSadlStatement | lv_sstmt_1_2= ruleEquationStatement | lv_sstmt_1_3= ruleExternalEquationStatement ) ) ) | ( (lv_str_2_0= RULE_STRING ) ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==Relationship||LA3_0==Equation||LA3_0==External||LA3_0==Another||LA3_0==Some||LA3_0==The||LA3_0==Any||LA3_0==The_1||LA3_0==An||LA3_0==An_1||LA3_0==A||LA3_0==A_1||LA3_0==LeftCurlyBracket||(LA3_0>=RULE_ID && LA3_0<=RULE_QNAME_TERMINAL)) ) {
                alt3=1;
            }
            else if ( (LA3_0==RULE_STRING) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalDialogParser.g:193:4: ( ( (lv_sstmt_1_1= ruleSadlStatement | lv_sstmt_1_2= ruleEquationStatement | lv_sstmt_1_3= ruleExternalEquationStatement ) ) )
                    {
                    // InternalDialogParser.g:193:4: ( ( (lv_sstmt_1_1= ruleSadlStatement | lv_sstmt_1_2= ruleEquationStatement | lv_sstmt_1_3= ruleExternalEquationStatement ) ) )
                    // InternalDialogParser.g:194:5: ( (lv_sstmt_1_1= ruleSadlStatement | lv_sstmt_1_2= ruleEquationStatement | lv_sstmt_1_3= ruleExternalEquationStatement ) )
                    {
                    // InternalDialogParser.g:194:5: ( (lv_sstmt_1_1= ruleSadlStatement | lv_sstmt_1_2= ruleEquationStatement | lv_sstmt_1_3= ruleExternalEquationStatement ) )
                    // InternalDialogParser.g:195:6: (lv_sstmt_1_1= ruleSadlStatement | lv_sstmt_1_2= ruleEquationStatement | lv_sstmt_1_3= ruleExternalEquationStatement )
                    {
                    // InternalDialogParser.g:195:6: (lv_sstmt_1_1= ruleSadlStatement | lv_sstmt_1_2= ruleEquationStatement | lv_sstmt_1_3= ruleExternalEquationStatement )
                    int alt2=3;
                    switch ( input.LA(1) ) {
                    case Relationship:
                    case Another:
                    case Some:
                    case The:
                    case Any:
                    case The_1:
                    case An:
                    case An_1:
                    case A:
                    case A_1:
                    case LeftCurlyBracket:
                    case RULE_ID:
                    case RULE_QNAME_TERMINAL:
                        {
                        alt2=1;
                        }
                        break;
                    case Equation:
                        {
                        alt2=2;
                        }
                        break;
                    case External:
                        {
                        alt2=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 2, 0, input);

                        throw nvae;
                    }

                    switch (alt2) {
                        case 1 :
                            // InternalDialogParser.g:196:7: lv_sstmt_1_1= ruleSadlStatement
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getResponseStatementAccess().getSstmtSadlStatementParserRuleCall_1_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_sstmt_1_1=ruleSadlStatement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getResponseStatementRule());
                              							}
                              							set(
                              								current,
                              								"sstmt",
                              								lv_sstmt_1_1,
                              								"com.ge.research.sadl.SADL.SadlStatement");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:212:7: lv_sstmt_1_2= ruleEquationStatement
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getResponseStatementAccess().getSstmtEquationStatementParserRuleCall_1_0_0_1());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_sstmt_1_2=ruleEquationStatement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getResponseStatementRule());
                              							}
                              							set(
                              								current,
                              								"sstmt",
                              								lv_sstmt_1_2,
                              								"com.ge.research.sadl.SADL.EquationStatement");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:228:7: lv_sstmt_1_3= ruleExternalEquationStatement
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getResponseStatementAccess().getSstmtExternalEquationStatementParserRuleCall_1_0_0_2());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_sstmt_1_3=ruleExternalEquationStatement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getResponseStatementRule());
                              							}
                              							set(
                              								current,
                              								"sstmt",
                              								lv_sstmt_1_3,
                              								"com.ge.research.sadl.SADL.ExternalEquationStatement");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:247:4: ( (lv_str_2_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:247:4: ( (lv_str_2_0= RULE_STRING ) )
                    // InternalDialogParser.g:248:5: (lv_str_2_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:248:5: (lv_str_2_0= RULE_STRING )
                    // InternalDialogParser.g:249:6: lv_str_2_0= RULE_STRING
                    {
                    lv_str_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_str_2_0, grammarAccess.getResponseStatementAccess().getStrSTRINGTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getResponseStatementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"str",
                      							lv_str_2_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleResponseStatement"


    // $ANTLR start "entryRuleModifiedAskStatement"
    // InternalDialogParser.g:270:1: entryRuleModifiedAskStatement returns [EObject current=null] : iv_ruleModifiedAskStatement= ruleModifiedAskStatement EOF ;
    public final EObject entryRuleModifiedAskStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModifiedAskStatement = null;


        try {
            // InternalDialogParser.g:270:61: (iv_ruleModifiedAskStatement= ruleModifiedAskStatement EOF )
            // InternalDialogParser.g:271:2: iv_ruleModifiedAskStatement= ruleModifiedAskStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModifiedAskStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModifiedAskStatement=ruleModifiedAskStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModifiedAskStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModifiedAskStatement"


    // $ANTLR start "ruleModifiedAskStatement"
    // InternalDialogParser.g:277:1: ruleModifiedAskStatement returns [EObject current=null] : ( () ( ( (lv_start_1_1= Ask | lv_start_1_2= Ask_1 | lv_start_1_3= Graph | lv_start_1_4= Graph_1 ) ) ) ( ( (lv_expr_2_1= ruleConstructExpression | lv_expr_2_2= ruleAskExpression | lv_expr_2_3= ruleExpression ) ) ) ) ;
    public final EObject ruleModifiedAskStatement() throws RecognitionException {
        EObject current = null;

        Token lv_start_1_1=null;
        Token lv_start_1_2=null;
        Token lv_start_1_3=null;
        Token lv_start_1_4=null;
        EObject lv_expr_2_1 = null;

        EObject lv_expr_2_2 = null;

        EObject lv_expr_2_3 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:283:2: ( ( () ( ( (lv_start_1_1= Ask | lv_start_1_2= Ask_1 | lv_start_1_3= Graph | lv_start_1_4= Graph_1 ) ) ) ( ( (lv_expr_2_1= ruleConstructExpression | lv_expr_2_2= ruleAskExpression | lv_expr_2_3= ruleExpression ) ) ) ) )
            // InternalDialogParser.g:284:2: ( () ( ( (lv_start_1_1= Ask | lv_start_1_2= Ask_1 | lv_start_1_3= Graph | lv_start_1_4= Graph_1 ) ) ) ( ( (lv_expr_2_1= ruleConstructExpression | lv_expr_2_2= ruleAskExpression | lv_expr_2_3= ruleExpression ) ) ) )
            {
            // InternalDialogParser.g:284:2: ( () ( ( (lv_start_1_1= Ask | lv_start_1_2= Ask_1 | lv_start_1_3= Graph | lv_start_1_4= Graph_1 ) ) ) ( ( (lv_expr_2_1= ruleConstructExpression | lv_expr_2_2= ruleAskExpression | lv_expr_2_3= ruleExpression ) ) ) )
            // InternalDialogParser.g:285:3: () ( ( (lv_start_1_1= Ask | lv_start_1_2= Ask_1 | lv_start_1_3= Graph | lv_start_1_4= Graph_1 ) ) ) ( ( (lv_expr_2_1= ruleConstructExpression | lv_expr_2_2= ruleAskExpression | lv_expr_2_3= ruleExpression ) ) )
            {
            // InternalDialogParser.g:285:3: ()
            // InternalDialogParser.g:286:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getModifiedAskStatementAccess().getModifiedAskStatementAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:292:3: ( ( (lv_start_1_1= Ask | lv_start_1_2= Ask_1 | lv_start_1_3= Graph | lv_start_1_4= Graph_1 ) ) )
            // InternalDialogParser.g:293:4: ( (lv_start_1_1= Ask | lv_start_1_2= Ask_1 | lv_start_1_3= Graph | lv_start_1_4= Graph_1 ) )
            {
            // InternalDialogParser.g:293:4: ( (lv_start_1_1= Ask | lv_start_1_2= Ask_1 | lv_start_1_3= Graph | lv_start_1_4= Graph_1 ) )
            // InternalDialogParser.g:294:5: (lv_start_1_1= Ask | lv_start_1_2= Ask_1 | lv_start_1_3= Graph | lv_start_1_4= Graph_1 )
            {
            // InternalDialogParser.g:294:5: (lv_start_1_1= Ask | lv_start_1_2= Ask_1 | lv_start_1_3= Graph | lv_start_1_4= Graph_1 )
            int alt4=4;
            switch ( input.LA(1) ) {
            case Ask:
                {
                alt4=1;
                }
                break;
            case Ask_1:
                {
                alt4=2;
                }
                break;
            case Graph:
                {
                alt4=3;
                }
                break;
            case Graph_1:
                {
                alt4=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalDialogParser.g:295:6: lv_start_1_1= Ask
                    {
                    lv_start_1_1=(Token)match(input,Ask,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_start_1_1, grammarAccess.getModifiedAskStatementAccess().getStartAskKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModifiedAskStatementRule());
                      						}
                      						setWithLastConsumed(current, "start", lv_start_1_1, null);
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:306:6: lv_start_1_2= Ask_1
                    {
                    lv_start_1_2=(Token)match(input,Ask_1,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_start_1_2, grammarAccess.getModifiedAskStatementAccess().getStartAskKeyword_1_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModifiedAskStatementRule());
                      						}
                      						setWithLastConsumed(current, "start", lv_start_1_2, null);
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:317:6: lv_start_1_3= Graph
                    {
                    lv_start_1_3=(Token)match(input,Graph,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_start_1_3, grammarAccess.getModifiedAskStatementAccess().getStartGraphKeyword_1_0_2());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModifiedAskStatementRule());
                      						}
                      						setWithLastConsumed(current, "start", lv_start_1_3, null);
                      					
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:328:6: lv_start_1_4= Graph_1
                    {
                    lv_start_1_4=(Token)match(input,Graph_1,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_start_1_4, grammarAccess.getModifiedAskStatementAccess().getStartGraphKeyword_1_0_3());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModifiedAskStatementRule());
                      						}
                      						setWithLastConsumed(current, "start", lv_start_1_4, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalDialogParser.g:341:3: ( ( (lv_expr_2_1= ruleConstructExpression | lv_expr_2_2= ruleAskExpression | lv_expr_2_3= ruleExpression ) ) )
            // InternalDialogParser.g:342:4: ( (lv_expr_2_1= ruleConstructExpression | lv_expr_2_2= ruleAskExpression | lv_expr_2_3= ruleExpression ) )
            {
            // InternalDialogParser.g:342:4: ( (lv_expr_2_1= ruleConstructExpression | lv_expr_2_2= ruleAskExpression | lv_expr_2_3= ruleExpression ) )
            // InternalDialogParser.g:343:5: (lv_expr_2_1= ruleConstructExpression | lv_expr_2_2= ruleAskExpression | lv_expr_2_3= ruleExpression )
            {
            // InternalDialogParser.g:343:5: (lv_expr_2_1= ruleConstructExpression | lv_expr_2_2= ruleAskExpression | lv_expr_2_3= ruleExpression )
            int alt5=3;
            switch ( input.LA(1) ) {
            case Construct:
                {
                alt5=1;
                }
                break;
            case Ask_1:
                {
                alt5=2;
                }
                break;
            case Another:
            case Element:
            case Sublist:
            case Length:
            case Select:
            case Count:
            case False:
            case First:
            case Index:
            case Known:
            case There:
            case Value:
            case None:
            case Last:
            case Only:
            case Some:
            case True:
            case Type:
            case The:
            case Any:
            case Not:
            case The_1:
            case HyphenMinusHyphenMinus:
            case An:
            case PI:
            case An_1:
            case ExclamationMark:
            case LeftParenthesis:
            case HyphenMinus:
            case A:
            case LeftSquareBracket:
            case A_1:
            case E_1:
            case LeftCurlyBracket:
            case RULE_NUMBER:
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
            case RULE_STRING:
                {
                alt5=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalDialogParser.g:344:6: lv_expr_2_1= ruleConstructExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModifiedAskStatementAccess().getExprConstructExpressionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_2_1=ruleConstructExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModifiedAskStatementRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_2_1,
                      							"com.ge.research.sadl.SADL.ConstructExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:360:6: lv_expr_2_2= ruleAskExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModifiedAskStatementAccess().getExprAskExpressionParserRuleCall_2_0_1());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_2_2=ruleAskExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModifiedAskStatementRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_2_2,
                      							"com.ge.research.sadl.SADL.AskExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:376:6: lv_expr_2_3= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModifiedAskStatementAccess().getExprExpressionParserRuleCall_2_0_2());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_2_3=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModifiedAskStatementRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_2_3,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModifiedAskStatement"


    // $ANTLR start "entryRuleWhatStatement"
    // InternalDialogParser.g:398:1: entryRuleWhatStatement returns [EObject current=null] : iv_ruleWhatStatement= ruleWhatStatement EOF ;
    public final EObject entryRuleWhatStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhatStatement = null;


        try {
            // InternalDialogParser.g:398:54: (iv_ruleWhatStatement= ruleWhatStatement EOF )
            // InternalDialogParser.g:399:2: iv_ruleWhatStatement= ruleWhatStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhatStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWhatStatement=ruleWhatStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhatStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhatStatement"


    // $ANTLR start "ruleWhatStatement"
    // InternalDialogParser.g:405:1: ruleWhatStatement returns [EObject current=null] : ( () (otherlv_1= What | otherlv_2= What_1 ) ( ( (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement ) ) ) ) ;
    public final EObject ruleWhatStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_stmt_3_1 = null;

        EObject lv_stmt_3_2 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:411:2: ( ( () (otherlv_1= What | otherlv_2= What_1 ) ( ( (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement ) ) ) ) )
            // InternalDialogParser.g:412:2: ( () (otherlv_1= What | otherlv_2= What_1 ) ( ( (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement ) ) ) )
            {
            // InternalDialogParser.g:412:2: ( () (otherlv_1= What | otherlv_2= What_1 ) ( ( (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement ) ) ) )
            // InternalDialogParser.g:413:3: () (otherlv_1= What | otherlv_2= What_1 ) ( ( (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement ) ) )
            {
            // InternalDialogParser.g:413:3: ()
            // InternalDialogParser.g:414:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getWhatStatementAccess().getWhatStatementAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:420:3: (otherlv_1= What | otherlv_2= What_1 )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==What) ) {
                alt6=1;
            }
            else if ( (LA6_0==What_1) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalDialogParser.g:421:4: otherlv_1= What
                    {
                    otherlv_1=(Token)match(input,What,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getWhatStatementAccess().getWhatKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:426:4: otherlv_2= What_1
                    {
                    otherlv_2=(Token)match(input,What_1,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getWhatStatementAccess().getWhatKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:431:3: ( ( (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement ) ) )
            // InternalDialogParser.g:432:4: ( (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement ) )
            {
            // InternalDialogParser.g:432:4: ( (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement ) )
            // InternalDialogParser.g:433:5: (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement )
            {
            // InternalDialogParser.g:433:5: (lv_stmt_3_1= ruleWhatIsStatement | lv_stmt_3_2= ruleWhatValuesStatement )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==Is) ) {
                alt7=1;
            }
            else if ( (LA7_0==Values||LA7_0==Value||LA7_0==Type) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalDialogParser.g:434:6: lv_stmt_3_1= ruleWhatIsStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWhatStatementAccess().getStmtWhatIsStatementParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_stmt_3_1=ruleWhatIsStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWhatStatementRule());
                      						}
                      						set(
                      							current,
                      							"stmt",
                      							lv_stmt_3_1,
                      							"com.ge.research.sadl.darpa.aske.Dialog.WhatIsStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:450:6: lv_stmt_3_2= ruleWhatValuesStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWhatStatementAccess().getStmtWhatValuesStatementParserRuleCall_2_0_1());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_stmt_3_2=ruleWhatValuesStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWhatStatementRule());
                      						}
                      						set(
                      							current,
                      							"stmt",
                      							lv_stmt_3_2,
                      							"com.ge.research.sadl.darpa.aske.Dialog.WhatValuesStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhatStatement"


    // $ANTLR start "entryRuleWhatIsStatement"
    // InternalDialogParser.g:472:1: entryRuleWhatIsStatement returns [EObject current=null] : iv_ruleWhatIsStatement= ruleWhatIsStatement EOF ;
    public final EObject entryRuleWhatIsStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhatIsStatement = null;


        try {
            // InternalDialogParser.g:472:56: (iv_ruleWhatIsStatement= ruleWhatIsStatement EOF )
            // InternalDialogParser.g:473:2: iv_ruleWhatIsStatement= ruleWhatIsStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhatIsStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWhatIsStatement=ruleWhatIsStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhatIsStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhatIsStatement"


    // $ANTLR start "ruleWhatIsStatement"
    // InternalDialogParser.g:479:1: ruleWhatIsStatement returns [EObject current=null] : ( () otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlResource ) ) ) ;
    public final EObject ruleWhatIsStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_article_2_0 = null;

        EObject lv_target_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:485:2: ( ( () otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlResource ) ) ) )
            // InternalDialogParser.g:486:2: ( () otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlResource ) ) )
            {
            // InternalDialogParser.g:486:2: ( () otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlResource ) ) )
            // InternalDialogParser.g:487:3: () otherlv_1= Is ( (lv_article_2_0= ruleAnArticle ) )? ( (lv_target_3_0= ruleSadlResource ) )
            {
            // InternalDialogParser.g:487:3: ()
            // InternalDialogParser.g:488:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getWhatIsStatementAccess().getWhatIsStatementAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Is,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getWhatIsStatementAccess().getIsKeyword_1());
              		
            }
            // InternalDialogParser.g:498:3: ( (lv_article_2_0= ruleAnArticle ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==Another||LA8_0==Some||LA8_0==The||LA8_0==Any||LA8_0==The_1||LA8_0==An||LA8_0==An_1||LA8_0==A||LA8_0==A_1) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalDialogParser.g:499:4: (lv_article_2_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:499:4: (lv_article_2_0= ruleAnArticle )
                    // InternalDialogParser.g:500:5: lv_article_2_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getWhatIsStatementAccess().getArticleAnArticleParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_8);
                    lv_article_2_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getWhatIsStatementRule());
                      					}
                      					set(
                      						current,
                      						"article",
                      						lv_article_2_0,
                      						"com.ge.research.sadl.SADL.AnArticle");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalDialogParser.g:517:3: ( (lv_target_3_0= ruleSadlResource ) )
            // InternalDialogParser.g:518:4: (lv_target_3_0= ruleSadlResource )
            {
            // InternalDialogParser.g:518:4: (lv_target_3_0= ruleSadlResource )
            // InternalDialogParser.g:519:5: lv_target_3_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWhatIsStatementAccess().getTargetSadlResourceParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_target_3_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWhatIsStatementRule());
              					}
              					set(
              						current,
              						"target",
              						lv_target_3_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhatIsStatement"


    // $ANTLR start "entryRuleWhatValuesStatement"
    // InternalDialogParser.g:540:1: entryRuleWhatValuesStatement returns [EObject current=null] : iv_ruleWhatValuesStatement= ruleWhatValuesStatement EOF ;
    public final EObject entryRuleWhatValuesStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhatValuesStatement = null;


        try {
            // InternalDialogParser.g:540:60: (iv_ruleWhatValuesStatement= ruleWhatValuesStatement EOF )
            // InternalDialogParser.g:541:2: iv_ruleWhatValuesStatement= ruleWhatValuesStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhatValuesStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWhatValuesStatement=ruleWhatValuesStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhatValuesStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhatValuesStatement"


    // $ANTLR start "ruleWhatValuesStatement"
    // InternalDialogParser.g:547:1: ruleWhatValuesStatement returns [EObject current=null] : ( () ( ( (lv_typof_1_0= Type ) ) otherlv_2= Of )? (otherlv_3= Value | otherlv_4= Values ) ( ( (lv_typ_5_1= Can | lv_typ_5_2= Must ) ) ) ( (lv_prop_6_0= ruleSadlResource ) ) otherlv_7= Of ( (lv_article_8_0= ruleAnArticle ) )? ( (lv_cls_9_0= ruleSadlPrimaryTypeReference ) ) otherlv_10= Have ) ;
    public final EObject ruleWhatValuesStatement() throws RecognitionException {
        EObject current = null;

        Token lv_typof_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_typ_5_1=null;
        Token lv_typ_5_2=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        EObject lv_prop_6_0 = null;

        AntlrDatatypeRuleToken lv_article_8_0 = null;

        EObject lv_cls_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:553:2: ( ( () ( ( (lv_typof_1_0= Type ) ) otherlv_2= Of )? (otherlv_3= Value | otherlv_4= Values ) ( ( (lv_typ_5_1= Can | lv_typ_5_2= Must ) ) ) ( (lv_prop_6_0= ruleSadlResource ) ) otherlv_7= Of ( (lv_article_8_0= ruleAnArticle ) )? ( (lv_cls_9_0= ruleSadlPrimaryTypeReference ) ) otherlv_10= Have ) )
            // InternalDialogParser.g:554:2: ( () ( ( (lv_typof_1_0= Type ) ) otherlv_2= Of )? (otherlv_3= Value | otherlv_4= Values ) ( ( (lv_typ_5_1= Can | lv_typ_5_2= Must ) ) ) ( (lv_prop_6_0= ruleSadlResource ) ) otherlv_7= Of ( (lv_article_8_0= ruleAnArticle ) )? ( (lv_cls_9_0= ruleSadlPrimaryTypeReference ) ) otherlv_10= Have )
            {
            // InternalDialogParser.g:554:2: ( () ( ( (lv_typof_1_0= Type ) ) otherlv_2= Of )? (otherlv_3= Value | otherlv_4= Values ) ( ( (lv_typ_5_1= Can | lv_typ_5_2= Must ) ) ) ( (lv_prop_6_0= ruleSadlResource ) ) otherlv_7= Of ( (lv_article_8_0= ruleAnArticle ) )? ( (lv_cls_9_0= ruleSadlPrimaryTypeReference ) ) otherlv_10= Have )
            // InternalDialogParser.g:555:3: () ( ( (lv_typof_1_0= Type ) ) otherlv_2= Of )? (otherlv_3= Value | otherlv_4= Values ) ( ( (lv_typ_5_1= Can | lv_typ_5_2= Must ) ) ) ( (lv_prop_6_0= ruleSadlResource ) ) otherlv_7= Of ( (lv_article_8_0= ruleAnArticle ) )? ( (lv_cls_9_0= ruleSadlPrimaryTypeReference ) ) otherlv_10= Have
            {
            // InternalDialogParser.g:555:3: ()
            // InternalDialogParser.g:556:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getWhatValuesStatementAccess().getWhatValuesStatementAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:562:3: ( ( (lv_typof_1_0= Type ) ) otherlv_2= Of )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==Type) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalDialogParser.g:563:4: ( (lv_typof_1_0= Type ) ) otherlv_2= Of
                    {
                    // InternalDialogParser.g:563:4: ( (lv_typof_1_0= Type ) )
                    // InternalDialogParser.g:564:5: (lv_typof_1_0= Type )
                    {
                    // InternalDialogParser.g:564:5: (lv_typof_1_0= Type )
                    // InternalDialogParser.g:565:6: lv_typof_1_0= Type
                    {
                    lv_typof_1_0=(Token)match(input,Type,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_typof_1_0, grammarAccess.getWhatValuesStatementAccess().getTypofTypeKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getWhatValuesStatementRule());
                      						}
                      						setWithLastConsumed(current, "typof", lv_typof_1_0, "type");
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,Of,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getWhatValuesStatementAccess().getOfKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:582:3: (otherlv_3= Value | otherlv_4= Values )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==Value) ) {
                alt10=1;
            }
            else if ( (LA10_0==Values) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalDialogParser.g:583:4: otherlv_3= Value
                    {
                    otherlv_3=(Token)match(input,Value,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getWhatValuesStatementAccess().getValueKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:588:4: otherlv_4= Values
                    {
                    otherlv_4=(Token)match(input,Values,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getWhatValuesStatementAccess().getValuesKeyword_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:593:3: ( ( (lv_typ_5_1= Can | lv_typ_5_2= Must ) ) )
            // InternalDialogParser.g:594:4: ( (lv_typ_5_1= Can | lv_typ_5_2= Must ) )
            {
            // InternalDialogParser.g:594:4: ( (lv_typ_5_1= Can | lv_typ_5_2= Must ) )
            // InternalDialogParser.g:595:5: (lv_typ_5_1= Can | lv_typ_5_2= Must )
            {
            // InternalDialogParser.g:595:5: (lv_typ_5_1= Can | lv_typ_5_2= Must )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==Can) ) {
                alt11=1;
            }
            else if ( (LA11_0==Must) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalDialogParser.g:596:6: lv_typ_5_1= Can
                    {
                    lv_typ_5_1=(Token)match(input,Can,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_typ_5_1, grammarAccess.getWhatValuesStatementAccess().getTypCanKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getWhatValuesStatementRule());
                      						}
                      						setWithLastConsumed(current, "typ", lv_typ_5_1, null);
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:607:6: lv_typ_5_2= Must
                    {
                    lv_typ_5_2=(Token)match(input,Must,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_typ_5_2, grammarAccess.getWhatValuesStatementAccess().getTypMustKeyword_3_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getWhatValuesStatementRule());
                      						}
                      						setWithLastConsumed(current, "typ", lv_typ_5_2, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalDialogParser.g:620:3: ( (lv_prop_6_0= ruleSadlResource ) )
            // InternalDialogParser.g:621:4: (lv_prop_6_0= ruleSadlResource )
            {
            // InternalDialogParser.g:621:4: (lv_prop_6_0= ruleSadlResource )
            // InternalDialogParser.g:622:5: lv_prop_6_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWhatValuesStatementAccess().getPropSadlResourceParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_9);
            lv_prop_6_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWhatValuesStatementRule());
              					}
              					set(
              						current,
              						"prop",
              						lv_prop_6_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,Of,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getWhatValuesStatementAccess().getOfKeyword_5());
              		
            }
            // InternalDialogParser.g:643:3: ( (lv_article_8_0= ruleAnArticle ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==Another||LA12_0==Some||LA12_0==The||LA12_0==Any||LA12_0==The_1||LA12_0==An||LA12_0==An_1||LA12_0==A||LA12_0==A_1) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalDialogParser.g:644:4: (lv_article_8_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:644:4: (lv_article_8_0= ruleAnArticle )
                    // InternalDialogParser.g:645:5: lv_article_8_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getWhatValuesStatementAccess().getArticleAnArticleParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_12);
                    lv_article_8_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getWhatValuesStatementRule());
                      					}
                      					set(
                      						current,
                      						"article",
                      						lv_article_8_0,
                      						"com.ge.research.sadl.SADL.AnArticle");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalDialogParser.g:662:3: ( (lv_cls_9_0= ruleSadlPrimaryTypeReference ) )
            // InternalDialogParser.g:663:4: (lv_cls_9_0= ruleSadlPrimaryTypeReference )
            {
            // InternalDialogParser.g:663:4: (lv_cls_9_0= ruleSadlPrimaryTypeReference )
            // InternalDialogParser.g:664:5: lv_cls_9_0= ruleSadlPrimaryTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getWhatValuesStatementAccess().getClsSadlPrimaryTypeReferenceParserRuleCall_7_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_cls_9_0=ruleSadlPrimaryTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getWhatValuesStatementRule());
              					}
              					set(
              						current,
              						"cls",
              						lv_cls_9_0,
              						"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_10=(Token)match(input,Have,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getWhatValuesStatementAccess().getHaveKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhatValuesStatement"


    // $ANTLR start "entryRuleHowManyValuesStatement"
    // InternalDialogParser.g:689:1: entryRuleHowManyValuesStatement returns [EObject current=null] : iv_ruleHowManyValuesStatement= ruleHowManyValuesStatement EOF ;
    public final EObject entryRuleHowManyValuesStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHowManyValuesStatement = null;


        try {
            // InternalDialogParser.g:689:63: (iv_ruleHowManyValuesStatement= ruleHowManyValuesStatement EOF )
            // InternalDialogParser.g:690:2: iv_ruleHowManyValuesStatement= ruleHowManyValuesStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHowManyValuesStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHowManyValuesStatement=ruleHowManyValuesStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHowManyValuesStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHowManyValuesStatement"


    // $ANTLR start "ruleHowManyValuesStatement"
    // InternalDialogParser.g:696:1: ruleHowManyValuesStatement returns [EObject current=null] : ( () (otherlv_1= How | otherlv_2= How_1 ) otherlv_3= Many otherlv_4= Values otherlv_5= Of ( (lv_prop_6_0= ruleSadlResource ) ) (otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) ) )? otherlv_10= Can ( (lv_article_11_0= ruleAnArticle ) )? ( (lv_cls_12_0= ruleSadlPrimaryTypeReference ) ) otherlv_13= Have ) ;
    public final EObject ruleHowManyValuesStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_13=null;
        EObject lv_prop_6_0 = null;

        EObject lv_typ_9_0 = null;

        AntlrDatatypeRuleToken lv_article_11_0 = null;

        EObject lv_cls_12_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:702:2: ( ( () (otherlv_1= How | otherlv_2= How_1 ) otherlv_3= Many otherlv_4= Values otherlv_5= Of ( (lv_prop_6_0= ruleSadlResource ) ) (otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) ) )? otherlv_10= Can ( (lv_article_11_0= ruleAnArticle ) )? ( (lv_cls_12_0= ruleSadlPrimaryTypeReference ) ) otherlv_13= Have ) )
            // InternalDialogParser.g:703:2: ( () (otherlv_1= How | otherlv_2= How_1 ) otherlv_3= Many otherlv_4= Values otherlv_5= Of ( (lv_prop_6_0= ruleSadlResource ) ) (otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) ) )? otherlv_10= Can ( (lv_article_11_0= ruleAnArticle ) )? ( (lv_cls_12_0= ruleSadlPrimaryTypeReference ) ) otherlv_13= Have )
            {
            // InternalDialogParser.g:703:2: ( () (otherlv_1= How | otherlv_2= How_1 ) otherlv_3= Many otherlv_4= Values otherlv_5= Of ( (lv_prop_6_0= ruleSadlResource ) ) (otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) ) )? otherlv_10= Can ( (lv_article_11_0= ruleAnArticle ) )? ( (lv_cls_12_0= ruleSadlPrimaryTypeReference ) ) otherlv_13= Have )
            // InternalDialogParser.g:704:3: () (otherlv_1= How | otherlv_2= How_1 ) otherlv_3= Many otherlv_4= Values otherlv_5= Of ( (lv_prop_6_0= ruleSadlResource ) ) (otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) ) )? otherlv_10= Can ( (lv_article_11_0= ruleAnArticle ) )? ( (lv_cls_12_0= ruleSadlPrimaryTypeReference ) ) otherlv_13= Have
            {
            // InternalDialogParser.g:704:3: ()
            // InternalDialogParser.g:705:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getHowManyValuesStatementAccess().getHowManyValuesStatementAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:711:3: (otherlv_1= How | otherlv_2= How_1 )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==How) ) {
                alt13=1;
            }
            else if ( (LA13_0==How_1) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalDialogParser.g:712:4: otherlv_1= How
                    {
                    otherlv_1=(Token)match(input,How,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getHowManyValuesStatementAccess().getHowKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:717:4: otherlv_2= How_1
                    {
                    otherlv_2=(Token)match(input,How_1,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getHowManyValuesStatementAccess().getHowKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,Many,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getHowManyValuesStatementAccess().getManyKeyword_2());
              		
            }
            otherlv_4=(Token)match(input,Values,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getHowManyValuesStatementAccess().getValuesKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,Of,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getHowManyValuesStatementAccess().getOfKeyword_4());
              		
            }
            // InternalDialogParser.g:734:3: ( (lv_prop_6_0= ruleSadlResource ) )
            // InternalDialogParser.g:735:4: (lv_prop_6_0= ruleSadlResource )
            {
            // InternalDialogParser.g:735:4: (lv_prop_6_0= ruleSadlResource )
            // InternalDialogParser.g:736:5: lv_prop_6_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getHowManyValuesStatementAccess().getPropSadlResourceParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_16);
            lv_prop_6_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getHowManyValuesStatementRule());
              					}
              					set(
              						current,
              						"prop",
              						lv_prop_6_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:753:3: (otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==Of) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalDialogParser.g:754:4: otherlv_7= Of otherlv_8= Type ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) )
                    {
                    otherlv_7=(Token)match(input,Of,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getHowManyValuesStatementAccess().getOfKeyword_6_0());
                      			
                    }
                    otherlv_8=(Token)match(input,Type,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getHowManyValuesStatementAccess().getTypeKeyword_6_1());
                      			
                    }
                    // InternalDialogParser.g:762:4: ( (lv_typ_9_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:763:5: (lv_typ_9_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:763:5: (lv_typ_9_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:764:6: lv_typ_9_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHowManyValuesStatementAccess().getTypSadlPrimaryTypeReferenceParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_typ_9_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHowManyValuesStatementRule());
                      						}
                      						set(
                      							current,
                      							"typ",
                      							lv_typ_9_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_10=(Token)match(input,Can,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getHowManyValuesStatementAccess().getCanKeyword_7());
              		
            }
            // InternalDialogParser.g:786:3: ( (lv_article_11_0= ruleAnArticle ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==Another||LA15_0==Some||LA15_0==The||LA15_0==Any||LA15_0==The_1||LA15_0==An||LA15_0==An_1||LA15_0==A||LA15_0==A_1) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalDialogParser.g:787:4: (lv_article_11_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:787:4: (lv_article_11_0= ruleAnArticle )
                    // InternalDialogParser.g:788:5: lv_article_11_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getHowManyValuesStatementAccess().getArticleAnArticleParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_12);
                    lv_article_11_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getHowManyValuesStatementRule());
                      					}
                      					set(
                      						current,
                      						"article",
                      						lv_article_11_0,
                      						"com.ge.research.sadl.SADL.AnArticle");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalDialogParser.g:805:3: ( (lv_cls_12_0= ruleSadlPrimaryTypeReference ) )
            // InternalDialogParser.g:806:4: (lv_cls_12_0= ruleSadlPrimaryTypeReference )
            {
            // InternalDialogParser.g:806:4: (lv_cls_12_0= ruleSadlPrimaryTypeReference )
            // InternalDialogParser.g:807:5: lv_cls_12_0= ruleSadlPrimaryTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getHowManyValuesStatementAccess().getClsSadlPrimaryTypeReferenceParserRuleCall_9_0());
              				
            }
            pushFollow(FOLLOW_13);
            lv_cls_12_0=ruleSadlPrimaryTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getHowManyValuesStatementRule());
              					}
              					set(
              						current,
              						"cls",
              						lv_cls_12_0,
              						"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_13=(Token)match(input,Have,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getHowManyValuesStatementAccess().getHaveKeyword_10());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHowManyValuesStatement"


    // $ANTLR start "entryRuleEOS"
    // InternalDialogParser.g:832:1: entryRuleEOS returns [String current=null] : iv_ruleEOS= ruleEOS EOF ;
    public final String entryRuleEOS() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEOS = null;


        try {
            // InternalDialogParser.g:832:43: (iv_ruleEOS= ruleEOS EOF )
            // InternalDialogParser.g:833:2: iv_ruleEOS= ruleEOS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEOSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEOS=ruleEOS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEOS.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEOS"


    // $ANTLR start "ruleEOS"
    // InternalDialogParser.g:839:1: ruleEOS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_EOS_0= superEOS | kw= QuestionMark ) ;
    public final AntlrDatatypeRuleToken ruleEOS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_EOS_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:845:2: ( (this_EOS_0= superEOS | kw= QuestionMark ) )
            // InternalDialogParser.g:846:2: (this_EOS_0= superEOS | kw= QuestionMark )
            {
            // InternalDialogParser.g:846:2: (this_EOS_0= superEOS | kw= QuestionMark )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==FullStop) ) {
                alt16=1;
            }
            else if ( (LA16_0==QuestionMark) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalDialogParser.g:847:3: this_EOS_0= superEOS
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEOSAccess().getEOSParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EOS_0=superEOS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_EOS_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:858:3: kw= QuestionMark
                    {
                    kw=(Token)match(input,QuestionMark,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEOSAccess().getQuestionMarkKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEOS"


    // $ANTLR start "entryRuleSadlModel"
    // InternalDialogParser.g:867:1: entryRuleSadlModel returns [EObject current=null] : iv_ruleSadlModel= ruleSadlModel EOF ;
    public final EObject entryRuleSadlModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlModel = null;


        try {
            // InternalDialogParser.g:867:50: (iv_ruleSadlModel= ruleSadlModel EOF )
            // InternalDialogParser.g:868:2: iv_ruleSadlModel= ruleSadlModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlModel=ruleSadlModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlModel"


    // $ANTLR start "ruleSadlModel"
    // InternalDialogParser.g:874:1: ruleSadlModel returns [EObject current=null] : (otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )* ) ;
    public final EObject ruleSadlModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_baseUri_1_0=null;
        Token otherlv_2=null;
        Token lv_alias_3_0=null;
        Token otherlv_4=null;
        Token lv_version_5_0=null;
        EObject lv_annotations_6_0 = null;

        EObject lv_imports_8_0 = null;

        EObject lv_elements_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:880:2: ( (otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )* ) )
            // InternalDialogParser.g:881:2: (otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )* )
            {
            // InternalDialogParser.g:881:2: (otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )* )
            // InternalDialogParser.g:882:3: otherlv_0= Uri ( (lv_baseUri_1_0= RULE_STRING ) ) (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )? (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )? ( (lv_annotations_6_0= ruleSadlAnnotation ) )* ruleEOS ( (lv_imports_8_0= ruleSadlImport ) )* ( (lv_elements_9_0= ruleSadlModelElement ) )*
            {
            otherlv_0=(Token)match(input,Uri,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSadlModelAccess().getUriKeyword_0());
              		
            }
            // InternalDialogParser.g:886:3: ( (lv_baseUri_1_0= RULE_STRING ) )
            // InternalDialogParser.g:887:4: (lv_baseUri_1_0= RULE_STRING )
            {
            // InternalDialogParser.g:887:4: (lv_baseUri_1_0= RULE_STRING )
            // InternalDialogParser.g:888:5: lv_baseUri_1_0= RULE_STRING
            {
            lv_baseUri_1_0=(Token)match(input,RULE_STRING,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_baseUri_1_0, grammarAccess.getSadlModelAccess().getBaseUriSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlModelRule());
              					}
              					setWithLastConsumed(
              						current,
              						"baseUri",
              						lv_baseUri_1_0,
              						"com.ge.research.sadl.SADL.STRING");
              				
            }

            }


            }

            // InternalDialogParser.g:904:3: (otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) ) )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==Alias) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalDialogParser.g:905:4: otherlv_2= Alias ( (lv_alias_3_0= RULE_ID ) )
                    {
                    otherlv_2=(Token)match(input,Alias,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSadlModelAccess().getAliasKeyword_2_0());
                      			
                    }
                    // InternalDialogParser.g:909:4: ( (lv_alias_3_0= RULE_ID ) )
                    // InternalDialogParser.g:910:5: (lv_alias_3_0= RULE_ID )
                    {
                    // InternalDialogParser.g:910:5: (lv_alias_3_0= RULE_ID )
                    // InternalDialogParser.g:911:6: lv_alias_3_0= RULE_ID
                    {
                    lv_alias_3_0=(Token)match(input,RULE_ID,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_3_0, grammarAccess.getSadlModelAccess().getAliasIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlModelRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_3_0,
                      							"com.ge.research.sadl.SADL.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:928:3: (otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==Version) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalDialogParser.g:929:4: otherlv_4= Version ( (lv_version_5_0= RULE_STRING ) )
                    {
                    otherlv_4=(Token)match(input,Version,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSadlModelAccess().getVersionKeyword_3_0());
                      			
                    }
                    // InternalDialogParser.g:933:4: ( (lv_version_5_0= RULE_STRING ) )
                    // InternalDialogParser.g:934:5: (lv_version_5_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:934:5: (lv_version_5_0= RULE_STRING )
                    // InternalDialogParser.g:935:6: lv_version_5_0= RULE_STRING
                    {
                    lv_version_5_0=(Token)match(input,RULE_STRING,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_version_5_0, grammarAccess.getSadlModelAccess().getVersionSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlModelRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"version",
                      							lv_version_5_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:952:3: ( (lv_annotations_6_0= ruleSadlAnnotation ) )*
            loop19:
            do {
                int alt19=2;
                int LA19_0 = input.LA(1);

                if ( (LA19_0==LeftParenthesis||LA19_0==Comma) ) {
                    alt19=1;
                }


                switch (alt19) {
            	case 1 :
            	    // InternalDialogParser.g:953:4: (lv_annotations_6_0= ruleSadlAnnotation )
            	    {
            	    // InternalDialogParser.g:953:4: (lv_annotations_6_0= ruleSadlAnnotation )
            	    // InternalDialogParser.g:954:5: lv_annotations_6_0= ruleSadlAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlModelAccess().getAnnotationsSadlAnnotationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_annotations_6_0=ruleSadlAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_6_0,
            	      						"com.ge.research.sadl.SADL.SadlAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop19;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSadlModelAccess().getEOSParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_24);
            ruleEOS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:978:3: ( (lv_imports_8_0= ruleSadlImport ) )*
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( (LA20_0==Import) ) {
                    alt20=1;
                }


                switch (alt20) {
            	case 1 :
            	    // InternalDialogParser.g:979:4: (lv_imports_8_0= ruleSadlImport )
            	    {
            	    // InternalDialogParser.g:979:4: (lv_imports_8_0= ruleSadlImport )
            	    // InternalDialogParser.g:980:5: lv_imports_8_0= ruleSadlImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlModelAccess().getImportsSadlImportParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_imports_8_0=ruleSadlImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"imports",
            	      						lv_imports_8_0,
            	      						"com.ge.research.sadl.SADL.SadlImport");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);

            // InternalDialogParser.g:997:3: ( (lv_elements_9_0= ruleSadlModelElement ) )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==Graph||LA21_0==Graph_1||LA21_0==What||LA21_0==What_1||(LA21_0>=Ask && LA21_0<=How)||LA21_0==Ask_1||LA21_0==How_1) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // InternalDialogParser.g:998:4: (lv_elements_9_0= ruleSadlModelElement )
            	    {
            	    // InternalDialogParser.g:998:4: (lv_elements_9_0= ruleSadlModelElement )
            	    // InternalDialogParser.g:999:5: lv_elements_9_0= ruleSadlModelElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlModelAccess().getElementsSadlModelElementParserRuleCall_7_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_elements_9_0=ruleSadlModelElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"elements",
            	      						lv_elements_9_0,
            	      						"com.ge.research.sadl.darpa.aske.Dialog.SadlModelElement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlModel"


    // $ANTLR start "entryRuleSadlAnnotation"
    // InternalDialogParser.g:1020:1: entryRuleSadlAnnotation returns [EObject current=null] : iv_ruleSadlAnnotation= ruleSadlAnnotation EOF ;
    public final EObject entryRuleSadlAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlAnnotation = null;


        try {
            // InternalDialogParser.g:1020:55: (iv_ruleSadlAnnotation= ruleSadlAnnotation EOF )
            // InternalDialogParser.g:1021:2: iv_ruleSadlAnnotation= ruleSadlAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlAnnotation=ruleSadlAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlAnnotation"


    // $ANTLR start "ruleSadlAnnotation"
    // InternalDialogParser.g:1027:1: ruleSadlAnnotation returns [EObject current=null] : ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis ) ;
    public final EObject ruleSadlAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_type_2_1=null;
        Token lv_type_2_2=null;
        Token lv_contents_3_0=null;
        Token otherlv_4=null;
        Token lv_contents_5_0=null;
        Token otherlv_6=null;


        	enterRule();

        try {
            // InternalDialogParser.g:1033:2: ( ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis ) )
            // InternalDialogParser.g:1034:2: ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis )
            {
            // InternalDialogParser.g:1034:2: ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis )
            // InternalDialogParser.g:1035:3: (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) ) ( (lv_contents_3_0= RULE_STRING ) ) (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )* otherlv_6= RightParenthesis
            {
            // InternalDialogParser.g:1035:3: (otherlv_0= Comma )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==Comma) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // InternalDialogParser.g:1036:4: otherlv_0= Comma
                    {
                    otherlv_0=(Token)match(input,Comma,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSadlAnnotationAccess().getCommaKeyword_0());
                      			
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSadlAnnotationAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalDialogParser.g:1045:3: ( ( (lv_type_2_1= Alias | lv_type_2_2= Note ) ) )
            // InternalDialogParser.g:1046:4: ( (lv_type_2_1= Alias | lv_type_2_2= Note ) )
            {
            // InternalDialogParser.g:1046:4: ( (lv_type_2_1= Alias | lv_type_2_2= Note ) )
            // InternalDialogParser.g:1047:5: (lv_type_2_1= Alias | lv_type_2_2= Note )
            {
            // InternalDialogParser.g:1047:5: (lv_type_2_1= Alias | lv_type_2_2= Note )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==Alias) ) {
                alt23=1;
            }
            else if ( (LA23_0==Note) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalDialogParser.g:1048:6: lv_type_2_1= Alias
                    {
                    lv_type_2_1=(Token)match(input,Alias,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_2_1, grammarAccess.getSadlAnnotationAccess().getTypeAliasKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlAnnotationRule());
                      						}
                      						setWithLastConsumed(current, "type", lv_type_2_1, null);
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:1059:6: lv_type_2_2= Note
                    {
                    lv_type_2_2=(Token)match(input,Note,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_2_2, grammarAccess.getSadlAnnotationAccess().getTypeNoteKeyword_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlAnnotationRule());
                      						}
                      						setWithLastConsumed(current, "type", lv_type_2_2, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalDialogParser.g:1072:3: ( (lv_contents_3_0= RULE_STRING ) )
            // InternalDialogParser.g:1073:4: (lv_contents_3_0= RULE_STRING )
            {
            // InternalDialogParser.g:1073:4: (lv_contents_3_0= RULE_STRING )
            // InternalDialogParser.g:1074:5: lv_contents_3_0= RULE_STRING
            {
            lv_contents_3_0=(Token)match(input,RULE_STRING,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_contents_3_0, grammarAccess.getSadlAnnotationAccess().getContentsSTRINGTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"contents",
              						lv_contents_3_0,
              						"com.ge.research.sadl.SADL.STRING");
              				
            }

            }


            }

            // InternalDialogParser.g:1090:3: (otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) ) )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==Comma) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // InternalDialogParser.g:1091:4: otherlv_4= Comma ( (lv_contents_5_0= RULE_STRING ) )
            	    {
            	    otherlv_4=(Token)match(input,Comma,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getSadlAnnotationAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalDialogParser.g:1095:4: ( (lv_contents_5_0= RULE_STRING ) )
            	    // InternalDialogParser.g:1096:5: (lv_contents_5_0= RULE_STRING )
            	    {
            	    // InternalDialogParser.g:1096:5: (lv_contents_5_0= RULE_STRING )
            	    // InternalDialogParser.g:1097:6: lv_contents_5_0= RULE_STRING
            	    {
            	    lv_contents_5_0=(Token)match(input,RULE_STRING,FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_contents_5_0, grammarAccess.getSadlAnnotationAccess().getContentsSTRINGTerminalRuleCall_4_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getSadlAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"contents",
            	      							lv_contents_5_0,
            	      							"com.ge.research.sadl.SADL.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getSadlAnnotationAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlAnnotation"


    // $ANTLR start "entryRuleSadlImport"
    // InternalDialogParser.g:1122:1: entryRuleSadlImport returns [EObject current=null] : iv_ruleSadlImport= ruleSadlImport EOF ;
    public final EObject entryRuleSadlImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlImport = null;


        try {
            // InternalDialogParser.g:1122:51: (iv_ruleSadlImport= ruleSadlImport EOF )
            // InternalDialogParser.g:1123:2: iv_ruleSadlImport= ruleSadlImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlImport=ruleSadlImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlImport"


    // $ANTLR start "ruleSadlImport"
    // InternalDialogParser.g:1129:1: ruleSadlImport returns [EObject current=null] : (otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS ) ;
    public final EObject ruleSadlImport() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_alias_3_0=null;


        	enterRule();

        try {
            // InternalDialogParser.g:1135:2: ( (otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS ) )
            // InternalDialogParser.g:1136:2: (otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS )
            {
            // InternalDialogParser.g:1136:2: (otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS )
            // InternalDialogParser.g:1137:3: otherlv_0= Import ( (otherlv_1= RULE_STRING ) ) (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )? ruleEOS
            {
            otherlv_0=(Token)match(input,Import,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSadlImportAccess().getImportKeyword_0());
              		
            }
            // InternalDialogParser.g:1141:3: ( (otherlv_1= RULE_STRING ) )
            // InternalDialogParser.g:1142:4: (otherlv_1= RULE_STRING )
            {
            // InternalDialogParser.g:1142:4: (otherlv_1= RULE_STRING )
            // InternalDialogParser.g:1143:5: otherlv_1= RULE_STRING
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlImportRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_STRING,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getSadlImportAccess().getImportedResourceSadlModelCrossReference_1_0());
              				
            }

            }


            }

            // InternalDialogParser.g:1154:3: (otherlv_2= As ( (lv_alias_3_0= RULE_ID ) ) )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==As) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalDialogParser.g:1155:4: otherlv_2= As ( (lv_alias_3_0= RULE_ID ) )
                    {
                    otherlv_2=(Token)match(input,As,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSadlImportAccess().getAsKeyword_2_0());
                      			
                    }
                    // InternalDialogParser.g:1159:4: ( (lv_alias_3_0= RULE_ID ) )
                    // InternalDialogParser.g:1160:5: (lv_alias_3_0= RULE_ID )
                    {
                    // InternalDialogParser.g:1160:5: (lv_alias_3_0= RULE_ID )
                    // InternalDialogParser.g:1161:6: lv_alias_3_0= RULE_ID
                    {
                    lv_alias_3_0=(Token)match(input,RULE_ID,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_alias_3_0, grammarAccess.getSadlImportAccess().getAliasIDTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlImportRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"alias",
                      							lv_alias_3_0,
                      							"com.ge.research.sadl.SADL.ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSadlImportAccess().getEOSParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_2);
            ruleEOS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlImport"


    // $ANTLR start "entryRuleEquationStatement"
    // InternalDialogParser.g:1189:1: entryRuleEquationStatement returns [EObject current=null] : iv_ruleEquationStatement= ruleEquationStatement EOF ;
    public final EObject entryRuleEquationStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEquationStatement = null;


        try {
            // InternalDialogParser.g:1189:58: (iv_ruleEquationStatement= ruleEquationStatement EOF )
            // InternalDialogParser.g:1190:2: iv_ruleEquationStatement= ruleEquationStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEquationStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEquationStatement=ruleEquationStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEquationStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEquationStatement"


    // $ANTLR start "ruleEquationStatement"
    // InternalDialogParser.g:1196:1: ruleEquationStatement returns [EObject current=null] : (otherlv_0= Equation this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_body_2_0= ruleExpression ) )? (otherlv_3= Return ( (lv_retval_4_0= ruleExpression ) ) )? (otherlv_5= Where ( (lv_where_6_0= ruleExpression ) ) )? ) ;
    public final EObject ruleEquationStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_EquationSignature_1 = null;

        EObject lv_body_2_0 = null;

        EObject lv_retval_4_0 = null;

        EObject lv_where_6_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1202:2: ( (otherlv_0= Equation this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_body_2_0= ruleExpression ) )? (otherlv_3= Return ( (lv_retval_4_0= ruleExpression ) ) )? (otherlv_5= Where ( (lv_where_6_0= ruleExpression ) ) )? ) )
            // InternalDialogParser.g:1203:2: (otherlv_0= Equation this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_body_2_0= ruleExpression ) )? (otherlv_3= Return ( (lv_retval_4_0= ruleExpression ) ) )? (otherlv_5= Where ( (lv_where_6_0= ruleExpression ) ) )? )
            {
            // InternalDialogParser.g:1203:2: (otherlv_0= Equation this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_body_2_0= ruleExpression ) )? (otherlv_3= Return ( (lv_retval_4_0= ruleExpression ) ) )? (otherlv_5= Where ( (lv_where_6_0= ruleExpression ) ) )? )
            // InternalDialogParser.g:1204:3: otherlv_0= Equation this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_body_2_0= ruleExpression ) )? (otherlv_3= Return ( (lv_retval_4_0= ruleExpression ) ) )? (otherlv_5= Where ( (lv_where_6_0= ruleExpression ) ) )?
            {
            otherlv_0=(Token)match(input,Equation,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEquationStatementAccess().getEquationKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getEquationStatementRule());
              			}
              			newCompositeNode(grammarAccess.getEquationStatementAccess().getEquationSignatureParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_30);
            this_EquationSignature_1=ruleEquationSignature(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EquationSignature_1;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:1219:3: ( (lv_body_2_0= ruleExpression ) )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==Another||LA26_0==Element||LA26_0==Sublist||LA26_0==Length||LA26_0==Select||(LA26_0>=Count && LA26_0<=False)||LA26_0==First||(LA26_0>=Index && LA26_0<=Known)||LA26_0==There||LA26_0==Value||LA26_0==None||LA26_0==Last||LA26_0==Only||LA26_0==Some||(LA26_0>=True && LA26_0<=Type)||LA26_0==The||LA26_0==Any||LA26_0==Not||LA26_0==The_1||LA26_0==HyphenMinusHyphenMinus||(LA26_0>=An && LA26_0<=An_1)||LA26_0==ExclamationMark||LA26_0==LeftParenthesis||LA26_0==HyphenMinus||LA26_0==A||LA26_0==LeftSquareBracket||(LA26_0>=A_1 && LA26_0<=LeftCurlyBracket)||LA26_0==RULE_NUMBER||(LA26_0>=RULE_ID && LA26_0<=RULE_STRING)) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalDialogParser.g:1220:4: (lv_body_2_0= ruleExpression )
                    {
                    // InternalDialogParser.g:1220:4: (lv_body_2_0= ruleExpression )
                    // InternalDialogParser.g:1221:5: lv_body_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEquationStatementAccess().getBodyExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_31);
                    lv_body_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEquationStatementRule());
                      					}
                      					set(
                      						current,
                      						"body",
                      						lv_body_2_0,
                      						"com.ge.research.sadl.SADL.Expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalDialogParser.g:1238:3: (otherlv_3= Return ( (lv_retval_4_0= ruleExpression ) ) )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==Return) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalDialogParser.g:1239:4: otherlv_3= Return ( (lv_retval_4_0= ruleExpression ) )
                    {
                    otherlv_3=(Token)match(input,Return,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getEquationStatementAccess().getReturnKeyword_3_0());
                      			
                    }
                    // InternalDialogParser.g:1243:4: ( (lv_retval_4_0= ruleExpression ) )
                    // InternalDialogParser.g:1244:5: (lv_retval_4_0= ruleExpression )
                    {
                    // InternalDialogParser.g:1244:5: (lv_retval_4_0= ruleExpression )
                    // InternalDialogParser.g:1245:6: lv_retval_4_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEquationStatementAccess().getRetvalExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_32);
                    lv_retval_4_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEquationStatementRule());
                      						}
                      						set(
                      							current,
                      							"retval",
                      							lv_retval_4_0,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:1263:3: (otherlv_5= Where ( (lv_where_6_0= ruleExpression ) ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==Where) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalDialogParser.g:1264:4: otherlv_5= Where ( (lv_where_6_0= ruleExpression ) )
                    {
                    otherlv_5=(Token)match(input,Where,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getEquationStatementAccess().getWhereKeyword_4_0());
                      			
                    }
                    // InternalDialogParser.g:1268:4: ( (lv_where_6_0= ruleExpression ) )
                    // InternalDialogParser.g:1269:5: (lv_where_6_0= ruleExpression )
                    {
                    // InternalDialogParser.g:1269:5: (lv_where_6_0= ruleExpression )
                    // InternalDialogParser.g:1270:6: lv_where_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEquationStatementAccess().getWhereExpressionParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEquationStatementRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_6_0,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEquationStatement"


    // $ANTLR start "entryRuleExternalEquationStatement"
    // InternalDialogParser.g:1292:1: entryRuleExternalEquationStatement returns [EObject current=null] : iv_ruleExternalEquationStatement= ruleExternalEquationStatement EOF ;
    public final EObject entryRuleExternalEquationStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternalEquationStatement = null;


        try {
            // InternalDialogParser.g:1292:66: (iv_ruleExternalEquationStatement= ruleExternalEquationStatement EOF )
            // InternalDialogParser.g:1293:2: iv_ruleExternalEquationStatement= ruleExternalEquationStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternalEquationStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExternalEquationStatement=ruleExternalEquationStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternalEquationStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternalEquationStatement"


    // $ANTLR start "ruleExternalEquationStatement"
    // InternalDialogParser.g:1299:1: ruleExternalEquationStatement returns [EObject current=null] : (otherlv_0= External this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_uri_2_0= RULE_STRING ) ) (otherlv_3= Located otherlv_4= At ( (lv_location_5_0= RULE_STRING ) ) )? (otherlv_6= Where ( (lv_where_7_0= ruleExpression ) ) )? ) ;
    public final EObject ruleExternalEquationStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_uri_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_location_5_0=null;
        Token otherlv_6=null;
        EObject this_EquationSignature_1 = null;

        EObject lv_where_7_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1305:2: ( (otherlv_0= External this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_uri_2_0= RULE_STRING ) ) (otherlv_3= Located otherlv_4= At ( (lv_location_5_0= RULE_STRING ) ) )? (otherlv_6= Where ( (lv_where_7_0= ruleExpression ) ) )? ) )
            // InternalDialogParser.g:1306:2: (otherlv_0= External this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_uri_2_0= RULE_STRING ) ) (otherlv_3= Located otherlv_4= At ( (lv_location_5_0= RULE_STRING ) ) )? (otherlv_6= Where ( (lv_where_7_0= ruleExpression ) ) )? )
            {
            // InternalDialogParser.g:1306:2: (otherlv_0= External this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_uri_2_0= RULE_STRING ) ) (otherlv_3= Located otherlv_4= At ( (lv_location_5_0= RULE_STRING ) ) )? (otherlv_6= Where ( (lv_where_7_0= ruleExpression ) ) )? )
            // InternalDialogParser.g:1307:3: otherlv_0= External this_EquationSignature_1= ruleEquationSignature[$current] ( (lv_uri_2_0= RULE_STRING ) ) (otherlv_3= Located otherlv_4= At ( (lv_location_5_0= RULE_STRING ) ) )? (otherlv_6= Where ( (lv_where_7_0= ruleExpression ) ) )?
            {
            otherlv_0=(Token)match(input,External,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getExternalEquationStatementAccess().getExternalKeyword_0());
              		
            }
            if ( state.backtracking==0 ) {

              			if (current==null) {
              				current = createModelElement(grammarAccess.getExternalEquationStatementRule());
              			}
              			newCompositeNode(grammarAccess.getExternalEquationStatementAccess().getEquationSignatureParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_19);
            this_EquationSignature_1=ruleEquationSignature(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EquationSignature_1;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:1322:3: ( (lv_uri_2_0= RULE_STRING ) )
            // InternalDialogParser.g:1323:4: (lv_uri_2_0= RULE_STRING )
            {
            // InternalDialogParser.g:1323:4: (lv_uri_2_0= RULE_STRING )
            // InternalDialogParser.g:1324:5: lv_uri_2_0= RULE_STRING
            {
            lv_uri_2_0=(Token)match(input,RULE_STRING,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_uri_2_0, grammarAccess.getExternalEquationStatementAccess().getUriSTRINGTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getExternalEquationStatementRule());
              					}
              					setWithLastConsumed(
              						current,
              						"uri",
              						lv_uri_2_0,
              						"com.ge.research.sadl.SADL.STRING");
              				
            }

            }


            }

            // InternalDialogParser.g:1340:3: (otherlv_3= Located otherlv_4= At ( (lv_location_5_0= RULE_STRING ) ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==Located) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalDialogParser.g:1341:4: otherlv_3= Located otherlv_4= At ( (lv_location_5_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,Located,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExternalEquationStatementAccess().getLocatedKeyword_3_0());
                      			
                    }
                    otherlv_4=(Token)match(input,At,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getExternalEquationStatementAccess().getAtKeyword_3_1());
                      			
                    }
                    // InternalDialogParser.g:1349:4: ( (lv_location_5_0= RULE_STRING ) )
                    // InternalDialogParser.g:1350:5: (lv_location_5_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:1350:5: (lv_location_5_0= RULE_STRING )
                    // InternalDialogParser.g:1351:6: lv_location_5_0= RULE_STRING
                    {
                    lv_location_5_0=(Token)match(input,RULE_STRING,FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_location_5_0, grammarAccess.getExternalEquationStatementAccess().getLocationSTRINGTerminalRuleCall_3_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExternalEquationStatementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"location",
                      							lv_location_5_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:1368:3: (otherlv_6= Where ( (lv_where_7_0= ruleExpression ) ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==Where) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalDialogParser.g:1369:4: otherlv_6= Where ( (lv_where_7_0= ruleExpression ) )
                    {
                    otherlv_6=(Token)match(input,Where,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getExternalEquationStatementAccess().getWhereKeyword_4_0());
                      			
                    }
                    // InternalDialogParser.g:1373:4: ( (lv_where_7_0= ruleExpression ) )
                    // InternalDialogParser.g:1374:5: (lv_where_7_0= ruleExpression )
                    {
                    // InternalDialogParser.g:1374:5: (lv_where_7_0= ruleExpression )
                    // InternalDialogParser.g:1375:6: lv_where_7_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExternalEquationStatementAccess().getWhereExpressionParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_7_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExternalEquationStatementRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_7_0,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternalEquationStatement"


    // $ANTLR start "ruleEquationSignature"
    // InternalDialogParser.g:1398:1: ruleEquationSignature[EObject in_current] returns [EObject current=in_current] : ( ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon ) ;
    public final EObject ruleEquationSignature(EObject in_current) throws RecognitionException {
        EObject current = in_current;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_name_0_0 = null;

        EObject lv_parameter_2_0 = null;

        EObject lv_parameter_4_0 = null;

        EObject lv_returnType_7_0 = null;

        EObject lv_returnType_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1404:2: ( ( ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon ) )
            // InternalDialogParser.g:1405:2: ( ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon )
            {
            // InternalDialogParser.g:1405:2: ( ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon )
            // InternalDialogParser.g:1406:3: ( (lv_name_0_0= ruleSadlResource ) ) otherlv_1= LeftParenthesis ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )? otherlv_5= RightParenthesis otherlv_6= Returns ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* ) otherlv_10= Colon
            {
            // InternalDialogParser.g:1406:3: ( (lv_name_0_0= ruleSadlResource ) )
            // InternalDialogParser.g:1407:4: (lv_name_0_0= ruleSadlResource )
            {
            // InternalDialogParser.g:1407:4: (lv_name_0_0= ruleSadlResource )
            // InternalDialogParser.g:1408:5: lv_name_0_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEquationSignatureAccess().getNameSadlResourceParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_26);
            lv_name_0_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getEquationSignatureAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalDialogParser.g:1429:3: ( ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )* )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( ((LA32_0>=NonNegativeInteger && LA32_0<=Base64Binary)||LA32_0==UnsignedByte||LA32_0==UnsignedInt||LA32_0==GYearMonth||(LA32_0>=GMonthDay && LA32_0<=HexBinary)||LA32_0==DateTime||LA32_0==Duration||LA32_0==Boolean||LA32_0==Decimal||LA32_0==Integer||LA32_0==AnyURI||LA32_0==Double||LA32_0==GMonth||LA32_0==String||(LA32_0>=Float && LA32_0<=GYear)||LA32_0==Byte||LA32_0==Date||LA32_0==GDay||LA32_0==Long||LA32_0==Time||LA32_0==FullStopFullStopFullStop||LA32_0==Int||LA32_0==HyphenMinusHyphenMinus||LA32_0==LeftParenthesis||LA32_0==LeftCurlyBracket||(LA32_0>=RULE_ID && LA32_0<=RULE_QNAME_TERMINAL)) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // InternalDialogParser.g:1430:4: ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) ) (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )*
                    {
                    // InternalDialogParser.g:1430:4: ( (lv_parameter_2_0= ruleSadlParameterDeclaration ) )
                    // InternalDialogParser.g:1431:5: (lv_parameter_2_0= ruleSadlParameterDeclaration )
                    {
                    // InternalDialogParser.g:1431:5: (lv_parameter_2_0= ruleSadlParameterDeclaration )
                    // InternalDialogParser.g:1432:6: lv_parameter_2_0= ruleSadlParameterDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEquationSignatureAccess().getParameterSadlParameterDeclarationParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_28);
                    lv_parameter_2_0=ruleSadlParameterDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
                      						}
                      						add(
                      							current,
                      							"parameter",
                      							lv_parameter_2_0,
                      							"com.ge.research.sadl.SADL.SadlParameterDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:1449:4: (otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) ) )*
                    loop31:
                    do {
                        int alt31=2;
                        int LA31_0 = input.LA(1);

                        if ( (LA31_0==Comma) ) {
                            alt31=1;
                        }


                        switch (alt31) {
                    	case 1 :
                    	    // InternalDialogParser.g:1450:5: otherlv_3= Comma ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getEquationSignatureAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:1454:5: ( (lv_parameter_4_0= ruleSadlParameterDeclaration ) )
                    	    // InternalDialogParser.g:1455:6: (lv_parameter_4_0= ruleSadlParameterDeclaration )
                    	    {
                    	    // InternalDialogParser.g:1455:6: (lv_parameter_4_0= ruleSadlParameterDeclaration )
                    	    // InternalDialogParser.g:1456:7: lv_parameter_4_0= ruleSadlParameterDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getEquationSignatureAccess().getParameterSadlParameterDeclarationParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_28);
                    	    lv_parameter_4_0=ruleSadlParameterDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"parameter",
                    	      								lv_parameter_4_0,
                    	      								"com.ge.research.sadl.SADL.SadlParameterDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop31;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightParenthesis,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getEquationSignatureAccess().getRightParenthesisKeyword_3());
              		
            }
            otherlv_6=(Token)match(input,Returns,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getEquationSignatureAccess().getReturnsKeyword_4());
              		
            }
            // InternalDialogParser.g:1483:3: ( ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )* )
            // InternalDialogParser.g:1484:4: ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) ) (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )*
            {
            // InternalDialogParser.g:1484:4: ( (lv_returnType_7_0= ruleSadlReturnDeclaration ) )
            // InternalDialogParser.g:1485:5: (lv_returnType_7_0= ruleSadlReturnDeclaration )
            {
            // InternalDialogParser.g:1485:5: (lv_returnType_7_0= ruleSadlReturnDeclaration )
            // InternalDialogParser.g:1486:6: lv_returnType_7_0= ruleSadlReturnDeclaration
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getEquationSignatureAccess().getReturnTypeSadlReturnDeclarationParserRuleCall_5_0_0());
              					
            }
            pushFollow(FOLLOW_39);
            lv_returnType_7_0=ruleSadlReturnDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
              						}
              						add(
              							current,
              							"returnType",
              							lv_returnType_7_0,
              							"com.ge.research.sadl.SADL.SadlReturnDeclaration");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalDialogParser.g:1503:4: (otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) ) )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==Comma) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // InternalDialogParser.g:1504:5: otherlv_8= Comma ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) )
            	    {
            	    otherlv_8=(Token)match(input,Comma,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_8, grammarAccess.getEquationSignatureAccess().getCommaKeyword_5_1_0());
            	      				
            	    }
            	    // InternalDialogParser.g:1508:5: ( (lv_returnType_9_0= ruleSadlReturnDeclaration ) )
            	    // InternalDialogParser.g:1509:6: (lv_returnType_9_0= ruleSadlReturnDeclaration )
            	    {
            	    // InternalDialogParser.g:1509:6: (lv_returnType_9_0= ruleSadlReturnDeclaration )
            	    // InternalDialogParser.g:1510:7: lv_returnType_9_0= ruleSadlReturnDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getEquationSignatureAccess().getReturnTypeSadlReturnDeclarationParserRuleCall_5_1_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_returnType_9_0=ruleSadlReturnDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getEquationSignatureRule());
            	      							}
            	      							add(
            	      								current,
            	      								"returnType",
            	      								lv_returnType_9_0,
            	      								"com.ge.research.sadl.SADL.SadlReturnDeclaration");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);


            }

            otherlv_10=(Token)match(input,Colon,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getEquationSignatureAccess().getColonKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEquationSignature"


    // $ANTLR start "entryRuleSadlParameterDeclaration"
    // InternalDialogParser.g:1537:1: entryRuleSadlParameterDeclaration returns [EObject current=null] : iv_ruleSadlParameterDeclaration= ruleSadlParameterDeclaration EOF ;
    public final EObject entryRuleSadlParameterDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlParameterDeclaration = null;


        try {
            // InternalDialogParser.g:1537:65: (iv_ruleSadlParameterDeclaration= ruleSadlParameterDeclaration EOF )
            // InternalDialogParser.g:1538:2: iv_ruleSadlParameterDeclaration= ruleSadlParameterDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlParameterDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlParameterDeclaration=ruleSadlParameterDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlParameterDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlParameterDeclaration"


    // $ANTLR start "ruleSadlParameterDeclaration"
    // InternalDialogParser.g:1544:1: ruleSadlParameterDeclaration returns [EObject current=null] : ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) | ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) ) ) ;
    public final EObject ruleSadlParameterDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_unknown_2_0=null;
        Token lv_ellipsis_3_0=null;
        EObject lv_type_0_0 = null;

        EObject lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1550:2: ( ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) | ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) ) ) )
            // InternalDialogParser.g:1551:2: ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) | ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) ) )
            {
            // InternalDialogParser.g:1551:2: ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) | ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) ) )
            int alt34=3;
            switch ( input.LA(1) ) {
            case NonNegativeInteger:
            case NonPositiveInteger:
            case NegativeInteger:
            case PositiveInteger:
            case AnySimpleType:
            case Base64Binary:
            case UnsignedByte:
            case UnsignedInt:
            case GYearMonth:
            case GMonthDay:
            case HexBinary:
            case DateTime:
            case Duration:
            case Boolean:
            case Decimal:
            case Integer:
            case AnyURI:
            case Double:
            case GMonth:
            case String:
            case Float:
            case GYear:
            case Byte:
            case Date:
            case GDay:
            case Long:
            case Time:
            case Int:
            case LeftParenthesis:
            case LeftCurlyBracket:
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt34=1;
                }
                break;
            case HyphenMinusHyphenMinus:
                {
                alt34=2;
                }
                break;
            case FullStopFullStopFullStop:
                {
                alt34=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }

            switch (alt34) {
                case 1 :
                    // InternalDialogParser.g:1552:3: ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) )
                    {
                    // InternalDialogParser.g:1552:3: ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) ) )
                    // InternalDialogParser.g:1553:4: ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) ( (lv_name_1_0= ruleSadlResource ) )
                    {
                    // InternalDialogParser.g:1553:4: ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:1554:5: (lv_type_0_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:1554:5: (lv_type_0_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:1555:6: lv_type_0_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlParameterDeclarationAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_8);
                    lv_type_0_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlParameterDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_0_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:1572:4: ( (lv_name_1_0= ruleSadlResource ) )
                    // InternalDialogParser.g:1573:5: (lv_name_1_0= ruleSadlResource )
                    {
                    // InternalDialogParser.g:1573:5: (lv_name_1_0= ruleSadlResource )
                    // InternalDialogParser.g:1574:6: lv_name_1_0= ruleSadlResource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlParameterDeclarationAccess().getNameSadlResourceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_1_0=ruleSadlResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlParameterDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"com.ge.research.sadl.SADL.SadlResource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:1593:3: ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) )
                    {
                    // InternalDialogParser.g:1593:3: ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) )
                    // InternalDialogParser.g:1594:4: (lv_unknown_2_0= HyphenMinusHyphenMinus )
                    {
                    // InternalDialogParser.g:1594:4: (lv_unknown_2_0= HyphenMinusHyphenMinus )
                    // InternalDialogParser.g:1595:5: lv_unknown_2_0= HyphenMinusHyphenMinus
                    {
                    lv_unknown_2_0=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_unknown_2_0, grammarAccess.getSadlParameterDeclarationAccess().getUnknownHyphenMinusHyphenMinusKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlParameterDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "unknown", lv_unknown_2_0, "--");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:1608:3: ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) )
                    {
                    // InternalDialogParser.g:1608:3: ( (lv_ellipsis_3_0= FullStopFullStopFullStop ) )
                    // InternalDialogParser.g:1609:4: (lv_ellipsis_3_0= FullStopFullStopFullStop )
                    {
                    // InternalDialogParser.g:1609:4: (lv_ellipsis_3_0= FullStopFullStopFullStop )
                    // InternalDialogParser.g:1610:5: lv_ellipsis_3_0= FullStopFullStopFullStop
                    {
                    lv_ellipsis_3_0=(Token)match(input,FullStopFullStopFullStop,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ellipsis_3_0, grammarAccess.getSadlParameterDeclarationAccess().getEllipsisFullStopFullStopFullStopKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlParameterDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "ellipsis", lv_ellipsis_3_0, "...");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlParameterDeclaration"


    // $ANTLR start "entryRuleSadlReturnDeclaration"
    // InternalDialogParser.g:1626:1: entryRuleSadlReturnDeclaration returns [EObject current=null] : iv_ruleSadlReturnDeclaration= ruleSadlReturnDeclaration EOF ;
    public final EObject entryRuleSadlReturnDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlReturnDeclaration = null;


        try {
            // InternalDialogParser.g:1626:62: (iv_ruleSadlReturnDeclaration= ruleSadlReturnDeclaration EOF )
            // InternalDialogParser.g:1627:2: iv_ruleSadlReturnDeclaration= ruleSadlReturnDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlReturnDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlReturnDeclaration=ruleSadlReturnDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlReturnDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlReturnDeclaration"


    // $ANTLR start "ruleSadlReturnDeclaration"
    // InternalDialogParser.g:1633:1: ruleSadlReturnDeclaration returns [EObject current=null] : ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) | ( (lv_none_1_0= None ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) ) ;
    public final EObject ruleSadlReturnDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_none_1_0=null;
        Token lv_unknown_2_0=null;
        EObject lv_type_0_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1639:2: ( ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) | ( (lv_none_1_0= None ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) ) )
            // InternalDialogParser.g:1640:2: ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) | ( (lv_none_1_0= None ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) )
            {
            // InternalDialogParser.g:1640:2: ( ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) ) | ( (lv_none_1_0= None ) ) | ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) ) )
            int alt35=3;
            switch ( input.LA(1) ) {
            case NonNegativeInteger:
            case NonPositiveInteger:
            case NegativeInteger:
            case PositiveInteger:
            case AnySimpleType:
            case Base64Binary:
            case UnsignedByte:
            case UnsignedInt:
            case GYearMonth:
            case GMonthDay:
            case HexBinary:
            case DateTime:
            case Duration:
            case Boolean:
            case Decimal:
            case Integer:
            case AnyURI:
            case Double:
            case GMonth:
            case String:
            case Float:
            case GYear:
            case Byte:
            case Date:
            case GDay:
            case Long:
            case Time:
            case Int:
            case LeftParenthesis:
            case LeftCurlyBracket:
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt35=1;
                }
                break;
            case None:
                {
                alt35=2;
                }
                break;
            case HyphenMinusHyphenMinus:
                {
                alt35=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }

            switch (alt35) {
                case 1 :
                    // InternalDialogParser.g:1641:3: ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) )
                    {
                    // InternalDialogParser.g:1641:3: ( (lv_type_0_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:1642:4: (lv_type_0_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:1642:4: (lv_type_0_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:1643:5: lv_type_0_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSadlReturnDeclarationAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_type_0_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSadlReturnDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_0_0,
                      						"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:1661:3: ( (lv_none_1_0= None ) )
                    {
                    // InternalDialogParser.g:1661:3: ( (lv_none_1_0= None ) )
                    // InternalDialogParser.g:1662:4: (lv_none_1_0= None )
                    {
                    // InternalDialogParser.g:1662:4: (lv_none_1_0= None )
                    // InternalDialogParser.g:1663:5: lv_none_1_0= None
                    {
                    lv_none_1_0=(Token)match(input,None,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_none_1_0, grammarAccess.getSadlReturnDeclarationAccess().getNoneNoneKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlReturnDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "none", lv_none_1_0, "None");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:1676:3: ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) )
                    {
                    // InternalDialogParser.g:1676:3: ( (lv_unknown_2_0= HyphenMinusHyphenMinus ) )
                    // InternalDialogParser.g:1677:4: (lv_unknown_2_0= HyphenMinusHyphenMinus )
                    {
                    // InternalDialogParser.g:1677:4: (lv_unknown_2_0= HyphenMinusHyphenMinus )
                    // InternalDialogParser.g:1678:5: lv_unknown_2_0= HyphenMinusHyphenMinus
                    {
                    lv_unknown_2_0=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_unknown_2_0, grammarAccess.getSadlReturnDeclarationAccess().getUnknownHyphenMinusHyphenMinusKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlReturnDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "unknown", lv_unknown_2_0, "--");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlReturnDeclaration"


    // $ANTLR start "entryRuleSadlStatement"
    // InternalDialogParser.g:1694:1: entryRuleSadlStatement returns [EObject current=null] : iv_ruleSadlStatement= ruleSadlStatement EOF ;
    public final EObject entryRuleSadlStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlStatement = null;


        try {
            // InternalDialogParser.g:1694:54: (iv_ruleSadlStatement= ruleSadlStatement EOF )
            // InternalDialogParser.g:1695:2: iv_ruleSadlStatement= ruleSadlStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlStatement=ruleSadlStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlStatement"


    // $ANTLR start "ruleSadlStatement"
    // InternalDialogParser.g:1701:1: ruleSadlStatement returns [EObject current=null] : ( (this_SadlResource_0= ruleSadlResource ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) ) ) | ( () otherlv_48= LeftCurlyBracket ( (lv_classOrProperty_49_0= ruleSadlResource ) ) (otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) ) )* otherlv_52= RightCurlyBracket otherlv_53= Are ( ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* ) | ( () otherlv_62= Disjoint ) | ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same ) ) ) | ( () ( ruleAnArticle )? otherlv_69= Relationship otherlv_70= Of ( (lv_from_71_0= ruleSadlTypeReference ) ) otherlv_72= To ( (lv_to_73_0= ruleSadlTypeReference ) ) otherlv_74= Is ( (lv_property_75_0= ruleSadlResource ) ) ) | ( ruleAnArticle this_SadlTypeReference_77= ruleSadlTypeReference ( ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* ) | ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* ) ) ) ) ;
    public final EObject ruleSadlStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_11=null;
        Token lv_primaryDeclaration_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_20=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token lv_complement_27_0=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_37=null;
        Token otherlv_43=null;
        Token otherlv_45=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        Token otherlv_52=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_55=null;
        Token lv_oftype_56_0=null;
        Token lv_oftype_57_0=null;
        Token otherlv_58=null;
        Token otherlv_62=null;
        Token lv_complement_64_0=null;
        Token otherlv_65=null;
        Token otherlv_66=null;
        Token otherlv_69=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        Token otherlv_74=null;
        Token otherlv_82=null;
        Token otherlv_85=null;
        Token otherlv_86=null;
        Token otherlv_88=null;
        EObject this_SadlResource_0 = null;

        EObject lv_superElement_8_0 = null;

        EObject lv_facet_9_0 = null;

        EObject lv_describedBy_10_0 = null;

        EObject lv_restrictions_12_0 = null;

        EObject lv_restrictions_18_0 = null;

        EObject lv_restrictions_21_0 = null;

        EObject lv_sameAs_28_0 = null;

        EObject lv_notTheSameAs_35_0 = null;

        EObject lv_type_39_0 = null;

        EObject lv_listInitializer_40_0 = null;

        EObject lv_propertyInitializers_41_0 = null;

        EObject lv_classes_44_0 = null;

        EObject lv_classOrProperty_49_0 = null;

        EObject lv_classOrProperty_51_0 = null;

        EObject lv_superElement_59_0 = null;

        EObject lv_describedBy_60_0 = null;

        EObject lv_from_71_0 = null;

        EObject lv_to_73_0 = null;

        EObject lv_property_75_0 = null;

        EObject this_SadlTypeReference_77 = null;

        EObject lv_instance_79_0 = null;

        EObject lv_propertyInitializers_80_0 = null;

        EObject lv_object_84_0 = null;

        EObject lv_propConditions_87_0 = null;

        EObject lv_propConditions_89_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:1707:2: ( ( (this_SadlResource_0= ruleSadlResource ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) ) ) | ( () otherlv_48= LeftCurlyBracket ( (lv_classOrProperty_49_0= ruleSadlResource ) ) (otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) ) )* otherlv_52= RightCurlyBracket otherlv_53= Are ( ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* ) | ( () otherlv_62= Disjoint ) | ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same ) ) ) | ( () ( ruleAnArticle )? otherlv_69= Relationship otherlv_70= Of ( (lv_from_71_0= ruleSadlTypeReference ) ) otherlv_72= To ( (lv_to_73_0= ruleSadlTypeReference ) ) otherlv_74= Is ( (lv_property_75_0= ruleSadlResource ) ) ) | ( ruleAnArticle this_SadlTypeReference_77= ruleSadlTypeReference ( ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* ) | ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* ) ) ) ) )
            // InternalDialogParser.g:1708:2: ( (this_SadlResource_0= ruleSadlResource ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) ) ) | ( () otherlv_48= LeftCurlyBracket ( (lv_classOrProperty_49_0= ruleSadlResource ) ) (otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) ) )* otherlv_52= RightCurlyBracket otherlv_53= Are ( ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* ) | ( () otherlv_62= Disjoint ) | ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same ) ) ) | ( () ( ruleAnArticle )? otherlv_69= Relationship otherlv_70= Of ( (lv_from_71_0= ruleSadlTypeReference ) ) otherlv_72= To ( (lv_to_73_0= ruleSadlTypeReference ) ) otherlv_74= Is ( (lv_property_75_0= ruleSadlResource ) ) ) | ( ruleAnArticle this_SadlTypeReference_77= ruleSadlTypeReference ( ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* ) | ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* ) ) ) )
            {
            // InternalDialogParser.g:1708:2: ( (this_SadlResource_0= ruleSadlResource ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) ) ) | ( () otherlv_48= LeftCurlyBracket ( (lv_classOrProperty_49_0= ruleSadlResource ) ) (otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) ) )* otherlv_52= RightCurlyBracket otherlv_53= Are ( ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* ) | ( () otherlv_62= Disjoint ) | ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same ) ) ) | ( () ( ruleAnArticle )? otherlv_69= Relationship otherlv_70= Of ( (lv_from_71_0= ruleSadlTypeReference ) ) otherlv_72= To ( (lv_to_73_0= ruleSadlTypeReference ) ) otherlv_74= Is ( (lv_property_75_0= ruleSadlResource ) ) ) | ( ruleAnArticle this_SadlTypeReference_77= ruleSadlTypeReference ( ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* ) | ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* ) ) ) )
            int alt65=4;
            alt65 = dfa65.predict(input);
            switch (alt65) {
                case 1 :
                    // InternalDialogParser.g:1709:3: (this_SadlResource_0= ruleSadlResource ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) ) )
                    {
                    // InternalDialogParser.g:1709:3: (this_SadlResource_0= ruleSadlResource ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) ) )
                    // InternalDialogParser.g:1710:4: this_SadlResource_0= ruleSadlResource ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) )
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlStatementAccess().getSadlResourceParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_40);
                    this_SadlResource_0=ruleSadlResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SadlResource_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalDialogParser.g:1718:4: ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) )
                    int alt52=7;
                    alt52 = dfa52.predict(input);
                    switch (alt52) {
                        case 1 :
                            // InternalDialogParser.g:1719:5: ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? )
                            {
                            // InternalDialogParser.g:1719:5: ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? )
                            // InternalDialogParser.g:1720:6: () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )?
                            {
                            // InternalDialogParser.g:1720:6: ()
                            // InternalDialogParser.g:1721:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndAdd(
                              								grammarAccess.getSadlStatementAccess().getSadlClassOrPropertyDeclarationClassOrPropertyAction_0_1_0_0(),
                              								current);
                              						
                            }

                            }

                            otherlv_2=(Token)match(input,Is,FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getSadlStatementAccess().getIsKeyword_0_1_0_1());
                              					
                            }
                            otherlv_3=(Token)match(input,A_1,FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSadlStatementAccess().getAKeyword_0_1_0_2());
                              					
                            }
                            // InternalDialogParser.g:1735:6: ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) )
                            int alt38=2;
                            int LA38_0 = input.LA(1);

                            if ( (LA38_0==TopLevel||LA38_0==Class) ) {
                                alt38=1;
                            }
                            else if ( (LA38_0==Type) ) {
                                alt38=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 38, 0, input);

                                throw nvae;
                            }
                            switch (alt38) {
                                case 1 :
                                    // InternalDialogParser.g:1736:7: ( (otherlv_4= TopLevel )? otherlv_5= Class )
                                    {
                                    // InternalDialogParser.g:1736:7: ( (otherlv_4= TopLevel )? otherlv_5= Class )
                                    // InternalDialogParser.g:1737:8: (otherlv_4= TopLevel )? otherlv_5= Class
                                    {
                                    // InternalDialogParser.g:1737:8: (otherlv_4= TopLevel )?
                                    int alt36=2;
                                    int LA36_0 = input.LA(1);

                                    if ( (LA36_0==TopLevel) ) {
                                        alt36=1;
                                    }
                                    switch (alt36) {
                                        case 1 :
                                            // InternalDialogParser.g:1738:9: otherlv_4= TopLevel
                                            {
                                            otherlv_4=(Token)match(input,TopLevel,FOLLOW_43); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(otherlv_4, grammarAccess.getSadlStatementAccess().getTopLevelKeyword_0_1_0_3_0_0());
                                              								
                                            }

                                            }
                                            break;

                                    }

                                    otherlv_5=(Token)match(input,Class,FOLLOW_44); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_5, grammarAccess.getSadlStatementAccess().getClassKeyword_0_1_0_3_0_1());
                                      							
                                    }

                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:1749:7: (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? )
                                    {
                                    // InternalDialogParser.g:1749:7: (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? )
                                    // InternalDialogParser.g:1750:8: otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )?
                                    {
                                    otherlv_6=(Token)match(input,Type,FOLLOW_9); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_6, grammarAccess.getSadlStatementAccess().getTypeKeyword_0_1_0_3_1_0());
                                      							
                                    }
                                    otherlv_7=(Token)match(input,Of,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_7, grammarAccess.getSadlStatementAccess().getOfKeyword_0_1_0_3_1_1());
                                      							
                                    }
                                    // InternalDialogParser.g:1758:8: ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) )
                                    // InternalDialogParser.g:1759:9: (lv_superElement_8_0= ruleSadlPrimaryTypeReference )
                                    {
                                    // InternalDialogParser.g:1759:9: (lv_superElement_8_0= ruleSadlPrimaryTypeReference )
                                    // InternalDialogParser.g:1760:10: lv_superElement_8_0= ruleSadlPrimaryTypeReference
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getSadlStatementAccess().getSuperElementSadlPrimaryTypeReferenceParserRuleCall_0_1_0_3_1_2_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_45);
                                    lv_superElement_8_0=ruleSadlPrimaryTypeReference();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                                      										}
                                      										set(
                                      											current,
                                      											"superElement",
                                      											lv_superElement_8_0,
                                      											"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }

                                    // InternalDialogParser.g:1777:8: ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )?
                                    int alt37=2;
                                    int LA37_0 = input.LA(1);

                                    if ( (LA37_0==Length||LA37_0==LeftParenthesis||LA37_0==LeftSquareBracket||LA37_0==LeftCurlyBracket||LA37_0==RULE_STRING) ) {
                                        alt37=1;
                                    }
                                    switch (alt37) {
                                        case 1 :
                                            // InternalDialogParser.g:1778:9: (lv_facet_9_0= ruleSadlDataTypeFacet )
                                            {
                                            // InternalDialogParser.g:1778:9: (lv_facet_9_0= ruleSadlDataTypeFacet )
                                            // InternalDialogParser.g:1779:10: lv_facet_9_0= ruleSadlDataTypeFacet
                                            {
                                            if ( state.backtracking==0 ) {

                                              										newCompositeNode(grammarAccess.getSadlStatementAccess().getFacetSadlDataTypeFacetParserRuleCall_0_1_0_3_1_3_0());
                                              									
                                            }
                                            pushFollow(FOLLOW_44);
                                            lv_facet_9_0=ruleSadlDataTypeFacet();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                                              										}
                                              										set(
                                              											current,
                                              											"facet",
                                              											lv_facet_9_0,
                                              											"com.ge.research.sadl.SADL.SadlDataTypeFacet");
                                              										afterParserOrEnumRuleCall();
                                              									
                                            }

                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:1798:6: ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )?
                            int alt42=3;
                            switch ( input.LA(1) ) {
                                case Comma:
                                    {
                                    int LA42_1 = input.LA(2);

                                    if ( (LA42_1==Described) ) {
                                        alt42=1;
                                    }
                                    else if ( (LA42_1==Describes||LA42_1==Always||LA42_1==Must||LA42_1==Only||LA42_1==With||LA42_1==Can||LA42_1==Has||(LA42_1>=Is && LA42_1<=Of)) ) {
                                        alt42=2;
                                    }
                                    }
                                    break;
                                case Described:
                                    {
                                    alt42=1;
                                    }
                                    break;
                                case Describes:
                                case Always:
                                case Must:
                                case Only:
                                case With:
                                case Can:
                                case Has:
                                case Is:
                                case Of:
                                    {
                                    alt42=2;
                                    }
                                    break;
                            }

                            switch (alt42) {
                                case 1 :
                                    // InternalDialogParser.g:1799:7: ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+
                                    {
                                    // InternalDialogParser.g:1799:7: ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+
                                    int cnt39=0;
                                    loop39:
                                    do {
                                        int alt39=2;
                                        int LA39_0 = input.LA(1);

                                        if ( (LA39_0==Described||LA39_0==Comma) ) {
                                            alt39=1;
                                        }


                                        switch (alt39) {
                                    	case 1 :
                                    	    // InternalDialogParser.g:1800:8: (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass )
                                    	    {
                                    	    // InternalDialogParser.g:1800:8: (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass )
                                    	    // InternalDialogParser.g:1801:9: lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      									newCompositeNode(grammarAccess.getSadlStatementAccess().getDescribedBySadlPropertyDeclarationInClassParserRuleCall_0_1_0_4_0_0());
                                    	      								
                                    	    }
                                    	    pushFollow(FOLLOW_46);
                                    	    lv_describedBy_10_0=ruleSadlPropertyDeclarationInClass();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      									if (current==null) {
                                    	      										current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                                    	      									}
                                    	      									add(
                                    	      										current,
                                    	      										"describedBy",
                                    	      										lv_describedBy_10_0,
                                    	      										"com.ge.research.sadl.SADL.SadlPropertyDeclarationInClass");
                                    	      									afterParserOrEnumRuleCall();
                                    	      								
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt39 >= 1 ) break loop39;
                                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(39, input);
                                                throw eee;
                                        }
                                        cnt39++;
                                    } while (true);


                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:1819:7: ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+
                                    {
                                    // InternalDialogParser.g:1819:7: ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+
                                    int cnt41=0;
                                    loop41:
                                    do {
                                        int alt41=2;
                                        int LA41_0 = input.LA(1);

                                        if ( (LA41_0==Describes||LA41_0==Always||LA41_0==Must||LA41_0==Only||LA41_0==With||LA41_0==Can||LA41_0==Has||(LA41_0>=Is && LA41_0<=Of)||LA41_0==Comma) ) {
                                            alt41=1;
                                        }


                                        switch (alt41) {
                                    	case 1 :
                                    	    // InternalDialogParser.g:1820:8: (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) )
                                    	    {
                                    	    // InternalDialogParser.g:1820:8: (otherlv_11= Comma )?
                                    	    int alt40=2;
                                    	    int LA40_0 = input.LA(1);

                                    	    if ( (LA40_0==Comma) ) {
                                    	        alt40=1;
                                    	    }
                                    	    switch (alt40) {
                                    	        case 1 :
                                    	            // InternalDialogParser.g:1821:9: otherlv_11= Comma
                                    	            {
                                    	            otherlv_11=(Token)match(input,Comma,FOLLOW_47); if (state.failed) return current;
                                    	            if ( state.backtracking==0 ) {

                                    	              									newLeafNode(otherlv_11, grammarAccess.getSadlStatementAccess().getCommaKeyword_0_1_0_4_1_0());
                                    	              								
                                    	            }

                                    	            }
                                    	            break;

                                    	    }

                                    	    // InternalDialogParser.g:1826:8: ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) )
                                    	    // InternalDialogParser.g:1827:9: (lv_restrictions_12_0= ruleSadlPropertyRestriction )
                                    	    {
                                    	    // InternalDialogParser.g:1827:9: (lv_restrictions_12_0= ruleSadlPropertyRestriction )
                                    	    // InternalDialogParser.g:1828:10: lv_restrictions_12_0= ruleSadlPropertyRestriction
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      										newCompositeNode(grammarAccess.getSadlStatementAccess().getRestrictionsSadlPropertyRestrictionParserRuleCall_0_1_0_4_1_1_0());
                                    	      									
                                    	    }
                                    	    pushFollow(FOLLOW_48);
                                    	    lv_restrictions_12_0=ruleSadlPropertyRestriction();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      										if (current==null) {
                                    	      											current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                                    	      										}
                                    	      										add(
                                    	      											current,
                                    	      											"restrictions",
                                    	      											lv_restrictions_12_0,
                                    	      											"com.ge.research.sadl.SADL.SadlPropertyRestriction");
                                    	      										afterParserOrEnumRuleCall();
                                    	      									
                                    	    }

                                    	    }


                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt41 >= 1 ) break loop41;
                                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(41, input);
                                                throw eee;
                                        }
                                        cnt41++;
                                    } while (true);


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:1849:5: ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* )
                            {
                            // InternalDialogParser.g:1849:5: ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* )
                            // InternalDialogParser.g:1850:6: () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )*
                            {
                            // InternalDialogParser.g:1850:6: ()
                            // InternalDialogParser.g:1851:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getSadlStatementAccess().getSadlPropertyNameOrRefAction_0_1_1_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:1857:6: ( (lv_primaryDeclaration_14_0= Is ) )
                            // InternalDialogParser.g:1858:7: (lv_primaryDeclaration_14_0= Is )
                            {
                            // InternalDialogParser.g:1858:7: (lv_primaryDeclaration_14_0= Is )
                            // InternalDialogParser.g:1859:8: lv_primaryDeclaration_14_0= Is
                            {
                            lv_primaryDeclaration_14_0=(Token)match(input,Is,FOLLOW_41); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_primaryDeclaration_14_0, grammarAccess.getSadlStatementAccess().getPrimaryDeclarationIsKeyword_0_1_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlStatementRule());
                              								}
                              								setWithLastConsumed(current, "primaryDeclaration", true, "is");
                              							
                            }

                            }


                            }

                            otherlv_15=(Token)match(input,A_1,FOLLOW_49); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_15, grammarAccess.getSadlStatementAccess().getAKeyword_0_1_1_2());
                              					
                            }
                            otherlv_16=(Token)match(input,Property,FOLLOW_48); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_16, grammarAccess.getSadlStatementAccess().getPropertyKeyword_0_1_1_3());
                              					
                            }
                            // InternalDialogParser.g:1879:6: ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )*
                            loop44:
                            do {
                                int alt44=2;
                                int LA44_0 = input.LA(1);

                                if ( (LA44_0==Describes||LA44_0==Always||LA44_0==Must||LA44_0==Only||LA44_0==With||LA44_0==Can||LA44_0==Has||(LA44_0>=Is && LA44_0<=Of)||LA44_0==Comma) ) {
                                    alt44=1;
                                }


                                switch (alt44) {
                            	case 1 :
                            	    // InternalDialogParser.g:1880:7: (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) )
                            	    {
                            	    // InternalDialogParser.g:1880:7: (otherlv_17= Comma )?
                            	    int alt43=2;
                            	    int LA43_0 = input.LA(1);

                            	    if ( (LA43_0==Comma) ) {
                            	        alt43=1;
                            	    }
                            	    switch (alt43) {
                            	        case 1 :
                            	            // InternalDialogParser.g:1881:8: otherlv_17= Comma
                            	            {
                            	            otherlv_17=(Token)match(input,Comma,FOLLOW_47); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_17, grammarAccess.getSadlStatementAccess().getCommaKeyword_0_1_1_4_0());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:1886:7: ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) )
                            	    // InternalDialogParser.g:1887:8: (lv_restrictions_18_0= ruleSadlPropertyRestriction )
                            	    {
                            	    // InternalDialogParser.g:1887:8: (lv_restrictions_18_0= ruleSadlPropertyRestriction )
                            	    // InternalDialogParser.g:1888:9: lv_restrictions_18_0= ruleSadlPropertyRestriction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getSadlStatementAccess().getRestrictionsSadlPropertyRestrictionParserRuleCall_0_1_1_4_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_48);
                            	    lv_restrictions_18_0=ruleSadlPropertyRestriction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"restrictions",
                            	      										lv_restrictions_18_0,
                            	      										"com.ge.research.sadl.SADL.SadlPropertyRestriction");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop44;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:1908:5: ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ )
                            {
                            // InternalDialogParser.g:1908:5: ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ )
                            // InternalDialogParser.g:1909:6: () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+
                            {
                            // InternalDialogParser.g:1909:6: ()
                            // InternalDialogParser.g:1910:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getSadlStatementAccess().getSadlPropertyNameOrRefAction_0_1_2_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:1916:6: ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+
                            int cnt46=0;
                            loop46:
                            do {
                                int alt46=2;
                                int LA46_0 = input.LA(1);

                                if ( (LA46_0==Describes||LA46_0==Always||LA46_0==Must||LA46_0==Only||LA46_0==With||LA46_0==Can||LA46_0==Has||(LA46_0>=Is && LA46_0<=Of)||LA46_0==Comma) ) {
                                    alt46=1;
                                }


                                switch (alt46) {
                            	case 1 :
                            	    // InternalDialogParser.g:1917:7: (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) )
                            	    {
                            	    // InternalDialogParser.g:1917:7: (otherlv_20= Comma )?
                            	    int alt45=2;
                            	    int LA45_0 = input.LA(1);

                            	    if ( (LA45_0==Comma) ) {
                            	        alt45=1;
                            	    }
                            	    switch (alt45) {
                            	        case 1 :
                            	            // InternalDialogParser.g:1918:8: otherlv_20= Comma
                            	            {
                            	            otherlv_20=(Token)match(input,Comma,FOLLOW_47); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_20, grammarAccess.getSadlStatementAccess().getCommaKeyword_0_1_2_1_0());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:1923:7: ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) )
                            	    // InternalDialogParser.g:1924:8: (lv_restrictions_21_0= ruleSadlPropertyRestriction )
                            	    {
                            	    // InternalDialogParser.g:1924:8: (lv_restrictions_21_0= ruleSadlPropertyRestriction )
                            	    // InternalDialogParser.g:1925:9: lv_restrictions_21_0= ruleSadlPropertyRestriction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getSadlStatementAccess().getRestrictionsSadlPropertyRestrictionParserRuleCall_0_1_2_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_48);
                            	    lv_restrictions_21_0=ruleSadlPropertyRestriction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"restrictions",
                            	      										lv_restrictions_21_0,
                            	      										"com.ge.research.sadl.SADL.SadlPropertyRestriction");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt46 >= 1 ) break loop46;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(46, input);
                                        throw eee;
                                }
                                cnt46++;
                            } while (true);


                            }


                            }
                            break;
                        case 4 :
                            // InternalDialogParser.g:1945:5: ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) )
                            {
                            // InternalDialogParser.g:1945:5: ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) )
                            // InternalDialogParser.g:1946:6: () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) )
                            {
                            // InternalDialogParser.g:1946:6: ()
                            // InternalDialogParser.g:1947:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getSadlStatementAccess().getSadlSameAsNameOrRefAction_0_1_3_0(),
                              								current);
                              						
                            }

                            }

                            otherlv_23=(Token)match(input,Is,FOLLOW_50); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_23, grammarAccess.getSadlStatementAccess().getIsKeyword_0_1_3_1());
                              					
                            }
                            otherlv_24=(Token)match(input,The_1,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_24, grammarAccess.getSadlStatementAccess().getTheKeyword_0_1_3_2());
                              					
                            }
                            otherlv_25=(Token)match(input,Same,FOLLOW_52); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_25, grammarAccess.getSadlStatementAccess().getSameKeyword_0_1_3_3());
                              					
                            }
                            otherlv_26=(Token)match(input,As,FOLLOW_53); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_26, grammarAccess.getSadlStatementAccess().getAsKeyword_0_1_3_4());
                              					
                            }
                            // InternalDialogParser.g:1969:6: ( (lv_complement_27_0= Not ) )?
                            int alt47=2;
                            int LA47_0 = input.LA(1);

                            if ( (LA47_0==Not) ) {
                                alt47=1;
                            }
                            switch (alt47) {
                                case 1 :
                                    // InternalDialogParser.g:1970:7: (lv_complement_27_0= Not )
                                    {
                                    // InternalDialogParser.g:1970:7: (lv_complement_27_0= Not )
                                    // InternalDialogParser.g:1971:8: lv_complement_27_0= Not
                                    {
                                    lv_complement_27_0=(Token)match(input,Not,FOLLOW_53); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_complement_27_0, grammarAccess.getSadlStatementAccess().getComplementNotKeyword_0_1_3_5_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getSadlStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "complement", true, "not");
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:1983:6: ( (lv_sameAs_28_0= ruleSadlTypeReference ) )
                            // InternalDialogParser.g:1984:7: (lv_sameAs_28_0= ruleSadlTypeReference )
                            {
                            // InternalDialogParser.g:1984:7: (lv_sameAs_28_0= ruleSadlTypeReference )
                            // InternalDialogParser.g:1985:8: lv_sameAs_28_0= ruleSadlTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlStatementAccess().getSameAsSadlTypeReferenceParserRuleCall_0_1_3_6_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_sameAs_28_0=ruleSadlTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                              								}
                              								set(
                              									current,
                              									"sameAs",
                              									lv_sameAs_28_0,
                              									"com.ge.research.sadl.SADL.SadlTypeReference");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalDialogParser.g:2004:5: ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) )
                            {
                            // InternalDialogParser.g:2004:5: ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) )
                            // InternalDialogParser.g:2005:6: () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) )
                            {
                            // InternalDialogParser.g:2005:6: ()
                            // InternalDialogParser.g:2006:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getSadlStatementAccess().getSadlDifferentFromNameOrRefAction_0_1_4_0(),
                              								current);
                              						
                            }

                            }

                            otherlv_30=(Token)match(input,Is,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_30, grammarAccess.getSadlStatementAccess().getIsKeyword_0_1_4_1());
                              					
                            }
                            otherlv_31=(Token)match(input,Not,FOLLOW_50); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_31, grammarAccess.getSadlStatementAccess().getNotKeyword_0_1_4_2());
                              					
                            }
                            otherlv_32=(Token)match(input,The_1,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_32, grammarAccess.getSadlStatementAccess().getTheKeyword_0_1_4_3());
                              					
                            }
                            otherlv_33=(Token)match(input,Same,FOLLOW_52); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_33, grammarAccess.getSadlStatementAccess().getSameKeyword_0_1_4_4());
                              					
                            }
                            otherlv_34=(Token)match(input,As,FOLLOW_53); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_34, grammarAccess.getSadlStatementAccess().getAsKeyword_0_1_4_5());
                              					
                            }
                            // InternalDialogParser.g:2032:6: ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) )
                            // InternalDialogParser.g:2033:7: (lv_notTheSameAs_35_0= ruleSadlTypeReference )
                            {
                            // InternalDialogParser.g:2033:7: (lv_notTheSameAs_35_0= ruleSadlTypeReference )
                            // InternalDialogParser.g:2034:8: lv_notTheSameAs_35_0= ruleSadlTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlStatementAccess().getNotTheSameAsSadlTypeReferenceParserRuleCall_0_1_4_6_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_notTheSameAs_35_0=ruleSadlTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                              								}
                              								set(
                              									current,
                              									"notTheSameAs",
                              									lv_notTheSameAs_35_0,
                              									"com.ge.research.sadl.SADL.SadlTypeReference");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 6 :
                            // InternalDialogParser.g:2053:5: ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? )
                            {
                            // InternalDialogParser.g:2053:5: ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? )
                            // InternalDialogParser.g:2054:6: () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )?
                            {
                            // InternalDialogParser.g:2054:6: ()
                            // InternalDialogParser.g:2055:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getSadlStatementAccess().getSadlInstanceNameOrRefAction_0_1_5_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:2061:6: (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )?
                            int alt48=2;
                            int LA48_0 = input.LA(1);

                            if ( (LA48_0==Is) ) {
                                int LA48_1 = input.LA(2);

                                if ( (LA48_1==Another||LA48_1==Some||LA48_1==The||LA48_1==Any||LA48_1==The_1||LA48_1==An||LA48_1==An_1||LA48_1==A||LA48_1==A_1) ) {
                                    alt48=1;
                                }
                            }
                            switch (alt48) {
                                case 1 :
                                    // InternalDialogParser.g:2062:7: otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) )
                                    {
                                    otherlv_37=(Token)match(input,Is,FOLLOW_55); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_37, grammarAccess.getSadlStatementAccess().getIsKeyword_0_1_5_1_0());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							newCompositeNode(grammarAccess.getSadlStatementAccess().getAnArticleParserRuleCall_0_1_5_1_1());
                                      						
                                    }
                                    pushFollow(FOLLOW_53);
                                    ruleAnArticle();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							afterParserOrEnumRuleCall();
                                      						
                                    }
                                    // InternalDialogParser.g:2073:7: ( (lv_type_39_0= ruleSadlTypeReference ) )
                                    // InternalDialogParser.g:2074:8: (lv_type_39_0= ruleSadlTypeReference )
                                    {
                                    // InternalDialogParser.g:2074:8: (lv_type_39_0= ruleSadlTypeReference )
                                    // InternalDialogParser.g:2075:9: lv_type_39_0= ruleSadlTypeReference
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getSadlStatementAccess().getTypeSadlTypeReferenceParserRuleCall_0_1_5_1_2_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_56);
                                    lv_type_39_0=ruleSadlTypeReference();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_39_0,
                                      										"com.ge.research.sadl.SADL.SadlTypeReference");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:2093:6: ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )?
                            int alt50=3;
                            int LA50_0 = input.LA(1);

                            if ( (LA50_0==LeftSquareBracket) ) {
                                alt50=1;
                            }
                            else if ( (LA50_0==With||LA50_0==Has||(LA50_0>=Is && LA50_0<=Of)||LA50_0==Comma||(LA50_0>=RULE_ID && LA50_0<=RULE_QNAME_TERMINAL)) ) {
                                alt50=2;
                            }
                            switch (alt50) {
                                case 1 :
                                    // InternalDialogParser.g:2094:7: ( (lv_listInitializer_40_0= ruleSadlValueList ) )
                                    {
                                    // InternalDialogParser.g:2094:7: ( (lv_listInitializer_40_0= ruleSadlValueList ) )
                                    // InternalDialogParser.g:2095:8: (lv_listInitializer_40_0= ruleSadlValueList )
                                    {
                                    // InternalDialogParser.g:2095:8: (lv_listInitializer_40_0= ruleSadlValueList )
                                    // InternalDialogParser.g:2096:9: lv_listInitializer_40_0= ruleSadlValueList
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getSadlStatementAccess().getListInitializerSadlValueListParserRuleCall_0_1_5_2_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_listInitializer_40_0=ruleSadlValueList();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                                      									}
                                      									set(
                                      										current,
                                      										"listInitializer",
                                      										lv_listInitializer_40_0,
                                      										"com.ge.research.sadl.SADL.SadlValueList");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:2114:7: ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+
                                    {
                                    // InternalDialogParser.g:2114:7: ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+
                                    int cnt49=0;
                                    loop49:
                                    do {
                                        int alt49=2;
                                        int LA49_0 = input.LA(1);

                                        if ( (LA49_0==With||LA49_0==Has||(LA49_0>=Is && LA49_0<=Of)||LA49_0==Comma||(LA49_0>=RULE_ID && LA49_0<=RULE_QNAME_TERMINAL)) ) {
                                            alt49=1;
                                        }


                                        switch (alt49) {
                                    	case 1 :
                                    	    // InternalDialogParser.g:2115:8: (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer )
                                    	    {
                                    	    // InternalDialogParser.g:2115:8: (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer )
                                    	    // InternalDialogParser.g:2116:9: lv_propertyInitializers_41_0= ruleSadlPropertyInitializer
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      									newCompositeNode(grammarAccess.getSadlStatementAccess().getPropertyInitializersSadlPropertyInitializerParserRuleCall_0_1_5_2_1_0());
                                    	      								
                                    	    }
                                    	    pushFollow(FOLLOW_57);
                                    	    lv_propertyInitializers_41_0=ruleSadlPropertyInitializer();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      									if (current==null) {
                                    	      										current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                                    	      									}
                                    	      									add(
                                    	      										current,
                                    	      										"propertyInitializers",
                                    	      										lv_propertyInitializers_41_0,
                                    	      										"com.ge.research.sadl.SADL.SadlPropertyInitializer");
                                    	      									afterParserOrEnumRuleCall();
                                    	      								
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt49 >= 1 ) break loop49;
                                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(49, input);
                                                throw eee;
                                        }
                                        cnt49++;
                                    } while (true);


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 7 :
                            // InternalDialogParser.g:2136:5: ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint )
                            {
                            // InternalDialogParser.g:2136:5: ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint )
                            // InternalDialogParser.g:2137:6: () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint
                            {
                            // InternalDialogParser.g:2137:6: ()
                            // InternalDialogParser.g:2138:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndAdd(
                              								grammarAccess.getSadlStatementAccess().getSadlDisjointClassesClassesAction_0_1_6_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:2144:6: (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+
                            int cnt51=0;
                            loop51:
                            do {
                                int alt51=2;
                                int LA51_0 = input.LA(1);

                                if ( (LA51_0==And) ) {
                                    alt51=1;
                                }


                                switch (alt51) {
                            	case 1 :
                            	    // InternalDialogParser.g:2145:7: otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) )
                            	    {
                            	    otherlv_43=(Token)match(input,And,FOLLOW_8); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_43, grammarAccess.getSadlStatementAccess().getAndKeyword_0_1_6_1_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:2149:7: ( (lv_classes_44_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:2150:8: (lv_classes_44_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:2150:8: (lv_classes_44_0= ruleSadlResource )
                            	    // InternalDialogParser.g:2151:9: lv_classes_44_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getSadlStatementAccess().getClassesSadlResourceParserRuleCall_0_1_6_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_58);
                            	    lv_classes_44_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"classes",
                            	      										lv_classes_44_0,
                            	      										"com.ge.research.sadl.SADL.SadlResource");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt51 >= 1 ) break loop51;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(51, input);
                                        throw eee;
                                }
                                cnt51++;
                            } while (true);

                            otherlv_45=(Token)match(input,Are,FOLLOW_59); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_45, grammarAccess.getSadlStatementAccess().getAreKeyword_0_1_6_2());
                              					
                            }
                            otherlv_46=(Token)match(input,Disjoint,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_46, grammarAccess.getSadlStatementAccess().getDisjointKeyword_0_1_6_3());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:2181:3: ( () otherlv_48= LeftCurlyBracket ( (lv_classOrProperty_49_0= ruleSadlResource ) ) (otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) ) )* otherlv_52= RightCurlyBracket otherlv_53= Are ( ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* ) | ( () otherlv_62= Disjoint ) | ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same ) ) )
                    {
                    // InternalDialogParser.g:2181:3: ( () otherlv_48= LeftCurlyBracket ( (lv_classOrProperty_49_0= ruleSadlResource ) ) (otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) ) )* otherlv_52= RightCurlyBracket otherlv_53= Are ( ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* ) | ( () otherlv_62= Disjoint ) | ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same ) ) )
                    // InternalDialogParser.g:2182:4: () otherlv_48= LeftCurlyBracket ( (lv_classOrProperty_49_0= ruleSadlResource ) ) (otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) ) )* otherlv_52= RightCurlyBracket otherlv_53= Are ( ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* ) | ( () otherlv_62= Disjoint ) | ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same ) )
                    {
                    // InternalDialogParser.g:2182:4: ()
                    // InternalDialogParser.g:2183:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlStatementAccess().getSadlClassOrPropertyDeclarationAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_48=(Token)match(input,LeftCurlyBracket,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getSadlStatementAccess().getLeftCurlyBracketKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:2193:4: ( (lv_classOrProperty_49_0= ruleSadlResource ) )
                    // InternalDialogParser.g:2194:5: (lv_classOrProperty_49_0= ruleSadlResource )
                    {
                    // InternalDialogParser.g:2194:5: (lv_classOrProperty_49_0= ruleSadlResource )
                    // InternalDialogParser.g:2195:6: lv_classOrProperty_49_0= ruleSadlResource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlStatementAccess().getClassOrPropertySadlResourceParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_60);
                    lv_classOrProperty_49_0=ruleSadlResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                      						}
                      						add(
                      							current,
                      							"classOrProperty",
                      							lv_classOrProperty_49_0,
                      							"com.ge.research.sadl.SADL.SadlResource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:2212:4: (otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) ) )*
                    loop53:
                    do {
                        int alt53=2;
                        int LA53_0 = input.LA(1);

                        if ( (LA53_0==Comma) ) {
                            alt53=1;
                        }


                        switch (alt53) {
                    	case 1 :
                    	    // InternalDialogParser.g:2213:5: otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) )
                    	    {
                    	    otherlv_50=(Token)match(input,Comma,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_50, grammarAccess.getSadlStatementAccess().getCommaKeyword_1_3_0());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:2217:5: ( (lv_classOrProperty_51_0= ruleSadlResource ) )
                    	    // InternalDialogParser.g:2218:6: (lv_classOrProperty_51_0= ruleSadlResource )
                    	    {
                    	    // InternalDialogParser.g:2218:6: (lv_classOrProperty_51_0= ruleSadlResource )
                    	    // InternalDialogParser.g:2219:7: lv_classOrProperty_51_0= ruleSadlResource
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlStatementAccess().getClassOrPropertySadlResourceParserRuleCall_1_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_60);
                    	    lv_classOrProperty_51_0=ruleSadlResource();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"classOrProperty",
                    	      								lv_classOrProperty_51_0,
                    	      								"com.ge.research.sadl.SADL.SadlResource");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop53;
                        }
                    } while (true);

                    otherlv_52=(Token)match(input,RightCurlyBracket,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_52, grammarAccess.getSadlStatementAccess().getRightCurlyBracketKeyword_1_4());
                      			
                    }
                    otherlv_53=(Token)match(input,Are,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_53, grammarAccess.getSadlStatementAccess().getAreKeyword_1_5());
                      			
                    }
                    // InternalDialogParser.g:2245:4: ( ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* ) | ( () otherlv_62= Disjoint ) | ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same ) )
                    int alt59=3;
                    switch ( input.LA(1) ) {
                    case Instances:
                    case TopLevel:
                    case Classes:
                    case Types:
                        {
                        alt59=1;
                        }
                        break;
                    case Disjoint:
                        {
                        alt59=2;
                        }
                        break;
                    case Not:
                    case The_1:
                        {
                        alt59=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 59, 0, input);

                        throw nvae;
                    }

                    switch (alt59) {
                        case 1 :
                            // InternalDialogParser.g:2246:5: ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* )
                            {
                            // InternalDialogParser.g:2246:5: ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* )
                            // InternalDialogParser.g:2247:6: ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )*
                            {
                            // InternalDialogParser.g:2247:6: ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) )
                            int alt56=2;
                            int LA56_0 = input.LA(1);

                            if ( (LA56_0==TopLevel||LA56_0==Classes) ) {
                                alt56=1;
                            }
                            else if ( (LA56_0==Instances||LA56_0==Types) ) {
                                alt56=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 56, 0, input);

                                throw nvae;
                            }
                            switch (alt56) {
                                case 1 :
                                    // InternalDialogParser.g:2248:7: ( (otherlv_54= TopLevel )? otherlv_55= Classes )
                                    {
                                    // InternalDialogParser.g:2248:7: ( (otherlv_54= TopLevel )? otherlv_55= Classes )
                                    // InternalDialogParser.g:2249:8: (otherlv_54= TopLevel )? otherlv_55= Classes
                                    {
                                    // InternalDialogParser.g:2249:8: (otherlv_54= TopLevel )?
                                    int alt54=2;
                                    int LA54_0 = input.LA(1);

                                    if ( (LA54_0==TopLevel) ) {
                                        alt54=1;
                                    }
                                    switch (alt54) {
                                        case 1 :
                                            // InternalDialogParser.g:2250:9: otherlv_54= TopLevel
                                            {
                                            otherlv_54=(Token)match(input,TopLevel,FOLLOW_63); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(otherlv_54, grammarAccess.getSadlStatementAccess().getTopLevelKeyword_1_6_0_0_0_0());
                                              								
                                            }

                                            }
                                            break;

                                    }

                                    otherlv_55=(Token)match(input,Classes,FOLLOW_46); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_55, grammarAccess.getSadlStatementAccess().getClassesKeyword_1_6_0_0_0_1());
                                      							
                                    }

                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:2261:7: ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) )
                                    {
                                    // InternalDialogParser.g:2261:7: ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) )
                                    // InternalDialogParser.g:2262:8: ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) )
                                    {
                                    // InternalDialogParser.g:2262:8: ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) )
                                    int alt55=2;
                                    int LA55_0 = input.LA(1);

                                    if ( (LA55_0==Types) ) {
                                        alt55=1;
                                    }
                                    else if ( (LA55_0==Instances) ) {
                                        alt55=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 55, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt55) {
                                        case 1 :
                                            // InternalDialogParser.g:2263:9: ( (lv_oftype_56_0= Types ) )
                                            {
                                            // InternalDialogParser.g:2263:9: ( (lv_oftype_56_0= Types ) )
                                            // InternalDialogParser.g:2264:10: (lv_oftype_56_0= Types )
                                            {
                                            // InternalDialogParser.g:2264:10: (lv_oftype_56_0= Types )
                                            // InternalDialogParser.g:2265:11: lv_oftype_56_0= Types
                                            {
                                            lv_oftype_56_0=(Token)match(input,Types,FOLLOW_9); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_oftype_56_0, grammarAccess.getSadlStatementAccess().getOftypeTypesKeyword_1_6_0_0_1_0_0_0());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getSadlStatementRule());
                                              											}
                                              											setWithLastConsumed(current, "oftype", lv_oftype_56_0, "types");
                                              										
                                            }

                                            }


                                            }


                                            }
                                            break;
                                        case 2 :
                                            // InternalDialogParser.g:2278:9: ( (lv_oftype_57_0= Instances ) )
                                            {
                                            // InternalDialogParser.g:2278:9: ( (lv_oftype_57_0= Instances ) )
                                            // InternalDialogParser.g:2279:10: (lv_oftype_57_0= Instances )
                                            {
                                            // InternalDialogParser.g:2279:10: (lv_oftype_57_0= Instances )
                                            // InternalDialogParser.g:2280:11: lv_oftype_57_0= Instances
                                            {
                                            lv_oftype_57_0=(Token)match(input,Instances,FOLLOW_9); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_oftype_57_0, grammarAccess.getSadlStatementAccess().getOftypeInstancesKeyword_1_6_0_0_1_0_1_0());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getSadlStatementRule());
                                              											}
                                              											setWithLastConsumed(current, "oftype", lv_oftype_57_0, "instances");
                                              										
                                            }

                                            }


                                            }


                                            }
                                            break;

                                    }

                                    otherlv_58=(Token)match(input,Of,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_58, grammarAccess.getSadlStatementAccess().getOfKeyword_1_6_0_0_1_1());
                                      							
                                    }
                                    // InternalDialogParser.g:2297:8: ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) )
                                    // InternalDialogParser.g:2298:9: (lv_superElement_59_0= ruleSadlPrimaryTypeReference )
                                    {
                                    // InternalDialogParser.g:2298:9: (lv_superElement_59_0= ruleSadlPrimaryTypeReference )
                                    // InternalDialogParser.g:2299:10: lv_superElement_59_0= ruleSadlPrimaryTypeReference
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getSadlStatementAccess().getSuperElementSadlPrimaryTypeReferenceParserRuleCall_1_6_0_0_1_2_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_46);
                                    lv_superElement_59_0=ruleSadlPrimaryTypeReference();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                                      										}
                                      										set(
                                      											current,
                                      											"superElement",
                                      											lv_superElement_59_0,
                                      											"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:2318:6: ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )*
                            loop57:
                            do {
                                int alt57=2;
                                int LA57_0 = input.LA(1);

                                if ( (LA57_0==Described||LA57_0==Comma) ) {
                                    alt57=1;
                                }


                                switch (alt57) {
                            	case 1 :
                            	    // InternalDialogParser.g:2319:7: (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass )
                            	    {
                            	    // InternalDialogParser.g:2319:7: (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass )
                            	    // InternalDialogParser.g:2320:8: lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getSadlStatementAccess().getDescribedBySadlPropertyDeclarationInClassParserRuleCall_1_6_0_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_46);
                            	    lv_describedBy_60_0=ruleSadlPropertyDeclarationInClass();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"describedBy",
                            	      									lv_describedBy_60_0,
                            	      									"com.ge.research.sadl.SADL.SadlPropertyDeclarationInClass");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop57;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2339:5: ( () otherlv_62= Disjoint )
                            {
                            // InternalDialogParser.g:2339:5: ( () otherlv_62= Disjoint )
                            // InternalDialogParser.g:2340:6: () otherlv_62= Disjoint
                            {
                            // InternalDialogParser.g:2340:6: ()
                            // InternalDialogParser.g:2341:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndAdd(
                              								grammarAccess.getSadlStatementAccess().getSadlDisjointClassesTypesAction_1_6_1_0(),
                              								current);
                              						
                            }

                            }

                            otherlv_62=(Token)match(input,Disjoint,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_62, grammarAccess.getSadlStatementAccess().getDisjointKeyword_1_6_1_1());
                              					
                            }

                            }


                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:2353:5: ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same )
                            {
                            // InternalDialogParser.g:2353:5: ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same )
                            // InternalDialogParser.g:2354:6: () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same
                            {
                            // InternalDialogParser.g:2354:6: ()
                            // InternalDialogParser.g:2355:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndAdd(
                              								grammarAccess.getSadlStatementAccess().getSadlDifferentFromTypesAction_1_6_2_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:2361:6: ( (lv_complement_64_0= Not ) )?
                            int alt58=2;
                            int LA58_0 = input.LA(1);

                            if ( (LA58_0==Not) ) {
                                alt58=1;
                            }
                            switch (alt58) {
                                case 1 :
                                    // InternalDialogParser.g:2362:7: (lv_complement_64_0= Not )
                                    {
                                    // InternalDialogParser.g:2362:7: (lv_complement_64_0= Not )
                                    // InternalDialogParser.g:2363:8: lv_complement_64_0= Not
                                    {
                                    lv_complement_64_0=(Token)match(input,Not,FOLLOW_50); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_complement_64_0, grammarAccess.getSadlStatementAccess().getComplementNotKeyword_1_6_2_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getSadlStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "complement", true, "not");
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            otherlv_65=(Token)match(input,The_1,FOLLOW_51); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_65, grammarAccess.getSadlStatementAccess().getTheKeyword_1_6_2_2());
                              					
                            }
                            otherlv_66=(Token)match(input,Same,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_66, grammarAccess.getSadlStatementAccess().getSameKeyword_1_6_2_3());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:2387:3: ( () ( ruleAnArticle )? otherlv_69= Relationship otherlv_70= Of ( (lv_from_71_0= ruleSadlTypeReference ) ) otherlv_72= To ( (lv_to_73_0= ruleSadlTypeReference ) ) otherlv_74= Is ( (lv_property_75_0= ruleSadlResource ) ) )
                    {
                    // InternalDialogParser.g:2387:3: ( () ( ruleAnArticle )? otherlv_69= Relationship otherlv_70= Of ( (lv_from_71_0= ruleSadlTypeReference ) ) otherlv_72= To ( (lv_to_73_0= ruleSadlTypeReference ) ) otherlv_74= Is ( (lv_property_75_0= ruleSadlResource ) ) )
                    // InternalDialogParser.g:2388:4: () ( ruleAnArticle )? otherlv_69= Relationship otherlv_70= Of ( (lv_from_71_0= ruleSadlTypeReference ) ) otherlv_72= To ( (lv_to_73_0= ruleSadlTypeReference ) ) otherlv_74= Is ( (lv_property_75_0= ruleSadlResource ) )
                    {
                    // InternalDialogParser.g:2388:4: ()
                    // InternalDialogParser.g:2389:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlStatementAccess().getSadlPropertyAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:2395:4: ( ruleAnArticle )?
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==Another||LA60_0==Some||LA60_0==The||LA60_0==Any||LA60_0==The_1||LA60_0==An||LA60_0==An_1||LA60_0==A||LA60_0==A_1) ) {
                        alt60=1;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalDialogParser.g:2396:5: ruleAnArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getSadlStatementAccess().getAnArticleParserRuleCall_2_1());
                              				
                            }
                            pushFollow(FOLLOW_64);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_69=(Token)match(input,Relationship,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_69, grammarAccess.getSadlStatementAccess().getRelationshipKeyword_2_2());
                      			
                    }
                    otherlv_70=(Token)match(input,Of,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_70, grammarAccess.getSadlStatementAccess().getOfKeyword_2_3());
                      			
                    }
                    // InternalDialogParser.g:2412:4: ( (lv_from_71_0= ruleSadlTypeReference ) )
                    // InternalDialogParser.g:2413:5: (lv_from_71_0= ruleSadlTypeReference )
                    {
                    // InternalDialogParser.g:2413:5: (lv_from_71_0= ruleSadlTypeReference )
                    // InternalDialogParser.g:2414:6: lv_from_71_0= ruleSadlTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlStatementAccess().getFromSadlTypeReferenceParserRuleCall_2_4_0());
                      					
                    }
                    pushFollow(FOLLOW_65);
                    lv_from_71_0=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_71_0,
                      							"com.ge.research.sadl.SADL.SadlTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_72=(Token)match(input,To,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_72, grammarAccess.getSadlStatementAccess().getToKeyword_2_5());
                      			
                    }
                    // InternalDialogParser.g:2435:4: ( (lv_to_73_0= ruleSadlTypeReference ) )
                    // InternalDialogParser.g:2436:5: (lv_to_73_0= ruleSadlTypeReference )
                    {
                    // InternalDialogParser.g:2436:5: (lv_to_73_0= ruleSadlTypeReference )
                    // InternalDialogParser.g:2437:6: lv_to_73_0= ruleSadlTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlStatementAccess().getToSadlTypeReferenceParserRuleCall_2_6_0());
                      					
                    }
                    pushFollow(FOLLOW_66);
                    lv_to_73_0=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_73_0,
                      							"com.ge.research.sadl.SADL.SadlTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_74=(Token)match(input,Is,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_74, grammarAccess.getSadlStatementAccess().getIsKeyword_2_7());
                      			
                    }
                    // InternalDialogParser.g:2458:4: ( (lv_property_75_0= ruleSadlResource ) )
                    // InternalDialogParser.g:2459:5: (lv_property_75_0= ruleSadlResource )
                    {
                    // InternalDialogParser.g:2459:5: (lv_property_75_0= ruleSadlResource )
                    // InternalDialogParser.g:2460:6: lv_property_75_0= ruleSadlResource
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlStatementAccess().getPropertySadlResourceParserRuleCall_2_8_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_property_75_0=ruleSadlResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                      						}
                      						set(
                      							current,
                      							"property",
                      							lv_property_75_0,
                      							"com.ge.research.sadl.SADL.SadlResource");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:2479:3: ( ruleAnArticle this_SadlTypeReference_77= ruleSadlTypeReference ( ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* ) | ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* ) ) )
                    {
                    // InternalDialogParser.g:2479:3: ( ruleAnArticle this_SadlTypeReference_77= ruleSadlTypeReference ( ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* ) | ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* ) ) )
                    // InternalDialogParser.g:2480:4: ruleAnArticle this_SadlTypeReference_77= ruleSadlTypeReference ( ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* ) | ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* ) )
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlStatementAccess().getAnArticleParserRuleCall_3_0());
                      			
                    }
                    pushFollow(FOLLOW_53);
                    ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlStatementAccess().getSadlTypeReferenceParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_57);
                    this_SadlTypeReference_77=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SadlTypeReference_77;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    // InternalDialogParser.g:2495:4: ( ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* ) | ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* ) )
                    int alt64=2;
                    int LA64_0 = input.LA(1);

                    if ( (LA64_0==EOF||LA64_0==With||LA64_0==Has||LA64_0==Of||LA64_0==Comma||LA64_0==FullStop||LA64_0==QuestionMark||(LA64_0>=RULE_ID && LA64_0<=RULE_QNAME_TERMINAL)) ) {
                        alt64=1;
                    }
                    else if ( (LA64_0==Is) ) {
                        int LA64_2 = input.LA(2);

                        if ( (LA64_2==Another||LA64_2==Some||LA64_2==The||LA64_2==Any||LA64_2==The_1||LA64_2==An||LA64_2==An_1||LA64_2==A||LA64_2==A_1) ) {
                            alt64=2;
                        }
                        else if ( ((LA64_2>=RULE_ID && LA64_2<=RULE_QNAME_TERMINAL)) ) {
                            alt64=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 64, 2, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 64, 0, input);

                        throw nvae;
                    }
                    switch (alt64) {
                        case 1 :
                            // InternalDialogParser.g:2496:5: ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* )
                            {
                            // InternalDialogParser.g:2496:5: ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* )
                            // InternalDialogParser.g:2497:6: () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )*
                            {
                            // InternalDialogParser.g:2497:6: ()
                            // InternalDialogParser.g:2498:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getSadlStatementAccess().getSadlInstanceTypeAction_3_2_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:2504:6: ( (lv_instance_79_0= ruleSadlResource ) )?
                            int alt61=2;
                            alt61 = dfa61.predict(input);
                            switch (alt61) {
                                case 1 :
                                    // InternalDialogParser.g:2505:7: (lv_instance_79_0= ruleSadlResource )
                                    {
                                    // InternalDialogParser.g:2505:7: (lv_instance_79_0= ruleSadlResource )
                                    // InternalDialogParser.g:2506:8: lv_instance_79_0= ruleSadlResource
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getSadlStatementAccess().getInstanceSadlResourceParserRuleCall_3_2_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_57);
                                    lv_instance_79_0=ruleSadlResource();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                                      								}
                                      								set(
                                      									current,
                                      									"instance",
                                      									lv_instance_79_0,
                                      									"com.ge.research.sadl.SADL.SadlResource");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:2523:6: ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )*
                            loop62:
                            do {
                                int alt62=2;
                                int LA62_0 = input.LA(1);

                                if ( (LA62_0==With||LA62_0==Has||(LA62_0>=Is && LA62_0<=Of)||LA62_0==Comma||(LA62_0>=RULE_ID && LA62_0<=RULE_QNAME_TERMINAL)) ) {
                                    alt62=1;
                                }


                                switch (alt62) {
                            	case 1 :
                            	    // InternalDialogParser.g:2524:7: (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer )
                            	    {
                            	    // InternalDialogParser.g:2524:7: (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer )
                            	    // InternalDialogParser.g:2525:8: lv_propertyInitializers_80_0= ruleSadlPropertyInitializer
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getSadlStatementAccess().getPropertyInitializersSadlPropertyInitializerParserRuleCall_3_2_0_2_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_57);
                            	    lv_propertyInitializers_80_0=ruleSadlPropertyInitializer();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"propertyInitializers",
                            	      									lv_propertyInitializers_80_0,
                            	      									"com.ge.research.sadl.SADL.SadlPropertyInitializer");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop62;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2544:5: ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* )
                            {
                            // InternalDialogParser.g:2544:5: ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* )
                            // InternalDialogParser.g:2545:6: () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )*
                            {
                            // InternalDialogParser.g:2545:6: ()
                            // InternalDialogParser.g:2546:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getSadlStatementAccess().getSadlNecessaryAndSufficientSubjectAction_3_2_1_0(),
                              								current);
                              						
                            }

                            }

                            otherlv_82=(Token)match(input,Is,FOLLOW_55); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_82, grammarAccess.getSadlStatementAccess().getIsKeyword_3_2_1_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSadlStatementAccess().getAnArticleParserRuleCall_3_2_1_2());
                              					
                            }
                            pushFollow(FOLLOW_8);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						afterParserOrEnumRuleCall();
                              					
                            }
                            // InternalDialogParser.g:2563:6: ( (lv_object_84_0= ruleSadlResource ) )
                            // InternalDialogParser.g:2564:7: (lv_object_84_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:2564:7: (lv_object_84_0= ruleSadlResource )
                            // InternalDialogParser.g:2565:8: lv_object_84_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlStatementAccess().getObjectSadlResourceParserRuleCall_3_2_1_3_0());
                              							
                            }
                            pushFollow(FOLLOW_67);
                            lv_object_84_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                              								}
                              								set(
                              									current,
                              									"object",
                              									lv_object_84_0,
                              									"com.ge.research.sadl.SADL.SadlResource");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_85=(Token)match(input,Only,FOLLOW_68); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_85, grammarAccess.getSadlStatementAccess().getOnlyKeyword_3_2_1_4());
                              					
                            }
                            otherlv_86=(Token)match(input,If,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_86, grammarAccess.getSadlStatementAccess().getIfKeyword_3_2_1_5());
                              					
                            }
                            // InternalDialogParser.g:2590:6: ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) )
                            // InternalDialogParser.g:2591:7: (lv_propConditions_87_0= ruleSadlPropertyCondition )
                            {
                            // InternalDialogParser.g:2591:7: (lv_propConditions_87_0= ruleSadlPropertyCondition )
                            // InternalDialogParser.g:2592:8: lv_propConditions_87_0= ruleSadlPropertyCondition
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlStatementAccess().getPropConditionsSadlPropertyConditionParserRuleCall_3_2_1_6_0());
                              							
                            }
                            pushFollow(FOLLOW_69);
                            lv_propConditions_87_0=ruleSadlPropertyCondition();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                              								}
                              								add(
                              									current,
                              									"propConditions",
                              									lv_propConditions_87_0,
                              									"com.ge.research.sadl.SADL.SadlPropertyCondition");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:2609:6: (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )*
                            loop63:
                            do {
                                int alt63=2;
                                int LA63_0 = input.LA(1);

                                if ( (LA63_0==And) ) {
                                    alt63=1;
                                }


                                switch (alt63) {
                            	case 1 :
                            	    // InternalDialogParser.g:2610:7: otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) )
                            	    {
                            	    otherlv_88=(Token)match(input,And,FOLLOW_8); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_88, grammarAccess.getSadlStatementAccess().getAndKeyword_3_2_1_7_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:2614:7: ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) )
                            	    // InternalDialogParser.g:2615:8: (lv_propConditions_89_0= ruleSadlPropertyCondition )
                            	    {
                            	    // InternalDialogParser.g:2615:8: (lv_propConditions_89_0= ruleSadlPropertyCondition )
                            	    // InternalDialogParser.g:2616:9: lv_propConditions_89_0= ruleSadlPropertyCondition
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getSadlStatementAccess().getPropConditionsSadlPropertyConditionParserRuleCall_3_2_1_7_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_69);
                            	    lv_propConditions_89_0=ruleSadlPropertyCondition();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getSadlStatementRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"propConditions",
                            	      										lv_propConditions_89_0,
                            	      										"com.ge.research.sadl.SADL.SadlPropertyCondition");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop63;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlStatement"


    // $ANTLR start "entryRuleSadlPropertyCondition"
    // InternalDialogParser.g:2641:1: entryRuleSadlPropertyCondition returns [EObject current=null] : iv_ruleSadlPropertyCondition= ruleSadlPropertyCondition EOF ;
    public final EObject entryRuleSadlPropertyCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPropertyCondition = null;


        try {
            // InternalDialogParser.g:2641:62: (iv_ruleSadlPropertyCondition= ruleSadlPropertyCondition EOF )
            // InternalDialogParser.g:2642:2: iv_ruleSadlPropertyCondition= ruleSadlPropertyCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPropertyConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPropertyCondition=ruleSadlPropertyCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPropertyCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPropertyCondition"


    // $ANTLR start "ruleSadlPropertyCondition"
    // InternalDialogParser.g:2648:1: ruleSadlPropertyCondition returns [EObject current=null] : ( ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) ) ) ;
    public final EObject ruleSadlPropertyCondition() throws RecognitionException {
        EObject current = null;

        EObject lv_cond_1_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2654:2: ( ( ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) ) ) )
            // InternalDialogParser.g:2655:2: ( ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) ) )
            {
            // InternalDialogParser.g:2655:2: ( ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) ) )
            // InternalDialogParser.g:2656:3: ( ( ruleQNAME ) ) ( (lv_cond_1_0= ruleSadlCondition ) )
            {
            // InternalDialogParser.g:2656:3: ( ( ruleQNAME ) )
            // InternalDialogParser.g:2657:4: ( ruleQNAME )
            {
            // InternalDialogParser.g:2657:4: ( ruleQNAME )
            // InternalDialogParser.g:2658:5: ruleQNAME
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlPropertyConditionRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlPropertyConditionAccess().getPropertySadlResourceCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_70);
            ruleQNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:2672:3: ( (lv_cond_1_0= ruleSadlCondition ) )
            // InternalDialogParser.g:2673:4: (lv_cond_1_0= ruleSadlCondition )
            {
            // InternalDialogParser.g:2673:4: (lv_cond_1_0= ruleSadlCondition )
            // InternalDialogParser.g:2674:5: lv_cond_1_0= ruleSadlCondition
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlPropertyConditionAccess().getCondSadlConditionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_cond_1_0=ruleSadlCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSadlPropertyConditionRule());
              					}
              					add(
              						current,
              						"cond",
              						lv_cond_1_0,
              						"com.ge.research.sadl.SADL.SadlCondition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPropertyCondition"


    // $ANTLR start "entryRuleSadlPropertyInitializer"
    // InternalDialogParser.g:2695:1: entryRuleSadlPropertyInitializer returns [EObject current=null] : iv_ruleSadlPropertyInitializer= ruleSadlPropertyInitializer EOF ;
    public final EObject entryRuleSadlPropertyInitializer() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPropertyInitializer = null;


        try {
            // InternalDialogParser.g:2695:64: (iv_ruleSadlPropertyInitializer= ruleSadlPropertyInitializer EOF )
            // InternalDialogParser.g:2696:2: iv_ruleSadlPropertyInitializer= ruleSadlPropertyInitializer EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPropertyInitializerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPropertyInitializer=ruleSadlPropertyInitializer();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPropertyInitializer; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPropertyInitializer"


    // $ANTLR start "ruleSadlPropertyInitializer"
    // InternalDialogParser.g:2702:1: ruleSadlPropertyInitializer returns [EObject current=null] : ( ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) | ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) ) | ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) ) ) ;
    public final EObject ruleSadlPropertyInitializer() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        EObject lv_value_4_0 = null;

        EObject lv_value_6_0 = null;

        EObject lv_value_17_0 = null;

        EObject lv_value_19_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2708:2: ( ( ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) | ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) ) | ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) ) ) )
            // InternalDialogParser.g:2709:2: ( ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) | ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) ) | ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) ) )
            {
            // InternalDialogParser.g:2709:2: ( ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) | ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) ) | ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) ) )
            int alt72=3;
            switch ( input.LA(1) ) {
            case Comma:
                {
                switch ( input.LA(2) ) {
                case With:
                case Has:
                case RULE_ID:
                case RULE_QNAME_TERMINAL:
                    {
                    alt72=1;
                    }
                    break;
                case Of:
                    {
                    alt72=3;
                    }
                    break;
                case Is:
                    {
                    alt72=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 1, input);

                    throw nvae;
                }

                }
                break;
            case With:
            case Has:
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt72=1;
                }
                break;
            case Is:
                {
                alt72=2;
                }
                break;
            case Of:
                {
                alt72=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;
            }

            switch (alt72) {
                case 1 :
                    // InternalDialogParser.g:2710:3: ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) )
                    {
                    // InternalDialogParser.g:2710:3: ( (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) )
                    // InternalDialogParser.g:2711:4: (otherlv_0= Comma )? (otherlv_1= With | otherlv_2= Has )? ( ( ruleQNAME ) ) ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) )
                    {
                    // InternalDialogParser.g:2711:4: (otherlv_0= Comma )?
                    int alt66=2;
                    int LA66_0 = input.LA(1);

                    if ( (LA66_0==Comma) ) {
                        alt66=1;
                    }
                    switch (alt66) {
                        case 1 :
                            // InternalDialogParser.g:2712:5: otherlv_0= Comma
                            {
                            otherlv_0=(Token)match(input,Comma,FOLLOW_71); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_0, grammarAccess.getSadlPropertyInitializerAccess().getCommaKeyword_0_0());
                              				
                            }

                            }
                            break;

                    }

                    // InternalDialogParser.g:2717:4: (otherlv_1= With | otherlv_2= Has )?
                    int alt67=3;
                    int LA67_0 = input.LA(1);

                    if ( (LA67_0==With) ) {
                        alt67=1;
                    }
                    else if ( (LA67_0==Has) ) {
                        alt67=2;
                    }
                    switch (alt67) {
                        case 1 :
                            // InternalDialogParser.g:2718:5: otherlv_1= With
                            {
                            otherlv_1=(Token)match(input,With,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getSadlPropertyInitializerAccess().getWithKeyword_0_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2723:5: otherlv_2= Has
                            {
                            otherlv_2=(Token)match(input,Has,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getSadlPropertyInitializerAccess().getHasKeyword_0_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalDialogParser.g:2728:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:2729:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:2729:5: ( ruleQNAME )
                    // InternalDialogParser.g:2730:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getPropertySadlResourceCrossReference_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_72);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:2744:4: ( ( (lv_value_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) )
                    int alt68=2;
                    int LA68_0 = input.LA(1);

                    if ( (LA68_0==False||LA68_0==Known||LA68_0==True||LA68_0==Not||LA68_0==PI||LA68_0==HyphenMinus||LA68_0==LeftSquareBracket||LA68_0==E_1||LA68_0==RULE_NUMBER||(LA68_0>=RULE_ID && LA68_0<=RULE_STRING)) ) {
                        alt68=1;
                    }
                    else if ( (LA68_0==LeftParenthesis) ) {
                        alt68=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 68, 0, input);

                        throw nvae;
                    }
                    switch (alt68) {
                        case 1 :
                            // InternalDialogParser.g:2745:5: ( (lv_value_4_0= ruleSadlExplicitValue ) )
                            {
                            // InternalDialogParser.g:2745:5: ( (lv_value_4_0= ruleSadlExplicitValue ) )
                            // InternalDialogParser.g:2746:6: (lv_value_4_0= ruleSadlExplicitValue )
                            {
                            // InternalDialogParser.g:2746:6: (lv_value_4_0= ruleSadlExplicitValue )
                            // InternalDialogParser.g:2747:7: lv_value_4_0= ruleSadlExplicitValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlExplicitValueParserRuleCall_0_3_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_value_4_0=ruleSadlExplicitValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_4_0,
                              								"com.ge.research.sadl.SADL.SadlExplicitValue");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2765:5: (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis )
                            {
                            // InternalDialogParser.g:2765:5: (otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis )
                            // InternalDialogParser.g:2766:6: otherlv_5= LeftParenthesis ( (lv_value_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis
                            {
                            otherlv_5=(Token)match(input,LeftParenthesis,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getSadlPropertyInitializerAccess().getLeftParenthesisKeyword_0_3_1_0());
                              					
                            }
                            // InternalDialogParser.g:2770:6: ( (lv_value_6_0= ruleSadlNestedInstance ) )
                            // InternalDialogParser.g:2771:7: (lv_value_6_0= ruleSadlNestedInstance )
                            {
                            // InternalDialogParser.g:2771:7: (lv_value_6_0= ruleSadlNestedInstance )
                            // InternalDialogParser.g:2772:8: lv_value_6_0= ruleSadlNestedInstance
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlNestedInstanceParserRuleCall_0_3_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_73);
                            lv_value_6_0=ruleSadlNestedInstance();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
                              								}
                              								set(
                              									current,
                              									"value",
                              									lv_value_6_0,
                              									"com.ge.research.sadl.SADL.SadlNestedInstance");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_7=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getSadlPropertyInitializerAccess().getRightParenthesisKeyword_0_3_1_2());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:2797:3: ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) )
                    {
                    // InternalDialogParser.g:2797:3: ( (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) ) )
                    // InternalDialogParser.g:2798:4: (otherlv_8= Comma )? otherlv_9= Is ( ( ruleQNAME ) ) otherlv_11= Of ( ( ruleQNAME ) )
                    {
                    // InternalDialogParser.g:2798:4: (otherlv_8= Comma )?
                    int alt69=2;
                    int LA69_0 = input.LA(1);

                    if ( (LA69_0==Comma) ) {
                        alt69=1;
                    }
                    switch (alt69) {
                        case 1 :
                            // InternalDialogParser.g:2799:5: otherlv_8= Comma
                            {
                            otherlv_8=(Token)match(input,Comma,FOLLOW_66); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getSadlPropertyInitializerAccess().getCommaKeyword_1_0());
                              				
                            }

                            }
                            break;

                    }

                    otherlv_9=(Token)match(input,Is,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSadlPropertyInitializerAccess().getIsKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:2808:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:2809:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:2809:5: ( ruleQNAME )
                    // InternalDialogParser.g:2810:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getPropertySadlResourceCrossReference_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_11=(Token)match(input,Of,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getSadlPropertyInitializerAccess().getOfKeyword_1_3());
                      			
                    }
                    // InternalDialogParser.g:2828:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:2829:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:2829:5: ( ruleQNAME )
                    // InternalDialogParser.g:2830:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getTypeSadlResourceCrossReference_1_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:2846:3: ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) )
                    {
                    // InternalDialogParser.g:2846:3: ( (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) ) )
                    // InternalDialogParser.g:2847:4: (otherlv_13= Comma )? otherlv_14= Of ( ( ruleQNAME ) ) otherlv_16= Is ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) )
                    {
                    // InternalDialogParser.g:2847:4: (otherlv_13= Comma )?
                    int alt70=2;
                    int LA70_0 = input.LA(1);

                    if ( (LA70_0==Comma) ) {
                        alt70=1;
                    }
                    switch (alt70) {
                        case 1 :
                            // InternalDialogParser.g:2848:5: otherlv_13= Comma
                            {
                            otherlv_13=(Token)match(input,Comma,FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_13, grammarAccess.getSadlPropertyInitializerAccess().getCommaKeyword_2_0());
                              				
                            }

                            }
                            break;

                    }

                    otherlv_14=(Token)match(input,Of,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getSadlPropertyInitializerAccess().getOfKeyword_2_1());
                      			
                    }
                    // InternalDialogParser.g:2857:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:2858:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:2858:5: ( ruleQNAME )
                    // InternalDialogParser.g:2859:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyInitializerRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getPropertySadlResourceCrossReference_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_66);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_16=(Token)match(input,Is,FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getSadlPropertyInitializerAccess().getIsKeyword_2_3());
                      			
                    }
                    // InternalDialogParser.g:2877:4: ( ( (lv_value_17_0= ruleSadlExplicitValue ) ) | (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis ) )
                    int alt71=2;
                    int LA71_0 = input.LA(1);

                    if ( (LA71_0==False||LA71_0==Known||LA71_0==True||LA71_0==Not||LA71_0==PI||LA71_0==HyphenMinus||LA71_0==LeftSquareBracket||LA71_0==E_1||LA71_0==RULE_NUMBER||(LA71_0>=RULE_ID && LA71_0<=RULE_STRING)) ) {
                        alt71=1;
                    }
                    else if ( (LA71_0==LeftParenthesis) ) {
                        alt71=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 71, 0, input);

                        throw nvae;
                    }
                    switch (alt71) {
                        case 1 :
                            // InternalDialogParser.g:2878:5: ( (lv_value_17_0= ruleSadlExplicitValue ) )
                            {
                            // InternalDialogParser.g:2878:5: ( (lv_value_17_0= ruleSadlExplicitValue ) )
                            // InternalDialogParser.g:2879:6: (lv_value_17_0= ruleSadlExplicitValue )
                            {
                            // InternalDialogParser.g:2879:6: (lv_value_17_0= ruleSadlExplicitValue )
                            // InternalDialogParser.g:2880:7: lv_value_17_0= ruleSadlExplicitValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlExplicitValueParserRuleCall_2_4_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_value_17_0=ruleSadlExplicitValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
                              							}
                              							set(
                              								current,
                              								"value",
                              								lv_value_17_0,
                              								"com.ge.research.sadl.SADL.SadlExplicitValue");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:2898:5: (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis )
                            {
                            // InternalDialogParser.g:2898:5: (otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis )
                            // InternalDialogParser.g:2899:6: otherlv_18= LeftParenthesis ( (lv_value_19_0= ruleSadlNestedInstance ) ) otherlv_20= RightParenthesis
                            {
                            otherlv_18=(Token)match(input,LeftParenthesis,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_18, grammarAccess.getSadlPropertyInitializerAccess().getLeftParenthesisKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:2903:6: ( (lv_value_19_0= ruleSadlNestedInstance ) )
                            // InternalDialogParser.g:2904:7: (lv_value_19_0= ruleSadlNestedInstance )
                            {
                            // InternalDialogParser.g:2904:7: (lv_value_19_0= ruleSadlNestedInstance )
                            // InternalDialogParser.g:2905:8: lv_value_19_0= ruleSadlNestedInstance
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlPropertyInitializerAccess().getValueSadlNestedInstanceParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_73);
                            lv_value_19_0=ruleSadlNestedInstance();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlPropertyInitializerRule());
                              								}
                              								set(
                              									current,
                              									"value",
                              									lv_value_19_0,
                              									"com.ge.research.sadl.SADL.SadlNestedInstance");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_20=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_20, grammarAccess.getSadlPropertyInitializerAccess().getRightParenthesisKeyword_2_4_1_2());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPropertyInitializer"


    // $ANTLR start "entryRuleSadlNestedInstance"
    // InternalDialogParser.g:2933:1: entryRuleSadlNestedInstance returns [EObject current=null] : iv_ruleSadlNestedInstance= ruleSadlNestedInstance EOF ;
    public final EObject entryRuleSadlNestedInstance() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlNestedInstance = null;


        try {
            // InternalDialogParser.g:2933:59: (iv_ruleSadlNestedInstance= ruleSadlNestedInstance EOF )
            // InternalDialogParser.g:2934:2: iv_ruleSadlNestedInstance= ruleSadlNestedInstance EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlNestedInstanceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlNestedInstance=ruleSadlNestedInstance();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlNestedInstance; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlNestedInstance"


    // $ANTLR start "ruleSadlNestedInstance"
    // InternalDialogParser.g:2940:1: ruleSadlNestedInstance returns [EObject current=null] : ( () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) ) ) ;
    public final EObject ruleSadlNestedInstance() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_instance_1_0 = null;

        AntlrDatatypeRuleToken lv_article_3_0 = null;

        EObject lv_type_4_0 = null;

        EObject lv_propertyInitializers_5_0 = null;

        AntlrDatatypeRuleToken lv_article_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_instance_8_0 = null;

        EObject lv_propertyInitializers_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:2946:2: ( ( () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) ) ) )
            // InternalDialogParser.g:2947:2: ( () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) ) )
            {
            // InternalDialogParser.g:2947:2: ( () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) ) )
            // InternalDialogParser.g:2948:3: () ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) )
            {
            // InternalDialogParser.g:2948:3: ()
            // InternalDialogParser.g:2949:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSadlNestedInstanceAccess().getSadlNestedInstanceAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:2955:3: ( ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* ) | ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* ) )
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( ((LA76_0>=RULE_ID && LA76_0<=RULE_QNAME_TERMINAL)) ) {
                alt76=1;
            }
            else if ( (LA76_0==Another||LA76_0==Some||LA76_0==The||LA76_0==Any||LA76_0==The_1||LA76_0==An||LA76_0==An_1||LA76_0==A||LA76_0==A_1) ) {
                alt76=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }
            switch (alt76) {
                case 1 :
                    // InternalDialogParser.g:2956:4: ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* )
                    {
                    // InternalDialogParser.g:2956:4: ( ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )* )
                    // InternalDialogParser.g:2957:5: ( (lv_instance_1_0= ruleSadlResource ) ) otherlv_2= Is ( (lv_article_3_0= ruleAnArticle ) ) ( (lv_type_4_0= ruleSadlTypeReference ) ) ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )*
                    {
                    // InternalDialogParser.g:2957:5: ( (lv_instance_1_0= ruleSadlResource ) )
                    // InternalDialogParser.g:2958:6: (lv_instance_1_0= ruleSadlResource )
                    {
                    // InternalDialogParser.g:2958:6: (lv_instance_1_0= ruleSadlResource )
                    // InternalDialogParser.g:2959:7: lv_instance_1_0= ruleSadlResource
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getInstanceSadlResourceParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_66);
                    lv_instance_1_0=ruleSadlResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"instance",
                      								lv_instance_1_0,
                      								"com.ge.research.sadl.SADL.SadlResource");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,Is,FOLLOW_55); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getSadlNestedInstanceAccess().getIsKeyword_1_0_1());
                      				
                    }
                    // InternalDialogParser.g:2980:5: ( (lv_article_3_0= ruleAnArticle ) )
                    // InternalDialogParser.g:2981:6: (lv_article_3_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:2981:6: (lv_article_3_0= ruleAnArticle )
                    // InternalDialogParser.g:2982:7: lv_article_3_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getArticleAnArticleParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_53);
                    lv_article_3_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"article",
                      								lv_article_3_0,
                      								"com.ge.research.sadl.SADL.AnArticle");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:2999:5: ( (lv_type_4_0= ruleSadlTypeReference ) )
                    // InternalDialogParser.g:3000:6: (lv_type_4_0= ruleSadlTypeReference )
                    {
                    // InternalDialogParser.g:3000:6: (lv_type_4_0= ruleSadlTypeReference )
                    // InternalDialogParser.g:3001:7: lv_type_4_0= ruleSadlTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getTypeSadlTypeReferenceParserRuleCall_1_0_3_0());
                      						
                    }
                    pushFollow(FOLLOW_57);
                    lv_type_4_0=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_4_0,
                      								"com.ge.research.sadl.SADL.SadlTypeReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:3018:5: ( (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer ) )*
                    loop73:
                    do {
                        int alt73=2;
                        int LA73_0 = input.LA(1);

                        if ( (LA73_0==With||LA73_0==Has||(LA73_0>=Is && LA73_0<=Of)||LA73_0==Comma||(LA73_0>=RULE_ID && LA73_0<=RULE_QNAME_TERMINAL)) ) {
                            alt73=1;
                        }


                        switch (alt73) {
                    	case 1 :
                    	    // InternalDialogParser.g:3019:6: (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer )
                    	    {
                    	    // InternalDialogParser.g:3019:6: (lv_propertyInitializers_5_0= ruleSadlPropertyInitializer )
                    	    // InternalDialogParser.g:3020:7: lv_propertyInitializers_5_0= ruleSadlPropertyInitializer
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getPropertyInitializersSadlPropertyInitializerParserRuleCall_1_0_4_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_57);
                    	    lv_propertyInitializers_5_0=ruleSadlPropertyInitializer();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"propertyInitializers",
                    	      								lv_propertyInitializers_5_0,
                    	      								"com.ge.research.sadl.SADL.SadlPropertyInitializer");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop73;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3039:4: ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* )
                    {
                    // InternalDialogParser.g:3039:4: ( ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )* )
                    // InternalDialogParser.g:3040:5: ( (lv_article_6_0= ruleAnArticle ) ) ( (lv_type_7_0= ruleSadlTypeReference ) ) ( (lv_instance_8_0= ruleSadlResource ) )? ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )*
                    {
                    // InternalDialogParser.g:3040:5: ( (lv_article_6_0= ruleAnArticle ) )
                    // InternalDialogParser.g:3041:6: (lv_article_6_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:3041:6: (lv_article_6_0= ruleAnArticle )
                    // InternalDialogParser.g:3042:7: lv_article_6_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getArticleAnArticleParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_53);
                    lv_article_6_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"article",
                      								lv_article_6_0,
                      								"com.ge.research.sadl.SADL.AnArticle");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:3059:5: ( (lv_type_7_0= ruleSadlTypeReference ) )
                    // InternalDialogParser.g:3060:6: (lv_type_7_0= ruleSadlTypeReference )
                    {
                    // InternalDialogParser.g:3060:6: (lv_type_7_0= ruleSadlTypeReference )
                    // InternalDialogParser.g:3061:7: lv_type_7_0= ruleSadlTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getTypeSadlTypeReferenceParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_57);
                    lv_type_7_0=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_7_0,
                      								"com.ge.research.sadl.SADL.SadlTypeReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:3078:5: ( (lv_instance_8_0= ruleSadlResource ) )?
                    int alt74=2;
                    alt74 = dfa74.predict(input);
                    switch (alt74) {
                        case 1 :
                            // InternalDialogParser.g:3079:6: (lv_instance_8_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:3079:6: (lv_instance_8_0= ruleSadlResource )
                            // InternalDialogParser.g:3080:7: lv_instance_8_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getInstanceSadlResourceParserRuleCall_1_1_2_0());
                              						
                            }
                            pushFollow(FOLLOW_57);
                            lv_instance_8_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                              							}
                              							set(
                              								current,
                              								"instance",
                              								lv_instance_8_0,
                              								"com.ge.research.sadl.SADL.SadlResource");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:3097:5: ( (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer ) )*
                    loop75:
                    do {
                        int alt75=2;
                        int LA75_0 = input.LA(1);

                        if ( (LA75_0==With||LA75_0==Has||(LA75_0>=Is && LA75_0<=Of)||LA75_0==Comma||(LA75_0>=RULE_ID && LA75_0<=RULE_QNAME_TERMINAL)) ) {
                            alt75=1;
                        }


                        switch (alt75) {
                    	case 1 :
                    	    // InternalDialogParser.g:3098:6: (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer )
                    	    {
                    	    // InternalDialogParser.g:3098:6: (lv_propertyInitializers_9_0= ruleSadlPropertyInitializer )
                    	    // InternalDialogParser.g:3099:7: lv_propertyInitializers_9_0= ruleSadlPropertyInitializer
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlNestedInstanceAccess().getPropertyInitializersSadlPropertyInitializerParserRuleCall_1_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_57);
                    	    lv_propertyInitializers_9_0=ruleSadlPropertyInitializer();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlNestedInstanceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"propertyInitializers",
                    	      								lv_propertyInitializers_9_0,
                    	      								"com.ge.research.sadl.SADL.SadlPropertyInitializer");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop75;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlNestedInstance"


    // $ANTLR start "entryRuleSadlResource"
    // InternalDialogParser.g:3122:1: entryRuleSadlResource returns [EObject current=null] : iv_ruleSadlResource= ruleSadlResource EOF ;
    public final EObject entryRuleSadlResource() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlResource = null;


        try {
            // InternalDialogParser.g:3122:53: (iv_ruleSadlResource= ruleSadlResource EOF )
            // InternalDialogParser.g:3123:2: iv_ruleSadlResource= ruleSadlResource EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlResourceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlResource=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlResource; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlResource"


    // $ANTLR start "ruleSadlResource"
    // InternalDialogParser.g:3129:1: ruleSadlResource returns [EObject current=null] : ( ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )* ) ;
    public final EObject ruleSadlResource() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_1_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3135:2: ( ( ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )* ) )
            // InternalDialogParser.g:3136:2: ( ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )* )
            {
            // InternalDialogParser.g:3136:2: ( ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )* )
            // InternalDialogParser.g:3137:3: ( ( ruleQNAME ) ) ( (lv_annotations_1_0= ruleSadlAnnotation ) )*
            {
            // InternalDialogParser.g:3137:3: ( ( ruleQNAME ) )
            // InternalDialogParser.g:3138:4: ( ruleQNAME )
            {
            // InternalDialogParser.g:3138:4: ( ruleQNAME )
            // InternalDialogParser.g:3139:5: ruleQNAME
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSadlResourceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlResourceAccess().getNameSadlResourceCrossReference_0_0());
              				
            }
            pushFollow(FOLLOW_74);
            ruleQNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:3153:3: ( (lv_annotations_1_0= ruleSadlAnnotation ) )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==LeftParenthesis) ) {
                    int LA77_2 = input.LA(2);

                    if ( (LA77_2==Alias||LA77_2==Note) ) {
                        alt77=1;
                    }


                }
                else if ( (LA77_0==Comma) ) {
                    int LA77_3 = input.LA(2);

                    if ( (LA77_3==LeftParenthesis) ) {
                        int LA77_5 = input.LA(3);

                        if ( (LA77_5==Alias||LA77_5==Note) ) {
                            alt77=1;
                        }


                    }


                }


                switch (alt77) {
            	case 1 :
            	    // InternalDialogParser.g:3154:4: (lv_annotations_1_0= ruleSadlAnnotation )
            	    {
            	    // InternalDialogParser.g:3154:4: (lv_annotations_1_0= ruleSadlAnnotation )
            	    // InternalDialogParser.g:3155:5: lv_annotations_1_0= ruleSadlAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlResourceAccess().getAnnotationsSadlAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_annotations_1_0=ruleSadlAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlResourceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"com.ge.research.sadl.SADL.SadlAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlResource"


    // $ANTLR start "entryRuleSadlDataTypeFacet"
    // InternalDialogParser.g:3176:1: entryRuleSadlDataTypeFacet returns [EObject current=null] : iv_ruleSadlDataTypeFacet= ruleSadlDataTypeFacet EOF ;
    public final EObject entryRuleSadlDataTypeFacet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlDataTypeFacet = null;


        try {
            // InternalDialogParser.g:3176:58: (iv_ruleSadlDataTypeFacet= ruleSadlDataTypeFacet EOF )
            // InternalDialogParser.g:3177:2: iv_ruleSadlDataTypeFacet= ruleSadlDataTypeFacet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlDataTypeFacetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlDataTypeFacet=ruleSadlDataTypeFacet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlDataTypeFacet; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlDataTypeFacet"


    // $ANTLR start "ruleSadlDataTypeFacet"
    // InternalDialogParser.g:3183:1: ruleSadlDataTypeFacet returns [EObject current=null] : ( ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) ) | ( (lv_regex_8_0= RULE_STRING ) ) | (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) ) | (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket ) ) ;
    public final EObject ruleSadlDataTypeFacet() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_minInclusive_2_0=null;
        Token otherlv_4=null;
        Token lv_maxInclusive_6_0=null;
        Token otherlv_7=null;
        Token lv_regex_8_0=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        Token lv_maxlen_13_2=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        AntlrDatatypeRuleToken lv_min_3_0 = null;

        AntlrDatatypeRuleToken lv_max_5_0 = null;

        AntlrDatatypeRuleToken lv_len_10_0 = null;

        AntlrDatatypeRuleToken lv_minlen_11_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_13_1 = null;

        AntlrDatatypeRuleToken lv_values_15_0 = null;

        AntlrDatatypeRuleToken lv_values_17_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3189:2: ( ( ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) ) | ( (lv_regex_8_0= RULE_STRING ) ) | (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) ) | (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket ) ) )
            // InternalDialogParser.g:3190:2: ( ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) ) | ( (lv_regex_8_0= RULE_STRING ) ) | (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) ) | (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket ) )
            {
            // InternalDialogParser.g:3190:2: ( ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) ) | ( (lv_regex_8_0= RULE_STRING ) ) | (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) ) | (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket ) )
            int alt86=4;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
            case LeftSquareBracket:
                {
                alt86=1;
                }
                break;
            case RULE_STRING:
                {
                alt86=2;
                }
                break;
            case Length:
                {
                alt86=3;
                }
                break;
            case LeftCurlyBracket:
                {
                alt86=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 86, 0, input);

                throw nvae;
            }

            switch (alt86) {
                case 1 :
                    // InternalDialogParser.g:3191:3: ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) )
                    {
                    // InternalDialogParser.g:3191:3: ( () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis ) )
                    // InternalDialogParser.g:3192:4: () (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) ) ( (lv_min_3_0= ruleFacetNumber ) )? otherlv_4= Comma ( (lv_max_5_0= ruleFacetNumber ) )? ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis )
                    {
                    // InternalDialogParser.g:3192:4: ()
                    // InternalDialogParser.g:3193:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlDataTypeFacetAccess().getSadlDataTypeFacetAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:3199:4: (otherlv_1= LeftParenthesis | ( (lv_minInclusive_2_0= LeftSquareBracket ) ) )
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==LeftParenthesis) ) {
                        alt78=1;
                    }
                    else if ( (LA78_0==LeftSquareBracket) ) {
                        alt78=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 78, 0, input);

                        throw nvae;
                    }
                    switch (alt78) {
                        case 1 :
                            // InternalDialogParser.g:3200:5: otherlv_1= LeftParenthesis
                            {
                            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_75); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getSadlDataTypeFacetAccess().getLeftParenthesisKeyword_0_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3205:5: ( (lv_minInclusive_2_0= LeftSquareBracket ) )
                            {
                            // InternalDialogParser.g:3205:5: ( (lv_minInclusive_2_0= LeftSquareBracket ) )
                            // InternalDialogParser.g:3206:6: (lv_minInclusive_2_0= LeftSquareBracket )
                            {
                            // InternalDialogParser.g:3206:6: (lv_minInclusive_2_0= LeftSquareBracket )
                            // InternalDialogParser.g:3207:7: lv_minInclusive_2_0= LeftSquareBracket
                            {
                            lv_minInclusive_2_0=(Token)match(input,LeftSquareBracket,FOLLOW_75); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_minInclusive_2_0, grammarAccess.getSadlDataTypeFacetAccess().getMinInclusiveLeftSquareBracketKeyword_0_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
                              							}
                              							setWithLastConsumed(current, "minInclusive", true, "[");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:3220:4: ( (lv_min_3_0= ruleFacetNumber ) )?
                    int alt79=2;
                    int LA79_0 = input.LA(1);

                    if ( (LA79_0==HyphenMinus||LA79_0==RULE_NUMBER) ) {
                        alt79=1;
                    }
                    switch (alt79) {
                        case 1 :
                            // InternalDialogParser.g:3221:5: (lv_min_3_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:3221:5: (lv_min_3_0= ruleFacetNumber )
                            // InternalDialogParser.g:3222:6: lv_min_3_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMinFacetNumberParserRuleCall_0_2_0());
                              					
                            }
                            pushFollow(FOLLOW_76);
                            lv_min_3_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                              						}
                              						set(
                              							current,
                              							"min",
                              							lv_min_3_0,
                              							"com.ge.research.sadl.SADL.FacetNumber");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,Comma,FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSadlDataTypeFacetAccess().getCommaKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:3243:4: ( (lv_max_5_0= ruleFacetNumber ) )?
                    int alt80=2;
                    int LA80_0 = input.LA(1);

                    if ( (LA80_0==HyphenMinus||LA80_0==RULE_NUMBER) ) {
                        alt80=1;
                    }
                    switch (alt80) {
                        case 1 :
                            // InternalDialogParser.g:3244:5: (lv_max_5_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:3244:5: (lv_max_5_0= ruleFacetNumber )
                            // InternalDialogParser.g:3245:6: lv_max_5_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMaxFacetNumberParserRuleCall_0_4_0());
                              					
                            }
                            pushFollow(FOLLOW_78);
                            lv_max_5_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                              						}
                              						set(
                              							current,
                              							"max",
                              							lv_max_5_0,
                              							"com.ge.research.sadl.SADL.FacetNumber");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:3262:4: ( ( (lv_maxInclusive_6_0= RightSquareBracket ) ) | otherlv_7= RightParenthesis )
                    int alt81=2;
                    int LA81_0 = input.LA(1);

                    if ( (LA81_0==RightSquareBracket) ) {
                        alt81=1;
                    }
                    else if ( (LA81_0==RightParenthesis) ) {
                        alt81=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 81, 0, input);

                        throw nvae;
                    }
                    switch (alt81) {
                        case 1 :
                            // InternalDialogParser.g:3263:5: ( (lv_maxInclusive_6_0= RightSquareBracket ) )
                            {
                            // InternalDialogParser.g:3263:5: ( (lv_maxInclusive_6_0= RightSquareBracket ) )
                            // InternalDialogParser.g:3264:6: (lv_maxInclusive_6_0= RightSquareBracket )
                            {
                            // InternalDialogParser.g:3264:6: (lv_maxInclusive_6_0= RightSquareBracket )
                            // InternalDialogParser.g:3265:7: lv_maxInclusive_6_0= RightSquareBracket
                            {
                            lv_maxInclusive_6_0=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_maxInclusive_6_0, grammarAccess.getSadlDataTypeFacetAccess().getMaxInclusiveRightSquareBracketKeyword_0_5_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
                              							}
                              							setWithLastConsumed(current, "maxInclusive", true, "]");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3278:5: otherlv_7= RightParenthesis
                            {
                            otherlv_7=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getSadlDataTypeFacetAccess().getRightParenthesisKeyword_0_5_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3285:3: ( (lv_regex_8_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:3285:3: ( (lv_regex_8_0= RULE_STRING ) )
                    // InternalDialogParser.g:3286:4: (lv_regex_8_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:3286:4: (lv_regex_8_0= RULE_STRING )
                    // InternalDialogParser.g:3287:5: lv_regex_8_0= RULE_STRING
                    {
                    lv_regex_8_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_regex_8_0, grammarAccess.getSadlDataTypeFacetAccess().getRegexSTRINGTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"regex",
                      						lv_regex_8_0,
                      						"com.ge.research.sadl.SADL.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:3304:3: (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) )
                    {
                    // InternalDialogParser.g:3304:3: (otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) ) )
                    // InternalDialogParser.g:3305:4: otherlv_9= Length ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) )
                    {
                    otherlv_9=(Token)match(input,Length,FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSadlDataTypeFacetAccess().getLengthKeyword_2_0());
                      			
                    }
                    // InternalDialogParser.g:3309:4: ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) )
                    int alt83=2;
                    alt83 = dfa83.predict(input);
                    switch (alt83) {
                        case 1 :
                            // InternalDialogParser.g:3310:5: ( (lv_len_10_0= ruleFacetNumber ) )
                            {
                            // InternalDialogParser.g:3310:5: ( (lv_len_10_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:3311:6: (lv_len_10_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:3311:6: (lv_len_10_0= ruleFacetNumber )
                            // InternalDialogParser.g:3312:7: lv_len_10_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getLenFacetNumberParserRuleCall_2_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_len_10_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                              							}
                              							set(
                              								current,
                              								"len",
                              								lv_len_10_0,
                              								"com.ge.research.sadl.SADL.FacetNumber");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3330:5: ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) )
                            {
                            // InternalDialogParser.g:3330:5: ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) )
                            // InternalDialogParser.g:3331:6: ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) )
                            {
                            // InternalDialogParser.g:3331:6: ( (lv_minlen_11_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:3332:7: (lv_minlen_11_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:3332:7: (lv_minlen_11_0= ruleFacetNumber )
                            // InternalDialogParser.g:3333:8: lv_minlen_11_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMinlenFacetNumberParserRuleCall_2_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_80);
                            lv_minlen_11_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                              								}
                              								set(
                              									current,
                              									"minlen",
                              									lv_minlen_11_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_12=(Token)match(input,HyphenMinus,FOLLOW_81); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getSadlDataTypeFacetAccess().getHyphenMinusKeyword_2_1_1_1());
                              					
                            }
                            // InternalDialogParser.g:3354:6: ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) )
                            // InternalDialogParser.g:3355:7: ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) )
                            {
                            // InternalDialogParser.g:3355:7: ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) )
                            // InternalDialogParser.g:3356:8: (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk )
                            {
                            // InternalDialogParser.g:3356:8: (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk )
                            int alt82=2;
                            int LA82_0 = input.LA(1);

                            if ( (LA82_0==HyphenMinus||LA82_0==RULE_NUMBER) ) {
                                alt82=1;
                            }
                            else if ( (LA82_0==Asterisk) ) {
                                alt82=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 82, 0, input);

                                throw nvae;
                            }
                            switch (alt82) {
                                case 1 :
                                    // InternalDialogParser.g:3357:9: lv_maxlen_13_1= ruleFacetNumber
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getMaxlenFacetNumberParserRuleCall_2_1_1_2_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_maxlen_13_1=ruleFacetNumber();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                                      									}
                                      									set(
                                      										current,
                                      										"maxlen",
                                      										lv_maxlen_13_1,
                                      										"com.ge.research.sadl.SADL.FacetNumber");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:3373:9: lv_maxlen_13_2= Asterisk
                                    {
                                    lv_maxlen_13_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_maxlen_13_2, grammarAccess.getSadlDataTypeFacetAccess().getMaxlenAsteriskKeyword_2_1_1_2_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getSadlDataTypeFacetRule());
                                      									}
                                      									setWithLastConsumed(current, "maxlen", lv_maxlen_13_2, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:3390:3: (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:3390:3: (otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket )
                    // InternalDialogParser.g:3391:4: otherlv_14= LeftCurlyBracket ( (lv_values_15_0= ruleFacetValue ) ) ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )* otherlv_18= RightCurlyBracket
                    {
                    otherlv_14=(Token)match(input,LeftCurlyBracket,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getSadlDataTypeFacetAccess().getLeftCurlyBracketKeyword_3_0());
                      			
                    }
                    // InternalDialogParser.g:3395:4: ( (lv_values_15_0= ruleFacetValue ) )
                    // InternalDialogParser.g:3396:5: (lv_values_15_0= ruleFacetValue )
                    {
                    // InternalDialogParser.g:3396:5: (lv_values_15_0= ruleFacetValue )
                    // InternalDialogParser.g:3397:6: lv_values_15_0= ruleFacetValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getValuesFacetValueParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_83);
                    lv_values_15_0=ruleFacetValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                      						}
                      						add(
                      							current,
                      							"values",
                      							lv_values_15_0,
                      							"com.ge.research.sadl.SADL.FacetValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:3414:4: ( (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) ) )*
                    loop85:
                    do {
                        int alt85=2;
                        int LA85_0 = input.LA(1);

                        if ( ((LA85_0>=Comma && LA85_0<=HyphenMinus)||LA85_0==RULE_NUMBER||LA85_0==RULE_STRING) ) {
                            alt85=1;
                        }


                        switch (alt85) {
                    	case 1 :
                    	    // InternalDialogParser.g:3415:5: (otherlv_16= Comma )? ( (lv_values_17_0= ruleFacetValue ) )
                    	    {
                    	    // InternalDialogParser.g:3415:5: (otherlv_16= Comma )?
                    	    int alt84=2;
                    	    int LA84_0 = input.LA(1);

                    	    if ( (LA84_0==Comma) ) {
                    	        alt84=1;
                    	    }
                    	    switch (alt84) {
                    	        case 1 :
                    	            // InternalDialogParser.g:3416:6: otherlv_16= Comma
                    	            {
                    	            otherlv_16=(Token)match(input,Comma,FOLLOW_82); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_16, grammarAccess.getSadlDataTypeFacetAccess().getCommaKeyword_3_2_0());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    // InternalDialogParser.g:3421:5: ( (lv_values_17_0= ruleFacetValue ) )
                    	    // InternalDialogParser.g:3422:6: (lv_values_17_0= ruleFacetValue )
                    	    {
                    	    // InternalDialogParser.g:3422:6: (lv_values_17_0= ruleFacetValue )
                    	    // InternalDialogParser.g:3423:7: lv_values_17_0= ruleFacetValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlDataTypeFacetAccess().getValuesFacetValueParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_83);
                    	    lv_values_17_0=ruleFacetValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlDataTypeFacetRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"values",
                    	      								lv_values_17_0,
                    	      								"com.ge.research.sadl.SADL.FacetValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop85;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getSadlDataTypeFacetAccess().getRightCurlyBracketKeyword_3_3());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlDataTypeFacet"


    // $ANTLR start "entryRuleFacetNumber"
    // InternalDialogParser.g:3450:1: entryRuleFacetNumber returns [String current=null] : iv_ruleFacetNumber= ruleFacetNumber EOF ;
    public final String entryRuleFacetNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFacetNumber = null;


        try {
            // InternalDialogParser.g:3450:51: (iv_ruleFacetNumber= ruleFacetNumber EOF )
            // InternalDialogParser.g:3451:2: iv_ruleFacetNumber= ruleFacetNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFacetNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFacetNumber=ruleFacetNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFacetNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFacetNumber"


    // $ANTLR start "ruleFacetNumber"
    // InternalDialogParser.g:3457:1: ruleFacetNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber ) ;
    public final AntlrDatatypeRuleToken ruleFacetNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_AnyNumber_1 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3463:2: ( ( (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber ) )
            // InternalDialogParser.g:3464:2: ( (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber )
            {
            // InternalDialogParser.g:3464:2: ( (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber )
            // InternalDialogParser.g:3465:3: (kw= HyphenMinus )? this_AnyNumber_1= ruleAnyNumber
            {
            // InternalDialogParser.g:3465:3: (kw= HyphenMinus )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==HyphenMinus) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalDialogParser.g:3466:4: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getFacetNumberAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFacetNumberAccess().getAnyNumberParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_2);
            this_AnyNumber_1=ruleAnyNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_AnyNumber_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFacetNumber"


    // $ANTLR start "entryRuleFacetValue"
    // InternalDialogParser.g:3486:1: entryRuleFacetValue returns [String current=null] : iv_ruleFacetValue= ruleFacetValue EOF ;
    public final String entryRuleFacetValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFacetValue = null;


        try {
            // InternalDialogParser.g:3486:50: (iv_ruleFacetValue= ruleFacetValue EOF )
            // InternalDialogParser.g:3487:2: iv_ruleFacetValue= ruleFacetValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFacetValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFacetValue=ruleFacetValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFacetValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFacetValue"


    // $ANTLR start "ruleFacetValue"
    // InternalDialogParser.g:3493:1: ruleFacetValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_FacetNumber_1= ruleFacetNumber ) ;
    public final AntlrDatatypeRuleToken ruleFacetValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        AntlrDatatypeRuleToken this_FacetNumber_1 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3499:2: ( (this_STRING_0= RULE_STRING | this_FacetNumber_1= ruleFacetNumber ) )
            // InternalDialogParser.g:3500:2: (this_STRING_0= RULE_STRING | this_FacetNumber_1= ruleFacetNumber )
            {
            // InternalDialogParser.g:3500:2: (this_STRING_0= RULE_STRING | this_FacetNumber_1= ruleFacetNumber )
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==RULE_STRING) ) {
                alt88=1;
            }
            else if ( (LA88_0==HyphenMinus||LA88_0==RULE_NUMBER) ) {
                alt88=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }
            switch (alt88) {
                case 1 :
                    // InternalDialogParser.g:3501:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getFacetValueAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3509:3: this_FacetNumber_1= ruleFacetNumber
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFacetValueAccess().getFacetNumberParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FacetNumber_1=ruleFacetNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_FacetNumber_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFacetValue"


    // $ANTLR start "entryRuleSadlTypeReference"
    // InternalDialogParser.g:3523:1: entryRuleSadlTypeReference returns [EObject current=null] : iv_ruleSadlTypeReference= ruleSadlTypeReference EOF ;
    public final EObject entryRuleSadlTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlTypeReference = null;


        try {
            // InternalDialogParser.g:3523:58: (iv_ruleSadlTypeReference= ruleSadlTypeReference EOF )
            // InternalDialogParser.g:3524:2: iv_ruleSadlTypeReference= ruleSadlTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlTypeReference=ruleSadlTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlTypeReference"


    // $ANTLR start "ruleSadlTypeReference"
    // InternalDialogParser.g:3530:1: ruleSadlTypeReference returns [EObject current=null] : this_SadlUnionType_0= ruleSadlUnionType ;
    public final EObject ruleSadlTypeReference() throws RecognitionException {
        EObject current = null;

        EObject this_SadlUnionType_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3536:2: (this_SadlUnionType_0= ruleSadlUnionType )
            // InternalDialogParser.g:3537:2: this_SadlUnionType_0= ruleSadlUnionType
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getSadlTypeReferenceAccess().getSadlUnionTypeParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_SadlUnionType_0=ruleSadlUnionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SadlUnionType_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlTypeReference"


    // $ANTLR start "entryRuleSadlUnionType"
    // InternalDialogParser.g:3548:1: entryRuleSadlUnionType returns [EObject current=null] : iv_ruleSadlUnionType= ruleSadlUnionType EOF ;
    public final EObject entryRuleSadlUnionType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlUnionType = null;


        try {
            // InternalDialogParser.g:3548:54: (iv_ruleSadlUnionType= ruleSadlUnionType EOF )
            // InternalDialogParser.g:3549:2: iv_ruleSadlUnionType= ruleSadlUnionType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlUnionTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlUnionType=ruleSadlUnionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlUnionType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlUnionType"


    // $ANTLR start "ruleSadlUnionType"
    // InternalDialogParser.g:3555:1: ruleSadlUnionType returns [EObject current=null] : (this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )* ) ;
    public final EObject ruleSadlUnionType() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_SadlIntersectionType_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3561:2: ( (this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )* ) )
            // InternalDialogParser.g:3562:2: (this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )* )
            {
            // InternalDialogParser.g:3562:2: (this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )* )
            // InternalDialogParser.g:3563:3: this_SadlIntersectionType_0= ruleSadlIntersectionType ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSadlUnionTypeAccess().getSadlIntersectionTypeParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_85);
            this_SadlIntersectionType_0=ruleSadlIntersectionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SadlIntersectionType_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:3571:3: ( () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) ) )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==Or) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // InternalDialogParser.g:3572:4: () otherlv_2= Or ( (lv_right_3_0= ruleSadlIntersectionType ) )
            	    {
            	    // InternalDialogParser.g:3572:4: ()
            	    // InternalDialogParser.g:3573:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getSadlUnionTypeAccess().getSadlUnionTypeLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    otherlv_2=(Token)match(input,Or,FOLLOW_53); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getSadlUnionTypeAccess().getOrKeyword_1_1());
            	      			
            	    }
            	    // InternalDialogParser.g:3583:4: ( (lv_right_3_0= ruleSadlIntersectionType ) )
            	    // InternalDialogParser.g:3584:5: (lv_right_3_0= ruleSadlIntersectionType )
            	    {
            	    // InternalDialogParser.g:3584:5: (lv_right_3_0= ruleSadlIntersectionType )
            	    // InternalDialogParser.g:3585:6: lv_right_3_0= ruleSadlIntersectionType
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSadlUnionTypeAccess().getRightSadlIntersectionTypeParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_85);
            	    lv_right_3_0=ruleSadlIntersectionType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSadlUnionTypeRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.SadlIntersectionType");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlUnionType"


    // $ANTLR start "entryRuleSadlIntersectionType"
    // InternalDialogParser.g:3607:1: entryRuleSadlIntersectionType returns [EObject current=null] : iv_ruleSadlIntersectionType= ruleSadlIntersectionType EOF ;
    public final EObject entryRuleSadlIntersectionType() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlIntersectionType = null;


        try {
            // InternalDialogParser.g:3607:61: (iv_ruleSadlIntersectionType= ruleSadlIntersectionType EOF )
            // InternalDialogParser.g:3608:2: iv_ruleSadlIntersectionType= ruleSadlIntersectionType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlIntersectionTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlIntersectionType=ruleSadlIntersectionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlIntersectionType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlIntersectionType"


    // $ANTLR start "ruleSadlIntersectionType"
    // InternalDialogParser.g:3614:1: ruleSadlIntersectionType returns [EObject current=null] : (this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )* ) ;
    public final EObject ruleSadlIntersectionType() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject this_SadlPrimaryTypeReference_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3620:2: ( (this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )* ) )
            // InternalDialogParser.g:3621:2: (this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )* )
            {
            // InternalDialogParser.g:3621:2: (this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )* )
            // InternalDialogParser.g:3622:3: this_SadlPrimaryTypeReference_0= ruleSadlPrimaryTypeReference ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSadlIntersectionTypeAccess().getSadlPrimaryTypeReferenceParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_69);
            this_SadlPrimaryTypeReference_0=ruleSadlPrimaryTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SadlPrimaryTypeReference_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:3630:3: ( () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) ) )*
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==And) ) {
                    alt90=1;
                }


                switch (alt90) {
            	case 1 :
            	    // InternalDialogParser.g:3631:4: () otherlv_2= And ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) )
            	    {
            	    // InternalDialogParser.g:3631:4: ()
            	    // InternalDialogParser.g:3632:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getSadlIntersectionTypeAccess().getSadlIntersectionTypeLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    otherlv_2=(Token)match(input,And,FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getSadlIntersectionTypeAccess().getAndKeyword_1_1());
            	      			
            	    }
            	    // InternalDialogParser.g:3642:4: ( (lv_right_3_0= ruleSadlPrimaryTypeReference ) )
            	    // InternalDialogParser.g:3643:5: (lv_right_3_0= ruleSadlPrimaryTypeReference )
            	    {
            	    // InternalDialogParser.g:3643:5: (lv_right_3_0= ruleSadlPrimaryTypeReference )
            	    // InternalDialogParser.g:3644:6: lv_right_3_0= ruleSadlPrimaryTypeReference
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getSadlIntersectionTypeAccess().getRightSadlPrimaryTypeReferenceParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_69);
            	    lv_right_3_0=ruleSadlPrimaryTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getSadlIntersectionTypeRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlIntersectionType"


    // $ANTLR start "entryRuleSadlPrimaryTypeReference"
    // InternalDialogParser.g:3666:1: entryRuleSadlPrimaryTypeReference returns [EObject current=null] : iv_ruleSadlPrimaryTypeReference= ruleSadlPrimaryTypeReference EOF ;
    public final EObject entryRuleSadlPrimaryTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPrimaryTypeReference = null;


        try {
            // InternalDialogParser.g:3666:65: (iv_ruleSadlPrimaryTypeReference= ruleSadlPrimaryTypeReference EOF )
            // InternalDialogParser.g:3667:2: iv_ruleSadlPrimaryTypeReference= ruleSadlPrimaryTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPrimaryTypeReference=ruleSadlPrimaryTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPrimaryTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPrimaryTypeReference"


    // $ANTLR start "ruleSadlPrimaryTypeReference"
    // InternalDialogParser.g:3673:1: ruleSadlPrimaryTypeReference returns [EObject current=null] : ( ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? ) | ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? ) | (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis ) | (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket ) ) ;
    public final EObject ruleSadlPrimaryTypeReference() throws RecognitionException {
        EObject current = null;

        Token lv_list_2_0=null;
        Token lv_list_5_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Enumerator lv_primitiveType_4_0 = null;

        EObject this_SadlPropertyCondition_7 = null;

        EObject this_SadlTypeReference_10 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3679:2: ( ( ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? ) | ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? ) | (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis ) | (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket ) ) )
            // InternalDialogParser.g:3680:2: ( ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? ) | ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? ) | (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis ) | (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket ) )
            {
            // InternalDialogParser.g:3680:2: ( ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? ) | ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? ) | (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis ) | (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket ) )
            int alt93=4;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt93=1;
                }
                break;
            case NonNegativeInteger:
            case NonPositiveInteger:
            case NegativeInteger:
            case PositiveInteger:
            case AnySimpleType:
            case Base64Binary:
            case UnsignedByte:
            case UnsignedInt:
            case GYearMonth:
            case GMonthDay:
            case HexBinary:
            case DateTime:
            case Duration:
            case Boolean:
            case Decimal:
            case Integer:
            case AnyURI:
            case Double:
            case GMonth:
            case String:
            case Float:
            case GYear:
            case Byte:
            case Date:
            case GDay:
            case Long:
            case Time:
            case Int:
                {
                alt93=2;
                }
                break;
            case LeftParenthesis:
                {
                alt93=3;
                }
                break;
            case LeftCurlyBracket:
                {
                alt93=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 93, 0, input);

                throw nvae;
            }

            switch (alt93) {
                case 1 :
                    // InternalDialogParser.g:3681:3: ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? )
                    {
                    // InternalDialogParser.g:3681:3: ( () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )? )
                    // InternalDialogParser.g:3682:4: () ( ( ruleQNAME ) ) ( (lv_list_2_0= List ) )?
                    {
                    // InternalDialogParser.g:3682:4: ()
                    // InternalDialogParser.g:3683:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlSimpleTypeReferenceAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:3689:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:3690:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:3690:5: ( ruleQNAME )
                    // InternalDialogParser.g:3691:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPrimaryTypeReferenceRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getTypeSadlResourceCrossReference_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_86);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:3705:4: ( (lv_list_2_0= List ) )?
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( (LA91_0==List) ) {
                        alt91=1;
                    }
                    switch (alt91) {
                        case 1 :
                            // InternalDialogParser.g:3706:5: (lv_list_2_0= List )
                            {
                            // InternalDialogParser.g:3706:5: (lv_list_2_0= List )
                            // InternalDialogParser.g:3707:6: lv_list_2_0= List
                            {
                            lv_list_2_0=(Token)match(input,List,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_list_2_0, grammarAccess.getSadlPrimaryTypeReferenceAccess().getListListKeyword_0_2_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getSadlPrimaryTypeReferenceRule());
                              						}
                              						setWithLastConsumed(current, "list", true, "List");
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3721:3: ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? )
                    {
                    // InternalDialogParser.g:3721:3: ( () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )? )
                    // InternalDialogParser.g:3722:4: () ( (lv_primitiveType_4_0= ruleSadlDataType ) ) ( (lv_list_5_0= List ) )?
                    {
                    // InternalDialogParser.g:3722:4: ()
                    // InternalDialogParser.g:3723:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlPrimitiveDataTypeAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:3729:4: ( (lv_primitiveType_4_0= ruleSadlDataType ) )
                    // InternalDialogParser.g:3730:5: (lv_primitiveType_4_0= ruleSadlDataType )
                    {
                    // InternalDialogParser.g:3730:5: (lv_primitiveType_4_0= ruleSadlDataType )
                    // InternalDialogParser.g:3731:6: lv_primitiveType_4_0= ruleSadlDataType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getPrimitiveTypeSadlDataTypeEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_86);
                    lv_primitiveType_4_0=ruleSadlDataType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPrimaryTypeReferenceRule());
                      						}
                      						set(
                      							current,
                      							"primitiveType",
                      							lv_primitiveType_4_0,
                      							"com.ge.research.sadl.SADL.SadlDataType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:3748:4: ( (lv_list_5_0= List ) )?
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( (LA92_0==List) ) {
                        alt92=1;
                    }
                    switch (alt92) {
                        case 1 :
                            // InternalDialogParser.g:3749:5: (lv_list_5_0= List )
                            {
                            // InternalDialogParser.g:3749:5: (lv_list_5_0= List )
                            // InternalDialogParser.g:3750:6: lv_list_5_0= List
                            {
                            lv_list_5_0=(Token)match(input,List,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_list_5_0, grammarAccess.getSadlPrimaryTypeReferenceAccess().getListListKeyword_1_2_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getSadlPrimaryTypeReferenceRule());
                              						}
                              						setWithLastConsumed(current, "list", true, "List");
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:3764:3: (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis )
                    {
                    // InternalDialogParser.g:3764:3: (otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis )
                    // InternalDialogParser.g:3765:4: otherlv_6= LeftParenthesis this_SadlPropertyCondition_7= ruleSadlPropertyCondition otherlv_8= RightParenthesis
                    {
                    otherlv_6=(Token)match(input,LeftParenthesis,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSadlPrimaryTypeReferenceAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlPropertyConditionParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_73);
                    this_SadlPropertyCondition_7=ruleSadlPropertyCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SadlPropertyCondition_7;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_8=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSadlPrimaryTypeReferenceAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:3783:3: (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:3783:3: (otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket )
                    // InternalDialogParser.g:3784:4: otherlv_9= LeftCurlyBracket this_SadlTypeReference_10= ruleSadlTypeReference otherlv_11= RightCurlyBracket
                    {
                    otherlv_9=(Token)match(input,LeftCurlyBracket,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSadlPrimaryTypeReferenceAccess().getLeftCurlyBracketKeyword_3_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getSadlPrimaryTypeReferenceAccess().getSadlTypeReferenceParserRuleCall_3_1());
                      			
                    }
                    pushFollow(FOLLOW_87);
                    this_SadlTypeReference_10=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SadlTypeReference_10;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_11=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getSadlPrimaryTypeReferenceAccess().getRightCurlyBracketKeyword_3_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPrimaryTypeReference"


    // $ANTLR start "entryRuleSadlPropertyDeclarationInClass"
    // InternalDialogParser.g:3805:1: entryRuleSadlPropertyDeclarationInClass returns [EObject current=null] : iv_ruleSadlPropertyDeclarationInClass= ruleSadlPropertyDeclarationInClass EOF ;
    public final EObject entryRuleSadlPropertyDeclarationInClass() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPropertyDeclarationInClass = null;


        try {
            // InternalDialogParser.g:3805:71: (iv_ruleSadlPropertyDeclarationInClass= ruleSadlPropertyDeclarationInClass EOF )
            // InternalDialogParser.g:3806:2: iv_ruleSadlPropertyDeclarationInClass= ruleSadlPropertyDeclarationInClass EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPropertyDeclarationInClassRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPropertyDeclarationInClass=ruleSadlPropertyDeclarationInClass();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPropertyDeclarationInClass; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPropertyDeclarationInClass"


    // $ANTLR start "ruleSadlPropertyDeclarationInClass"
    // InternalDialogParser.g:3812:1: ruleSadlPropertyDeclarationInClass returns [EObject current=null] : ( (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )* ) ;
    public final EObject ruleSadlPropertyDeclarationInClass() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_nameDeclarations_3_0 = null;

        EObject lv_restrictions_4_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3818:2: ( ( (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )* ) )
            // InternalDialogParser.g:3819:2: ( (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )* )
            {
            // InternalDialogParser.g:3819:2: ( (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )* )
            // InternalDialogParser.g:3820:3: (otherlv_0= Comma )? otherlv_1= Described otherlv_2= By ( (lv_nameDeclarations_3_0= ruleSadlResource ) ) ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )*
            {
            // InternalDialogParser.g:3820:3: (otherlv_0= Comma )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==Comma) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalDialogParser.g:3821:4: otherlv_0= Comma
                    {
                    otherlv_0=(Token)match(input,Comma,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSadlPropertyDeclarationInClassAccess().getCommaKeyword_0());
                      			
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,Described,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSadlPropertyDeclarationInClassAccess().getDescribedKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,By,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getSadlPropertyDeclarationInClassAccess().getByKeyword_2());
              		
            }
            // InternalDialogParser.g:3834:3: ( (lv_nameDeclarations_3_0= ruleSadlResource ) )
            // InternalDialogParser.g:3835:4: (lv_nameDeclarations_3_0= ruleSadlResource )
            {
            // InternalDialogParser.g:3835:4: (lv_nameDeclarations_3_0= ruleSadlResource )
            // InternalDialogParser.g:3836:5: lv_nameDeclarations_3_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlPropertyDeclarationInClassAccess().getNameDeclarationsSadlResourceParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_48);
            lv_nameDeclarations_3_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSadlPropertyDeclarationInClassRule());
              					}
              					add(
              						current,
              						"nameDeclarations",
              						lv_nameDeclarations_3_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:3853:3: ( (lv_restrictions_4_0= ruleSadlPropertyRestriction ) )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==Describes||LA95_0==Always||LA95_0==Must||LA95_0==Only||LA95_0==With||LA95_0==Can||LA95_0==Has||(LA95_0>=Is && LA95_0<=Of)) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalDialogParser.g:3854:4: (lv_restrictions_4_0= ruleSadlPropertyRestriction )
            	    {
            	    // InternalDialogParser.g:3854:4: (lv_restrictions_4_0= ruleSadlPropertyRestriction )
            	    // InternalDialogParser.g:3855:5: lv_restrictions_4_0= ruleSadlPropertyRestriction
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSadlPropertyDeclarationInClassAccess().getRestrictionsSadlPropertyRestrictionParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_48);
            	    lv_restrictions_4_0=ruleSadlPropertyRestriction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSadlPropertyDeclarationInClassRule());
            	      					}
            	      					add(
            	      						current,
            	      						"restrictions",
            	      						lv_restrictions_4_0,
            	      						"com.ge.research.sadl.SADL.SadlPropertyRestriction");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPropertyDeclarationInClass"


    // $ANTLR start "entryRuleSadlPropertyRestriction"
    // InternalDialogParser.g:3876:1: entryRuleSadlPropertyRestriction returns [EObject current=null] : iv_ruleSadlPropertyRestriction= ruleSadlPropertyRestriction EOF ;
    public final EObject entryRuleSadlPropertyRestriction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlPropertyRestriction = null;


        try {
            // InternalDialogParser.g:3876:64: (iv_ruleSadlPropertyRestriction= ruleSadlPropertyRestriction EOF )
            // InternalDialogParser.g:3877:2: iv_ruleSadlPropertyRestriction= ruleSadlPropertyRestriction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlPropertyRestrictionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlPropertyRestriction=ruleSadlPropertyRestriction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlPropertyRestriction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlPropertyRestriction"


    // $ANTLR start "ruleSadlPropertyRestriction"
    // InternalDialogParser.g:3883:1: ruleSadlPropertyRestriction returns [EObject current=null] : (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) ) ;
    public final EObject ruleSadlPropertyRestriction() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_singleValued_9_0=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_typeonly_14_1=null;
        Token lv_typeonly_14_2=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_24=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        Token otherlv_37=null;
        Token lv_level_38_0=null;
        Token otherlv_39=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token otherlv_44=null;
        Token lv_inverse_45_0=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_49=null;
        Token otherlv_50=null;
        Token otherlv_51=null;
        Token otherlv_52=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_59=null;
        Token otherlv_60=null;
        Token otherlv_61=null;
        Token otherlv_62=null;
        Token otherlv_63=null;
        Token otherlv_65=null;
        Token otherlv_67=null;
        EObject this_SadlCondition_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_range_15_0 = null;

        EObject lv_facet_16_0 = null;

        EObject lv_defValue_40_0 = null;

        EObject lv_values_53_0 = null;

        EObject lv_values_55_0 = null;

        EObject lv_values_64_0 = null;

        EObject lv_values_66_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:3889:2: ( (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) ) )
            // InternalDialogParser.g:3890:2: (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) )
            {
            // InternalDialogParser.g:3890:2: (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) )
            int alt106=11;
            alt106 = dfa106.predict(input);
            switch (alt106) {
                case 1 :
                    // InternalDialogParser.g:3891:3: this_SadlCondition_0= ruleSadlCondition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getSadlConditionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlCondition_0=ruleSadlCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlCondition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:3900:3: ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) )
                    {
                    // InternalDialogParser.g:3900:3: ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) )
                    // InternalDialogParser.g:3901:4: () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) )
                    {
                    // InternalDialogParser.g:3901:4: ()
                    // InternalDialogParser.g:3902:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlTypeAssociationAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:3908:4: (otherlv_2= Describes | otherlv_3= Of )
                    int alt96=2;
                    int LA96_0 = input.LA(1);

                    if ( (LA96_0==Describes) ) {
                        alt96=1;
                    }
                    else if ( (LA96_0==Of) ) {
                        alt96=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 96, 0, input);

                        throw nvae;
                    }
                    switch (alt96) {
                        case 1 :
                            // InternalDialogParser.g:3909:5: otherlv_2= Describes
                            {
                            otherlv_2=(Token)match(input,Describes,FOLLOW_53); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getSadlPropertyRestrictionAccess().getDescribesKeyword_1_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3914:5: otherlv_3= Of
                            {
                            otherlv_3=(Token)match(input,Of,FOLLOW_53); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalDialogParser.g:3919:4: ( (lv_domain_4_0= ruleSadlTypeReference ) )
                    // InternalDialogParser.g:3920:5: (lv_domain_4_0= ruleSadlTypeReference )
                    {
                    // InternalDialogParser.g:3920:5: (lv_domain_4_0= ruleSadlTypeReference )
                    // InternalDialogParser.g:3921:6: lv_domain_4_0= ruleSadlTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getDomainSadlTypeReferenceParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_domain_4_0=ruleSadlTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      						set(
                      							current,
                      							"domain",
                      							lv_domain_4_0,
                      							"com.ge.research.sadl.SADL.SadlTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:3940:3: ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) )
                    {
                    // InternalDialogParser.g:3940:3: ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) )
                    // InternalDialogParser.g:3941:4: () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) )
                    {
                    // InternalDialogParser.g:3941:4: ()
                    // InternalDialogParser.g:3942:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlRangeRestrictionAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:3948:4: (otherlv_6= Has | otherlv_7= With )
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( (LA97_0==Has) ) {
                        alt97=1;
                    }
                    else if ( (LA97_0==With) ) {
                        alt97=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 97, 0, input);

                        throw nvae;
                    }
                    switch (alt97) {
                        case 1 :
                            // InternalDialogParser.g:3949:5: otherlv_6= Has
                            {
                            otherlv_6=(Token)match(input,Has,FOLLOW_90); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getSadlPropertyRestrictionAccess().getHasKeyword_2_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3954:5: otherlv_7= With
                            {
                            otherlv_7=(Token)match(input,With,FOLLOW_90); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_7, grammarAccess.getSadlPropertyRestrictionAccess().getWithKeyword_2_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalDialogParser.g:3959:4: ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values )
                    int alt98=2;
                    int LA98_0 = input.LA(1);

                    if ( (LA98_0==A_1) ) {
                        alt98=1;
                    }
                    else if ( (LA98_0==Values) ) {
                        alt98=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 98, 0, input);

                        throw nvae;
                    }
                    switch (alt98) {
                        case 1 :
                            // InternalDialogParser.g:3960:5: (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value )
                            {
                            // InternalDialogParser.g:3960:5: (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value )
                            // InternalDialogParser.g:3961:6: otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value
                            {
                            otherlv_8=(Token)match(input,A_1,FOLLOW_91); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getSadlPropertyRestrictionAccess().getAKeyword_2_2_0_0());
                              					
                            }
                            // InternalDialogParser.g:3965:6: ( (lv_singleValued_9_0= Single ) )
                            // InternalDialogParser.g:3966:7: (lv_singleValued_9_0= Single )
                            {
                            // InternalDialogParser.g:3966:7: (lv_singleValued_9_0= Single )
                            // InternalDialogParser.g:3967:8: lv_singleValued_9_0= Single
                            {
                            lv_singleValued_9_0=(Token)match(input,Single,FOLLOW_92); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_singleValued_9_0, grammarAccess.getSadlPropertyRestrictionAccess().getSingleValuedSingleKeyword_2_2_0_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                              								}
                              								setWithLastConsumed(current, "singleValued", true, "single");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,Value,FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSadlPropertyRestrictionAccess().getValueKeyword_2_2_0_2());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:3985:5: otherlv_11= Values
                            {
                            otherlv_11=(Token)match(input,Values,FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_11, grammarAccess.getSadlPropertyRestrictionAccess().getValuesKeyword_2_2_1());
                              				
                            }

                            }
                            break;

                    }

                    otherlv_12=(Token)match(input,Of,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_2_3());
                      			
                    }
                    otherlv_13=(Token)match(input,Type,FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getSadlPropertyRestrictionAccess().getTypeKeyword_2_4());
                      			
                    }
                    // InternalDialogParser.g:3998:4: ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) )
                    int alt101=2;
                    int LA101_0 = input.LA(1);

                    if ( (LA101_0==Class||LA101_0==Data) ) {
                        alt101=1;
                    }
                    else if ( ((LA101_0>=NonNegativeInteger && LA101_0<=Base64Binary)||LA101_0==UnsignedByte||LA101_0==UnsignedInt||LA101_0==GYearMonth||(LA101_0>=GMonthDay && LA101_0<=HexBinary)||LA101_0==DateTime||LA101_0==Duration||LA101_0==Boolean||LA101_0==Decimal||LA101_0==Integer||LA101_0==AnyURI||LA101_0==Double||LA101_0==GMonth||LA101_0==String||(LA101_0>=Float && LA101_0<=GYear)||LA101_0==Byte||LA101_0==Date||LA101_0==GDay||LA101_0==Long||LA101_0==Time||LA101_0==Int||LA101_0==LeftParenthesis||LA101_0==LeftCurlyBracket||(LA101_0>=RULE_ID && LA101_0<=RULE_QNAME_TERMINAL)) ) {
                        alt101=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 101, 0, input);

                        throw nvae;
                    }
                    switch (alt101) {
                        case 1 :
                            // InternalDialogParser.g:3999:5: ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) )
                            {
                            // InternalDialogParser.g:3999:5: ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) )
                            // InternalDialogParser.g:4000:6: ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) )
                            {
                            // InternalDialogParser.g:4000:6: ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) )
                            // InternalDialogParser.g:4001:7: (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data )
                            {
                            // InternalDialogParser.g:4001:7: (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data )
                            int alt99=2;
                            int LA99_0 = input.LA(1);

                            if ( (LA99_0==Class) ) {
                                alt99=1;
                            }
                            else if ( (LA99_0==Data) ) {
                                alt99=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 99, 0, input);

                                throw nvae;
                            }
                            switch (alt99) {
                                case 1 :
                                    // InternalDialogParser.g:4002:8: lv_typeonly_14_1= Class
                                    {
                                    lv_typeonly_14_1=(Token)match(input,Class,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_typeonly_14_1, grammarAccess.getSadlPropertyRestrictionAccess().getTypeonlyClassKeyword_2_5_0_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                                      								}
                                      								setWithLastConsumed(current, "typeonly", lv_typeonly_14_1, null);
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:4013:8: lv_typeonly_14_2= Data
                                    {
                                    lv_typeonly_14_2=(Token)match(input,Data,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_typeonly_14_2, grammarAccess.getSadlPropertyRestrictionAccess().getTypeonlyDataKeyword_2_5_0_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                                      								}
                                      								setWithLastConsumed(current, "typeonly", lv_typeonly_14_2, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:4027:5: ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? )
                            {
                            // InternalDialogParser.g:4027:5: ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? )
                            // InternalDialogParser.g:4028:6: ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )?
                            {
                            // InternalDialogParser.g:4028:6: ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) )
                            // InternalDialogParser.g:4029:7: (lv_range_15_0= ruleSadlPrimaryTypeReference )
                            {
                            // InternalDialogParser.g:4029:7: (lv_range_15_0= ruleSadlPrimaryTypeReference )
                            // InternalDialogParser.g:4030:8: lv_range_15_0= ruleSadlPrimaryTypeReference
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getRangeSadlPrimaryTypeReferenceParserRuleCall_2_5_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_94);
                            lv_range_15_0=ruleSadlPrimaryTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                              								}
                              								set(
                              									current,
                              									"range",
                              									lv_range_15_0,
                              									"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:4047:6: ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )?
                            int alt100=2;
                            int LA100_0 = input.LA(1);

                            if ( (LA100_0==Length||LA100_0==LeftParenthesis||LA100_0==LeftSquareBracket||LA100_0==LeftCurlyBracket||LA100_0==RULE_STRING) ) {
                                alt100=1;
                            }
                            switch (alt100) {
                                case 1 :
                                    // InternalDialogParser.g:4048:7: (lv_facet_16_0= ruleSadlDataTypeFacet )
                                    {
                                    // InternalDialogParser.g:4048:7: (lv_facet_16_0= ruleSadlDataTypeFacet )
                                    // InternalDialogParser.g:4049:8: lv_facet_16_0= ruleSadlDataTypeFacet
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getFacetSadlDataTypeFacetParserRuleCall_2_5_1_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_facet_16_0=ruleSadlDataTypeFacet();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                                      								}
                                      								set(
                                      									current,
                                      									"facet",
                                      									lv_facet_16_0,
                                      									"com.ge.research.sadl.SADL.SadlDataTypeFacet");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:4070:3: ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) )
                    {
                    // InternalDialogParser.g:4070:3: ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) )
                    // InternalDialogParser.g:4071:4: () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) )
                    {
                    // InternalDialogParser.g:4071:4: ()
                    // InternalDialogParser.g:4072:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsInverseOfAction_3_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_18=(Token)match(input,Is,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_3_1());
                      			
                    }
                    otherlv_19=(Token)match(input,The_1,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getSadlPropertyRestrictionAccess().getTheKeyword_3_2());
                      			
                    }
                    otherlv_20=(Token)match(input,Inverse,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getSadlPropertyRestrictionAccess().getInverseKeyword_3_3());
                      			
                    }
                    otherlv_21=(Token)match(input,Of,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_3_4());
                      			
                    }
                    // InternalDialogParser.g:4094:4: ( ( ruleQNAME ) )
                    // InternalDialogParser.g:4095:5: ( ruleQNAME )
                    {
                    // InternalDialogParser.g:4095:5: ( ruleQNAME )
                    // InternalDialogParser.g:4096:6: ruleQNAME
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getOtherPropertySadlResourceCrossReference_3_5_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    ruleQNAME();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:4112:3: ( () otherlv_24= Is otherlv_25= Transitive )
                    {
                    // InternalDialogParser.g:4112:3: ( () otherlv_24= Is otherlv_25= Transitive )
                    // InternalDialogParser.g:4113:4: () otherlv_24= Is otherlv_25= Transitive
                    {
                    // InternalDialogParser.g:4113:4: ()
                    // InternalDialogParser.g:4114:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsTransitiveAction_4_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_24=(Token)match(input,Is,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_4_1());
                      			
                    }
                    otherlv_25=(Token)match(input,Transitive,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getSadlPropertyRestrictionAccess().getTransitiveKeyword_4_2());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:4130:3: ( () otherlv_27= Is otherlv_28= Symmetrical )
                    {
                    // InternalDialogParser.g:4130:3: ( () otherlv_27= Is otherlv_28= Symmetrical )
                    // InternalDialogParser.g:4131:4: () otherlv_27= Is otherlv_28= Symmetrical
                    {
                    // InternalDialogParser.g:4131:4: ()
                    // InternalDialogParser.g:4132:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsSymmetricalAction_5_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_27=(Token)match(input,Is,FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_27, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_5_1());
                      			
                    }
                    otherlv_28=(Token)match(input,Symmetrical,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getSadlPropertyRestrictionAccess().getSymmetricalKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:4148:3: ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation )
                    {
                    // InternalDialogParser.g:4148:3: ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation )
                    // InternalDialogParser.g:4149:4: () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation
                    {
                    // InternalDialogParser.g:4149:4: ()
                    // InternalDialogParser.g:4150:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsAnnotationAction_6_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_30=(Token)match(input,Is,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_30, grammarAccess.getSadlPropertyRestrictionAccess().getIsKeyword_6_1());
                      			
                    }
                    otherlv_31=(Token)match(input,A_1,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getSadlPropertyRestrictionAccess().getAKeyword_6_2());
                      			
                    }
                    otherlv_32=(Token)match(input,Type,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_32, grammarAccess.getSadlPropertyRestrictionAccess().getTypeKeyword_6_3());
                      			
                    }
                    otherlv_33=(Token)match(input,Of,FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_33, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_6_4());
                      			
                    }
                    otherlv_34=(Token)match(input,Annotation,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getSadlPropertyRestrictionAccess().getAnnotationKeyword_6_5());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:4178:3: ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) )
                    {
                    // InternalDialogParser.g:4178:3: ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) )
                    // InternalDialogParser.g:4179:4: () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) )
                    {
                    // InternalDialogParser.g:4179:4: ()
                    // InternalDialogParser.g:4180:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlDefaultValueAction_7_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_36=(Token)match(input,Has,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_36, grammarAccess.getSadlPropertyRestrictionAccess().getHasKeyword_7_1());
                      			
                    }
                    // InternalDialogParser.g:4190:4: (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )?
                    int alt102=2;
                    int LA102_0 = input.LA(1);

                    if ( (LA102_0==Level) ) {
                        alt102=1;
                    }
                    switch (alt102) {
                        case 1 :
                            // InternalDialogParser.g:4191:5: otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) )
                            {
                            otherlv_37=(Token)match(input,Level,FOLLOW_84); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_37, grammarAccess.getSadlPropertyRestrictionAccess().getLevelKeyword_7_2_0());
                              				
                            }
                            // InternalDialogParser.g:4195:5: ( (lv_level_38_0= RULE_NUMBER ) )
                            // InternalDialogParser.g:4196:6: (lv_level_38_0= RULE_NUMBER )
                            {
                            // InternalDialogParser.g:4196:6: (lv_level_38_0= RULE_NUMBER )
                            // InternalDialogParser.g:4197:7: lv_level_38_0= RULE_NUMBER
                            {
                            lv_level_38_0=(Token)match(input,RULE_NUMBER,FOLLOW_100); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_level_38_0, grammarAccess.getSadlPropertyRestrictionAccess().getLevelNUMBERTerminalRuleCall_7_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"level",
                              								lv_level_38_0,
                              								"com.ge.research.sadl.SADL.NUMBER");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_39=(Token)match(input,Default,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getSadlPropertyRestrictionAccess().getDefaultKeyword_7_3());
                      			
                    }
                    // InternalDialogParser.g:4218:4: ( (lv_defValue_40_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:4219:5: (lv_defValue_40_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:4219:5: (lv_defValue_40_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:4220:6: lv_defValue_40_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getDefValueSadlExplicitValueParserRuleCall_7_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_defValue_40_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      						set(
                      							current,
                      							"defValue",
                      							lv_defValue_40_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalDialogParser.g:4239:3: ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? )
                    {
                    // InternalDialogParser.g:4239:3: ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? )
                    // InternalDialogParser.g:4240:4: () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )?
                    {
                    // InternalDialogParser.g:4240:4: ()
                    // InternalDialogParser.g:4241:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlIsFunctionalAction_8_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_42=(Token)match(input,Has,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getSadlPropertyRestrictionAccess().getHasKeyword_8_1());
                      			
                    }
                    otherlv_43=(Token)match(input,A_1,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getSadlPropertyRestrictionAccess().getAKeyword_8_2());
                      			
                    }
                    otherlv_44=(Token)match(input,Single,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_44, grammarAccess.getSadlPropertyRestrictionAccess().getSingleKeyword_8_3());
                      			
                    }
                    // InternalDialogParser.g:4259:4: ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )?
                    int alt103=3;
                    int LA103_0 = input.LA(1);

                    if ( (LA103_0==Subject) ) {
                        alt103=1;
                    }
                    else if ( (LA103_0==Value) ) {
                        alt103=2;
                    }
                    switch (alt103) {
                        case 1 :
                            // InternalDialogParser.g:4260:5: ( (lv_inverse_45_0= Subject ) )
                            {
                            // InternalDialogParser.g:4260:5: ( (lv_inverse_45_0= Subject ) )
                            // InternalDialogParser.g:4261:6: (lv_inverse_45_0= Subject )
                            {
                            // InternalDialogParser.g:4261:6: (lv_inverse_45_0= Subject )
                            // InternalDialogParser.g:4262:7: lv_inverse_45_0= Subject
                            {
                            lv_inverse_45_0=(Token)match(input,Subject,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_inverse_45_0, grammarAccess.getSadlPropertyRestrictionAccess().getInverseSubjectKeyword_8_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlPropertyRestrictionRule());
                              							}
                              							setWithLastConsumed(current, "inverse", true, "subject");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:4275:5: otherlv_46= Value
                            {
                            otherlv_46=(Token)match(input,Value,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_46, grammarAccess.getSadlPropertyRestrictionAccess().getValueKeyword_8_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalDialogParser.g:4282:3: ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:4282:3: ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket )
                    // InternalDialogParser.g:4283:4: () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket
                    {
                    // InternalDialogParser.g:4283:4: ()
                    // InternalDialogParser.g:4284:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlMustBeOneOfAction_9_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_48=(Token)match(input,Must,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getSadlPropertyRestrictionAccess().getMustKeyword_9_1());
                      			
                    }
                    otherlv_49=(Token)match(input,Be,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getSadlPropertyRestrictionAccess().getBeKeyword_9_2());
                      			
                    }
                    otherlv_50=(Token)match(input,One,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_50, grammarAccess.getSadlPropertyRestrictionAccess().getOneKeyword_9_3());
                      			
                    }
                    otherlv_51=(Token)match(input,Of,FOLLOW_105); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_9_4());
                      			
                    }
                    otherlv_52=(Token)match(input,LeftCurlyBracket,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_52, grammarAccess.getSadlPropertyRestrictionAccess().getLeftCurlyBracketKeyword_9_5());
                      			
                    }
                    // InternalDialogParser.g:4310:4: ( (lv_values_53_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:4311:5: (lv_values_53_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:4311:5: (lv_values_53_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:4312:6: lv_values_53_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_9_6_0());
                      					
                    }
                    pushFollow(FOLLOW_60);
                    lv_values_53_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      						add(
                      							current,
                      							"values",
                      							lv_values_53_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:4329:4: (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )*
                    loop104:
                    do {
                        int alt104=2;
                        int LA104_0 = input.LA(1);

                        if ( (LA104_0==Comma) ) {
                            alt104=1;
                        }


                        switch (alt104) {
                    	case 1 :
                    	    // InternalDialogParser.g:4330:5: otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) )
                    	    {
                    	    otherlv_54=(Token)match(input,Comma,FOLLOW_101); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_54, grammarAccess.getSadlPropertyRestrictionAccess().getCommaKeyword_9_7_0());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:4334:5: ( (lv_values_55_0= ruleSadlExplicitValue ) )
                    	    // InternalDialogParser.g:4335:6: (lv_values_55_0= ruleSadlExplicitValue )
                    	    {
                    	    // InternalDialogParser.g:4335:6: (lv_values_55_0= ruleSadlExplicitValue )
                    	    // InternalDialogParser.g:4336:7: lv_values_55_0= ruleSadlExplicitValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_9_7_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_60);
                    	    lv_values_55_0=ruleSadlExplicitValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"values",
                    	      								lv_values_55_0,
                    	      								"com.ge.research.sadl.SADL.SadlExplicitValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop104;
                        }
                    } while (true);

                    otherlv_56=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getSadlPropertyRestrictionAccess().getRightCurlyBracketKeyword_9_8());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalDialogParser.g:4360:3: ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:4360:3: ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket )
                    // InternalDialogParser.g:4361:4: () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket
                    {
                    // InternalDialogParser.g:4361:4: ()
                    // InternalDialogParser.g:4362:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlPropertyRestrictionAccess().getSadlCanOnlyBeOneOfAction_10_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_58=(Token)match(input,Can,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_58, grammarAccess.getSadlPropertyRestrictionAccess().getCanKeyword_10_1());
                      			
                    }
                    otherlv_59=(Token)match(input,Only,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_59, grammarAccess.getSadlPropertyRestrictionAccess().getOnlyKeyword_10_2());
                      			
                    }
                    otherlv_60=(Token)match(input,Be,FOLLOW_104); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_60, grammarAccess.getSadlPropertyRestrictionAccess().getBeKeyword_10_3());
                      			
                    }
                    otherlv_61=(Token)match(input,One,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_61, grammarAccess.getSadlPropertyRestrictionAccess().getOneKeyword_10_4());
                      			
                    }
                    otherlv_62=(Token)match(input,Of,FOLLOW_105); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_62, grammarAccess.getSadlPropertyRestrictionAccess().getOfKeyword_10_5());
                      			
                    }
                    otherlv_63=(Token)match(input,LeftCurlyBracket,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_63, grammarAccess.getSadlPropertyRestrictionAccess().getLeftCurlyBracketKeyword_10_6());
                      			
                    }
                    // InternalDialogParser.g:4392:4: ( (lv_values_64_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:4393:5: (lv_values_64_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:4393:5: (lv_values_64_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:4394:6: lv_values_64_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_10_7_0());
                      					
                    }
                    pushFollow(FOLLOW_60);
                    lv_values_64_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                      						}
                      						add(
                      							current,
                      							"values",
                      							lv_values_64_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:4411:4: (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )*
                    loop105:
                    do {
                        int alt105=2;
                        int LA105_0 = input.LA(1);

                        if ( (LA105_0==Comma) ) {
                            alt105=1;
                        }


                        switch (alt105) {
                    	case 1 :
                    	    // InternalDialogParser.g:4412:5: otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) )
                    	    {
                    	    otherlv_65=(Token)match(input,Comma,FOLLOW_101); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_65, grammarAccess.getSadlPropertyRestrictionAccess().getCommaKeyword_10_8_0());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:4416:5: ( (lv_values_66_0= ruleSadlExplicitValue ) )
                    	    // InternalDialogParser.g:4417:6: (lv_values_66_0= ruleSadlExplicitValue )
                    	    {
                    	    // InternalDialogParser.g:4417:6: (lv_values_66_0= ruleSadlExplicitValue )
                    	    // InternalDialogParser.g:4418:7: lv_values_66_0= ruleSadlExplicitValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlPropertyRestrictionAccess().getValuesSadlExplicitValueParserRuleCall_10_8_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_60);
                    	    lv_values_66_0=ruleSadlExplicitValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlPropertyRestrictionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"values",
                    	      								lv_values_66_0,
                    	      								"com.ge.research.sadl.SADL.SadlExplicitValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop105;
                        }
                    } while (true);

                    otherlv_67=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_67, grammarAccess.getSadlPropertyRestrictionAccess().getRightCurlyBracketKeyword_10_9());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlPropertyRestriction"


    // $ANTLR start "entryRuleSadlCondition"
    // InternalDialogParser.g:4445:1: entryRuleSadlCondition returns [EObject current=null] : iv_ruleSadlCondition= ruleSadlCondition EOF ;
    public final EObject entryRuleSadlCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlCondition = null;


        try {
            // InternalDialogParser.g:4445:54: (iv_ruleSadlCondition= ruleSadlCondition EOF )
            // InternalDialogParser.g:4446:2: iv_ruleSadlCondition= ruleSadlCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlCondition=ruleSadlCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlCondition"


    // $ANTLR start "ruleSadlCondition"
    // InternalDialogParser.g:4452:1: ruleSadlCondition returns [EObject current=null] : (this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition | this_SadlHasValueCondition_1= ruleSadlHasValueCondition | this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition ) ;
    public final EObject ruleSadlCondition() throws RecognitionException {
        EObject current = null;

        EObject this_SadlAllValuesCondition_0 = null;

        EObject this_SadlHasValueCondition_1 = null;

        EObject this_SadlCardinalityCondition_2 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4458:2: ( (this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition | this_SadlHasValueCondition_1= ruleSadlHasValueCondition | this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition ) )
            // InternalDialogParser.g:4459:2: (this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition | this_SadlHasValueCondition_1= ruleSadlHasValueCondition | this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition )
            {
            // InternalDialogParser.g:4459:2: (this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition | this_SadlHasValueCondition_1= ruleSadlHasValueCondition | this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition )
            int alt107=3;
            switch ( input.LA(1) ) {
            case Only:
                {
                alt107=1;
                }
                break;
            case Always:
                {
                alt107=2;
                }
                break;
            case With:
            case Has:
                {
                alt107=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 107, 0, input);

                throw nvae;
            }

            switch (alt107) {
                case 1 :
                    // InternalDialogParser.g:4460:3: this_SadlAllValuesCondition_0= ruleSadlAllValuesCondition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlConditionAccess().getSadlAllValuesConditionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlAllValuesCondition_0=ruleSadlAllValuesCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlAllValuesCondition_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4469:3: this_SadlHasValueCondition_1= ruleSadlHasValueCondition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlConditionAccess().getSadlHasValueConditionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlHasValueCondition_1=ruleSadlHasValueCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlHasValueCondition_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:4478:3: this_SadlCardinalityCondition_2= ruleSadlCardinalityCondition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlConditionAccess().getSadlCardinalityConditionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlCardinalityCondition_2=ruleSadlCardinalityCondition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlCardinalityCondition_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlCondition"


    // $ANTLR start "entryRuleSadlAllValuesCondition"
    // InternalDialogParser.g:4490:1: entryRuleSadlAllValuesCondition returns [EObject current=null] : iv_ruleSadlAllValuesCondition= ruleSadlAllValuesCondition EOF ;
    public final EObject entryRuleSadlAllValuesCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlAllValuesCondition = null;


        try {
            // InternalDialogParser.g:4490:63: (iv_ruleSadlAllValuesCondition= ruleSadlAllValuesCondition EOF )
            // InternalDialogParser.g:4491:2: iv_ruleSadlAllValuesCondition= ruleSadlAllValuesCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlAllValuesConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlAllValuesCondition=ruleSadlAllValuesCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlAllValuesCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlAllValuesCondition"


    // $ANTLR start "ruleSadlAllValuesCondition"
    // InternalDialogParser.g:4497:1: ruleSadlAllValuesCondition returns [EObject current=null] : (otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )? ) ;
    public final EObject ruleSadlAllValuesCondition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_type_6_0 = null;

        EObject lv_facet_7_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4503:2: ( (otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )? ) )
            // InternalDialogParser.g:4504:2: (otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )? )
            {
            // InternalDialogParser.g:4504:2: (otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )? )
            // InternalDialogParser.g:4505:3: otherlv_0= Only (otherlv_1= Has | otherlv_2= With ) otherlv_3= Values otherlv_4= Of otherlv_5= Type ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )?
            {
            otherlv_0=(Token)match(input,Only,FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSadlAllValuesConditionAccess().getOnlyKeyword_0());
              		
            }
            // InternalDialogParser.g:4509:3: (otherlv_1= Has | otherlv_2= With )
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==Has) ) {
                alt108=1;
            }
            else if ( (LA108_0==With) ) {
                alt108=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 108, 0, input);

                throw nvae;
            }
            switch (alt108) {
                case 1 :
                    // InternalDialogParser.g:4510:4: otherlv_1= Has
                    {
                    otherlv_1=(Token)match(input,Has,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSadlAllValuesConditionAccess().getHasKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4515:4: otherlv_2= With
                    {
                    otherlv_2=(Token)match(input,With,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSadlAllValuesConditionAccess().getWithKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,Values,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getSadlAllValuesConditionAccess().getValuesKeyword_2());
              		
            }
            otherlv_4=(Token)match(input,Of,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getSadlAllValuesConditionAccess().getOfKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,Type,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getSadlAllValuesConditionAccess().getTypeKeyword_4());
              		
            }
            // InternalDialogParser.g:4532:3: ( (lv_type_6_0= ruleSadlPrimaryTypeReference ) )
            // InternalDialogParser.g:4533:4: (lv_type_6_0= ruleSadlPrimaryTypeReference )
            {
            // InternalDialogParser.g:4533:4: (lv_type_6_0= ruleSadlPrimaryTypeReference )
            // InternalDialogParser.g:4534:5: lv_type_6_0= ruleSadlPrimaryTypeReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlAllValuesConditionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_94);
            lv_type_6_0=ruleSadlPrimaryTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSadlAllValuesConditionRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_6_0,
              						"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:4551:3: ( (lv_facet_7_0= ruleSadlDataTypeFacet ) )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==Length||LA109_0==LeftParenthesis||LA109_0==LeftSquareBracket||LA109_0==LeftCurlyBracket||LA109_0==RULE_STRING) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalDialogParser.g:4552:4: (lv_facet_7_0= ruleSadlDataTypeFacet )
                    {
                    // InternalDialogParser.g:4552:4: (lv_facet_7_0= ruleSadlDataTypeFacet )
                    // InternalDialogParser.g:4553:5: lv_facet_7_0= ruleSadlDataTypeFacet
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getSadlAllValuesConditionAccess().getFacetSadlDataTypeFacetParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_facet_7_0=ruleSadlDataTypeFacet();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getSadlAllValuesConditionRule());
                      					}
                      					set(
                      						current,
                      						"facet",
                      						lv_facet_7_0,
                      						"com.ge.research.sadl.SADL.SadlDataTypeFacet");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlAllValuesCondition"


    // $ANTLR start "entryRuleSadlHasValueCondition"
    // InternalDialogParser.g:4574:1: entryRuleSadlHasValueCondition returns [EObject current=null] : iv_ruleSadlHasValueCondition= ruleSadlHasValueCondition EOF ;
    public final EObject entryRuleSadlHasValueCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlHasValueCondition = null;


        try {
            // InternalDialogParser.g:4574:62: (iv_ruleSadlHasValueCondition= ruleSadlHasValueCondition EOF )
            // InternalDialogParser.g:4575:2: iv_ruleSadlHasValueCondition= ruleSadlHasValueCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlHasValueConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlHasValueCondition=ruleSadlHasValueCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlHasValueCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlHasValueCondition"


    // $ANTLR start "ruleSadlHasValueCondition"
    // InternalDialogParser.g:4581:1: ruleSadlHasValueCondition returns [EObject current=null] : (otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) ;
    public final EObject ruleSadlHasValueCondition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_restriction_4_0 = null;

        EObject lv_restriction_6_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4587:2: ( (otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) ) )
            // InternalDialogParser.g:4588:2: (otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) )
            {
            // InternalDialogParser.g:4588:2: (otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) ) )
            // InternalDialogParser.g:4589:3: otherlv_0= Always (otherlv_1= Has | otherlv_2= With ) otherlv_3= Value ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) )
            {
            otherlv_0=(Token)match(input,Always,FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSadlHasValueConditionAccess().getAlwaysKeyword_0());
              		
            }
            // InternalDialogParser.g:4593:3: (otherlv_1= Has | otherlv_2= With )
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==Has) ) {
                alt110=1;
            }
            else if ( (LA110_0==With) ) {
                alt110=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;
            }
            switch (alt110) {
                case 1 :
                    // InternalDialogParser.g:4594:4: otherlv_1= Has
                    {
                    otherlv_1=(Token)match(input,Has,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSadlHasValueConditionAccess().getHasKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4599:4: otherlv_2= With
                    {
                    otherlv_2=(Token)match(input,With,FOLLOW_92); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getSadlHasValueConditionAccess().getWithKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,Value,FOLLOW_72); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getSadlHasValueConditionAccess().getValueKeyword_2());
              		
            }
            // InternalDialogParser.g:4608:3: ( ( (lv_restriction_4_0= ruleSadlExplicitValue ) ) | (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis ) )
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==False||LA111_0==Known||LA111_0==True||LA111_0==Not||LA111_0==PI||LA111_0==HyphenMinus||LA111_0==LeftSquareBracket||LA111_0==E_1||LA111_0==RULE_NUMBER||(LA111_0>=RULE_ID && LA111_0<=RULE_STRING)) ) {
                alt111=1;
            }
            else if ( (LA111_0==LeftParenthesis) ) {
                alt111=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }
            switch (alt111) {
                case 1 :
                    // InternalDialogParser.g:4609:4: ( (lv_restriction_4_0= ruleSadlExplicitValue ) )
                    {
                    // InternalDialogParser.g:4609:4: ( (lv_restriction_4_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:4610:5: (lv_restriction_4_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:4610:5: (lv_restriction_4_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:4611:6: lv_restriction_4_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlHasValueConditionAccess().getRestrictionSadlExplicitValueParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_restriction_4_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlHasValueConditionRule());
                      						}
                      						set(
                      							current,
                      							"restriction",
                      							lv_restriction_4_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4629:4: (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis )
                    {
                    // InternalDialogParser.g:4629:4: (otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis )
                    // InternalDialogParser.g:4630:5: otherlv_5= LeftParenthesis ( (lv_restriction_6_0= ruleSadlNestedInstance ) ) otherlv_7= RightParenthesis
                    {
                    otherlv_5=(Token)match(input,LeftParenthesis,FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getSadlHasValueConditionAccess().getLeftParenthesisKeyword_3_1_0());
                      				
                    }
                    // InternalDialogParser.g:4634:5: ( (lv_restriction_6_0= ruleSadlNestedInstance ) )
                    // InternalDialogParser.g:4635:6: (lv_restriction_6_0= ruleSadlNestedInstance )
                    {
                    // InternalDialogParser.g:4635:6: (lv_restriction_6_0= ruleSadlNestedInstance )
                    // InternalDialogParser.g:4636:7: lv_restriction_6_0= ruleSadlNestedInstance
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlHasValueConditionAccess().getRestrictionSadlNestedInstanceParserRuleCall_3_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_73);
                    lv_restriction_6_0=ruleSadlNestedInstance();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlHasValueConditionRule());
                      							}
                      							set(
                      								current,
                      								"restriction",
                      								lv_restriction_6_0,
                      								"com.ge.research.sadl.SADL.SadlNestedInstance");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSadlHasValueConditionAccess().getRightParenthesisKeyword_3_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlHasValueCondition"


    // $ANTLR start "entryRuleSadlCardinalityCondition"
    // InternalDialogParser.g:4663:1: entryRuleSadlCardinalityCondition returns [EObject current=null] : iv_ruleSadlCardinalityCondition= ruleSadlCardinalityCondition EOF ;
    public final EObject entryRuleSadlCardinalityCondition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlCardinalityCondition = null;


        try {
            // InternalDialogParser.g:4663:65: (iv_ruleSadlCardinalityCondition= ruleSadlCardinalityCondition EOF )
            // InternalDialogParser.g:4664:2: iv_ruleSadlCardinalityCondition= ruleSadlCardinalityCondition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlCardinalityConditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlCardinalityCondition=ruleSadlCardinalityCondition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlCardinalityCondition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlCardinalityCondition"


    // $ANTLR start "ruleSadlCardinalityCondition"
    // InternalDialogParser.g:4670:1: ruleSadlCardinalityCondition returns [EObject current=null] : ( (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )? ) ;
    public final EObject ruleSadlCardinalityCondition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_operator_3_1=null;
        Token lv_operator_3_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_cardinality_5_0 = null;

        EObject lv_type_10_0 = null;

        EObject lv_facet_11_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4676:2: ( ( (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )? ) )
            // InternalDialogParser.g:4677:2: ( (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )? )
            {
            // InternalDialogParser.g:4677:2: ( (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )? )
            // InternalDialogParser.g:4678:3: (otherlv_0= Has | otherlv_1= With ) ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )? ( (lv_cardinality_5_0= ruleCardinalityValue ) ) (otherlv_6= Value | otherlv_7= Values ) (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )?
            {
            // InternalDialogParser.g:4678:3: (otherlv_0= Has | otherlv_1= With )
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==Has) ) {
                alt112=1;
            }
            else if ( (LA112_0==With) ) {
                alt112=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 112, 0, input);

                throw nvae;
            }
            switch (alt112) {
                case 1 :
                    // InternalDialogParser.g:4679:4: otherlv_0= Has
                    {
                    otherlv_0=(Token)match(input,Has,FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getSadlCardinalityConditionAccess().getHasKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4684:4: otherlv_1= With
                    {
                    otherlv_1=(Token)match(input,With,FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getSadlCardinalityConditionAccess().getWithKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:4689:3: ( (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) ) | otherlv_4= Exactly )?
            int alt114=3;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==At) ) {
                alt114=1;
            }
            else if ( (LA114_0==Exactly) ) {
                alt114=2;
            }
            switch (alt114) {
                case 1 :
                    // InternalDialogParser.g:4690:4: (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) )
                    {
                    // InternalDialogParser.g:4690:4: (otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) ) )
                    // InternalDialogParser.g:4691:5: otherlv_2= At ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) )
                    {
                    otherlv_2=(Token)match(input,At,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getSadlCardinalityConditionAccess().getAtKeyword_1_0_0());
                      				
                    }
                    // InternalDialogParser.g:4695:5: ( ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) ) )
                    // InternalDialogParser.g:4696:6: ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) )
                    {
                    // InternalDialogParser.g:4696:6: ( (lv_operator_3_1= Least | lv_operator_3_2= Most ) )
                    // InternalDialogParser.g:4697:7: (lv_operator_3_1= Least | lv_operator_3_2= Most )
                    {
                    // InternalDialogParser.g:4697:7: (lv_operator_3_1= Least | lv_operator_3_2= Most )
                    int alt113=2;
                    int LA113_0 = input.LA(1);

                    if ( (LA113_0==Least) ) {
                        alt113=1;
                    }
                    else if ( (LA113_0==Most) ) {
                        alt113=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 113, 0, input);

                        throw nvae;
                    }
                    switch (alt113) {
                        case 1 :
                            // InternalDialogParser.g:4698:8: lv_operator_3_1= Least
                            {
                            lv_operator_3_1=(Token)match(input,Least,FOLLOW_107); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_operator_3_1, grammarAccess.getSadlCardinalityConditionAccess().getOperatorLeastKeyword_1_0_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlCardinalityConditionRule());
                              								}
                              								setWithLastConsumed(current, "operator", lv_operator_3_1, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:4709:8: lv_operator_3_2= Most
                            {
                            lv_operator_3_2=(Token)match(input,Most,FOLLOW_107); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_operator_3_2, grammarAccess.getSadlCardinalityConditionAccess().getOperatorMostKeyword_1_0_1_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlCardinalityConditionRule());
                              								}
                              								setWithLastConsumed(current, "operator", lv_operator_3_2, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4724:4: otherlv_4= Exactly
                    {
                    otherlv_4=(Token)match(input,Exactly,FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSadlCardinalityConditionAccess().getExactlyKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:4729:3: ( (lv_cardinality_5_0= ruleCardinalityValue ) )
            // InternalDialogParser.g:4730:4: (lv_cardinality_5_0= ruleCardinalityValue )
            {
            // InternalDialogParser.g:4730:4: (lv_cardinality_5_0= ruleCardinalityValue )
            // InternalDialogParser.g:4731:5: lv_cardinality_5_0= ruleCardinalityValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSadlCardinalityConditionAccess().getCardinalityCardinalityValueParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_10);
            lv_cardinality_5_0=ruleCardinalityValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSadlCardinalityConditionRule());
              					}
              					set(
              						current,
              						"cardinality",
              						lv_cardinality_5_0,
              						"com.ge.research.sadl.SADL.CardinalityValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:4748:3: (otherlv_6= Value | otherlv_7= Values )
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==Value) ) {
                alt115=1;
            }
            else if ( (LA115_0==Values) ) {
                alt115=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }
            switch (alt115) {
                case 1 :
                    // InternalDialogParser.g:4749:4: otherlv_6= Value
                    {
                    otherlv_6=(Token)match(input,Value,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getSadlCardinalityConditionAccess().getValueKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4754:4: otherlv_7= Values
                    {
                    otherlv_7=(Token)match(input,Values,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getSadlCardinalityConditionAccess().getValuesKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:4759:3: (otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )? )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==Of) ) {
                int LA117_1 = input.LA(2);

                if ( (LA117_1==Type) ) {
                    alt117=1;
                }
            }
            switch (alt117) {
                case 1 :
                    // InternalDialogParser.g:4760:4: otherlv_8= Of otherlv_9= Type ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )?
                    {
                    otherlv_8=(Token)match(input,Of,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getSadlCardinalityConditionAccess().getOfKeyword_4_0());
                      			
                    }
                    otherlv_9=(Token)match(input,Type,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getSadlCardinalityConditionAccess().getTypeKeyword_4_1());
                      			
                    }
                    // InternalDialogParser.g:4768:4: ( (lv_type_10_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:4769:5: (lv_type_10_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:4769:5: (lv_type_10_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:4770:6: lv_type_10_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlCardinalityConditionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_94);
                    lv_type_10_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlCardinalityConditionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_10_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:4787:4: ( (lv_facet_11_0= ruleSadlDataTypeFacet ) )?
                    int alt116=2;
                    int LA116_0 = input.LA(1);

                    if ( (LA116_0==Length||LA116_0==LeftParenthesis||LA116_0==LeftSquareBracket||LA116_0==LeftCurlyBracket||LA116_0==RULE_STRING) ) {
                        alt116=1;
                    }
                    switch (alt116) {
                        case 1 :
                            // InternalDialogParser.g:4788:5: (lv_facet_11_0= ruleSadlDataTypeFacet )
                            {
                            // InternalDialogParser.g:4788:5: (lv_facet_11_0= ruleSadlDataTypeFacet )
                            // InternalDialogParser.g:4789:6: lv_facet_11_0= ruleSadlDataTypeFacet
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSadlCardinalityConditionAccess().getFacetSadlDataTypeFacetParserRuleCall_4_3_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_facet_11_0=ruleSadlDataTypeFacet();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSadlCardinalityConditionRule());
                              						}
                              						set(
                              							current,
                              							"facet",
                              							lv_facet_11_0,
                              							"com.ge.research.sadl.SADL.SadlDataTypeFacet");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlCardinalityCondition"


    // $ANTLR start "entryRuleCardinalityValue"
    // InternalDialogParser.g:4811:1: entryRuleCardinalityValue returns [String current=null] : iv_ruleCardinalityValue= ruleCardinalityValue EOF ;
    public final String entryRuleCardinalityValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCardinalityValue = null;


        try {
            // InternalDialogParser.g:4811:56: (iv_ruleCardinalityValue= ruleCardinalityValue EOF )
            // InternalDialogParser.g:4812:2: iv_ruleCardinalityValue= ruleCardinalityValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCardinalityValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCardinalityValue=ruleCardinalityValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCardinalityValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCardinalityValue"


    // $ANTLR start "ruleCardinalityValue"
    // InternalDialogParser.g:4818:1: ruleCardinalityValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_NUMBER_0= RULE_NUMBER | kw= One ) ;
    public final AntlrDatatypeRuleToken ruleCardinalityValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_NUMBER_0=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:4824:2: ( (this_NUMBER_0= RULE_NUMBER | kw= One ) )
            // InternalDialogParser.g:4825:2: (this_NUMBER_0= RULE_NUMBER | kw= One )
            {
            // InternalDialogParser.g:4825:2: (this_NUMBER_0= RULE_NUMBER | kw= One )
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==RULE_NUMBER) ) {
                alt118=1;
            }
            else if ( (LA118_0==One) ) {
                alt118=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 118, 0, input);

                throw nvae;
            }
            switch (alt118) {
                case 1 :
                    // InternalDialogParser.g:4826:3: this_NUMBER_0= RULE_NUMBER
                    {
                    this_NUMBER_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_NUMBER_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_NUMBER_0, grammarAccess.getCardinalityValueAccess().getNUMBERTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4834:3: kw= One
                    {
                    kw=(Token)match(input,One,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCardinalityValueAccess().getOneKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCardinalityValue"


    // $ANTLR start "entryRuleSadlExplicitValue"
    // InternalDialogParser.g:4843:1: entryRuleSadlExplicitValue returns [EObject current=null] : iv_ruleSadlExplicitValue= ruleSadlExplicitValue EOF ;
    public final EObject entryRuleSadlExplicitValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlExplicitValue = null;


        try {
            // InternalDialogParser.g:4843:58: (iv_ruleSadlExplicitValue= ruleSadlExplicitValue EOF )
            // InternalDialogParser.g:4844:2: iv_ruleSadlExplicitValue= ruleSadlExplicitValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlExplicitValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlExplicitValue=ruleSadlExplicitValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlExplicitValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlExplicitValue"


    // $ANTLR start "ruleSadlExplicitValue"
    // InternalDialogParser.g:4850:1: ruleSadlExplicitValue returns [EObject current=null] : (this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral | ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) ) ) ;
    public final EObject ruleSadlExplicitValue() throws RecognitionException {
        EObject current = null;

        Token lv_operator_2_1=null;
        Token lv_operator_2_2=null;
        EObject this_SadlExplicitValueLiteral_0 = null;

        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4856:2: ( (this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral | ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) ) ) )
            // InternalDialogParser.g:4857:2: (this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral | ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) ) )
            {
            // InternalDialogParser.g:4857:2: (this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral | ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) ) )
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==False||LA120_0==Known||LA120_0==True||LA120_0==PI||LA120_0==LeftSquareBracket||LA120_0==E_1||LA120_0==RULE_NUMBER||(LA120_0>=RULE_ID && LA120_0<=RULE_STRING)) ) {
                alt120=1;
            }
            else if ( (LA120_0==HyphenMinus) && (synpred1_InternalDialogParser())) {
                alt120=2;
            }
            else if ( (LA120_0==Not) && (synpred1_InternalDialogParser())) {
                alt120=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 120, 0, input);

                throw nvae;
            }
            switch (alt120) {
                case 1 :
                    // InternalDialogParser.g:4858:3: this_SadlExplicitValueLiteral_0= ruleSadlExplicitValueLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlExplicitValueAccess().getSadlExplicitValueLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlExplicitValueLiteral_0=ruleSadlExplicitValueLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlExplicitValueLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4867:3: ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) )
                    {
                    // InternalDialogParser.g:4867:3: ( ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) ) )
                    // InternalDialogParser.g:4868:4: ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )=> ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) )
                    {
                    // InternalDialogParser.g:4887:4: ( () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) ) )
                    // InternalDialogParser.g:4888:5: () ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) ) ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) )
                    {
                    // InternalDialogParser.g:4888:5: ()
                    // InternalDialogParser.g:4889:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSadlExplicitValueAccess().getSadlUnaryExpressionAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalDialogParser.g:4895:5: ( ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) ) )
                    // InternalDialogParser.g:4896:6: ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) )
                    {
                    // InternalDialogParser.g:4896:6: ( (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not ) )
                    // InternalDialogParser.g:4897:7: (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not )
                    {
                    // InternalDialogParser.g:4897:7: (lv_operator_2_1= HyphenMinus | lv_operator_2_2= Not )
                    int alt119=2;
                    int LA119_0 = input.LA(1);

                    if ( (LA119_0==HyphenMinus) ) {
                        alt119=1;
                    }
                    else if ( (LA119_0==Not) ) {
                        alt119=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 119, 0, input);

                        throw nvae;
                    }
                    switch (alt119) {
                        case 1 :
                            // InternalDialogParser.g:4898:8: lv_operator_2_1= HyphenMinus
                            {
                            lv_operator_2_1=(Token)match(input,HyphenMinus,FOLLOW_110); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_operator_2_1, grammarAccess.getSadlExplicitValueAccess().getOperatorHyphenMinusKeyword_1_0_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlExplicitValueRule());
                              								}
                              								setWithLastConsumed(current, "operator", lv_operator_2_1, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:4909:8: lv_operator_2_2= Not
                            {
                            lv_operator_2_2=(Token)match(input,Not,FOLLOW_110); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_operator_2_2, grammarAccess.getSadlExplicitValueAccess().getOperatorNotKeyword_1_0_1_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSadlExplicitValueRule());
                              								}
                              								setWithLastConsumed(current, "operator", lv_operator_2_2, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:4922:5: ( (lv_value_3_0= ruleSadlExplicitValueLiteral ) )
                    // InternalDialogParser.g:4923:6: (lv_value_3_0= ruleSadlExplicitValueLiteral )
                    {
                    // InternalDialogParser.g:4923:6: (lv_value_3_0= ruleSadlExplicitValueLiteral )
                    // InternalDialogParser.g:4924:7: lv_value_3_0= ruleSadlExplicitValueLiteral
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSadlExplicitValueAccess().getValueSadlExplicitValueLiteralParserRuleCall_1_0_2_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleSadlExplicitValueLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSadlExplicitValueRule());
                      							}
                      							set(
                      								current,
                      								"value",
                      								lv_value_3_0,
                      								"com.ge.research.sadl.SADL.SadlExplicitValueLiteral");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlExplicitValue"


    // $ANTLR start "entryRuleSadlExplicitValueLiteral"
    // InternalDialogParser.g:4947:1: entryRuleSadlExplicitValueLiteral returns [EObject current=null] : iv_ruleSadlExplicitValueLiteral= ruleSadlExplicitValueLiteral EOF ;
    public final EObject entryRuleSadlExplicitValueLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlExplicitValueLiteral = null;


        try {
            // InternalDialogParser.g:4947:65: (iv_ruleSadlExplicitValueLiteral= ruleSadlExplicitValueLiteral EOF )
            // InternalDialogParser.g:4948:2: iv_ruleSadlExplicitValueLiteral= ruleSadlExplicitValueLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlExplicitValueLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlExplicitValueLiteral=ruleSadlExplicitValueLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlExplicitValueLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlExplicitValueLiteral"


    // $ANTLR start "ruleSadlExplicitValueLiteral"
    // InternalDialogParser.g:4954:1: ruleSadlExplicitValueLiteral returns [EObject current=null] : (this_SadlResource_0= ruleSadlResource | ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? ) | ( () ( (lv_literalString_5_0= RULE_STRING ) ) ) | ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) ) | this_SadlValueList_9= ruleSadlValueList | ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) ) ) ;
    public final EObject ruleSadlExplicitValueLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_literalString_5_0=null;
        Token lv_truethy_7_0=null;
        Token otherlv_8=null;
        Token lv_term_11_1=null;
        Token lv_term_11_2=null;
        Token lv_term_11_3=null;
        EObject this_SadlResource_0 = null;

        AntlrDatatypeRuleToken lv_literalNumber_2_0 = null;

        AntlrDatatypeRuleToken lv_unit_3_0 = null;

        EObject this_SadlValueList_9 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:4960:2: ( (this_SadlResource_0= ruleSadlResource | ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? ) | ( () ( (lv_literalString_5_0= RULE_STRING ) ) ) | ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) ) | this_SadlValueList_9= ruleSadlValueList | ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) ) ) )
            // InternalDialogParser.g:4961:2: (this_SadlResource_0= ruleSadlResource | ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? ) | ( () ( (lv_literalString_5_0= RULE_STRING ) ) ) | ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) ) | this_SadlValueList_9= ruleSadlValueList | ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) ) )
            {
            // InternalDialogParser.g:4961:2: (this_SadlResource_0= ruleSadlResource | ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? ) | ( () ( (lv_literalString_5_0= RULE_STRING ) ) ) | ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) ) | this_SadlValueList_9= ruleSadlValueList | ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) ) )
            int alt124=6;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case RULE_QNAME_TERMINAL:
                {
                alt124=1;
                }
                break;
            case RULE_NUMBER:
                {
                alt124=2;
                }
                break;
            case RULE_STRING:
                {
                alt124=3;
                }
                break;
            case False:
            case True:
                {
                alt124=4;
                }
                break;
            case LeftSquareBracket:
                {
                alt124=5;
                }
                break;
            case Known:
            case PI:
            case E_1:
                {
                alt124=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 124, 0, input);

                throw nvae;
            }

            switch (alt124) {
                case 1 :
                    // InternalDialogParser.g:4962:3: this_SadlResource_0= ruleSadlResource
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getSadlResourceParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlResource_0=ruleSadlResource();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlResource_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:4971:3: ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? )
                    {
                    // InternalDialogParser.g:4971:3: ( () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )? )
                    // InternalDialogParser.g:4972:4: () ( (lv_literalNumber_2_0= ruleAnyNumber ) ) ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )?
                    {
                    // InternalDialogParser.g:4972:4: ()
                    // InternalDialogParser.g:4973:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlNumberLiteralAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:4979:4: ( (lv_literalNumber_2_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:4980:5: (lv_literalNumber_2_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:4980:5: (lv_literalNumber_2_0= ruleAnyNumber )
                    // InternalDialogParser.g:4981:6: lv_literalNumber_2_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getLiteralNumberAnyNumberParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_111);
                    lv_literalNumber_2_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlExplicitValueLiteralRule());
                      						}
                      						set(
                      							current,
                      							"literalNumber",
                      							lv_literalNumber_2_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:4998:4: ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )?
                    int alt121=2;
                    alt121 = dfa121.predict(input);
                    switch (alt121) {
                        case 1 :
                            // InternalDialogParser.g:4999:5: ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT )
                            {
                            // InternalDialogParser.g:5000:5: (lv_unit_3_0= ruleUNIT )
                            // InternalDialogParser.g:5001:6: lv_unit_3_0= ruleUNIT
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getUnitUNITParserRuleCall_1_2_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_unit_3_0=ruleUNIT();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getSadlExplicitValueLiteralRule());
                              						}
                              						set(
                              							current,
                              							"unit",
                              							lv_unit_3_0,
                              							"com.ge.research.sadl.SADL.UNIT");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:5020:3: ( () ( (lv_literalString_5_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:5020:3: ( () ( (lv_literalString_5_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:5021:4: () ( (lv_literalString_5_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:5021:4: ()
                    // InternalDialogParser.g:5022:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlStringLiteralAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:5028:4: ( (lv_literalString_5_0= RULE_STRING ) )
                    // InternalDialogParser.g:5029:5: (lv_literalString_5_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:5029:5: (lv_literalString_5_0= RULE_STRING )
                    // InternalDialogParser.g:5030:6: lv_literalString_5_0= RULE_STRING
                    {
                    lv_literalString_5_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_literalString_5_0, grammarAccess.getSadlExplicitValueLiteralAccess().getLiteralStringSTRINGTerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"literalString",
                      							lv_literalString_5_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:5048:3: ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) )
                    {
                    // InternalDialogParser.g:5048:3: ( () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False ) )
                    // InternalDialogParser.g:5049:4: () ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False )
                    {
                    // InternalDialogParser.g:5049:4: ()
                    // InternalDialogParser.g:5050:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlBooleanLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:5056:4: ( ( (lv_truethy_7_0= True ) ) | otherlv_8= False )
                    int alt122=2;
                    int LA122_0 = input.LA(1);

                    if ( (LA122_0==True) ) {
                        alt122=1;
                    }
                    else if ( (LA122_0==False) ) {
                        alt122=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 122, 0, input);

                        throw nvae;
                    }
                    switch (alt122) {
                        case 1 :
                            // InternalDialogParser.g:5057:5: ( (lv_truethy_7_0= True ) )
                            {
                            // InternalDialogParser.g:5057:5: ( (lv_truethy_7_0= True ) )
                            // InternalDialogParser.g:5058:6: (lv_truethy_7_0= True )
                            {
                            // InternalDialogParser.g:5058:6: (lv_truethy_7_0= True )
                            // InternalDialogParser.g:5059:7: lv_truethy_7_0= True
                            {
                            lv_truethy_7_0=(Token)match(input,True,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_truethy_7_0, grammarAccess.getSadlExplicitValueLiteralAccess().getTruethyTrueKeyword_3_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                              							}
                              							setWithLastConsumed(current, "truethy", true, "true");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:5072:5: otherlv_8= False
                            {
                            otherlv_8=(Token)match(input,False,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getSadlExplicitValueLiteralAccess().getFalseKeyword_3_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:5079:3: this_SadlValueList_9= ruleSadlValueList
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSadlExplicitValueLiteralAccess().getSadlValueListParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SadlValueList_9=ruleSadlValueList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SadlValueList_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:5088:3: ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) )
                    {
                    // InternalDialogParser.g:5088:3: ( () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) ) )
                    // InternalDialogParser.g:5089:4: () ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) )
                    {
                    // InternalDialogParser.g:5089:4: ()
                    // InternalDialogParser.g:5090:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getSadlExplicitValueLiteralAccess().getSadlConstantLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:5096:4: ( ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) ) )
                    // InternalDialogParser.g:5097:5: ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) )
                    {
                    // InternalDialogParser.g:5097:5: ( (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known ) )
                    // InternalDialogParser.g:5098:6: (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known )
                    {
                    // InternalDialogParser.g:5098:6: (lv_term_11_1= PI | lv_term_11_2= E_1 | lv_term_11_3= Known )
                    int alt123=3;
                    switch ( input.LA(1) ) {
                    case PI:
                        {
                        alt123=1;
                        }
                        break;
                    case E_1:
                        {
                        alt123=2;
                        }
                        break;
                    case Known:
                        {
                        alt123=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 123, 0, input);

                        throw nvae;
                    }

                    switch (alt123) {
                        case 1 :
                            // InternalDialogParser.g:5099:7: lv_term_11_1= PI
                            {
                            lv_term_11_1=(Token)match(input,PI,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_term_11_1, grammarAccess.getSadlExplicitValueLiteralAccess().getTermPIKeyword_5_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                              							}
                              							setWithLastConsumed(current, "term", lv_term_11_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:5110:7: lv_term_11_2= E_1
                            {
                            lv_term_11_2=(Token)match(input,E_1,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_term_11_2, grammarAccess.getSadlExplicitValueLiteralAccess().getTermEKeyword_5_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                              							}
                              							setWithLastConsumed(current, "term", lv_term_11_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:5121:7: lv_term_11_3= Known
                            {
                            lv_term_11_3=(Token)match(input,Known,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_term_11_3, grammarAccess.getSadlExplicitValueLiteralAccess().getTermKnownKeyword_5_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSadlExplicitValueLiteralRule());
                              							}
                              							setWithLastConsumed(current, "term", lv_term_11_3, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlExplicitValueLiteral"


    // $ANTLR start "entryRuleUNIT"
    // InternalDialogParser.g:5139:1: entryRuleUNIT returns [String current=null] : iv_ruleUNIT= ruleUNIT EOF ;
    public final String entryRuleUNIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUNIT = null;


        try {
            // InternalDialogParser.g:5139:44: (iv_ruleUNIT= ruleUNIT EOF )
            // InternalDialogParser.g:5140:2: iv_ruleUNIT= ruleUNIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUNITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUNIT=ruleUNIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUNIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUNIT"


    // $ANTLR start "ruleUNIT"
    // InternalDialogParser.g:5146:1: ruleUNIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleUNIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_ID_1=null;


        	enterRule();

        try {
            // InternalDialogParser.g:5152:2: ( (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID ) )
            // InternalDialogParser.g:5153:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            {
            // InternalDialogParser.g:5153:2: (this_STRING_0= RULE_STRING | this_ID_1= RULE_ID )
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==RULE_STRING) ) {
                alt125=1;
            }
            else if ( (LA125_0==RULE_ID) ) {
                alt125=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 125, 0, input);

                throw nvae;
            }
            switch (alt125) {
                case 1 :
                    // InternalDialogParser.g:5154:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getUNITAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5162:3: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_1, grammarAccess.getUNITAccess().getIDTerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUNIT"


    // $ANTLR start "entryRuleSadlValueList"
    // InternalDialogParser.g:5173:1: entryRuleSadlValueList returns [EObject current=null] : iv_ruleSadlValueList= ruleSadlValueList EOF ;
    public final EObject entryRuleSadlValueList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSadlValueList = null;


        try {
            // InternalDialogParser.g:5173:54: (iv_ruleSadlValueList= ruleSadlValueList EOF )
            // InternalDialogParser.g:5174:2: iv_ruleSadlValueList= ruleSadlValueList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSadlValueListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSadlValueList=ruleSadlValueList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSadlValueList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSadlValueList"


    // $ANTLR start "ruleSadlValueList"
    // InternalDialogParser.g:5180:1: ruleSadlValueList returns [EObject current=null] : ( () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket ) ;
    public final EObject ruleSadlValueList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_explicitValues_2_0 = null;

        EObject lv_explicitValues_4_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5186:2: ( ( () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket ) )
            // InternalDialogParser.g:5187:2: ( () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket )
            {
            // InternalDialogParser.g:5187:2: ( () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket )
            // InternalDialogParser.g:5188:3: () otherlv_1= LeftSquareBracket ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )? otherlv_5= RightSquareBracket
            {
            // InternalDialogParser.g:5188:3: ()
            // InternalDialogParser.g:5189:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getSadlValueListAccess().getSadlValueListAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,LeftSquareBracket,FOLLOW_112); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getSadlValueListAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalDialogParser.g:5199:3: ( ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )* )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==False||LA127_0==Known||LA127_0==True||LA127_0==Not||LA127_0==PI||LA127_0==HyphenMinus||LA127_0==LeftSquareBracket||LA127_0==E_1||LA127_0==RULE_NUMBER||(LA127_0>=RULE_ID && LA127_0<=RULE_STRING)) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalDialogParser.g:5200:4: ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) ) (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )*
                    {
                    // InternalDialogParser.g:5200:4: ( (lv_explicitValues_2_0= ruleSadlExplicitValue ) )
                    // InternalDialogParser.g:5201:5: (lv_explicitValues_2_0= ruleSadlExplicitValue )
                    {
                    // InternalDialogParser.g:5201:5: (lv_explicitValues_2_0= ruleSadlExplicitValue )
                    // InternalDialogParser.g:5202:6: lv_explicitValues_2_0= ruleSadlExplicitValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSadlValueListAccess().getExplicitValuesSadlExplicitValueParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_113);
                    lv_explicitValues_2_0=ruleSadlExplicitValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSadlValueListRule());
                      						}
                      						add(
                      							current,
                      							"explicitValues",
                      							lv_explicitValues_2_0,
                      							"com.ge.research.sadl.SADL.SadlExplicitValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:5219:4: (otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) ) )*
                    loop126:
                    do {
                        int alt126=2;
                        int LA126_0 = input.LA(1);

                        if ( (LA126_0==Comma) ) {
                            alt126=1;
                        }


                        switch (alt126) {
                    	case 1 :
                    	    // InternalDialogParser.g:5220:5: otherlv_3= Comma ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) )
                    	    {
                    	    otherlv_3=(Token)match(input,Comma,FOLLOW_101); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getSadlValueListAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:5224:5: ( (lv_explicitValues_4_0= ruleSadlExplicitValue ) )
                    	    // InternalDialogParser.g:5225:6: (lv_explicitValues_4_0= ruleSadlExplicitValue )
                    	    {
                    	    // InternalDialogParser.g:5225:6: (lv_explicitValues_4_0= ruleSadlExplicitValue )
                    	    // InternalDialogParser.g:5226:7: lv_explicitValues_4_0= ruleSadlExplicitValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSadlValueListAccess().getExplicitValuesSadlExplicitValueParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_113);
                    	    lv_explicitValues_4_0=ruleSadlExplicitValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSadlValueListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"explicitValues",
                    	      								lv_explicitValues_4_0,
                    	      								"com.ge.research.sadl.SADL.SadlExplicitValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop126;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getSadlValueListAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlValueList"


    // $ANTLR start "entryRuleAnArticle"
    // InternalDialogParser.g:5253:1: entryRuleAnArticle returns [String current=null] : iv_ruleAnArticle= ruleAnArticle EOF ;
    public final String entryRuleAnArticle() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAnArticle = null;


        try {
            // InternalDialogParser.g:5253:49: (iv_ruleAnArticle= ruleAnArticle EOF )
            // InternalDialogParser.g:5254:2: iv_ruleAnArticle= ruleAnArticle EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnArticleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnArticle=ruleAnArticle();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnArticle.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnArticle"


    // $ANTLR start "ruleAnArticle"
    // InternalDialogParser.g:5260:1: ruleAnArticle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_IndefiniteArticle_0= ruleIndefiniteArticle | this_DefiniteArticle_1= ruleDefiniteArticle ) ;
    public final AntlrDatatypeRuleToken ruleAnArticle() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_IndefiniteArticle_0 = null;

        AntlrDatatypeRuleToken this_DefiniteArticle_1 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5266:2: ( (this_IndefiniteArticle_0= ruleIndefiniteArticle | this_DefiniteArticle_1= ruleDefiniteArticle ) )
            // InternalDialogParser.g:5267:2: (this_IndefiniteArticle_0= ruleIndefiniteArticle | this_DefiniteArticle_1= ruleDefiniteArticle )
            {
            // InternalDialogParser.g:5267:2: (this_IndefiniteArticle_0= ruleIndefiniteArticle | this_DefiniteArticle_1= ruleDefiniteArticle )
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==Another||LA128_0==Some||LA128_0==Any||LA128_0==An||LA128_0==An_1||LA128_0==A||LA128_0==A_1) ) {
                alt128=1;
            }
            else if ( (LA128_0==The||LA128_0==The_1) ) {
                alt128=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 128, 0, input);

                throw nvae;
            }
            switch (alt128) {
                case 1 :
                    // InternalDialogParser.g:5268:3: this_IndefiniteArticle_0= ruleIndefiniteArticle
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnArticleAccess().getIndefiniteArticleParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_IndefiniteArticle_0=ruleIndefiniteArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_IndefiniteArticle_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5279:3: this_DefiniteArticle_1= ruleDefiniteArticle
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnArticleAccess().getDefiniteArticleParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DefiniteArticle_1=ruleDefiniteArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_DefiniteArticle_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnArticle"


    // $ANTLR start "entryRuleIndefiniteArticle"
    // InternalDialogParser.g:5293:1: entryRuleIndefiniteArticle returns [String current=null] : iv_ruleIndefiniteArticle= ruleIndefiniteArticle EOF ;
    public final String entryRuleIndefiniteArticle() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleIndefiniteArticle = null;


        try {
            // InternalDialogParser.g:5293:57: (iv_ruleIndefiniteArticle= ruleIndefiniteArticle EOF )
            // InternalDialogParser.g:5294:2: iv_ruleIndefiniteArticle= ruleIndefiniteArticle EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIndefiniteArticleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIndefiniteArticle=ruleIndefiniteArticle();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIndefiniteArticle.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIndefiniteArticle"


    // $ANTLR start "ruleIndefiniteArticle"
    // InternalDialogParser.g:5300:1: ruleIndefiniteArticle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= A | kw= A_1 | kw= An | kw= An_1 | kw= Any | kw= Some | kw= Another ) ;
    public final AntlrDatatypeRuleToken ruleIndefiniteArticle() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:5306:2: ( (kw= A | kw= A_1 | kw= An | kw= An_1 | kw= Any | kw= Some | kw= Another ) )
            // InternalDialogParser.g:5307:2: (kw= A | kw= A_1 | kw= An | kw= An_1 | kw= Any | kw= Some | kw= Another )
            {
            // InternalDialogParser.g:5307:2: (kw= A | kw= A_1 | kw= An | kw= An_1 | kw= Any | kw= Some | kw= Another )
            int alt129=7;
            switch ( input.LA(1) ) {
            case A:
                {
                alt129=1;
                }
                break;
            case A_1:
                {
                alt129=2;
                }
                break;
            case An:
                {
                alt129=3;
                }
                break;
            case An_1:
                {
                alt129=4;
                }
                break;
            case Any:
                {
                alt129=5;
                }
                break;
            case Some:
                {
                alt129=6;
                }
                break;
            case Another:
                {
                alt129=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 129, 0, input);

                throw nvae;
            }

            switch (alt129) {
                case 1 :
                    // InternalDialogParser.g:5308:3: kw= A
                    {
                    kw=(Token)match(input,A,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5314:3: kw= A_1
                    {
                    kw=(Token)match(input,A_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:5320:3: kw= An
                    {
                    kw=(Token)match(input,An,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:5326:3: kw= An_1
                    {
                    kw=(Token)match(input,An_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:5332:3: kw= Any
                    {
                    kw=(Token)match(input,Any,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnyKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:5338:3: kw= Some
                    {
                    kw=(Token)match(input,Some,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getSomeKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:5344:3: kw= Another
                    {
                    kw=(Token)match(input,Another,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getIndefiniteArticleAccess().getAnotherKeyword_6());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIndefiniteArticle"


    // $ANTLR start "entryRuleDefiniteArticle"
    // InternalDialogParser.g:5353:1: entryRuleDefiniteArticle returns [String current=null] : iv_ruleDefiniteArticle= ruleDefiniteArticle EOF ;
    public final String entryRuleDefiniteArticle() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDefiniteArticle = null;


        try {
            // InternalDialogParser.g:5353:55: (iv_ruleDefiniteArticle= ruleDefiniteArticle EOF )
            // InternalDialogParser.g:5354:2: iv_ruleDefiniteArticle= ruleDefiniteArticle EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefiniteArticleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefiniteArticle=ruleDefiniteArticle();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefiniteArticle.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefiniteArticle"


    // $ANTLR start "ruleDefiniteArticle"
    // InternalDialogParser.g:5360:1: ruleDefiniteArticle returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= The | kw= The_1 ) ;
    public final AntlrDatatypeRuleToken ruleDefiniteArticle() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:5366:2: ( (kw= The | kw= The_1 ) )
            // InternalDialogParser.g:5367:2: (kw= The | kw= The_1 )
            {
            // InternalDialogParser.g:5367:2: (kw= The | kw= The_1 )
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==The) ) {
                alt130=1;
            }
            else if ( (LA130_0==The_1) ) {
                alt130=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;
            }
            switch (alt130) {
                case 1 :
                    // InternalDialogParser.g:5368:3: kw= The
                    {
                    kw=(Token)match(input,The,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDefiniteArticleAccess().getTheKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5374:3: kw= The_1
                    {
                    kw=(Token)match(input,The_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDefiniteArticleAccess().getTheKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefiniteArticle"


    // $ANTLR start "entryRuleOrdinal"
    // InternalDialogParser.g:5383:1: entryRuleOrdinal returns [String current=null] : iv_ruleOrdinal= ruleOrdinal EOF ;
    public final String entryRuleOrdinal() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOrdinal = null;


        try {
            // InternalDialogParser.g:5383:47: (iv_ruleOrdinal= ruleOrdinal EOF )
            // InternalDialogParser.g:5384:2: iv_ruleOrdinal= ruleOrdinal EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrdinalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrdinal=ruleOrdinal();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrdinal.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrdinal"


    // $ANTLR start "ruleOrdinal"
    // InternalDialogParser.g:5390:1: ruleOrdinal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= First | kw= Second | kw= Other | kw= Third | kw= Fourth | kw= Fifth | kw= Sixth | kw= Seventh | kw= Eighth | kw= Ninth | kw= Tenth ) ;
    public final AntlrDatatypeRuleToken ruleOrdinal() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:5396:2: ( (kw= First | kw= Second | kw= Other | kw= Third | kw= Fourth | kw= Fifth | kw= Sixth | kw= Seventh | kw= Eighth | kw= Ninth | kw= Tenth ) )
            // InternalDialogParser.g:5397:2: (kw= First | kw= Second | kw= Other | kw= Third | kw= Fourth | kw= Fifth | kw= Sixth | kw= Seventh | kw= Eighth | kw= Ninth | kw= Tenth )
            {
            // InternalDialogParser.g:5397:2: (kw= First | kw= Second | kw= Other | kw= Third | kw= Fourth | kw= Fifth | kw= Sixth | kw= Seventh | kw= Eighth | kw= Ninth | kw= Tenth )
            int alt131=11;
            switch ( input.LA(1) ) {
            case First:
                {
                alt131=1;
                }
                break;
            case Second:
                {
                alt131=2;
                }
                break;
            case Other:
                {
                alt131=3;
                }
                break;
            case Third:
                {
                alt131=4;
                }
                break;
            case Fourth:
                {
                alt131=5;
                }
                break;
            case Fifth:
                {
                alt131=6;
                }
                break;
            case Sixth:
                {
                alt131=7;
                }
                break;
            case Seventh:
                {
                alt131=8;
                }
                break;
            case Eighth:
                {
                alt131=9;
                }
                break;
            case Ninth:
                {
                alt131=10;
                }
                break;
            case Tenth:
                {
                alt131=11;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 131, 0, input);

                throw nvae;
            }

            switch (alt131) {
                case 1 :
                    // InternalDialogParser.g:5398:3: kw= First
                    {
                    kw=(Token)match(input,First,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getFirstKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:5404:3: kw= Second
                    {
                    kw=(Token)match(input,Second,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getSecondKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:5410:3: kw= Other
                    {
                    kw=(Token)match(input,Other,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getOtherKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:5416:3: kw= Third
                    {
                    kw=(Token)match(input,Third,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getThirdKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:5422:3: kw= Fourth
                    {
                    kw=(Token)match(input,Fourth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getFourthKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:5428:3: kw= Fifth
                    {
                    kw=(Token)match(input,Fifth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getFifthKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:5434:3: kw= Sixth
                    {
                    kw=(Token)match(input,Sixth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getSixthKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:5440:3: kw= Seventh
                    {
                    kw=(Token)match(input,Seventh,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getSeventhKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalDialogParser.g:5446:3: kw= Eighth
                    {
                    kw=(Token)match(input,Eighth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getEighthKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalDialogParser.g:5452:3: kw= Ninth
                    {
                    kw=(Token)match(input,Ninth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getNinthKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalDialogParser.g:5458:3: kw= Tenth
                    {
                    kw=(Token)match(input,Tenth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOrdinalAccess().getTenthKeyword_10());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrdinal"


    // $ANTLR start "entryRuleNamedStructureAnnotation"
    // InternalDialogParser.g:5467:1: entryRuleNamedStructureAnnotation returns [EObject current=null] : iv_ruleNamedStructureAnnotation= ruleNamedStructureAnnotation EOF ;
    public final EObject entryRuleNamedStructureAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedStructureAnnotation = null;


        try {
            // InternalDialogParser.g:5467:65: (iv_ruleNamedStructureAnnotation= ruleNamedStructureAnnotation EOF )
            // InternalDialogParser.g:5468:2: iv_ruleNamedStructureAnnotation= ruleNamedStructureAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedStructureAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedStructureAnnotation=ruleNamedStructureAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedStructureAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedStructureAnnotation"


    // $ANTLR start "ruleNamedStructureAnnotation"
    // InternalDialogParser.g:5474:1: ruleNamedStructureAnnotation returns [EObject current=null] : ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis ) ;
    public final EObject ruleNamedStructureAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_type_2_0 = null;

        EObject lv_contents_3_0 = null;

        EObject lv_contents_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5480:2: ( ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis ) )
            // InternalDialogParser.g:5481:2: ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis )
            {
            // InternalDialogParser.g:5481:2: ( (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis )
            // InternalDialogParser.g:5482:3: (otherlv_0= Comma )? otherlv_1= LeftParenthesis ( (lv_type_2_0= ruleSadlResource ) ) ( (lv_contents_3_0= ruleSadlExplicitValue ) ) (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )* otherlv_6= RightParenthesis
            {
            // InternalDialogParser.g:5482:3: (otherlv_0= Comma )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==Comma) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalDialogParser.g:5483:4: otherlv_0= Comma
                    {
                    otherlv_0=(Token)match(input,Comma,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getNamedStructureAnnotationAccess().getCommaKeyword_0());
                      			
                    }

                    }
                    break;

            }

            otherlv_1=(Token)match(input,LeftParenthesis,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNamedStructureAnnotationAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalDialogParser.g:5492:3: ( (lv_type_2_0= ruleSadlResource ) )
            // InternalDialogParser.g:5493:4: (lv_type_2_0= ruleSadlResource )
            {
            // InternalDialogParser.g:5493:4: (lv_type_2_0= ruleSadlResource )
            // InternalDialogParser.g:5494:5: lv_type_2_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedStructureAnnotationAccess().getTypeSadlResourceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_101);
            lv_type_2_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedStructureAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_2_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:5511:3: ( (lv_contents_3_0= ruleSadlExplicitValue ) )
            // InternalDialogParser.g:5512:4: (lv_contents_3_0= ruleSadlExplicitValue )
            {
            // InternalDialogParser.g:5512:4: (lv_contents_3_0= ruleSadlExplicitValue )
            // InternalDialogParser.g:5513:5: lv_contents_3_0= ruleSadlExplicitValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedStructureAnnotationAccess().getContentsSadlExplicitValueParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_28);
            lv_contents_3_0=ruleSadlExplicitValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedStructureAnnotationRule());
              					}
              					add(
              						current,
              						"contents",
              						lv_contents_3_0,
              						"com.ge.research.sadl.SADL.SadlExplicitValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:5530:3: (otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) ) )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==Comma) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // InternalDialogParser.g:5531:4: otherlv_4= Comma ( (lv_contents_5_0= ruleSadlExplicitValue ) )
            	    {
            	    otherlv_4=(Token)match(input,Comma,FOLLOW_101); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getNamedStructureAnnotationAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalDialogParser.g:5535:4: ( (lv_contents_5_0= ruleSadlExplicitValue ) )
            	    // InternalDialogParser.g:5536:5: (lv_contents_5_0= ruleSadlExplicitValue )
            	    {
            	    // InternalDialogParser.g:5536:5: (lv_contents_5_0= ruleSadlExplicitValue )
            	    // InternalDialogParser.g:5537:6: lv_contents_5_0= ruleSadlExplicitValue
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNamedStructureAnnotationAccess().getContentsSadlExplicitValueParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_28);
            	    lv_contents_5_0=ruleSadlExplicitValue();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNamedStructureAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"contents",
            	      							lv_contents_5_0,
            	      							"com.ge.research.sadl.SADL.SadlExplicitValue");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);

            otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getNamedStructureAnnotationAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedStructureAnnotation"


    // $ANTLR start "entryRuleConstructExpression"
    // InternalDialogParser.g:5563:1: entryRuleConstructExpression returns [EObject current=null] : iv_ruleConstructExpression= ruleConstructExpression EOF ;
    public final EObject entryRuleConstructExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConstructExpression = null;


        try {
            // InternalDialogParser.g:5563:60: (iv_ruleConstructExpression= ruleConstructExpression EOF )
            // InternalDialogParser.g:5564:2: iv_ruleConstructExpression= ruleConstructExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstructExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstructExpression=ruleConstructExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstructExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstructExpression"


    // $ANTLR start "ruleConstructExpression"
    // InternalDialogParser.g:5570:1: ruleConstructExpression returns [EObject current=null] : ( () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) ) ;
    public final EObject ruleConstructExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_subj_2_0 = null;

        EObject lv_pred_4_0 = null;

        EObject lv_obj_6_0 = null;

        EObject lv_whereExpression_8_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5576:2: ( ( () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) ) )
            // InternalDialogParser.g:5577:2: ( () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )
            {
            // InternalDialogParser.g:5577:2: ( () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )
            // InternalDialogParser.g:5578:3: () otherlv_1= Construct ( (lv_subj_2_0= ruleSadlResource ) ) (otherlv_3= Comma )? ( (lv_pred_4_0= ruleSadlResource ) ) (otherlv_5= Comma )? ( (lv_obj_6_0= ruleSadlResource ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) )
            {
            // InternalDialogParser.g:5578:3: ()
            // InternalDialogParser.g:5579:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getConstructExpressionAccess().getConstructExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Construct,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConstructExpressionAccess().getConstructKeyword_1());
              		
            }
            // InternalDialogParser.g:5589:3: ( (lv_subj_2_0= ruleSadlResource ) )
            // InternalDialogParser.g:5590:4: (lv_subj_2_0= ruleSadlResource )
            {
            // InternalDialogParser.g:5590:4: (lv_subj_2_0= ruleSadlResource )
            // InternalDialogParser.g:5591:5: lv_subj_2_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstructExpressionAccess().getSubjSadlResourceParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_114);
            lv_subj_2_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
              					}
              					set(
              						current,
              						"subj",
              						lv_subj_2_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:5608:3: (otherlv_3= Comma )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==Comma) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalDialogParser.g:5609:4: otherlv_3= Comma
                    {
                    otherlv_3=(Token)match(input,Comma,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getConstructExpressionAccess().getCommaKeyword_3());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:5614:3: ( (lv_pred_4_0= ruleSadlResource ) )
            // InternalDialogParser.g:5615:4: (lv_pred_4_0= ruleSadlResource )
            {
            // InternalDialogParser.g:5615:4: (lv_pred_4_0= ruleSadlResource )
            // InternalDialogParser.g:5616:5: lv_pred_4_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstructExpressionAccess().getPredSadlResourceParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_114);
            lv_pred_4_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
              					}
              					set(
              						current,
              						"pred",
              						lv_pred_4_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:5633:3: (otherlv_5= Comma )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==Comma) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalDialogParser.g:5634:4: otherlv_5= Comma
                    {
                    otherlv_5=(Token)match(input,Comma,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getConstructExpressionAccess().getCommaKeyword_5());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:5639:3: ( (lv_obj_6_0= ruleSadlResource ) )
            // InternalDialogParser.g:5640:4: (lv_obj_6_0= ruleSadlResource )
            {
            // InternalDialogParser.g:5640:4: (lv_obj_6_0= ruleSadlResource )
            // InternalDialogParser.g:5641:5: lv_obj_6_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstructExpressionAccess().getObjSadlResourceParserRuleCall_6_0());
              				
            }
            pushFollow(FOLLOW_115);
            lv_obj_6_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
              					}
              					set(
              						current,
              						"obj",
              						lv_obj_6_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_7=(Token)match(input,Where,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getConstructExpressionAccess().getWhereKeyword_7());
              		
            }
            // InternalDialogParser.g:5662:3: ( (lv_whereExpression_8_0= ruleExpression ) )
            // InternalDialogParser.g:5663:4: (lv_whereExpression_8_0= ruleExpression )
            {
            // InternalDialogParser.g:5663:4: (lv_whereExpression_8_0= ruleExpression )
            // InternalDialogParser.g:5664:5: lv_whereExpression_8_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConstructExpressionAccess().getWhereExpressionExpressionParserRuleCall_8_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_whereExpression_8_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConstructExpressionRule());
              					}
              					set(
              						current,
              						"whereExpression",
              						lv_whereExpression_8_0,
              						"com.ge.research.sadl.SADL.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstructExpression"


    // $ANTLR start "entryRuleAskExpression"
    // InternalDialogParser.g:5685:1: entryRuleAskExpression returns [EObject current=null] : iv_ruleAskExpression= ruleAskExpression EOF ;
    public final EObject entryRuleAskExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAskExpression = null;


        try {
            // InternalDialogParser.g:5685:54: (iv_ruleAskExpression= ruleAskExpression EOF )
            // InternalDialogParser.g:5686:2: iv_ruleAskExpression= ruleAskExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAskExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAskExpression=ruleAskExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAskExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAskExpression"


    // $ANTLR start "ruleAskExpression"
    // InternalDialogParser.g:5692:1: ruleAskExpression returns [EObject current=null] : ( () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) ) ) ;
    public final EObject ruleAskExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        EObject lv_whereExpression_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5698:2: ( ( () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) ) ) )
            // InternalDialogParser.g:5699:2: ( () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) ) )
            {
            // InternalDialogParser.g:5699:2: ( () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) ) )
            // InternalDialogParser.g:5700:3: () otherlv_1= Ask_1 otherlv_2= Where ( (lv_whereExpression_3_0= ruleExpression ) )
            {
            // InternalDialogParser.g:5700:3: ()
            // InternalDialogParser.g:5701:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAskExpressionAccess().getAskExpressionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,Ask_1,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAskExpressionAccess().getAskKeyword_1());
              		
            }
            otherlv_2=(Token)match(input,Where,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getAskExpressionAccess().getWhereKeyword_2());
              		
            }
            // InternalDialogParser.g:5715:3: ( (lv_whereExpression_3_0= ruleExpression ) )
            // InternalDialogParser.g:5716:4: (lv_whereExpression_3_0= ruleExpression )
            {
            // InternalDialogParser.g:5716:4: (lv_whereExpression_3_0= ruleExpression )
            // InternalDialogParser.g:5717:5: lv_whereExpression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAskExpressionAccess().getWhereExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_whereExpression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAskExpressionRule());
              					}
              					set(
              						current,
              						"whereExpression",
              						lv_whereExpression_3_0,
              						"com.ge.research.sadl.SADL.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAskExpression"


    // $ANTLR start "entryRuleUpdateExpression"
    // InternalDialogParser.g:5738:1: entryRuleUpdateExpression returns [EObject current=null] : iv_ruleUpdateExpression= ruleUpdateExpression EOF ;
    public final EObject entryRuleUpdateExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUpdateExpression = null;


        try {
            // InternalDialogParser.g:5738:57: (iv_ruleUpdateExpression= ruleUpdateExpression EOF )
            // InternalDialogParser.g:5739:2: iv_ruleUpdateExpression= ruleUpdateExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUpdateExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUpdateExpression=ruleUpdateExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUpdateExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUpdateExpression"


    // $ANTLR start "ruleUpdateExpression"
    // InternalDialogParser.g:5745:1: ruleUpdateExpression returns [EObject current=null] : ( () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )? ) ;
    public final EObject ruleUpdateExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_dData_2_0=null;
        Token otherlv_4=null;
        Token lv_iData_5_0=null;
        Token otherlv_7=null;
        EObject lv_deleteExpression_3_0 = null;

        EObject lv_insertExpression_6_0 = null;

        EObject lv_whereExpression_8_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5751:2: ( ( () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )? ) )
            // InternalDialogParser.g:5752:2: ( () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )? )
            {
            // InternalDialogParser.g:5752:2: ( () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )? )
            // InternalDialogParser.g:5753:3: () (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )? (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )? (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )?
            {
            // InternalDialogParser.g:5753:3: ()
            // InternalDialogParser.g:5754:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getUpdateExpressionAccess().getUpdateExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:5760:3: (otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) ) )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==Delete) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalDialogParser.g:5761:4: otherlv_1= Delete ( (lv_dData_2_0= Data ) )? ( (lv_deleteExpression_3_0= ruleExpression ) )
                    {
                    otherlv_1=(Token)match(input,Delete,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getUpdateExpressionAccess().getDeleteKeyword_1_0());
                      			
                    }
                    // InternalDialogParser.g:5765:4: ( (lv_dData_2_0= Data ) )?
                    int alt136=2;
                    int LA136_0 = input.LA(1);

                    if ( (LA136_0==Data) ) {
                        alt136=1;
                    }
                    switch (alt136) {
                        case 1 :
                            // InternalDialogParser.g:5766:5: (lv_dData_2_0= Data )
                            {
                            // InternalDialogParser.g:5766:5: (lv_dData_2_0= Data )
                            // InternalDialogParser.g:5767:6: lv_dData_2_0= Data
                            {
                            lv_dData_2_0=(Token)match(input,Data,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_dData_2_0, grammarAccess.getUpdateExpressionAccess().getDDataDataKeyword_1_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUpdateExpressionRule());
                              						}
                              						setWithLastConsumed(current, "dData", lv_dData_2_0, "data");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:5779:4: ( (lv_deleteExpression_3_0= ruleExpression ) )
                    // InternalDialogParser.g:5780:5: (lv_deleteExpression_3_0= ruleExpression )
                    {
                    // InternalDialogParser.g:5780:5: (lv_deleteExpression_3_0= ruleExpression )
                    // InternalDialogParser.g:5781:6: lv_deleteExpression_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUpdateExpressionAccess().getDeleteExpressionExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_117);
                    lv_deleteExpression_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUpdateExpressionRule());
                      						}
                      						set(
                      							current,
                      							"deleteExpression",
                      							lv_deleteExpression_3_0,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:5799:3: (otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) ) )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==Insert) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalDialogParser.g:5800:4: otherlv_4= Insert ( (lv_iData_5_0= Data ) )? ( (lv_insertExpression_6_0= ruleExpression ) )
                    {
                    otherlv_4=(Token)match(input,Insert,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getUpdateExpressionAccess().getInsertKeyword_2_0());
                      			
                    }
                    // InternalDialogParser.g:5804:4: ( (lv_iData_5_0= Data ) )?
                    int alt138=2;
                    int LA138_0 = input.LA(1);

                    if ( (LA138_0==Data) ) {
                        alt138=1;
                    }
                    switch (alt138) {
                        case 1 :
                            // InternalDialogParser.g:5805:5: (lv_iData_5_0= Data )
                            {
                            // InternalDialogParser.g:5805:5: (lv_iData_5_0= Data )
                            // InternalDialogParser.g:5806:6: lv_iData_5_0= Data
                            {
                            lv_iData_5_0=(Token)match(input,Data,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_iData_5_0, grammarAccess.getUpdateExpressionAccess().getIDataDataKeyword_2_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUpdateExpressionRule());
                              						}
                              						setWithLastConsumed(current, "iData", lv_iData_5_0, "data");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:5818:4: ( (lv_insertExpression_6_0= ruleExpression ) )
                    // InternalDialogParser.g:5819:5: (lv_insertExpression_6_0= ruleExpression )
                    {
                    // InternalDialogParser.g:5819:5: (lv_insertExpression_6_0= ruleExpression )
                    // InternalDialogParser.g:5820:6: lv_insertExpression_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUpdateExpressionAccess().getInsertExpressionExpressionParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_32);
                    lv_insertExpression_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUpdateExpressionRule());
                      						}
                      						set(
                      							current,
                      							"insertExpression",
                      							lv_insertExpression_6_0,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:5838:3: (otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) ) )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==Where) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalDialogParser.g:5839:4: otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpression ) )
                    {
                    otherlv_7=(Token)match(input,Where,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getUpdateExpressionAccess().getWhereKeyword_3_0());
                      			
                    }
                    // InternalDialogParser.g:5843:4: ( (lv_whereExpression_8_0= ruleExpression ) )
                    // InternalDialogParser.g:5844:5: (lv_whereExpression_8_0= ruleExpression )
                    {
                    // InternalDialogParser.g:5844:5: (lv_whereExpression_8_0= ruleExpression )
                    // InternalDialogParser.g:5845:6: lv_whereExpression_8_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUpdateExpressionAccess().getWhereExpressionExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_whereExpression_8_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUpdateExpressionRule());
                      						}
                      						set(
                      							current,
                      							"whereExpression",
                      							lv_whereExpression_8_0,
                      							"com.ge.research.sadl.SADL.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUpdateExpression"


    // $ANTLR start "entryRuleExpression"
    // InternalDialogParser.g:5867:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalDialogParser.g:5867:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalDialogParser.g:5868:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalDialogParser.g:5874:1: ruleExpression returns [EObject current=null] : this_SelectExpression_0= norm3_SelectExpression ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_SelectExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5880:2: (this_SelectExpression_0= norm3_SelectExpression )
            // InternalDialogParser.g:5881:2: this_SelectExpression_0= norm3_SelectExpression
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getSelectExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_SelectExpression_0=norm3_SelectExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SelectExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleNestedExpression"
    // InternalDialogParser.g:5892:1: entryRuleNestedExpression returns [EObject current=null] : iv_ruleNestedExpression= ruleNestedExpression EOF ;
    public final EObject entryRuleNestedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNestedExpression = null;


        try {
            // InternalDialogParser.g:5892:57: (iv_ruleNestedExpression= ruleNestedExpression EOF )
            // InternalDialogParser.g:5893:2: iv_ruleNestedExpression= ruleNestedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNestedExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNestedExpression=ruleNestedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNestedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNestedExpression"


    // $ANTLR start "ruleNestedExpression"
    // InternalDialogParser.g:5899:1: ruleNestedExpression returns [EObject current=null] : this_SelectExpression_0= norm1_SelectExpression ;
    public final EObject ruleNestedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_SelectExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5905:2: (this_SelectExpression_0= norm1_SelectExpression )
            // InternalDialogParser.g:5906:2: this_SelectExpression_0= norm1_SelectExpression
            {
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getNestedExpressionAccess().getSelectExpressionParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_SelectExpression_0=norm1_SelectExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SelectExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNestedExpression"


    // $ANTLR start "entryRuleSelectExpression"
    // InternalDialogParser.g:5917:1: entryRuleSelectExpression returns [EObject current=null] : iv_ruleSelectExpression= ruleSelectExpression EOF ;
    public final EObject entryRuleSelectExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSelectExpression = null;


        try {
            // InternalDialogParser.g:5917:57: (iv_ruleSelectExpression= ruleSelectExpression EOF )
            // InternalDialogParser.g:5918:2: iv_ruleSelectExpression= ruleSelectExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSelectExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSelectExpression=ruleSelectExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSelectExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSelectExpression"


    // $ANTLR start "ruleSelectExpression"
    // InternalDialogParser.g:5924:1: ruleSelectExpression returns [EObject current=null] : ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= ruleExpressionParameterized ) ;
    public final EObject ruleSelectExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_distinct_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_orderby_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_selectFrom_4_0 = null;

        EObject lv_selectFrom_6_0 = null;

        EObject lv_whereExpression_8_0 = null;

        EObject lv_orderList_11_0 = null;

        EObject lv_orderList_13_0 = null;

        EObject this_ExpressionParameterized_14 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:5930:2: ( ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= ruleExpressionParameterized ) )
            // InternalDialogParser.g:5931:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= ruleExpressionParameterized )
            {
            // InternalDialogParser.g:5931:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= ruleExpressionParameterized )
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==Select) && (synpred3_InternalDialogParser())) {
                alt148=1;
            }
            else if ( (LA148_0==Another||LA148_0==Element||LA148_0==Sublist||LA148_0==Length||(LA148_0>=Count && LA148_0<=False)||LA148_0==First||(LA148_0>=Index && LA148_0<=Known)||LA148_0==There||LA148_0==Value||LA148_0==None||LA148_0==Last||LA148_0==Only||LA148_0==Some||(LA148_0>=True && LA148_0<=Type)||LA148_0==The||LA148_0==Any||LA148_0==Not||LA148_0==The_1||LA148_0==HyphenMinusHyphenMinus||(LA148_0>=An && LA148_0<=An_1)||LA148_0==ExclamationMark||LA148_0==LeftParenthesis||LA148_0==HyphenMinus||LA148_0==A||LA148_0==LeftSquareBracket||(LA148_0>=A_1 && LA148_0<=LeftCurlyBracket)||LA148_0==RULE_NUMBER||(LA148_0>=RULE_ID && LA148_0<=RULE_STRING)) ) {
                alt148=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 148, 0, input);

                throw nvae;
            }
            switch (alt148) {
                case 1 :
                    // InternalDialogParser.g:5932:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    {
                    // InternalDialogParser.g:5932:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    // InternalDialogParser.g:5933:4: ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    {
                    // InternalDialogParser.g:5934:4: ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    // InternalDialogParser.g:5935:5: () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= ruleExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    {
                    // InternalDialogParser.g:5935:5: ()
                    // InternalDialogParser.g:5936:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,Select,FOLLOW_118); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
                      				
                    }
                    // InternalDialogParser.g:5946:5: ( (lv_distinct_2_0= Distinct ) )?
                    int alt141=2;
                    int LA141_0 = input.LA(1);

                    if ( (LA141_0==Distinct) ) {
                        alt141=1;
                    }
                    switch (alt141) {
                        case 1 :
                            // InternalDialogParser.g:5947:6: (lv_distinct_2_0= Distinct )
                            {
                            // InternalDialogParser.g:5947:6: (lv_distinct_2_0= Distinct )
                            // InternalDialogParser.g:5948:7: lv_distinct_2_0= Distinct
                            {
                            lv_distinct_2_0=(Token)match(input,Distinct,FOLLOW_119); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSelectExpressionRule());
                              							}
                              							setWithLastConsumed(current, "distinct", true, "distinct");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:5960:5: (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) )
                    int alt144=2;
                    int LA144_0 = input.LA(1);

                    if ( (LA144_0==Asterisk) ) {
                        alt144=1;
                    }
                    else if ( ((LA144_0>=RULE_ID && LA144_0<=RULE_QNAME_TERMINAL)) ) {
                        alt144=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 144, 0, input);

                        throw nvae;
                    }
                    switch (alt144) {
                        case 1 :
                            // InternalDialogParser.g:5961:6: otherlv_3= Asterisk
                            {
                            otherlv_3=(Token)match(input,Asterisk,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:5966:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            {
                            // InternalDialogParser.g:5966:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            // InternalDialogParser.g:5967:7: ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            {
                            // InternalDialogParser.g:5967:7: ( (lv_selectFrom_4_0= ruleSadlResource ) )
                            // InternalDialogParser.g:5968:8: (lv_selectFrom_4_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:5968:8: (lv_selectFrom_4_0= ruleSadlResource )
                            // InternalDialogParser.g:5969:9: lv_selectFrom_4_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
                              								
                            }
                            pushFollow(FOLLOW_120);
                            lv_selectFrom_4_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              									}
                              									add(
                              										current,
                              										"selectFrom",
                              										lv_selectFrom_4_0,
                              										"com.ge.research.sadl.SADL.SadlResource");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalDialogParser.g:5986:7: ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            loop143:
                            do {
                                int alt143=2;
                                int LA143_0 = input.LA(1);

                                if ( (LA143_0==Comma||(LA143_0>=RULE_ID && LA143_0<=RULE_QNAME_TERMINAL)) ) {
                                    alt143=1;
                                }


                                switch (alt143) {
                            	case 1 :
                            	    // InternalDialogParser.g:5987:8: (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    {
                            	    // InternalDialogParser.g:5987:8: (otherlv_5= Comma )?
                            	    int alt142=2;
                            	    int LA142_0 = input.LA(1);

                            	    if ( (LA142_0==Comma) ) {
                            	        alt142=1;
                            	    }
                            	    switch (alt142) {
                            	        case 1 :
                            	            // InternalDialogParser.g:5988:9: otherlv_5= Comma
                            	            {
                            	            otherlv_5=(Token)match(input,Comma,FOLLOW_8); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:5993:8: ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:5994:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:5994:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:5995:10: lv_selectFrom_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_120);
                            	    lv_selectFrom_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"selectFrom",
                            	      											lv_selectFrom_6_0,
                            	      											"com.ge.research.sadl.SADL.SadlResource");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop143;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,Where,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
                      				
                    }
                    // InternalDialogParser.g:6019:5: ( (lv_whereExpression_8_0= ruleExpressionParameterized ) )
                    // InternalDialogParser.g:6020:6: (lv_whereExpression_8_0= ruleExpressionParameterized )
                    {
                    // InternalDialogParser.g:6020:6: (lv_whereExpression_8_0= ruleExpressionParameterized )
                    // InternalDialogParser.g:6021:7: lv_whereExpression_8_0= ruleExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
                      						
                    }
                    pushFollow(FOLLOW_122);
                    lv_whereExpression_8_0=ruleExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                      							}
                      							set(
                      								current,
                      								"whereExpression",
                      								lv_whereExpression_8_0,
                      								"com.ge.research.sadl.SADL.ExpressionParameterized");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:6038:5: ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    int alt147=2;
                    int LA147_0 = input.LA(1);

                    if ( (LA147_0==Order) ) {
                        alt147=1;
                    }
                    switch (alt147) {
                        case 1 :
                            // InternalDialogParser.g:6039:6: ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            {
                            // InternalDialogParser.g:6039:6: ( (lv_orderby_9_0= Order ) )
                            // InternalDialogParser.g:6040:7: (lv_orderby_9_0= Order )
                            {
                            // InternalDialogParser.g:6040:7: (lv_orderby_9_0= Order )
                            // InternalDialogParser.g:6041:8: lv_orderby_9_0= Order
                            {
                            lv_orderby_9_0=(Token)match(input,Order,FOLLOW_89); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSelectExpressionRule());
                              								}
                              								setWithLastConsumed(current, "orderby", lv_orderby_9_0, "order");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,By,FOLLOW_123); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
                              					
                            }
                            // InternalDialogParser.g:6057:6: ( (lv_orderList_11_0= ruleOrderElement ) )
                            // InternalDialogParser.g:6058:7: (lv_orderList_11_0= ruleOrderElement )
                            {
                            // InternalDialogParser.g:6058:7: (lv_orderList_11_0= ruleOrderElement )
                            // InternalDialogParser.g:6059:8: lv_orderList_11_0= ruleOrderElement
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
                              							
                            }
                            pushFollow(FOLLOW_124);
                            lv_orderList_11_0=ruleOrderElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              								}
                              								add(
                              									current,
                              									"orderList",
                              									lv_orderList_11_0,
                              									"com.ge.research.sadl.SADL.OrderElement");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:6076:6: ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            loop146:
                            do {
                                int alt146=2;
                                int LA146_0 = input.LA(1);

                                if ( (LA146_0==Comma) && (synpred4_InternalDialogParser())) {
                                    alt146=1;
                                }
                                else if ( (LA146_0==Asc) && (synpred4_InternalDialogParser())) {
                                    alt146=1;
                                }
                                else if ( (LA146_0==Desc) && (synpred4_InternalDialogParser())) {
                                    alt146=1;
                                }
                                else if ( (LA146_0==RULE_QNAME_TERMINAL) && (synpred4_InternalDialogParser())) {
                                    alt146=1;
                                }
                                else if ( (LA146_0==RULE_ID) && (synpred4_InternalDialogParser())) {
                                    alt146=1;
                                }


                                switch (alt146) {
                            	case 1 :
                            	    // InternalDialogParser.g:6077:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    {
                            	    // InternalDialogParser.g:6078:7: ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    // InternalDialogParser.g:6079:8: (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    {
                            	    // InternalDialogParser.g:6079:8: (otherlv_12= Comma )?
                            	    int alt145=2;
                            	    int LA145_0 = input.LA(1);

                            	    if ( (LA145_0==Comma) ) {
                            	        alt145=1;
                            	    }
                            	    switch (alt145) {
                            	        case 1 :
                            	            // InternalDialogParser.g:6080:9: otherlv_12= Comma
                            	            {
                            	            otherlv_12=(Token)match(input,Comma,FOLLOW_123); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:6085:8: ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    // InternalDialogParser.g:6086:9: (lv_orderList_13_0= ruleOrderElement )
                            	    {
                            	    // InternalDialogParser.g:6086:9: (lv_orderList_13_0= ruleOrderElement )
                            	    // InternalDialogParser.g:6087:10: lv_orderList_13_0= ruleOrderElement
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_124);
                            	    lv_orderList_13_0=ruleOrderElement();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"orderList",
                            	      											lv_orderList_13_0,
                            	      											"com.ge.research.sadl.SADL.OrderElement");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop146;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6110:3: this_ExpressionParameterized_14= ruleExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionParameterized_14=ruleExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionParameterized_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSelectExpression"


    // $ANTLR start "norm1_SelectExpression"
    // InternalDialogParser.g:6123:1: norm1_SelectExpression returns [EObject current=null] : ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm1_ExpressionParameterized ) ;
    public final EObject norm1_SelectExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_distinct_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_orderby_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_selectFrom_4_0 = null;

        EObject lv_selectFrom_6_0 = null;

        EObject lv_whereExpression_8_0 = null;

        EObject lv_orderList_11_0 = null;

        EObject lv_orderList_13_0 = null;

        EObject this_ExpressionParameterized_14 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6129:2: ( ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm1_ExpressionParameterized ) )
            // InternalDialogParser.g:6130:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm1_ExpressionParameterized )
            {
            // InternalDialogParser.g:6130:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm1_ExpressionParameterized )
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==Select) && (synpred5_InternalDialogParser())) {
                alt156=1;
            }
            else if ( (LA156_0==Another||LA156_0==Element||LA156_0==Sublist||LA156_0==Length||(LA156_0>=Count && LA156_0<=False)||LA156_0==First||(LA156_0>=Index && LA156_0<=Known)||LA156_0==There||LA156_0==Value||LA156_0==None||LA156_0==Last||LA156_0==Only||LA156_0==Some||(LA156_0>=True && LA156_0<=Type)||LA156_0==The||LA156_0==Any||LA156_0==Not||LA156_0==The_1||LA156_0==HyphenMinusHyphenMinus||(LA156_0>=An && LA156_0<=An_1)||LA156_0==ExclamationMark||LA156_0==LeftParenthesis||LA156_0==HyphenMinus||LA156_0==A||LA156_0==LeftSquareBracket||(LA156_0>=A_1 && LA156_0<=LeftCurlyBracket)||LA156_0==RULE_NUMBER||(LA156_0>=RULE_ID && LA156_0<=RULE_STRING)) ) {
                alt156=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 156, 0, input);

                throw nvae;
            }
            switch (alt156) {
                case 1 :
                    // InternalDialogParser.g:6131:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    {
                    // InternalDialogParser.g:6131:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    // InternalDialogParser.g:6132:4: ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    {
                    // InternalDialogParser.g:6133:4: ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    // InternalDialogParser.g:6134:5: () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    {
                    // InternalDialogParser.g:6134:5: ()
                    // InternalDialogParser.g:6135:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,Select,FOLLOW_118); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
                      				
                    }
                    // InternalDialogParser.g:6145:5: ( (lv_distinct_2_0= Distinct ) )?
                    int alt149=2;
                    int LA149_0 = input.LA(1);

                    if ( (LA149_0==Distinct) ) {
                        alt149=1;
                    }
                    switch (alt149) {
                        case 1 :
                            // InternalDialogParser.g:6146:6: (lv_distinct_2_0= Distinct )
                            {
                            // InternalDialogParser.g:6146:6: (lv_distinct_2_0= Distinct )
                            // InternalDialogParser.g:6147:7: lv_distinct_2_0= Distinct
                            {
                            lv_distinct_2_0=(Token)match(input,Distinct,FOLLOW_119); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSelectExpressionRule());
                              							}
                              							setWithLastConsumed(current, "distinct", true, "distinct");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:6159:5: (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) )
                    int alt152=2;
                    int LA152_0 = input.LA(1);

                    if ( (LA152_0==Asterisk) ) {
                        alt152=1;
                    }
                    else if ( ((LA152_0>=RULE_ID && LA152_0<=RULE_QNAME_TERMINAL)) ) {
                        alt152=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 152, 0, input);

                        throw nvae;
                    }
                    switch (alt152) {
                        case 1 :
                            // InternalDialogParser.g:6160:6: otherlv_3= Asterisk
                            {
                            otherlv_3=(Token)match(input,Asterisk,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:6165:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            {
                            // InternalDialogParser.g:6165:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            // InternalDialogParser.g:6166:7: ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            {
                            // InternalDialogParser.g:6166:7: ( (lv_selectFrom_4_0= ruleSadlResource ) )
                            // InternalDialogParser.g:6167:8: (lv_selectFrom_4_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:6167:8: (lv_selectFrom_4_0= ruleSadlResource )
                            // InternalDialogParser.g:6168:9: lv_selectFrom_4_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
                              								
                            }
                            pushFollow(FOLLOW_120);
                            lv_selectFrom_4_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              									}
                              									add(
                              										current,
                              										"selectFrom",
                              										lv_selectFrom_4_0,
                              										"com.ge.research.sadl.SADL.SadlResource");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalDialogParser.g:6185:7: ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            loop151:
                            do {
                                int alt151=2;
                                int LA151_0 = input.LA(1);

                                if ( (LA151_0==Comma||(LA151_0>=RULE_ID && LA151_0<=RULE_QNAME_TERMINAL)) ) {
                                    alt151=1;
                                }


                                switch (alt151) {
                            	case 1 :
                            	    // InternalDialogParser.g:6186:8: (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    {
                            	    // InternalDialogParser.g:6186:8: (otherlv_5= Comma )?
                            	    int alt150=2;
                            	    int LA150_0 = input.LA(1);

                            	    if ( (LA150_0==Comma) ) {
                            	        alt150=1;
                            	    }
                            	    switch (alt150) {
                            	        case 1 :
                            	            // InternalDialogParser.g:6187:9: otherlv_5= Comma
                            	            {
                            	            otherlv_5=(Token)match(input,Comma,FOLLOW_8); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:6192:8: ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:6193:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:6193:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:6194:10: lv_selectFrom_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_120);
                            	    lv_selectFrom_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"selectFrom",
                            	      											lv_selectFrom_6_0,
                            	      											"com.ge.research.sadl.SADL.SadlResource");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop151;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,Where,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
                      				
                    }
                    // InternalDialogParser.g:6218:5: ( (lv_whereExpression_8_0= norm1_ExpressionParameterized ) )
                    // InternalDialogParser.g:6219:6: (lv_whereExpression_8_0= norm1_ExpressionParameterized )
                    {
                    // InternalDialogParser.g:6219:6: (lv_whereExpression_8_0= norm1_ExpressionParameterized )
                    // InternalDialogParser.g:6220:7: lv_whereExpression_8_0= norm1_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
                      						
                    }
                    pushFollow(FOLLOW_122);
                    lv_whereExpression_8_0=norm1_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                      							}
                      							set(
                      								current,
                      								"whereExpression",
                      								lv_whereExpression_8_0,
                      								"com.ge.research.sadl.SADL.ExpressionParameterized");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:6237:5: ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    int alt155=2;
                    int LA155_0 = input.LA(1);

                    if ( (LA155_0==Order) ) {
                        alt155=1;
                    }
                    switch (alt155) {
                        case 1 :
                            // InternalDialogParser.g:6238:6: ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            {
                            // InternalDialogParser.g:6238:6: ( (lv_orderby_9_0= Order ) )
                            // InternalDialogParser.g:6239:7: (lv_orderby_9_0= Order )
                            {
                            // InternalDialogParser.g:6239:7: (lv_orderby_9_0= Order )
                            // InternalDialogParser.g:6240:8: lv_orderby_9_0= Order
                            {
                            lv_orderby_9_0=(Token)match(input,Order,FOLLOW_89); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSelectExpressionRule());
                              								}
                              								setWithLastConsumed(current, "orderby", lv_orderby_9_0, "order");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,By,FOLLOW_123); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
                              					
                            }
                            // InternalDialogParser.g:6256:6: ( (lv_orderList_11_0= ruleOrderElement ) )
                            // InternalDialogParser.g:6257:7: (lv_orderList_11_0= ruleOrderElement )
                            {
                            // InternalDialogParser.g:6257:7: (lv_orderList_11_0= ruleOrderElement )
                            // InternalDialogParser.g:6258:8: lv_orderList_11_0= ruleOrderElement
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
                              							
                            }
                            pushFollow(FOLLOW_124);
                            lv_orderList_11_0=ruleOrderElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              								}
                              								add(
                              									current,
                              									"orderList",
                              									lv_orderList_11_0,
                              									"com.ge.research.sadl.SADL.OrderElement");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:6275:6: ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            loop154:
                            do {
                                int alt154=2;
                                int LA154_0 = input.LA(1);

                                if ( (LA154_0==Comma) ) {
                                    int LA154_2 = input.LA(2);

                                    if ( (LA154_2==RULE_QNAME_TERMINAL) ) {
                                        int LA154_7 = input.LA(3);

                                        if ( (synpred6_InternalDialogParser()) ) {
                                            alt154=1;
                                        }


                                    }
                                    else if ( (LA154_2==RULE_ID) ) {
                                        int LA154_8 = input.LA(3);

                                        if ( (synpred6_InternalDialogParser()) ) {
                                            alt154=1;
                                        }


                                    }
                                    else if ( (LA154_2==Asc) && (synpred6_InternalDialogParser())) {
                                        alt154=1;
                                    }
                                    else if ( (LA154_2==Desc) && (synpred6_InternalDialogParser())) {
                                        alt154=1;
                                    }


                                }
                                else if ( (LA154_0==Asc) && (synpred6_InternalDialogParser())) {
                                    alt154=1;
                                }
                                else if ( (LA154_0==Desc) && (synpred6_InternalDialogParser())) {
                                    alt154=1;
                                }
                                else if ( (LA154_0==RULE_QNAME_TERMINAL) && (synpred6_InternalDialogParser())) {
                                    alt154=1;
                                }
                                else if ( (LA154_0==RULE_ID) && (synpred6_InternalDialogParser())) {
                                    alt154=1;
                                }


                                switch (alt154) {
                            	case 1 :
                            	    // InternalDialogParser.g:6276:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    {
                            	    // InternalDialogParser.g:6277:7: ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    // InternalDialogParser.g:6278:8: (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    {
                            	    // InternalDialogParser.g:6278:8: (otherlv_12= Comma )?
                            	    int alt153=2;
                            	    int LA153_0 = input.LA(1);

                            	    if ( (LA153_0==Comma) ) {
                            	        alt153=1;
                            	    }
                            	    switch (alt153) {
                            	        case 1 :
                            	            // InternalDialogParser.g:6279:9: otherlv_12= Comma
                            	            {
                            	            otherlv_12=(Token)match(input,Comma,FOLLOW_123); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:6284:8: ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    // InternalDialogParser.g:6285:9: (lv_orderList_13_0= ruleOrderElement )
                            	    {
                            	    // InternalDialogParser.g:6285:9: (lv_orderList_13_0= ruleOrderElement )
                            	    // InternalDialogParser.g:6286:10: lv_orderList_13_0= ruleOrderElement
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_124);
                            	    lv_orderList_13_0=ruleOrderElement();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"orderList",
                            	      											lv_orderList_13_0,
                            	      											"com.ge.research.sadl.SADL.OrderElement");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop154;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6309:3: this_ExpressionParameterized_14= norm1_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionParameterized_14=norm1_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionParameterized_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_SelectExpression"


    // $ANTLR start "norm2_SelectExpression"
    // InternalDialogParser.g:6322:1: norm2_SelectExpression returns [EObject current=null] : ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm2_ExpressionParameterized ) ;
    public final EObject norm2_SelectExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_distinct_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_orderby_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_selectFrom_4_0 = null;

        EObject lv_selectFrom_6_0 = null;

        EObject lv_whereExpression_8_0 = null;

        EObject lv_orderList_11_0 = null;

        EObject lv_orderList_13_0 = null;

        EObject this_ExpressionParameterized_14 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6328:2: ( ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm2_ExpressionParameterized ) )
            // InternalDialogParser.g:6329:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm2_ExpressionParameterized )
            {
            // InternalDialogParser.g:6329:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm2_ExpressionParameterized )
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==Select) && (synpred7_InternalDialogParser())) {
                alt164=1;
            }
            else if ( (LA164_0==Another||LA164_0==Element||LA164_0==Sublist||LA164_0==Length||(LA164_0>=Count && LA164_0<=False)||LA164_0==First||(LA164_0>=Index && LA164_0<=Known)||LA164_0==There||LA164_0==Value||LA164_0==None||LA164_0==Last||LA164_0==Only||LA164_0==Some||(LA164_0>=True && LA164_0<=Type)||LA164_0==The||LA164_0==Any||LA164_0==Not||LA164_0==The_1||LA164_0==HyphenMinusHyphenMinus||(LA164_0>=An && LA164_0<=An_1)||LA164_0==ExclamationMark||LA164_0==LeftParenthesis||LA164_0==HyphenMinus||LA164_0==A||LA164_0==LeftSquareBracket||(LA164_0>=A_1 && LA164_0<=LeftCurlyBracket)||LA164_0==RULE_NUMBER||(LA164_0>=RULE_ID && LA164_0<=RULE_STRING)) ) {
                alt164=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 164, 0, input);

                throw nvae;
            }
            switch (alt164) {
                case 1 :
                    // InternalDialogParser.g:6330:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    {
                    // InternalDialogParser.g:6330:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    // InternalDialogParser.g:6331:4: ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    {
                    // InternalDialogParser.g:6332:4: ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    // InternalDialogParser.g:6333:5: () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    {
                    // InternalDialogParser.g:6333:5: ()
                    // InternalDialogParser.g:6334:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,Select,FOLLOW_118); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
                      				
                    }
                    // InternalDialogParser.g:6344:5: ( (lv_distinct_2_0= Distinct ) )?
                    int alt157=2;
                    int LA157_0 = input.LA(1);

                    if ( (LA157_0==Distinct) ) {
                        alt157=1;
                    }
                    switch (alt157) {
                        case 1 :
                            // InternalDialogParser.g:6345:6: (lv_distinct_2_0= Distinct )
                            {
                            // InternalDialogParser.g:6345:6: (lv_distinct_2_0= Distinct )
                            // InternalDialogParser.g:6346:7: lv_distinct_2_0= Distinct
                            {
                            lv_distinct_2_0=(Token)match(input,Distinct,FOLLOW_119); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSelectExpressionRule());
                              							}
                              							setWithLastConsumed(current, "distinct", true, "distinct");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:6358:5: (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) )
                    int alt160=2;
                    int LA160_0 = input.LA(1);

                    if ( (LA160_0==Asterisk) ) {
                        alt160=1;
                    }
                    else if ( ((LA160_0>=RULE_ID && LA160_0<=RULE_QNAME_TERMINAL)) ) {
                        alt160=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 160, 0, input);

                        throw nvae;
                    }
                    switch (alt160) {
                        case 1 :
                            // InternalDialogParser.g:6359:6: otherlv_3= Asterisk
                            {
                            otherlv_3=(Token)match(input,Asterisk,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:6364:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            {
                            // InternalDialogParser.g:6364:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            // InternalDialogParser.g:6365:7: ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            {
                            // InternalDialogParser.g:6365:7: ( (lv_selectFrom_4_0= ruleSadlResource ) )
                            // InternalDialogParser.g:6366:8: (lv_selectFrom_4_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:6366:8: (lv_selectFrom_4_0= ruleSadlResource )
                            // InternalDialogParser.g:6367:9: lv_selectFrom_4_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
                              								
                            }
                            pushFollow(FOLLOW_120);
                            lv_selectFrom_4_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              									}
                              									add(
                              										current,
                              										"selectFrom",
                              										lv_selectFrom_4_0,
                              										"com.ge.research.sadl.SADL.SadlResource");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalDialogParser.g:6384:7: ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            loop159:
                            do {
                                int alt159=2;
                                int LA159_0 = input.LA(1);

                                if ( (LA159_0==Comma||(LA159_0>=RULE_ID && LA159_0<=RULE_QNAME_TERMINAL)) ) {
                                    alt159=1;
                                }


                                switch (alt159) {
                            	case 1 :
                            	    // InternalDialogParser.g:6385:8: (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    {
                            	    // InternalDialogParser.g:6385:8: (otherlv_5= Comma )?
                            	    int alt158=2;
                            	    int LA158_0 = input.LA(1);

                            	    if ( (LA158_0==Comma) ) {
                            	        alt158=1;
                            	    }
                            	    switch (alt158) {
                            	        case 1 :
                            	            // InternalDialogParser.g:6386:9: otherlv_5= Comma
                            	            {
                            	            otherlv_5=(Token)match(input,Comma,FOLLOW_8); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:6391:8: ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:6392:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:6392:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:6393:10: lv_selectFrom_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_120);
                            	    lv_selectFrom_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"selectFrom",
                            	      											lv_selectFrom_6_0,
                            	      											"com.ge.research.sadl.SADL.SadlResource");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop159;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,Where,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
                      				
                    }
                    // InternalDialogParser.g:6417:5: ( (lv_whereExpression_8_0= norm2_ExpressionParameterized ) )
                    // InternalDialogParser.g:6418:6: (lv_whereExpression_8_0= norm2_ExpressionParameterized )
                    {
                    // InternalDialogParser.g:6418:6: (lv_whereExpression_8_0= norm2_ExpressionParameterized )
                    // InternalDialogParser.g:6419:7: lv_whereExpression_8_0= norm2_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
                      						
                    }
                    pushFollow(FOLLOW_122);
                    lv_whereExpression_8_0=norm2_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                      							}
                      							set(
                      								current,
                      								"whereExpression",
                      								lv_whereExpression_8_0,
                      								"com.ge.research.sadl.SADL.ExpressionParameterized");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:6436:5: ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    int alt163=2;
                    int LA163_0 = input.LA(1);

                    if ( (LA163_0==Order) ) {
                        alt163=1;
                    }
                    switch (alt163) {
                        case 1 :
                            // InternalDialogParser.g:6437:6: ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            {
                            // InternalDialogParser.g:6437:6: ( (lv_orderby_9_0= Order ) )
                            // InternalDialogParser.g:6438:7: (lv_orderby_9_0= Order )
                            {
                            // InternalDialogParser.g:6438:7: (lv_orderby_9_0= Order )
                            // InternalDialogParser.g:6439:8: lv_orderby_9_0= Order
                            {
                            lv_orderby_9_0=(Token)match(input,Order,FOLLOW_89); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSelectExpressionRule());
                              								}
                              								setWithLastConsumed(current, "orderby", lv_orderby_9_0, "order");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,By,FOLLOW_123); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
                              					
                            }
                            // InternalDialogParser.g:6455:6: ( (lv_orderList_11_0= ruleOrderElement ) )
                            // InternalDialogParser.g:6456:7: (lv_orderList_11_0= ruleOrderElement )
                            {
                            // InternalDialogParser.g:6456:7: (lv_orderList_11_0= ruleOrderElement )
                            // InternalDialogParser.g:6457:8: lv_orderList_11_0= ruleOrderElement
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
                              							
                            }
                            pushFollow(FOLLOW_124);
                            lv_orderList_11_0=ruleOrderElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              								}
                              								add(
                              									current,
                              									"orderList",
                              									lv_orderList_11_0,
                              									"com.ge.research.sadl.SADL.OrderElement");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:6474:6: ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            loop162:
                            do {
                                int alt162=2;
                                int LA162_0 = input.LA(1);

                                if ( (LA162_0==Comma) && (synpred8_InternalDialogParser())) {
                                    alt162=1;
                                }
                                else if ( (LA162_0==Asc) && (synpred8_InternalDialogParser())) {
                                    alt162=1;
                                }
                                else if ( (LA162_0==Desc) && (synpred8_InternalDialogParser())) {
                                    alt162=1;
                                }
                                else if ( (LA162_0==RULE_QNAME_TERMINAL) && (synpred8_InternalDialogParser())) {
                                    alt162=1;
                                }
                                else if ( (LA162_0==RULE_ID) && (synpred8_InternalDialogParser())) {
                                    alt162=1;
                                }


                                switch (alt162) {
                            	case 1 :
                            	    // InternalDialogParser.g:6475:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    {
                            	    // InternalDialogParser.g:6476:7: ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    // InternalDialogParser.g:6477:8: (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    {
                            	    // InternalDialogParser.g:6477:8: (otherlv_12= Comma )?
                            	    int alt161=2;
                            	    int LA161_0 = input.LA(1);

                            	    if ( (LA161_0==Comma) ) {
                            	        alt161=1;
                            	    }
                            	    switch (alt161) {
                            	        case 1 :
                            	            // InternalDialogParser.g:6478:9: otherlv_12= Comma
                            	            {
                            	            otherlv_12=(Token)match(input,Comma,FOLLOW_123); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:6483:8: ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    // InternalDialogParser.g:6484:9: (lv_orderList_13_0= ruleOrderElement )
                            	    {
                            	    // InternalDialogParser.g:6484:9: (lv_orderList_13_0= ruleOrderElement )
                            	    // InternalDialogParser.g:6485:10: lv_orderList_13_0= ruleOrderElement
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_124);
                            	    lv_orderList_13_0=ruleOrderElement();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"orderList",
                            	      											lv_orderList_13_0,
                            	      											"com.ge.research.sadl.SADL.OrderElement");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop162;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6508:3: this_ExpressionParameterized_14= norm2_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionParameterized_14=norm2_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionParameterized_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_SelectExpression"


    // $ANTLR start "norm3_SelectExpression"
    // InternalDialogParser.g:6521:1: norm3_SelectExpression returns [EObject current=null] : ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm3_ExpressionParameterized ) ;
    public final EObject norm3_SelectExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_distinct_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_orderby_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_selectFrom_4_0 = null;

        EObject lv_selectFrom_6_0 = null;

        EObject lv_whereExpression_8_0 = null;

        EObject lv_orderList_11_0 = null;

        EObject lv_orderList_13_0 = null;

        EObject this_ExpressionParameterized_14 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6527:2: ( ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm3_ExpressionParameterized ) )
            // InternalDialogParser.g:6528:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm3_ExpressionParameterized )
            {
            // InternalDialogParser.g:6528:2: ( ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) ) | this_ExpressionParameterized_14= norm3_ExpressionParameterized )
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==Select) && (synpred9_InternalDialogParser())) {
                alt172=1;
            }
            else if ( (LA172_0==Another||LA172_0==Element||LA172_0==Sublist||LA172_0==Length||(LA172_0>=Count && LA172_0<=False)||LA172_0==First||(LA172_0>=Index && LA172_0<=Known)||LA172_0==There||LA172_0==Value||LA172_0==None||LA172_0==Last||LA172_0==Only||LA172_0==Some||(LA172_0>=True && LA172_0<=Type)||LA172_0==The||LA172_0==Any||LA172_0==Not||LA172_0==The_1||LA172_0==HyphenMinusHyphenMinus||(LA172_0>=An && LA172_0<=An_1)||LA172_0==ExclamationMark||LA172_0==LeftParenthesis||LA172_0==HyphenMinus||LA172_0==A||LA172_0==LeftSquareBracket||(LA172_0>=A_1 && LA172_0<=LeftCurlyBracket)||LA172_0==RULE_NUMBER||(LA172_0>=RULE_ID && LA172_0<=RULE_STRING)) ) {
                alt172=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 172, 0, input);

                throw nvae;
            }
            switch (alt172) {
                case 1 :
                    // InternalDialogParser.g:6529:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    {
                    // InternalDialogParser.g:6529:3: ( ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? ) )
                    // InternalDialogParser.g:6530:4: ( Select )=> ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    {
                    // InternalDialogParser.g:6531:4: ( () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )? )
                    // InternalDialogParser.g:6532:5: () otherlv_1= Select ( (lv_distinct_2_0= Distinct ) )? (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) ) otherlv_7= Where ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) ) ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    {
                    // InternalDialogParser.g:6532:5: ()
                    // InternalDialogParser.g:6533:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElement(
                      							grammarAccess.getSelectExpressionAccess().getSelectExpressionAction_0_0_0(),
                      							current);
                      					
                    }

                    }

                    otherlv_1=(Token)match(input,Select,FOLLOW_118); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getSelectExpressionAccess().getSelectKeyword_0_0_1());
                      				
                    }
                    // InternalDialogParser.g:6543:5: ( (lv_distinct_2_0= Distinct ) )?
                    int alt165=2;
                    int LA165_0 = input.LA(1);

                    if ( (LA165_0==Distinct) ) {
                        alt165=1;
                    }
                    switch (alt165) {
                        case 1 :
                            // InternalDialogParser.g:6544:6: (lv_distinct_2_0= Distinct )
                            {
                            // InternalDialogParser.g:6544:6: (lv_distinct_2_0= Distinct )
                            // InternalDialogParser.g:6545:7: lv_distinct_2_0= Distinct
                            {
                            lv_distinct_2_0=(Token)match(input,Distinct,FOLLOW_119); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_distinct_2_0, grammarAccess.getSelectExpressionAccess().getDistinctDistinctKeyword_0_0_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getSelectExpressionRule());
                              							}
                              							setWithLastConsumed(current, "distinct", true, "distinct");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:6557:5: (otherlv_3= Asterisk | ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* ) )
                    int alt168=2;
                    int LA168_0 = input.LA(1);

                    if ( (LA168_0==Asterisk) ) {
                        alt168=1;
                    }
                    else if ( ((LA168_0>=RULE_ID && LA168_0<=RULE_QNAME_TERMINAL)) ) {
                        alt168=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 168, 0, input);

                        throw nvae;
                    }
                    switch (alt168) {
                        case 1 :
                            // InternalDialogParser.g:6558:6: otherlv_3= Asterisk
                            {
                            otherlv_3=(Token)match(input,Asterisk,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getSelectExpressionAccess().getAsteriskKeyword_0_0_3_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:6563:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            {
                            // InternalDialogParser.g:6563:6: ( ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )* )
                            // InternalDialogParser.g:6564:7: ( (lv_selectFrom_4_0= ruleSadlResource ) ) ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            {
                            // InternalDialogParser.g:6564:7: ( (lv_selectFrom_4_0= ruleSadlResource ) )
                            // InternalDialogParser.g:6565:8: (lv_selectFrom_4_0= ruleSadlResource )
                            {
                            // InternalDialogParser.g:6565:8: (lv_selectFrom_4_0= ruleSadlResource )
                            // InternalDialogParser.g:6566:9: lv_selectFrom_4_0= ruleSadlResource
                            {
                            if ( state.backtracking==0 ) {

                              									newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_0_0());
                              								
                            }
                            pushFollow(FOLLOW_120);
                            lv_selectFrom_4_0=ruleSadlResource();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              									}
                              									add(
                              										current,
                              										"selectFrom",
                              										lv_selectFrom_4_0,
                              										"com.ge.research.sadl.SADL.SadlResource");
                              									afterParserOrEnumRuleCall();
                              								
                            }

                            }


                            }

                            // InternalDialogParser.g:6583:7: ( (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) ) )*
                            loop167:
                            do {
                                int alt167=2;
                                int LA167_0 = input.LA(1);

                                if ( (LA167_0==Comma||(LA167_0>=RULE_ID && LA167_0<=RULE_QNAME_TERMINAL)) ) {
                                    alt167=1;
                                }


                                switch (alt167) {
                            	case 1 :
                            	    // InternalDialogParser.g:6584:8: (otherlv_5= Comma )? ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    {
                            	    // InternalDialogParser.g:6584:8: (otherlv_5= Comma )?
                            	    int alt166=2;
                            	    int LA166_0 = input.LA(1);

                            	    if ( (LA166_0==Comma) ) {
                            	        alt166=1;
                            	    }
                            	    switch (alt166) {
                            	        case 1 :
                            	            // InternalDialogParser.g:6585:9: otherlv_5= Comma
                            	            {
                            	            otherlv_5=(Token)match(input,Comma,FOLLOW_8); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_5, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_3_1_1_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:6590:8: ( (lv_selectFrom_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:6591:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:6591:9: (lv_selectFrom_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:6592:10: lv_selectFrom_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getSelectFromSadlResourceParserRuleCall_0_0_3_1_1_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_120);
                            	    lv_selectFrom_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"selectFrom",
                            	      											lv_selectFrom_6_0,
                            	      											"com.ge.research.sadl.SADL.SadlResource");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop167;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,Where,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getSelectExpressionAccess().getWhereKeyword_0_0_4());
                      				
                    }
                    // InternalDialogParser.g:6616:5: ( (lv_whereExpression_8_0= norm3_ExpressionParameterized ) )
                    // InternalDialogParser.g:6617:6: (lv_whereExpression_8_0= norm3_ExpressionParameterized )
                    {
                    // InternalDialogParser.g:6617:6: (lv_whereExpression_8_0= norm3_ExpressionParameterized )
                    // InternalDialogParser.g:6618:7: lv_whereExpression_8_0= norm3_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSelectExpressionAccess().getWhereExpressionExpressionParameterizedParserRuleCall_0_0_5_0());
                      						
                    }
                    pushFollow(FOLLOW_122);
                    lv_whereExpression_8_0=norm3_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                      							}
                      							set(
                      								current,
                      								"whereExpression",
                      								lv_whereExpression_8_0,
                      								"com.ge.research.sadl.SADL.ExpressionParameterized");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:6635:5: ( ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )* )?
                    int alt171=2;
                    int LA171_0 = input.LA(1);

                    if ( (LA171_0==Order) ) {
                        alt171=1;
                    }
                    switch (alt171) {
                        case 1 :
                            // InternalDialogParser.g:6636:6: ( (lv_orderby_9_0= Order ) ) otherlv_10= By ( (lv_orderList_11_0= ruleOrderElement ) ) ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            {
                            // InternalDialogParser.g:6636:6: ( (lv_orderby_9_0= Order ) )
                            // InternalDialogParser.g:6637:7: (lv_orderby_9_0= Order )
                            {
                            // InternalDialogParser.g:6637:7: (lv_orderby_9_0= Order )
                            // InternalDialogParser.g:6638:8: lv_orderby_9_0= Order
                            {
                            lv_orderby_9_0=(Token)match(input,Order,FOLLOW_89); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orderby_9_0, grammarAccess.getSelectExpressionAccess().getOrderbyOrderKeyword_0_0_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getSelectExpressionRule());
                              								}
                              								setWithLastConsumed(current, "orderby", lv_orderby_9_0, "order");
                              							
                            }

                            }


                            }

                            otherlv_10=(Token)match(input,By,FOLLOW_123); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getSelectExpressionAccess().getByKeyword_0_0_6_1());
                              					
                            }
                            // InternalDialogParser.g:6654:6: ( (lv_orderList_11_0= ruleOrderElement ) )
                            // InternalDialogParser.g:6655:7: (lv_orderList_11_0= ruleOrderElement )
                            {
                            // InternalDialogParser.g:6655:7: (lv_orderList_11_0= ruleOrderElement )
                            // InternalDialogParser.g:6656:8: lv_orderList_11_0= ruleOrderElement
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_2_0());
                              							
                            }
                            pushFollow(FOLLOW_124);
                            lv_orderList_11_0=ruleOrderElement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                              								}
                              								add(
                              									current,
                              									"orderList",
                              									lv_orderList_11_0,
                              									"com.ge.research.sadl.SADL.OrderElement");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:6673:6: ( ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) ) )*
                            loop170:
                            do {
                                int alt170=2;
                                int LA170_0 = input.LA(1);

                                if ( (LA170_0==Comma) && (synpred10_InternalDialogParser())) {
                                    alt170=1;
                                }
                                else if ( (LA170_0==Asc) && (synpred10_InternalDialogParser())) {
                                    alt170=1;
                                }
                                else if ( (LA170_0==Desc) && (synpred10_InternalDialogParser())) {
                                    alt170=1;
                                }
                                else if ( (LA170_0==RULE_QNAME_TERMINAL) && (synpred10_InternalDialogParser())) {
                                    alt170=1;
                                }
                                else if ( (LA170_0==RULE_ID) && (synpred10_InternalDialogParser())) {
                                    alt170=1;
                                }


                                switch (alt170) {
                            	case 1 :
                            	    // InternalDialogParser.g:6674:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )=> ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    {
                            	    // InternalDialogParser.g:6675:7: ( (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) ) )
                            	    // InternalDialogParser.g:6676:8: (otherlv_12= Comma )? ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    {
                            	    // InternalDialogParser.g:6676:8: (otherlv_12= Comma )?
                            	    int alt169=2;
                            	    int LA169_0 = input.LA(1);

                            	    if ( (LA169_0==Comma) ) {
                            	        alt169=1;
                            	    }
                            	    switch (alt169) {
                            	        case 1 :
                            	            // InternalDialogParser.g:6677:9: otherlv_12= Comma
                            	            {
                            	            otherlv_12=(Token)match(input,Comma,FOLLOW_123); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(otherlv_12, grammarAccess.getSelectExpressionAccess().getCommaKeyword_0_0_6_3_0_0());
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:6682:8: ( (lv_orderList_13_0= ruleOrderElement ) )
                            	    // InternalDialogParser.g:6683:9: (lv_orderList_13_0= ruleOrderElement )
                            	    {
                            	    // InternalDialogParser.g:6683:9: (lv_orderList_13_0= ruleOrderElement )
                            	    // InternalDialogParser.g:6684:10: lv_orderList_13_0= ruleOrderElement
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										newCompositeNode(grammarAccess.getSelectExpressionAccess().getOrderListOrderElementParserRuleCall_0_0_6_3_0_1_0());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_124);
                            	    lv_orderList_13_0=ruleOrderElement();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										if (current==null) {
                            	      											current = createModelElementForParent(grammarAccess.getSelectExpressionRule());
                            	      										}
                            	      										add(
                            	      											current,
                            	      											"orderList",
                            	      											lv_orderList_13_0,
                            	      											"com.ge.research.sadl.SADL.OrderElement");
                            	      										afterParserOrEnumRuleCall();
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop170;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6707:3: this_ExpressionParameterized_14= norm3_ExpressionParameterized
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getSelectExpressionAccess().getExpressionParameterizedParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExpressionParameterized_14=norm3_ExpressionParameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExpressionParameterized_14;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_SelectExpression"


    // $ANTLR start "entryRuleOrderElement"
    // InternalDialogParser.g:6719:1: entryRuleOrderElement returns [EObject current=null] : iv_ruleOrderElement= ruleOrderElement EOF ;
    public final EObject entryRuleOrderElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrderElement = null;


        try {
            // InternalDialogParser.g:6719:53: (iv_ruleOrderElement= ruleOrderElement EOF )
            // InternalDialogParser.g:6720:2: iv_ruleOrderElement= ruleOrderElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrderElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrderElement=ruleOrderElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrderElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrderElement"


    // $ANTLR start "ruleOrderElement"
    // InternalDialogParser.g:6726:1: ruleOrderElement returns [EObject current=null] : ( (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) ) ) ;
    public final EObject ruleOrderElement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_desc_1_0=null;
        EObject lv_orderBy_2_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6732:2: ( ( (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) ) ) )
            // InternalDialogParser.g:6733:2: ( (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) ) )
            {
            // InternalDialogParser.g:6733:2: ( (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) ) )
            // InternalDialogParser.g:6734:3: (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )? ( (lv_orderBy_2_0= ruleSadlResource ) )
            {
            // InternalDialogParser.g:6734:3: (otherlv_0= Asc | ( (lv_desc_1_0= Desc ) ) )?
            int alt173=3;
            int LA173_0 = input.LA(1);

            if ( (LA173_0==Asc) ) {
                alt173=1;
            }
            else if ( (LA173_0==Desc) ) {
                alt173=2;
            }
            switch (alt173) {
                case 1 :
                    // InternalDialogParser.g:6735:4: otherlv_0= Asc
                    {
                    otherlv_0=(Token)match(input,Asc,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getOrderElementAccess().getAscKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6740:4: ( (lv_desc_1_0= Desc ) )
                    {
                    // InternalDialogParser.g:6740:4: ( (lv_desc_1_0= Desc ) )
                    // InternalDialogParser.g:6741:5: (lv_desc_1_0= Desc )
                    {
                    // InternalDialogParser.g:6741:5: (lv_desc_1_0= Desc )
                    // InternalDialogParser.g:6742:6: lv_desc_1_0= Desc
                    {
                    lv_desc_1_0=(Token)match(input,Desc,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_desc_1_0, grammarAccess.getOrderElementAccess().getDescDescKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getOrderElementRule());
                      						}
                      						setWithLastConsumed(current, "desc", true, "desc");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalDialogParser.g:6755:3: ( (lv_orderBy_2_0= ruleSadlResource ) )
            // InternalDialogParser.g:6756:4: (lv_orderBy_2_0= ruleSadlResource )
            {
            // InternalDialogParser.g:6756:4: (lv_orderBy_2_0= ruleSadlResource )
            // InternalDialogParser.g:6757:5: lv_orderBy_2_0= ruleSadlResource
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getOrderElementAccess().getOrderBySadlResourceParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_orderBy_2_0=ruleSadlResource();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getOrderElementRule());
              					}
              					set(
              						current,
              						"orderBy",
              						lv_orderBy_2_0,
              						"com.ge.research.sadl.SADL.SadlResource");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrderElement"


    // $ANTLR start "entryRuleExpressionParameterized"
    // InternalDialogParser.g:6778:1: entryRuleExpressionParameterized returns [EObject current=null] : iv_ruleExpressionParameterized= ruleExpressionParameterized EOF ;
    public final EObject entryRuleExpressionParameterized() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionParameterized = null;


        try {
            // InternalDialogParser.g:6778:64: (iv_ruleExpressionParameterized= ruleExpressionParameterized EOF )
            // InternalDialogParser.g:6779:2: iv_ruleExpressionParameterized= ruleExpressionParameterized EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionParameterizedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionParameterized=ruleExpressionParameterized();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionParameterized; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionParameterized"


    // $ANTLR start "ruleExpressionParameterized"
    // InternalDialogParser.g:6785:1: ruleExpressionParameterized returns [EObject current=null] : ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression ) ;
    public final EObject ruleExpressionParameterized() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_list_4_0 = null;

        EObject lv_where_6_0 = null;

        EObject this_OrExpression_7 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6791:2: ( ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression ) )
            // InternalDialogParser.g:6792:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression )
            {
            // InternalDialogParser.g:6792:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression )
            int alt175=2;
            alt175 = dfa175.predict(input);
            switch (alt175) {
                case 1 :
                    // InternalDialogParser.g:6793:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) )
                    {
                    // InternalDialogParser.g:6793:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) )
                    // InternalDialogParser.g:6794:4: () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) )
                    {
                    // InternalDialogParser.g:6794:4: ()
                    // InternalDialogParser.g:6795:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:6801:4: ( ruleAnArticle )?
                    int alt174=2;
                    int LA174_0 = input.LA(1);

                    if ( (LA174_0==Another||LA174_0==Some||LA174_0==The||LA174_0==Any||LA174_0==The_1||LA174_0==An||LA174_0==An_1||LA174_0==A||LA174_0==A_1) ) {
                        alt174=1;
                    }
                    switch (alt174) {
                        case 1 :
                            // InternalDialogParser.g:6802:5: ruleAnArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_125);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,Sublist,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,Of,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:6818:4: ( (lv_list_4_0= ruleOrExpression ) )
                    // InternalDialogParser.g:6819:5: (lv_list_4_0= ruleOrExpression )
                    {
                    // InternalDialogParser.g:6819:5: (lv_list_4_0= ruleOrExpression )
                    // InternalDialogParser.g:6820:6: lv_list_4_0= ruleOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_126);
                    lv_list_4_0=ruleOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"list",
                      							lv_list_4_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,Matching,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
                      			
                    }
                    // InternalDialogParser.g:6841:4: ( (lv_where_6_0= ruleOrExpression ) )
                    // InternalDialogParser.g:6842:5: (lv_where_6_0= ruleOrExpression )
                    {
                    // InternalDialogParser.g:6842:5: (lv_where_6_0= ruleOrExpression )
                    // InternalDialogParser.g:6843:6: lv_where_6_0= ruleOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_6_0=ruleOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_6_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6862:3: this_OrExpression_7= ruleOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OrExpression_7=ruleOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OrExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionParameterized"


    // $ANTLR start "norm1_ExpressionParameterized"
    // InternalDialogParser.g:6875:1: norm1_ExpressionParameterized returns [EObject current=null] : ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression ) ;
    public final EObject norm1_ExpressionParameterized() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_list_4_0 = null;

        EObject lv_where_6_0 = null;

        EObject this_OrExpression_7 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6881:2: ( ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression ) )
            // InternalDialogParser.g:6882:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression )
            {
            // InternalDialogParser.g:6882:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression )
            int alt177=2;
            alt177 = dfa177.predict(input);
            switch (alt177) {
                case 1 :
                    // InternalDialogParser.g:6883:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) )
                    {
                    // InternalDialogParser.g:6883:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) )
                    // InternalDialogParser.g:6884:4: () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) )
                    {
                    // InternalDialogParser.g:6884:4: ()
                    // InternalDialogParser.g:6885:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:6891:4: ( ruleAnArticle )?
                    int alt176=2;
                    int LA176_0 = input.LA(1);

                    if ( (LA176_0==Another||LA176_0==Some||LA176_0==The||LA176_0==Any||LA176_0==The_1||LA176_0==An||LA176_0==An_1||LA176_0==A||LA176_0==A_1) ) {
                        alt176=1;
                    }
                    switch (alt176) {
                        case 1 :
                            // InternalDialogParser.g:6892:5: ruleAnArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_125);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,Sublist,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,Of,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:6908:4: ( (lv_list_4_0= norm1_OrExpression ) )
                    // InternalDialogParser.g:6909:5: (lv_list_4_0= norm1_OrExpression )
                    {
                    // InternalDialogParser.g:6909:5: (lv_list_4_0= norm1_OrExpression )
                    // InternalDialogParser.g:6910:6: lv_list_4_0= norm1_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_126);
                    lv_list_4_0=norm1_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"list",
                      							lv_list_4_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,Matching,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
                      			
                    }
                    // InternalDialogParser.g:6931:4: ( (lv_where_6_0= norm1_OrExpression ) )
                    // InternalDialogParser.g:6932:5: (lv_where_6_0= norm1_OrExpression )
                    {
                    // InternalDialogParser.g:6932:5: (lv_where_6_0= norm1_OrExpression )
                    // InternalDialogParser.g:6933:6: lv_where_6_0= norm1_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_6_0=norm1_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_6_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:6952:3: this_OrExpression_7= norm1_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OrExpression_7=norm1_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OrExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_ExpressionParameterized"


    // $ANTLR start "norm2_ExpressionParameterized"
    // InternalDialogParser.g:6965:1: norm2_ExpressionParameterized returns [EObject current=null] : ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression ) ;
    public final EObject norm2_ExpressionParameterized() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_list_4_0 = null;

        EObject lv_where_6_0 = null;

        EObject this_OrExpression_7 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:6971:2: ( ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression ) )
            // InternalDialogParser.g:6972:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression )
            {
            // InternalDialogParser.g:6972:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression )
            int alt179=2;
            alt179 = dfa179.predict(input);
            switch (alt179) {
                case 1 :
                    // InternalDialogParser.g:6973:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) )
                    {
                    // InternalDialogParser.g:6973:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) )
                    // InternalDialogParser.g:6974:4: () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) )
                    {
                    // InternalDialogParser.g:6974:4: ()
                    // InternalDialogParser.g:6975:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:6981:4: ( ruleAnArticle )?
                    int alt178=2;
                    int LA178_0 = input.LA(1);

                    if ( (LA178_0==Another||LA178_0==Some||LA178_0==The||LA178_0==Any||LA178_0==The_1||LA178_0==An||LA178_0==An_1||LA178_0==A||LA178_0==A_1) ) {
                        alt178=1;
                    }
                    switch (alt178) {
                        case 1 :
                            // InternalDialogParser.g:6982:5: ruleAnArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_125);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,Sublist,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,Of,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:6998:4: ( (lv_list_4_0= norm2_OrExpression ) )
                    // InternalDialogParser.g:6999:5: (lv_list_4_0= norm2_OrExpression )
                    {
                    // InternalDialogParser.g:6999:5: (lv_list_4_0= norm2_OrExpression )
                    // InternalDialogParser.g:7000:6: lv_list_4_0= norm2_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_126);
                    lv_list_4_0=norm2_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"list",
                      							lv_list_4_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,Matching,FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
                      			
                    }
                    // InternalDialogParser.g:7021:4: ( (lv_where_6_0= norm2_OrExpression ) )
                    // InternalDialogParser.g:7022:5: (lv_where_6_0= norm2_OrExpression )
                    {
                    // InternalDialogParser.g:7022:5: (lv_where_6_0= norm2_OrExpression )
                    // InternalDialogParser.g:7023:6: lv_where_6_0= norm2_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_6_0=norm2_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_6_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:7042:3: this_OrExpression_7= norm2_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OrExpression_7=norm2_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OrExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_ExpressionParameterized"


    // $ANTLR start "norm3_ExpressionParameterized"
    // InternalDialogParser.g:7055:1: norm3_ExpressionParameterized returns [EObject current=null] : ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression ) ;
    public final EObject norm3_ExpressionParameterized() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_list_4_0 = null;

        EObject lv_where_6_0 = null;

        EObject this_OrExpression_7 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7061:2: ( ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression ) )
            // InternalDialogParser.g:7062:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression )
            {
            // InternalDialogParser.g:7062:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression )
            int alt181=2;
            alt181 = dfa181.predict(input);
            switch (alt181) {
                case 1 :
                    // InternalDialogParser.g:7063:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) )
                    {
                    // InternalDialogParser.g:7063:3: ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) )
                    // InternalDialogParser.g:7064:4: () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) )
                    {
                    // InternalDialogParser.g:7064:4: ()
                    // InternalDialogParser.g:7065:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getExpressionParameterizedAccess().getSublistAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:7071:4: ( ruleAnArticle )?
                    int alt180=2;
                    int LA180_0 = input.LA(1);

                    if ( (LA180_0==Another||LA180_0==Some||LA180_0==The||LA180_0==Any||LA180_0==The_1||LA180_0==An||LA180_0==An_1||LA180_0==A||LA180_0==A_1) ) {
                        alt180=1;
                    }
                    switch (alt180) {
                        case 1 :
                            // InternalDialogParser.g:7072:5: ruleAnArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getAnArticleParserRuleCall_0_1());
                              				
                            }
                            pushFollow(FOLLOW_125);
                            ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,Sublist,FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getExpressionParameterizedAccess().getSublistKeyword_0_2());
                      			
                    }
                    otherlv_3=(Token)match(input,Of,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExpressionParameterizedAccess().getOfKeyword_0_3());
                      			
                    }
                    // InternalDialogParser.g:7088:4: ( (lv_list_4_0= norm3_OrExpression ) )
                    // InternalDialogParser.g:7089:5: (lv_list_4_0= norm3_OrExpression )
                    {
                    // InternalDialogParser.g:7089:5: (lv_list_4_0= norm3_OrExpression )
                    // InternalDialogParser.g:7090:6: lv_list_4_0= norm3_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getListOrExpressionParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FOLLOW_126);
                    lv_list_4_0=norm3_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"list",
                      							lv_list_4_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,Matching,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getExpressionParameterizedAccess().getMatchingKeyword_0_5());
                      			
                    }
                    // InternalDialogParser.g:7111:4: ( (lv_where_6_0= norm3_OrExpression ) )
                    // InternalDialogParser.g:7112:5: (lv_where_6_0= norm3_OrExpression )
                    {
                    // InternalDialogParser.g:7112:5: (lv_where_6_0= norm3_OrExpression )
                    // InternalDialogParser.g:7113:6: lv_where_6_0= norm3_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getWhereOrExpressionParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_where_6_0=norm3_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionParameterizedRule());
                      						}
                      						set(
                      							current,
                      							"where",
                      							lv_where_6_0,
                      							"com.ge.research.sadl.SADL.OrExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:7132:3: this_OrExpression_7= norm3_OrExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionParameterizedAccess().getOrExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_OrExpression_7=norm3_OrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_OrExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_ExpressionParameterized"


    // $ANTLR start "entryRuleOrExpression"
    // InternalDialogParser.g:7144:1: entryRuleOrExpression returns [EObject current=null] : iv_ruleOrExpression= ruleOrExpression EOF ;
    public final EObject entryRuleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOrExpression = null;


        try {
            // InternalDialogParser.g:7144:53: (iv_ruleOrExpression= ruleOrExpression EOF )
            // InternalDialogParser.g:7145:2: iv_ruleOrExpression= ruleOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrExpression=ruleOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOrExpression"


    // $ANTLR start "ruleOrExpression"
    // InternalDialogParser.g:7151:1: ruleOrExpression returns [EObject current=null] : (this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* ) ;
    public final EObject ruleOrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7157:2: ( (this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* ) )
            // InternalDialogParser.g:7158:2: (this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* )
            {
            // InternalDialogParser.g:7158:2: (this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )* )
            // InternalDialogParser.g:7159:3: this_AndExpression_0= ruleAndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_127);
            this_AndExpression_0=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7167:3: ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) ) )*
            loop182:
            do {
                int alt182=2;
                int LA182_0 = input.LA(1);

                if ( (LA182_0==Or||LA182_0==VerticalLineVerticalLine) ) {
                    alt182=1;
                }


                switch (alt182) {
            	case 1 :
            	    // InternalDialogParser.g:7168:4: () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= ruleAndExpression ) )
            	    {
            	    // InternalDialogParser.g:7168:4: ()
            	    // InternalDialogParser.g:7169:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7175:4: ( (lv_op_2_0= ruleOpOr ) )
            	    // InternalDialogParser.g:7176:5: (lv_op_2_0= ruleOpOr )
            	    {
            	    // InternalDialogParser.g:7176:5: (lv_op_2_0= ruleOpOr )
            	    // InternalDialogParser.g:7177:6: lv_op_2_0= ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpOr");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7194:4: ( (lv_right_3_0= ruleAndExpression ) )
            	    // InternalDialogParser.g:7195:5: (lv_right_3_0= ruleAndExpression )
            	    {
            	    // InternalDialogParser.g:7195:5: (lv_right_3_0= ruleAndExpression )
            	    // InternalDialogParser.g:7196:6: lv_right_3_0= ruleAndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_right_3_0=ruleAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop182;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOrExpression"


    // $ANTLR start "norm1_OrExpression"
    // InternalDialogParser.g:7219:1: norm1_OrExpression returns [EObject current=null] : (this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )* ) ;
    public final EObject norm1_OrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7225:2: ( (this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )* ) )
            // InternalDialogParser.g:7226:2: (this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )* )
            {
            // InternalDialogParser.g:7226:2: (this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )* )
            // InternalDialogParser.g:7227:3: this_AndExpression_0= norm1_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_127);
            this_AndExpression_0=norm1_AndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7235:3: ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) ) )*
            loop183:
            do {
                int alt183=2;
                int LA183_0 = input.LA(1);

                if ( (LA183_0==Or||LA183_0==VerticalLineVerticalLine) ) {
                    alt183=1;
                }


                switch (alt183) {
            	case 1 :
            	    // InternalDialogParser.g:7236:4: () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm1_AndExpression ) )
            	    {
            	    // InternalDialogParser.g:7236:4: ()
            	    // InternalDialogParser.g:7237:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7243:4: ( (lv_op_2_0= ruleOpOr ) )
            	    // InternalDialogParser.g:7244:5: (lv_op_2_0= ruleOpOr )
            	    {
            	    // InternalDialogParser.g:7244:5: (lv_op_2_0= ruleOpOr )
            	    // InternalDialogParser.g:7245:6: lv_op_2_0= ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpOr");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7262:4: ( (lv_right_3_0= norm1_AndExpression ) )
            	    // InternalDialogParser.g:7263:5: (lv_right_3_0= norm1_AndExpression )
            	    {
            	    // InternalDialogParser.g:7263:5: (lv_right_3_0= norm1_AndExpression )
            	    // InternalDialogParser.g:7264:6: lv_right_3_0= norm1_AndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_right_3_0=norm1_AndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop183;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_OrExpression"


    // $ANTLR start "norm2_OrExpression"
    // InternalDialogParser.g:7287:1: norm2_OrExpression returns [EObject current=null] : (this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )* ) ;
    public final EObject norm2_OrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7293:2: ( (this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )* ) )
            // InternalDialogParser.g:7294:2: (this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )* )
            {
            // InternalDialogParser.g:7294:2: (this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )* )
            // InternalDialogParser.g:7295:3: this_AndExpression_0= norm2_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_127);
            this_AndExpression_0=norm2_AndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7303:3: ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) ) )*
            loop184:
            do {
                int alt184=2;
                int LA184_0 = input.LA(1);

                if ( (LA184_0==Or||LA184_0==VerticalLineVerticalLine) ) {
                    alt184=1;
                }


                switch (alt184) {
            	case 1 :
            	    // InternalDialogParser.g:7304:4: () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm2_AndExpression ) )
            	    {
            	    // InternalDialogParser.g:7304:4: ()
            	    // InternalDialogParser.g:7305:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7311:4: ( (lv_op_2_0= ruleOpOr ) )
            	    // InternalDialogParser.g:7312:5: (lv_op_2_0= ruleOpOr )
            	    {
            	    // InternalDialogParser.g:7312:5: (lv_op_2_0= ruleOpOr )
            	    // InternalDialogParser.g:7313:6: lv_op_2_0= ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpOr");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7330:4: ( (lv_right_3_0= norm2_AndExpression ) )
            	    // InternalDialogParser.g:7331:5: (lv_right_3_0= norm2_AndExpression )
            	    {
            	    // InternalDialogParser.g:7331:5: (lv_right_3_0= norm2_AndExpression )
            	    // InternalDialogParser.g:7332:6: lv_right_3_0= norm2_AndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_right_3_0=norm2_AndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop184;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_OrExpression"


    // $ANTLR start "norm3_OrExpression"
    // InternalDialogParser.g:7355:1: norm3_OrExpression returns [EObject current=null] : (this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )* ) ;
    public final EObject norm3_OrExpression() throws RecognitionException {
        EObject current = null;

        EObject this_AndExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7361:2: ( (this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )* ) )
            // InternalDialogParser.g:7362:2: (this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )* )
            {
            // InternalDialogParser.g:7362:2: (this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )* )
            // InternalDialogParser.g:7363:3: this_AndExpression_0= norm3_AndExpression ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_127);
            this_AndExpression_0=norm3_AndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_AndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7371:3: ( () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) ) )*
            loop185:
            do {
                int alt185=2;
                int LA185_0 = input.LA(1);

                if ( (LA185_0==Or||LA185_0==VerticalLineVerticalLine) ) {
                    alt185=1;
                }


                switch (alt185) {
            	case 1 :
            	    // InternalDialogParser.g:7372:4: () ( (lv_op_2_0= ruleOpOr ) ) ( (lv_right_3_0= norm3_AndExpression ) )
            	    {
            	    // InternalDialogParser.g:7372:4: ()
            	    // InternalDialogParser.g:7373:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7379:4: ( (lv_op_2_0= ruleOpOr ) )
            	    // InternalDialogParser.g:7380:5: (lv_op_2_0= ruleOpOr )
            	    {
            	    // InternalDialogParser.g:7380:5: (lv_op_2_0= ruleOpOr )
            	    // InternalDialogParser.g:7381:6: lv_op_2_0= ruleOpOr
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getOpOpOrParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_op_2_0=ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpOr");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7398:4: ( (lv_right_3_0= norm3_AndExpression ) )
            	    // InternalDialogParser.g:7399:5: (lv_right_3_0= norm3_AndExpression )
            	    {
            	    // InternalDialogParser.g:7399:5: (lv_right_3_0= norm3_AndExpression )
            	    // InternalDialogParser.g:7400:6: lv_right_3_0= norm3_AndExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightAndExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_127);
            	    lv_right_3_0=norm3_AndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.AndExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop185;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_OrExpression"


    // $ANTLR start "entryRuleOpOr"
    // InternalDialogParser.g:7422:1: entryRuleOpOr returns [String current=null] : iv_ruleOpOr= ruleOpOr EOF ;
    public final String entryRuleOpOr() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpOr = null;


        try {
            // InternalDialogParser.g:7422:44: (iv_ruleOpOr= ruleOpOr EOF )
            // InternalDialogParser.g:7423:2: iv_ruleOpOr= ruleOpOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpOr"


    // $ANTLR start "ruleOpOr"
    // InternalDialogParser.g:7429:1: ruleOpOr returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Or | kw= VerticalLineVerticalLine ) ;
    public final AntlrDatatypeRuleToken ruleOpOr() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:7435:2: ( (kw= Or | kw= VerticalLineVerticalLine ) )
            // InternalDialogParser.g:7436:2: (kw= Or | kw= VerticalLineVerticalLine )
            {
            // InternalDialogParser.g:7436:2: (kw= Or | kw= VerticalLineVerticalLine )
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( (LA186_0==Or) ) {
                alt186=1;
            }
            else if ( (LA186_0==VerticalLineVerticalLine) ) {
                alt186=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 186, 0, input);

                throw nvae;
            }
            switch (alt186) {
                case 1 :
                    // InternalDialogParser.g:7437:3: kw= Or
                    {
                    kw=(Token)match(input,Or,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOrAccess().getOrKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:7443:3: kw= VerticalLineVerticalLine
                    {
                    kw=(Token)match(input,VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpOrAccess().getVerticalLineVerticalLineKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpOr"


    // $ANTLR start "entryRuleAndExpression"
    // InternalDialogParser.g:7452:1: entryRuleAndExpression returns [EObject current=null] : iv_ruleAndExpression= ruleAndExpression EOF ;
    public final EObject entryRuleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAndExpression = null;


        try {
            // InternalDialogParser.g:7452:54: (iv_ruleAndExpression= ruleAndExpression EOF )
            // InternalDialogParser.g:7453:2: iv_ruleAndExpression= ruleAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndExpression=ruleAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAndExpression"


    // $ANTLR start "ruleAndExpression"
    // InternalDialogParser.g:7459:1: ruleAndExpression returns [EObject current=null] : (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* ) ;
    public final EObject ruleAndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7465:2: ( (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* ) )
            // InternalDialogParser.g:7466:2: (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* )
            {
            // InternalDialogParser.g:7466:2: (this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )* )
            // InternalDialogParser.g:7467:3: this_EqualityExpression_0= ruleEqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_128);
            this_EqualityExpression_0=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7475:3: ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) ) )*
            loop187:
            do {
                int alt187=2;
                int LA187_0 = input.LA(1);

                if ( (LA187_0==And||LA187_0==AmpersandAmpersand) ) {
                    alt187=1;
                }


                switch (alt187) {
            	case 1 :
            	    // InternalDialogParser.g:7476:4: () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= ruleEqualityExpression ) )
            	    {
            	    // InternalDialogParser.g:7476:4: ()
            	    // InternalDialogParser.g:7477:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7483:4: ( (lv_op_2_0= ruleOpAnd ) )
            	    // InternalDialogParser.g:7484:5: (lv_op_2_0= ruleOpAnd )
            	    {
            	    // InternalDialogParser.g:7484:5: (lv_op_2_0= ruleOpAnd )
            	    // InternalDialogParser.g:7485:6: lv_op_2_0= ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7502:4: ( (lv_right_3_0= ruleEqualityExpression ) )
            	    // InternalDialogParser.g:7503:5: (lv_right_3_0= ruleEqualityExpression )
            	    {
            	    // InternalDialogParser.g:7503:5: (lv_right_3_0= ruleEqualityExpression )
            	    // InternalDialogParser.g:7504:6: lv_right_3_0= ruleEqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_right_3_0=ruleEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop187;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAndExpression"


    // $ANTLR start "norm1_AndExpression"
    // InternalDialogParser.g:7527:1: norm1_AndExpression returns [EObject current=null] : (this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )* ) ;
    public final EObject norm1_AndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7533:2: ( (this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )* ) )
            // InternalDialogParser.g:7534:2: (this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )* )
            {
            // InternalDialogParser.g:7534:2: (this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )* )
            // InternalDialogParser.g:7535:3: this_EqualityExpression_0= norm1_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_128);
            this_EqualityExpression_0=norm1_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7543:3: ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) ) )*
            loop188:
            do {
                int alt188=2;
                int LA188_0 = input.LA(1);

                if ( (LA188_0==And||LA188_0==AmpersandAmpersand) ) {
                    alt188=1;
                }


                switch (alt188) {
            	case 1 :
            	    // InternalDialogParser.g:7544:4: () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm1_EqualityExpression ) )
            	    {
            	    // InternalDialogParser.g:7544:4: ()
            	    // InternalDialogParser.g:7545:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7551:4: ( (lv_op_2_0= ruleOpAnd ) )
            	    // InternalDialogParser.g:7552:5: (lv_op_2_0= ruleOpAnd )
            	    {
            	    // InternalDialogParser.g:7552:5: (lv_op_2_0= ruleOpAnd )
            	    // InternalDialogParser.g:7553:6: lv_op_2_0= ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7570:4: ( (lv_right_3_0= norm1_EqualityExpression ) )
            	    // InternalDialogParser.g:7571:5: (lv_right_3_0= norm1_EqualityExpression )
            	    {
            	    // InternalDialogParser.g:7571:5: (lv_right_3_0= norm1_EqualityExpression )
            	    // InternalDialogParser.g:7572:6: lv_right_3_0= norm1_EqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_right_3_0=norm1_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop188;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_AndExpression"


    // $ANTLR start "norm2_AndExpression"
    // InternalDialogParser.g:7595:1: norm2_AndExpression returns [EObject current=null] : (this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )* ) ;
    public final EObject norm2_AndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7601:2: ( (this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )* ) )
            // InternalDialogParser.g:7602:2: (this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )* )
            {
            // InternalDialogParser.g:7602:2: (this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )* )
            // InternalDialogParser.g:7603:3: this_EqualityExpression_0= norm2_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_128);
            this_EqualityExpression_0=norm2_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7611:3: ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) ) )*
            loop189:
            do {
                int alt189=2;
                int LA189_0 = input.LA(1);

                if ( (LA189_0==And||LA189_0==AmpersandAmpersand) ) {
                    alt189=1;
                }


                switch (alt189) {
            	case 1 :
            	    // InternalDialogParser.g:7612:4: () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm2_EqualityExpression ) )
            	    {
            	    // InternalDialogParser.g:7612:4: ()
            	    // InternalDialogParser.g:7613:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7619:4: ( (lv_op_2_0= ruleOpAnd ) )
            	    // InternalDialogParser.g:7620:5: (lv_op_2_0= ruleOpAnd )
            	    {
            	    // InternalDialogParser.g:7620:5: (lv_op_2_0= ruleOpAnd )
            	    // InternalDialogParser.g:7621:6: lv_op_2_0= ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7638:4: ( (lv_right_3_0= norm2_EqualityExpression ) )
            	    // InternalDialogParser.g:7639:5: (lv_right_3_0= norm2_EqualityExpression )
            	    {
            	    // InternalDialogParser.g:7639:5: (lv_right_3_0= norm2_EqualityExpression )
            	    // InternalDialogParser.g:7640:6: lv_right_3_0= norm2_EqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_right_3_0=norm2_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop189;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_AndExpression"


    // $ANTLR start "norm3_AndExpression"
    // InternalDialogParser.g:7663:1: norm3_AndExpression returns [EObject current=null] : (this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )* ) ;
    public final EObject norm3_AndExpression() throws RecognitionException {
        EObject current = null;

        EObject this_EqualityExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7669:2: ( (this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )* ) )
            // InternalDialogParser.g:7670:2: (this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )* )
            {
            // InternalDialogParser.g:7670:2: (this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )* )
            // InternalDialogParser.g:7671:3: this_EqualityExpression_0= norm3_EqualityExpression ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_128);
            this_EqualityExpression_0=norm3_EqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_EqualityExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7679:3: ( () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) ) )*
            loop190:
            do {
                int alt190=2;
                int LA190_0 = input.LA(1);

                if ( (LA190_0==And||LA190_0==AmpersandAmpersand) ) {
                    alt190=1;
                }


                switch (alt190) {
            	case 1 :
            	    // InternalDialogParser.g:7680:4: () ( (lv_op_2_0= ruleOpAnd ) ) ( (lv_right_3_0= norm3_EqualityExpression ) )
            	    {
            	    // InternalDialogParser.g:7680:4: ()
            	    // InternalDialogParser.g:7681:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7687:4: ( (lv_op_2_0= ruleOpAnd ) )
            	    // InternalDialogParser.g:7688:5: (lv_op_2_0= ruleOpAnd )
            	    {
            	    // InternalDialogParser.g:7688:5: (lv_op_2_0= ruleOpAnd )
            	    // InternalDialogParser.g:7689:6: lv_op_2_0= ruleOpAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getOpOpAndParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_op_2_0=ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.OpAnd");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7706:4: ( (lv_right_3_0= norm3_EqualityExpression ) )
            	    // InternalDialogParser.g:7707:5: (lv_right_3_0= norm3_EqualityExpression )
            	    {
            	    // InternalDialogParser.g:7707:5: (lv_right_3_0= norm3_EqualityExpression )
            	    // InternalDialogParser.g:7708:6: lv_right_3_0= norm3_EqualityExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_right_3_0=norm3_EqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.EqualityExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop190;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_AndExpression"


    // $ANTLR start "entryRuleOpAnd"
    // InternalDialogParser.g:7730:1: entryRuleOpAnd returns [String current=null] : iv_ruleOpAnd= ruleOpAnd EOF ;
    public final String entryRuleOpAnd() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpAnd = null;


        try {
            // InternalDialogParser.g:7730:45: (iv_ruleOpAnd= ruleOpAnd EOF )
            // InternalDialogParser.g:7731:2: iv_ruleOpAnd= ruleOpAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpAnd"


    // $ANTLR start "ruleOpAnd"
    // InternalDialogParser.g:7737:1: ruleOpAnd returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= And | kw= AmpersandAmpersand ) ;
    public final AntlrDatatypeRuleToken ruleOpAnd() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:7743:2: ( (kw= And | kw= AmpersandAmpersand ) )
            // InternalDialogParser.g:7744:2: (kw= And | kw= AmpersandAmpersand )
            {
            // InternalDialogParser.g:7744:2: (kw= And | kw= AmpersandAmpersand )
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==And) ) {
                alt191=1;
            }
            else if ( (LA191_0==AmpersandAmpersand) ) {
                alt191=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 191, 0, input);

                throw nvae;
            }
            switch (alt191) {
                case 1 :
                    // InternalDialogParser.g:7745:3: kw= And
                    {
                    kw=(Token)match(input,And,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAndAccess().getAndKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:7751:3: kw= AmpersandAmpersand
                    {
                    kw=(Token)match(input,AmpersandAmpersand,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpAndAccess().getAmpersandAmpersandKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpAnd"


    // $ANTLR start "entryRuleEqualityExpression"
    // InternalDialogParser.g:7760:1: entryRuleEqualityExpression returns [EObject current=null] : iv_ruleEqualityExpression= ruleEqualityExpression EOF ;
    public final EObject entryRuleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEqualityExpression = null;


        try {
            // InternalDialogParser.g:7760:59: (iv_ruleEqualityExpression= ruleEqualityExpression EOF )
            // InternalDialogParser.g:7761:2: iv_ruleEqualityExpression= ruleEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEqualityExpression=ruleEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEqualityExpression"


    // $ANTLR start "ruleEqualityExpression"
    // InternalDialogParser.g:7767:1: ruleEqualityExpression returns [EObject current=null] : (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )* ) ;
    public final EObject ruleEqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7773:2: ( (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )* ) )
            // InternalDialogParser.g:7774:2: (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )* )
            {
            // InternalDialogParser.g:7774:2: (this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )* )
            // InternalDialogParser.g:7775:3: this_RelationalExpression_0= ruleRelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_129);
            this_RelationalExpression_0=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7783:3: ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) ) )*
            loop192:
            do {
                int alt192=2;
                int LA192_0 = input.LA(1);

                if ( (LA192_0==Contains||LA192_0==Does||LA192_0==ExclamationMarkEqualsSign||LA192_0==EqualsSignEqualsSign||LA192_0==Is||LA192_0==EqualsSign) ) {
                    alt192=1;
                }


                switch (alt192) {
            	case 1 :
            	    // InternalDialogParser.g:7784:4: () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= ruleRelationalExpression ) )
            	    {
            	    // InternalDialogParser.g:7784:4: ()
            	    // InternalDialogParser.g:7785:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7791:4: ( (lv_op_2_0= ruleInfixOperator ) )
            	    // InternalDialogParser.g:7792:5: (lv_op_2_0= ruleInfixOperator )
            	    {
            	    // InternalDialogParser.g:7792:5: (lv_op_2_0= ruleInfixOperator )
            	    // InternalDialogParser.g:7793:6: lv_op_2_0= ruleInfixOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleInfixOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.InfixOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7810:4: ( (lv_right_3_0= ruleRelationalExpression ) )
            	    // InternalDialogParser.g:7811:5: (lv_right_3_0= ruleRelationalExpression )
            	    {
            	    // InternalDialogParser.g:7811:5: (lv_right_3_0= ruleRelationalExpression )
            	    // InternalDialogParser.g:7812:6: lv_right_3_0= ruleRelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_129);
            	    lv_right_3_0=ruleRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.RelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop192;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEqualityExpression"


    // $ANTLR start "norm1_EqualityExpression"
    // InternalDialogParser.g:7835:1: norm1_EqualityExpression returns [EObject current=null] : (this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )* ) ;
    public final EObject norm1_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7841:2: ( (this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )* ) )
            // InternalDialogParser.g:7842:2: (this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )* )
            {
            // InternalDialogParser.g:7842:2: (this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )* )
            // InternalDialogParser.g:7843:3: this_RelationalExpression_0= norm1_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_129);
            this_RelationalExpression_0=norm1_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7851:3: ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) ) )*
            loop193:
            do {
                int alt193=2;
                int LA193_0 = input.LA(1);

                if ( (LA193_0==Contains||LA193_0==Does||LA193_0==ExclamationMarkEqualsSign||LA193_0==EqualsSignEqualsSign||LA193_0==Is||LA193_0==EqualsSign) ) {
                    alt193=1;
                }


                switch (alt193) {
            	case 1 :
            	    // InternalDialogParser.g:7852:4: () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm1_RelationalExpression ) )
            	    {
            	    // InternalDialogParser.g:7852:4: ()
            	    // InternalDialogParser.g:7853:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7859:4: ( (lv_op_2_0= ruleInfixOperator ) )
            	    // InternalDialogParser.g:7860:5: (lv_op_2_0= ruleInfixOperator )
            	    {
            	    // InternalDialogParser.g:7860:5: (lv_op_2_0= ruleInfixOperator )
            	    // InternalDialogParser.g:7861:6: lv_op_2_0= ruleInfixOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleInfixOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.InfixOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7878:4: ( (lv_right_3_0= norm1_RelationalExpression ) )
            	    // InternalDialogParser.g:7879:5: (lv_right_3_0= norm1_RelationalExpression )
            	    {
            	    // InternalDialogParser.g:7879:5: (lv_right_3_0= norm1_RelationalExpression )
            	    // InternalDialogParser.g:7880:6: lv_right_3_0= norm1_RelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_129);
            	    lv_right_3_0=norm1_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.RelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop193;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_EqualityExpression"


    // $ANTLR start "norm2_EqualityExpression"
    // InternalDialogParser.g:7903:1: norm2_EqualityExpression returns [EObject current=null] : (this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )* ) ;
    public final EObject norm2_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7909:2: ( (this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )* ) )
            // InternalDialogParser.g:7910:2: (this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )* )
            {
            // InternalDialogParser.g:7910:2: (this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )* )
            // InternalDialogParser.g:7911:3: this_RelationalExpression_0= norm2_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_129);
            this_RelationalExpression_0=norm2_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7919:3: ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) ) )*
            loop194:
            do {
                int alt194=2;
                int LA194_0 = input.LA(1);

                if ( (LA194_0==Contains||LA194_0==Does||LA194_0==ExclamationMarkEqualsSign||LA194_0==EqualsSignEqualsSign||LA194_0==Is||LA194_0==EqualsSign) ) {
                    alt194=1;
                }


                switch (alt194) {
            	case 1 :
            	    // InternalDialogParser.g:7920:4: () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm2_RelationalExpression ) )
            	    {
            	    // InternalDialogParser.g:7920:4: ()
            	    // InternalDialogParser.g:7921:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7927:4: ( (lv_op_2_0= ruleInfixOperator ) )
            	    // InternalDialogParser.g:7928:5: (lv_op_2_0= ruleInfixOperator )
            	    {
            	    // InternalDialogParser.g:7928:5: (lv_op_2_0= ruleInfixOperator )
            	    // InternalDialogParser.g:7929:6: lv_op_2_0= ruleInfixOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleInfixOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.InfixOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:7946:4: ( (lv_right_3_0= norm2_RelationalExpression ) )
            	    // InternalDialogParser.g:7947:5: (lv_right_3_0= norm2_RelationalExpression )
            	    {
            	    // InternalDialogParser.g:7947:5: (lv_right_3_0= norm2_RelationalExpression )
            	    // InternalDialogParser.g:7948:6: lv_right_3_0= norm2_RelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_129);
            	    lv_right_3_0=norm2_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.RelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop194;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_EqualityExpression"


    // $ANTLR start "norm3_EqualityExpression"
    // InternalDialogParser.g:7971:1: norm3_EqualityExpression returns [EObject current=null] : (this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )* ) ;
    public final EObject norm3_EqualityExpression() throws RecognitionException {
        EObject current = null;

        EObject this_RelationalExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:7977:2: ( (this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )* ) )
            // InternalDialogParser.g:7978:2: (this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )* )
            {
            // InternalDialogParser.g:7978:2: (this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )* )
            // InternalDialogParser.g:7979:3: this_RelationalExpression_0= norm3_RelationalExpression ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_129);
            this_RelationalExpression_0=norm3_RelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_RelationalExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:7987:3: ( () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) ) )*
            loop195:
            do {
                int alt195=2;
                int LA195_0 = input.LA(1);

                if ( (LA195_0==Contains||LA195_0==Does||LA195_0==ExclamationMarkEqualsSign||LA195_0==EqualsSignEqualsSign||LA195_0==Is||LA195_0==EqualsSign) ) {
                    alt195=1;
                }


                switch (alt195) {
            	case 1 :
            	    // InternalDialogParser.g:7988:4: () ( (lv_op_2_0= ruleInfixOperator ) ) ( (lv_right_3_0= norm3_RelationalExpression ) )
            	    {
            	    // InternalDialogParser.g:7988:4: ()
            	    // InternalDialogParser.g:7989:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getEqualityExpressionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:7995:4: ( (lv_op_2_0= ruleInfixOperator ) )
            	    // InternalDialogParser.g:7996:5: (lv_op_2_0= ruleInfixOperator )
            	    {
            	    // InternalDialogParser.g:7996:5: (lv_op_2_0= ruleInfixOperator )
            	    // InternalDialogParser.g:7997:6: lv_op_2_0= ruleInfixOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOpInfixOperatorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_op_2_0=ruleInfixOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.InfixOperator");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8014:4: ( (lv_right_3_0= norm3_RelationalExpression ) )
            	    // InternalDialogParser.g:8015:5: (lv_right_3_0= norm3_RelationalExpression )
            	    {
            	    // InternalDialogParser.g:8015:5: (lv_right_3_0= norm3_RelationalExpression )
            	    // InternalDialogParser.g:8016:6: lv_right_3_0= norm3_RelationalExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_129);
            	    lv_right_3_0=norm3_RelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.RelationalExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop195;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_EqualityExpression"


    // $ANTLR start "entryRuleInfixOperator"
    // InternalDialogParser.g:8038:1: entryRuleInfixOperator returns [String current=null] : iv_ruleInfixOperator= ruleInfixOperator EOF ;
    public final String entryRuleInfixOperator() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInfixOperator = null;


        try {
            // InternalDialogParser.g:8038:53: (iv_ruleInfixOperator= ruleInfixOperator EOF )
            // InternalDialogParser.g:8039:2: iv_ruleInfixOperator= ruleInfixOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInfixOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInfixOperator=ruleInfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInfixOperator.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInfixOperator"


    // $ANTLR start "ruleInfixOperator"
    // InternalDialogParser.g:8045:1: ruleInfixOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSign | (kw= Is ( (kw= Not )? kw= Unique kw= In )? ) | kw= Contains | (kw= Does kw= Not kw= Contain ) ) ;
    public final AntlrDatatypeRuleToken ruleInfixOperator() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:8051:2: ( (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSign | (kw= Is ( (kw= Not )? kw= Unique kw= In )? ) | kw= Contains | (kw= Does kw= Not kw= Contain ) ) )
            // InternalDialogParser.g:8052:2: (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSign | (kw= Is ( (kw= Not )? kw= Unique kw= In )? ) | kw= Contains | (kw= Does kw= Not kw= Contain ) )
            {
            // InternalDialogParser.g:8052:2: (kw= EqualsSignEqualsSign | kw= ExclamationMarkEqualsSign | kw= EqualsSign | (kw= Is ( (kw= Not )? kw= Unique kw= In )? ) | kw= Contains | (kw= Does kw= Not kw= Contain ) )
            int alt198=6;
            switch ( input.LA(1) ) {
            case EqualsSignEqualsSign:
                {
                alt198=1;
                }
                break;
            case ExclamationMarkEqualsSign:
                {
                alt198=2;
                }
                break;
            case EqualsSign:
                {
                alt198=3;
                }
                break;
            case Is:
                {
                alt198=4;
                }
                break;
            case Contains:
                {
                alt198=5;
                }
                break;
            case Does:
                {
                alt198=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 198, 0, input);

                throw nvae;
            }

            switch (alt198) {
                case 1 :
                    // InternalDialogParser.g:8053:3: kw= EqualsSignEqualsSign
                    {
                    kw=(Token)match(input,EqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getEqualsSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:8059:3: kw= ExclamationMarkEqualsSign
                    {
                    kw=(Token)match(input,ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getExclamationMarkEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:8065:3: kw= EqualsSign
                    {
                    kw=(Token)match(input,EqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:8071:3: (kw= Is ( (kw= Not )? kw= Unique kw= In )? )
                    {
                    // InternalDialogParser.g:8071:3: (kw= Is ( (kw= Not )? kw= Unique kw= In )? )
                    // InternalDialogParser.g:8072:4: kw= Is ( (kw= Not )? kw= Unique kw= In )?
                    {
                    kw=(Token)match(input,Is,FOLLOW_130); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getIsKeyword_3_0());
                      			
                    }
                    // InternalDialogParser.g:8077:4: ( (kw= Not )? kw= Unique kw= In )?
                    int alt197=2;
                    int LA197_0 = input.LA(1);

                    if ( (LA197_0==Not) ) {
                        int LA197_1 = input.LA(2);

                        if ( (LA197_1==Unique) ) {
                            alt197=1;
                        }
                    }
                    else if ( (LA197_0==Unique) ) {
                        alt197=1;
                    }
                    switch (alt197) {
                        case 1 :
                            // InternalDialogParser.g:8078:5: (kw= Not )? kw= Unique kw= In
                            {
                            // InternalDialogParser.g:8078:5: (kw= Not )?
                            int alt196=2;
                            int LA196_0 = input.LA(1);

                            if ( (LA196_0==Not) ) {
                                alt196=1;
                            }
                            switch (alt196) {
                                case 1 :
                                    // InternalDialogParser.g:8079:6: kw= Not
                                    {
                                    kw=(Token)match(input,Not,FOLLOW_131); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current.merge(kw);
                                      						newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getNotKeyword_3_1_0());
                                      					
                                    }

                                    }
                                    break;

                            }

                            kw=(Token)match(input,Unique,FOLLOW_132); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getUniqueKeyword_3_1_1());
                              				
                            }
                            kw=(Token)match(input,In,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getInKeyword_3_1_2());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:8098:3: kw= Contains
                    {
                    kw=(Token)match(input,Contains,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getContainsKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:8104:3: (kw= Does kw= Not kw= Contain )
                    {
                    // InternalDialogParser.g:8104:3: (kw= Does kw= Not kw= Contain )
                    // InternalDialogParser.g:8105:4: kw= Does kw= Not kw= Contain
                    {
                    kw=(Token)match(input,Does,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getDoesKeyword_5_0());
                      			
                    }
                    kw=(Token)match(input,Not,FOLLOW_133); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getNotKeyword_5_1());
                      			
                    }
                    kw=(Token)match(input,Contain,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getInfixOperatorAccess().getContainKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInfixOperator"


    // $ANTLR start "entryRuleRelationalExpression"
    // InternalDialogParser.g:8125:1: entryRuleRelationalExpression returns [EObject current=null] : iv_ruleRelationalExpression= ruleRelationalExpression EOF ;
    public final EObject entryRuleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelationalExpression = null;


        try {
            // InternalDialogParser.g:8125:61: (iv_ruleRelationalExpression= ruleRelationalExpression EOF )
            // InternalDialogParser.g:8126:2: iv_ruleRelationalExpression= ruleRelationalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRelationalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRelationalExpression=ruleRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelationalExpression"


    // $ANTLR start "ruleRelationalExpression"
    // InternalDialogParser.g:8132:1: ruleRelationalExpression returns [EObject current=null] : (this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )* ) ;
    public final EObject ruleRelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Addition_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8138:2: ( (this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )* ) )
            // InternalDialogParser.g:8139:2: (this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )* )
            {
            // InternalDialogParser.g:8139:2: (this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )* )
            // InternalDialogParser.g:8140:3: this_Addition_0= ruleAddition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_134);
            this_Addition_0=ruleAddition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Addition_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8148:3: ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) ) )*
            loop199:
            do {
                int alt199=2;
                int LA199_0 = input.LA(1);

                if ( (LA199_0==GreaterThanSignEqualsSign) && (synpred11_InternalDialogParser())) {
                    alt199=1;
                }
                else if ( (LA199_0==LessThanSignEqualsSign) && (synpred11_InternalDialogParser())) {
                    alt199=1;
                }
                else if ( (LA199_0==GreaterThanSign) && (synpred11_InternalDialogParser())) {
                    alt199=1;
                }
                else if ( (LA199_0==LessThanSign) && (synpred11_InternalDialogParser())) {
                    alt199=1;
                }


                switch (alt199) {
            	case 1 :
            	    // InternalDialogParser.g:8149:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) )
            	    {
            	    // InternalDialogParser.g:8150:4: ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) ) )
            	    // InternalDialogParser.g:8151:5: () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= ruleAddition ) )
            	    {
            	    // InternalDialogParser.g:8151:5: ()
            	    // InternalDialogParser.g:8152:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalDialogParser.g:8158:5: ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) )
            	    // InternalDialogParser.g:8159:6: ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare )
            	    {
            	    // InternalDialogParser.g:8163:6: (lv_op_2_0= ruleOpCompare )
            	    // InternalDialogParser.g:8164:7: lv_op_2_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"op",
            	      								lv_op_2_0,
            	      								"com.ge.research.sadl.SADL.OpCompare");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8181:5: ( (lv_right_3_0= ruleAddition ) )
            	    // InternalDialogParser.g:8182:6: (lv_right_3_0= ruleAddition )
            	    {
            	    // InternalDialogParser.g:8182:6: (lv_right_3_0= ruleAddition )
            	    // InternalDialogParser.g:8183:7: lv_right_3_0= ruleAddition
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_134);
            	    lv_right_3_0=ruleAddition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"com.ge.research.sadl.SADL.Addition");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop199;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelationalExpression"


    // $ANTLR start "norm1_RelationalExpression"
    // InternalDialogParser.g:8207:1: norm1_RelationalExpression returns [EObject current=null] : (this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )* ) ;
    public final EObject norm1_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Addition_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8213:2: ( (this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )* ) )
            // InternalDialogParser.g:8214:2: (this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )* )
            {
            // InternalDialogParser.g:8214:2: (this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )* )
            // InternalDialogParser.g:8215:3: this_Addition_0= norm1_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_134);
            this_Addition_0=norm1_Addition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Addition_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8223:3: ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) ) )*
            loop200:
            do {
                int alt200=2;
                int LA200_0 = input.LA(1);

                if ( (LA200_0==GreaterThanSignEqualsSign) && (synpred13_InternalDialogParser())) {
                    alt200=1;
                }
                else if ( (LA200_0==LessThanSignEqualsSign) && (synpred13_InternalDialogParser())) {
                    alt200=1;
                }
                else if ( (LA200_0==GreaterThanSign) && (synpred13_InternalDialogParser())) {
                    alt200=1;
                }
                else if ( (LA200_0==LessThanSign) && (synpred13_InternalDialogParser())) {
                    alt200=1;
                }


                switch (alt200) {
            	case 1 :
            	    // InternalDialogParser.g:8224:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) )
            	    {
            	    // InternalDialogParser.g:8225:4: ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) ) )
            	    // InternalDialogParser.g:8226:5: () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm1_Addition ) )
            	    {
            	    // InternalDialogParser.g:8226:5: ()
            	    // InternalDialogParser.g:8227:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalDialogParser.g:8233:5: ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) )
            	    // InternalDialogParser.g:8234:6: ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare )
            	    {
            	    // InternalDialogParser.g:8238:6: (lv_op_2_0= ruleOpCompare )
            	    // InternalDialogParser.g:8239:7: lv_op_2_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"op",
            	      								lv_op_2_0,
            	      								"com.ge.research.sadl.SADL.OpCompare");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8256:5: ( (lv_right_3_0= norm1_Addition ) )
            	    // InternalDialogParser.g:8257:6: (lv_right_3_0= norm1_Addition )
            	    {
            	    // InternalDialogParser.g:8257:6: (lv_right_3_0= norm1_Addition )
            	    // InternalDialogParser.g:8258:7: lv_right_3_0= norm1_Addition
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_134);
            	    lv_right_3_0=norm1_Addition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"com.ge.research.sadl.SADL.Addition");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop200;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_RelationalExpression"


    // $ANTLR start "norm2_RelationalExpression"
    // InternalDialogParser.g:8282:1: norm2_RelationalExpression returns [EObject current=null] : (this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )* ) ;
    public final EObject norm2_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Addition_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8288:2: ( (this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )* ) )
            // InternalDialogParser.g:8289:2: (this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )* )
            {
            // InternalDialogParser.g:8289:2: (this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )* )
            // InternalDialogParser.g:8290:3: this_Addition_0= norm2_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_134);
            this_Addition_0=norm2_Addition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Addition_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8298:3: ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) ) )*
            loop201:
            do {
                int alt201=2;
                int LA201_0 = input.LA(1);

                if ( (LA201_0==GreaterThanSignEqualsSign) && (synpred15_InternalDialogParser())) {
                    alt201=1;
                }
                else if ( (LA201_0==LessThanSignEqualsSign) && (synpred15_InternalDialogParser())) {
                    alt201=1;
                }
                else if ( (LA201_0==GreaterThanSign) && (synpred15_InternalDialogParser())) {
                    alt201=1;
                }
                else if ( (LA201_0==LessThanSign) && (synpred15_InternalDialogParser())) {
                    alt201=1;
                }


                switch (alt201) {
            	case 1 :
            	    // InternalDialogParser.g:8299:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) )
            	    {
            	    // InternalDialogParser.g:8300:4: ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) ) )
            	    // InternalDialogParser.g:8301:5: () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm2_Addition ) )
            	    {
            	    // InternalDialogParser.g:8301:5: ()
            	    // InternalDialogParser.g:8302:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalDialogParser.g:8308:5: ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) )
            	    // InternalDialogParser.g:8309:6: ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare )
            	    {
            	    // InternalDialogParser.g:8313:6: (lv_op_2_0= ruleOpCompare )
            	    // InternalDialogParser.g:8314:7: lv_op_2_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"op",
            	      								lv_op_2_0,
            	      								"com.ge.research.sadl.SADL.OpCompare");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8331:5: ( (lv_right_3_0= norm2_Addition ) )
            	    // InternalDialogParser.g:8332:6: (lv_right_3_0= norm2_Addition )
            	    {
            	    // InternalDialogParser.g:8332:6: (lv_right_3_0= norm2_Addition )
            	    // InternalDialogParser.g:8333:7: lv_right_3_0= norm2_Addition
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_134);
            	    lv_right_3_0=norm2_Addition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"com.ge.research.sadl.SADL.Addition");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop201;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_RelationalExpression"


    // $ANTLR start "norm3_RelationalExpression"
    // InternalDialogParser.g:8357:1: norm3_RelationalExpression returns [EObject current=null] : (this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )* ) ;
    public final EObject norm3_RelationalExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Addition_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8363:2: ( (this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )* ) )
            // InternalDialogParser.g:8364:2: (this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )* )
            {
            // InternalDialogParser.g:8364:2: (this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )* )
            // InternalDialogParser.g:8365:3: this_Addition_0= norm3_Addition ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_134);
            this_Addition_0=norm3_Addition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Addition_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8373:3: ( ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) ) )*
            loop202:
            do {
                int alt202=2;
                int LA202_0 = input.LA(1);

                if ( (LA202_0==GreaterThanSignEqualsSign) && (synpred17_InternalDialogParser())) {
                    alt202=1;
                }
                else if ( (LA202_0==LessThanSignEqualsSign) && (synpred17_InternalDialogParser())) {
                    alt202=1;
                }
                else if ( (LA202_0==GreaterThanSign) && (synpred17_InternalDialogParser())) {
                    alt202=1;
                }
                else if ( (LA202_0==LessThanSign) && (synpred17_InternalDialogParser())) {
                    alt202=1;
                }


                switch (alt202) {
            	case 1 :
            	    // InternalDialogParser.g:8374:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )=> ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) )
            	    {
            	    // InternalDialogParser.g:8375:4: ( () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) ) )
            	    // InternalDialogParser.g:8376:5: () ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) ) ( (lv_right_3_0= norm3_Addition ) )
            	    {
            	    // InternalDialogParser.g:8376:5: ()
            	    // InternalDialogParser.g:8377:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getRelationalExpressionAccess().getBinaryOperationLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalDialogParser.g:8383:5: ( ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare ) )
            	    // InternalDialogParser.g:8384:6: ( ( ruleOpCompare ) )=> (lv_op_2_0= ruleOpCompare )
            	    {
            	    // InternalDialogParser.g:8388:6: (lv_op_2_0= ruleOpCompare )
            	    // InternalDialogParser.g:8389:7: lv_op_2_0= ruleOpCompare
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOpOpCompareParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_op_2_0=ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"op",
            	      								lv_op_2_0,
            	      								"com.ge.research.sadl.SADL.OpCompare");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8406:5: ( (lv_right_3_0= norm3_Addition ) )
            	    // InternalDialogParser.g:8407:6: (lv_right_3_0= norm3_Addition )
            	    {
            	    // InternalDialogParser.g:8407:6: (lv_right_3_0= norm3_Addition )
            	    // InternalDialogParser.g:8408:7: lv_right_3_0= norm3_Addition
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_134);
            	    lv_right_3_0=norm3_Addition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"right",
            	      								lv_right_3_0,
            	      								"com.ge.research.sadl.SADL.Addition");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop202;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_RelationalExpression"


    // $ANTLR start "entryRuleOpCompare"
    // InternalDialogParser.g:8431:1: entryRuleOpCompare returns [String current=null] : iv_ruleOpCompare= ruleOpCompare EOF ;
    public final String entryRuleOpCompare() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOpCompare = null;


        try {
            // InternalDialogParser.g:8431:49: (iv_ruleOpCompare= ruleOpCompare EOF )
            // InternalDialogParser.g:8432:2: iv_ruleOpCompare= ruleOpCompare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpCompareRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOpCompare"


    // $ANTLR start "ruleOpCompare"
    // InternalDialogParser.g:8438:1: ruleOpCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign ) ;
    public final AntlrDatatypeRuleToken ruleOpCompare() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:8444:2: ( (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign ) )
            // InternalDialogParser.g:8445:2: (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign )
            {
            // InternalDialogParser.g:8445:2: (kw= GreaterThanSignEqualsSign | kw= LessThanSignEqualsSign | kw= GreaterThanSign | kw= LessThanSign )
            int alt203=4;
            switch ( input.LA(1) ) {
            case GreaterThanSignEqualsSign:
                {
                alt203=1;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt203=2;
                }
                break;
            case GreaterThanSign:
                {
                alt203=3;
                }
                break;
            case LessThanSign:
                {
                alt203=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 203, 0, input);

                throw nvae;
            }

            switch (alt203) {
                case 1 :
                    // InternalDialogParser.g:8446:3: kw= GreaterThanSignEqualsSign
                    {
                    kw=(Token)match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignEqualsSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:8452:3: kw= LessThanSignEqualsSign
                    {
                    kw=(Token)match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:8458:3: kw= GreaterThanSign
                    {
                    kw=(Token)match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getGreaterThanSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:8464:3: kw= LessThanSign
                    {
                    kw=(Token)match(input,LessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOpCompareAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOpCompare"


    // $ANTLR start "entryRuleAddition"
    // InternalDialogParser.g:8473:1: entryRuleAddition returns [EObject current=null] : iv_ruleAddition= ruleAddition EOF ;
    public final EObject entryRuleAddition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAddition = null;


        try {
            // InternalDialogParser.g:8473:49: (iv_ruleAddition= ruleAddition EOF )
            // InternalDialogParser.g:8474:2: iv_ruleAddition= ruleAddition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAddition=ruleAddition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddition"


    // $ANTLR start "ruleAddition"
    // InternalDialogParser.g:8480:1: ruleAddition returns [EObject current=null] : (this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* ) ;
    public final EObject ruleAddition() throws RecognitionException {
        EObject current = null;

        EObject this_Multiplication_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8486:2: ( (this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* ) )
            // InternalDialogParser.g:8487:2: (this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* )
            {
            // InternalDialogParser.g:8487:2: (this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* )
            // InternalDialogParser.g:8488:3: this_Multiplication_0= ruleMultiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_135);
            this_Multiplication_0=ruleMultiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Multiplication_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8496:3: ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) ) )*
            loop204:
            do {
                int alt204=2;
                int LA204_0 = input.LA(1);

                if ( (LA204_0==PlusSign||LA204_0==HyphenMinus) ) {
                    alt204=1;
                }


                switch (alt204) {
            	case 1 :
            	    // InternalDialogParser.g:8497:4: () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= ruleMultiplication ) )
            	    {
            	    // InternalDialogParser.g:8497:4: ()
            	    // InternalDialogParser.g:8498:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:8504:4: ( (lv_op_2_0= ruleAddOp ) )
            	    // InternalDialogParser.g:8505:5: (lv_op_2_0= ruleAddOp )
            	    {
            	    // InternalDialogParser.g:8505:5: (lv_op_2_0= ruleAddOp )
            	    // InternalDialogParser.g:8506:6: lv_op_2_0= ruleAddOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleAddOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.AddOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8523:4: ( (lv_right_3_0= ruleMultiplication ) )
            	    // InternalDialogParser.g:8524:5: (lv_right_3_0= ruleMultiplication )
            	    {
            	    // InternalDialogParser.g:8524:5: (lv_right_3_0= ruleMultiplication )
            	    // InternalDialogParser.g:8525:6: lv_right_3_0= ruleMultiplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_135);
            	    lv_right_3_0=ruleMultiplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Multiplication");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop204;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddition"


    // $ANTLR start "norm1_Addition"
    // InternalDialogParser.g:8548:1: norm1_Addition returns [EObject current=null] : (this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )* ) ;
    public final EObject norm1_Addition() throws RecognitionException {
        EObject current = null;

        EObject this_Multiplication_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8554:2: ( (this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )* ) )
            // InternalDialogParser.g:8555:2: (this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )* )
            {
            // InternalDialogParser.g:8555:2: (this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )* )
            // InternalDialogParser.g:8556:3: this_Multiplication_0= norm1_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_135);
            this_Multiplication_0=norm1_Multiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Multiplication_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8564:3: ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) ) )*
            loop205:
            do {
                int alt205=2;
                int LA205_0 = input.LA(1);

                if ( (LA205_0==PlusSign||LA205_0==HyphenMinus) ) {
                    alt205=1;
                }


                switch (alt205) {
            	case 1 :
            	    // InternalDialogParser.g:8565:4: () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm1_Multiplication ) )
            	    {
            	    // InternalDialogParser.g:8565:4: ()
            	    // InternalDialogParser.g:8566:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:8572:4: ( (lv_op_2_0= ruleAddOp ) )
            	    // InternalDialogParser.g:8573:5: (lv_op_2_0= ruleAddOp )
            	    {
            	    // InternalDialogParser.g:8573:5: (lv_op_2_0= ruleAddOp )
            	    // InternalDialogParser.g:8574:6: lv_op_2_0= ruleAddOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleAddOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.AddOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8591:4: ( (lv_right_3_0= norm1_Multiplication ) )
            	    // InternalDialogParser.g:8592:5: (lv_right_3_0= norm1_Multiplication )
            	    {
            	    // InternalDialogParser.g:8592:5: (lv_right_3_0= norm1_Multiplication )
            	    // InternalDialogParser.g:8593:6: lv_right_3_0= norm1_Multiplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_135);
            	    lv_right_3_0=norm1_Multiplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Multiplication");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop205;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_Addition"


    // $ANTLR start "norm2_Addition"
    // InternalDialogParser.g:8616:1: norm2_Addition returns [EObject current=null] : (this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )* ) ;
    public final EObject norm2_Addition() throws RecognitionException {
        EObject current = null;

        EObject this_Multiplication_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8622:2: ( (this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )* ) )
            // InternalDialogParser.g:8623:2: (this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )* )
            {
            // InternalDialogParser.g:8623:2: (this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )* )
            // InternalDialogParser.g:8624:3: this_Multiplication_0= norm2_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_135);
            this_Multiplication_0=norm2_Multiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Multiplication_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8632:3: ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) ) )*
            loop206:
            do {
                int alt206=2;
                int LA206_0 = input.LA(1);

                if ( (LA206_0==PlusSign||LA206_0==HyphenMinus) ) {
                    alt206=1;
                }


                switch (alt206) {
            	case 1 :
            	    // InternalDialogParser.g:8633:4: () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm2_Multiplication ) )
            	    {
            	    // InternalDialogParser.g:8633:4: ()
            	    // InternalDialogParser.g:8634:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:8640:4: ( (lv_op_2_0= ruleAddOp ) )
            	    // InternalDialogParser.g:8641:5: (lv_op_2_0= ruleAddOp )
            	    {
            	    // InternalDialogParser.g:8641:5: (lv_op_2_0= ruleAddOp )
            	    // InternalDialogParser.g:8642:6: lv_op_2_0= ruleAddOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleAddOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.AddOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8659:4: ( (lv_right_3_0= norm2_Multiplication ) )
            	    // InternalDialogParser.g:8660:5: (lv_right_3_0= norm2_Multiplication )
            	    {
            	    // InternalDialogParser.g:8660:5: (lv_right_3_0= norm2_Multiplication )
            	    // InternalDialogParser.g:8661:6: lv_right_3_0= norm2_Multiplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_135);
            	    lv_right_3_0=norm2_Multiplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Multiplication");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop206;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_Addition"


    // $ANTLR start "norm3_Addition"
    // InternalDialogParser.g:8684:1: norm3_Addition returns [EObject current=null] : (this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )* ) ;
    public final EObject norm3_Addition() throws RecognitionException {
        EObject current = null;

        EObject this_Multiplication_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8690:2: ( (this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )* ) )
            // InternalDialogParser.g:8691:2: (this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )* )
            {
            // InternalDialogParser.g:8691:2: (this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )* )
            // InternalDialogParser.g:8692:3: this_Multiplication_0= norm3_Multiplication ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_135);
            this_Multiplication_0=norm3_Multiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Multiplication_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8700:3: ( () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) ) )*
            loop207:
            do {
                int alt207=2;
                int LA207_0 = input.LA(1);

                if ( (LA207_0==PlusSign||LA207_0==HyphenMinus) ) {
                    alt207=1;
                }


                switch (alt207) {
            	case 1 :
            	    // InternalDialogParser.g:8701:4: () ( (lv_op_2_0= ruleAddOp ) ) ( (lv_right_3_0= norm3_Multiplication ) )
            	    {
            	    // InternalDialogParser.g:8701:4: ()
            	    // InternalDialogParser.g:8702:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAdditionAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:8708:4: ( (lv_op_2_0= ruleAddOp ) )
            	    // InternalDialogParser.g:8709:5: (lv_op_2_0= ruleAddOp )
            	    {
            	    // InternalDialogParser.g:8709:5: (lv_op_2_0= ruleAddOp )
            	    // InternalDialogParser.g:8710:6: lv_op_2_0= ruleAddOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getOpAddOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_op_2_0=ruleAddOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.AddOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8727:4: ( (lv_right_3_0= norm3_Multiplication ) )
            	    // InternalDialogParser.g:8728:5: (lv_right_3_0= norm3_Multiplication )
            	    {
            	    // InternalDialogParser.g:8728:5: (lv_right_3_0= norm3_Multiplication )
            	    // InternalDialogParser.g:8729:6: lv_right_3_0= norm3_Multiplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_135);
            	    lv_right_3_0=norm3_Multiplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Multiplication");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop207;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_Addition"


    // $ANTLR start "entryRuleAddOp"
    // InternalDialogParser.g:8751:1: entryRuleAddOp returns [String current=null] : iv_ruleAddOp= ruleAddOp EOF ;
    public final String entryRuleAddOp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAddOp = null;


        try {
            // InternalDialogParser.g:8751:45: (iv_ruleAddOp= ruleAddOp EOF )
            // InternalDialogParser.g:8752:2: iv_ruleAddOp= ruleAddOp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddOpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAddOp=ruleAddOp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddOp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddOp"


    // $ANTLR start "ruleAddOp"
    // InternalDialogParser.g:8758:1: ruleAddOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PlusSign | kw= HyphenMinus ) ;
    public final AntlrDatatypeRuleToken ruleAddOp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:8764:2: ( (kw= PlusSign | kw= HyphenMinus ) )
            // InternalDialogParser.g:8765:2: (kw= PlusSign | kw= HyphenMinus )
            {
            // InternalDialogParser.g:8765:2: (kw= PlusSign | kw= HyphenMinus )
            int alt208=2;
            int LA208_0 = input.LA(1);

            if ( (LA208_0==PlusSign) ) {
                alt208=1;
            }
            else if ( (LA208_0==HyphenMinus) ) {
                alt208=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 208, 0, input);

                throw nvae;
            }
            switch (alt208) {
                case 1 :
                    // InternalDialogParser.g:8766:3: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAddOpAccess().getPlusSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:8772:3: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAddOpAccess().getHyphenMinusKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddOp"


    // $ANTLR start "entryRuleMultiplication"
    // InternalDialogParser.g:8781:1: entryRuleMultiplication returns [EObject current=null] : iv_ruleMultiplication= ruleMultiplication EOF ;
    public final EObject entryRuleMultiplication() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplication = null;


        try {
            // InternalDialogParser.g:8781:55: (iv_ruleMultiplication= ruleMultiplication EOF )
            // InternalDialogParser.g:8782:2: iv_ruleMultiplication= ruleMultiplication EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplication=ruleMultiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplication; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplication"


    // $ANTLR start "ruleMultiplication"
    // InternalDialogParser.g:8788:1: ruleMultiplication returns [EObject current=null] : (this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )* ) ;
    public final EObject ruleMultiplication() throws RecognitionException {
        EObject current = null;

        EObject this_Power_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8794:2: ( (this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )* ) )
            // InternalDialogParser.g:8795:2: (this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )* )
            {
            // InternalDialogParser.g:8795:2: (this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )* )
            // InternalDialogParser.g:8796:3: this_Power_0= rulePower ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_136);
            this_Power_0=rulePower();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Power_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8804:3: ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) ) )*
            loop209:
            do {
                int alt209=2;
                int LA209_0 = input.LA(1);

                if ( (LA209_0==PercentSign||LA209_0==Asterisk||LA209_0==Solidus) ) {
                    alt209=1;
                }


                switch (alt209) {
            	case 1 :
            	    // InternalDialogParser.g:8805:4: () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= rulePower ) )
            	    {
            	    // InternalDialogParser.g:8805:4: ()
            	    // InternalDialogParser.g:8806:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:8812:4: ( (lv_op_2_0= ruleMultiOp ) )
            	    // InternalDialogParser.g:8813:5: (lv_op_2_0= ruleMultiOp )
            	    {
            	    // InternalDialogParser.g:8813:5: (lv_op_2_0= ruleMultiOp )
            	    // InternalDialogParser.g:8814:6: lv_op_2_0= ruleMultiOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleMultiOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.MultiOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8831:4: ( (lv_right_3_0= rulePower ) )
            	    // InternalDialogParser.g:8832:5: (lv_right_3_0= rulePower )
            	    {
            	    // InternalDialogParser.g:8832:5: (lv_right_3_0= rulePower )
            	    // InternalDialogParser.g:8833:6: lv_right_3_0= rulePower
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_136);
            	    lv_right_3_0=rulePower();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Power");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop209;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplication"


    // $ANTLR start "norm1_Multiplication"
    // InternalDialogParser.g:8856:1: norm1_Multiplication returns [EObject current=null] : (this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )* ) ;
    public final EObject norm1_Multiplication() throws RecognitionException {
        EObject current = null;

        EObject this_Power_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8862:2: ( (this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )* ) )
            // InternalDialogParser.g:8863:2: (this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )* )
            {
            // InternalDialogParser.g:8863:2: (this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )* )
            // InternalDialogParser.g:8864:3: this_Power_0= norm1_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_136);
            this_Power_0=norm1_Power();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Power_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8872:3: ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) ) )*
            loop210:
            do {
                int alt210=2;
                int LA210_0 = input.LA(1);

                if ( (LA210_0==PercentSign||LA210_0==Asterisk||LA210_0==Solidus) ) {
                    alt210=1;
                }


                switch (alt210) {
            	case 1 :
            	    // InternalDialogParser.g:8873:4: () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm1_Power ) )
            	    {
            	    // InternalDialogParser.g:8873:4: ()
            	    // InternalDialogParser.g:8874:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:8880:4: ( (lv_op_2_0= ruleMultiOp ) )
            	    // InternalDialogParser.g:8881:5: (lv_op_2_0= ruleMultiOp )
            	    {
            	    // InternalDialogParser.g:8881:5: (lv_op_2_0= ruleMultiOp )
            	    // InternalDialogParser.g:8882:6: lv_op_2_0= ruleMultiOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleMultiOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.MultiOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8899:4: ( (lv_right_3_0= norm1_Power ) )
            	    // InternalDialogParser.g:8900:5: (lv_right_3_0= norm1_Power )
            	    {
            	    // InternalDialogParser.g:8900:5: (lv_right_3_0= norm1_Power )
            	    // InternalDialogParser.g:8901:6: lv_right_3_0= norm1_Power
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_136);
            	    lv_right_3_0=norm1_Power();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Power");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop210;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_Multiplication"


    // $ANTLR start "norm2_Multiplication"
    // InternalDialogParser.g:8924:1: norm2_Multiplication returns [EObject current=null] : (this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )* ) ;
    public final EObject norm2_Multiplication() throws RecognitionException {
        EObject current = null;

        EObject this_Power_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8930:2: ( (this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )* ) )
            // InternalDialogParser.g:8931:2: (this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )* )
            {
            // InternalDialogParser.g:8931:2: (this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )* )
            // InternalDialogParser.g:8932:3: this_Power_0= norm2_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_136);
            this_Power_0=norm2_Power();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Power_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:8940:3: ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) ) )*
            loop211:
            do {
                int alt211=2;
                int LA211_0 = input.LA(1);

                if ( (LA211_0==PercentSign||LA211_0==Asterisk||LA211_0==Solidus) ) {
                    alt211=1;
                }


                switch (alt211) {
            	case 1 :
            	    // InternalDialogParser.g:8941:4: () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm2_Power ) )
            	    {
            	    // InternalDialogParser.g:8941:4: ()
            	    // InternalDialogParser.g:8942:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:8948:4: ( (lv_op_2_0= ruleMultiOp ) )
            	    // InternalDialogParser.g:8949:5: (lv_op_2_0= ruleMultiOp )
            	    {
            	    // InternalDialogParser.g:8949:5: (lv_op_2_0= ruleMultiOp )
            	    // InternalDialogParser.g:8950:6: lv_op_2_0= ruleMultiOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_op_2_0=ruleMultiOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.MultiOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:8967:4: ( (lv_right_3_0= norm2_Power ) )
            	    // InternalDialogParser.g:8968:5: (lv_right_3_0= norm2_Power )
            	    {
            	    // InternalDialogParser.g:8968:5: (lv_right_3_0= norm2_Power )
            	    // InternalDialogParser.g:8969:6: lv_right_3_0= norm2_Power
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_136);
            	    lv_right_3_0=norm2_Power();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Power");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop211;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_Multiplication"


    // $ANTLR start "norm3_Multiplication"
    // InternalDialogParser.g:8992:1: norm3_Multiplication returns [EObject current=null] : (this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )* ) ;
    public final EObject norm3_Multiplication() throws RecognitionException {
        EObject current = null;

        EObject this_Power_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:8998:2: ( (this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )* ) )
            // InternalDialogParser.g:8999:2: (this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )* )
            {
            // InternalDialogParser.g:8999:2: (this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )* )
            // InternalDialogParser.g:9000:3: this_Power_0= norm3_Power ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicationAccess().getPowerParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_136);
            this_Power_0=norm3_Power();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Power_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9008:3: ( () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) ) )*
            loop212:
            do {
                int alt212=2;
                int LA212_0 = input.LA(1);

                if ( (LA212_0==PercentSign||LA212_0==Asterisk||LA212_0==Solidus) ) {
                    alt212=1;
                }


                switch (alt212) {
            	case 1 :
            	    // InternalDialogParser.g:9009:4: () ( (lv_op_2_0= ruleMultiOp ) ) ( (lv_right_3_0= norm3_Power ) )
            	    {
            	    // InternalDialogParser.g:9009:4: ()
            	    // InternalDialogParser.g:9010:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getMultiplicationAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:9016:4: ( (lv_op_2_0= ruleMultiOp ) )
            	    // InternalDialogParser.g:9017:5: (lv_op_2_0= ruleMultiOp )
            	    {
            	    // InternalDialogParser.g:9017:5: (lv_op_2_0= ruleMultiOp )
            	    // InternalDialogParser.g:9018:6: lv_op_2_0= ruleMultiOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getOpMultiOpParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_op_2_0=ruleMultiOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"op",
            	      							lv_op_2_0,
            	      							"com.ge.research.sadl.SADL.MultiOp");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:9035:4: ( (lv_right_3_0= norm3_Power ) )
            	    // InternalDialogParser.g:9036:5: (lv_right_3_0= norm3_Power )
            	    {
            	    // InternalDialogParser.g:9036:5: (lv_right_3_0= norm3_Power )
            	    // InternalDialogParser.g:9037:6: lv_right_3_0= norm3_Power
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightPowerParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_136);
            	    lv_right_3_0=norm3_Power();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.Power");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop212;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_Multiplication"


    // $ANTLR start "entryRuleMultiOp"
    // InternalDialogParser.g:9059:1: entryRuleMultiOp returns [String current=null] : iv_ruleMultiOp= ruleMultiOp EOF ;
    public final String entryRuleMultiOp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMultiOp = null;


        try {
            // InternalDialogParser.g:9059:47: (iv_ruleMultiOp= ruleMultiOp EOF )
            // InternalDialogParser.g:9060:2: iv_ruleMultiOp= ruleMultiOp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiOpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiOp=ruleMultiOp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiOp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiOp"


    // $ANTLR start "ruleMultiOp"
    // InternalDialogParser.g:9066:1: ruleMultiOp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= Asterisk | kw= Solidus | kw= PercentSign ) ;
    public final AntlrDatatypeRuleToken ruleMultiOp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:9072:2: ( (kw= Asterisk | kw= Solidus | kw= PercentSign ) )
            // InternalDialogParser.g:9073:2: (kw= Asterisk | kw= Solidus | kw= PercentSign )
            {
            // InternalDialogParser.g:9073:2: (kw= Asterisk | kw= Solidus | kw= PercentSign )
            int alt213=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt213=1;
                }
                break;
            case Solidus:
                {
                alt213=2;
                }
                break;
            case PercentSign:
                {
                alt213=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 213, 0, input);

                throw nvae;
            }

            switch (alt213) {
                case 1 :
                    // InternalDialogParser.g:9074:3: kw= Asterisk
                    {
                    kw=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiOpAccess().getAsteriskKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:9080:3: kw= Solidus
                    {
                    kw=(Token)match(input,Solidus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiOpAccess().getSolidusKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:9086:3: kw= PercentSign
                    {
                    kw=(Token)match(input,PercentSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMultiOpAccess().getPercentSignKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiOp"


    // $ANTLR start "entryRulePower"
    // InternalDialogParser.g:9095:1: entryRulePower returns [EObject current=null] : iv_rulePower= rulePower EOF ;
    public final EObject entryRulePower() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePower = null;


        try {
            // InternalDialogParser.g:9095:46: (iv_rulePower= rulePower EOF )
            // InternalDialogParser.g:9096:2: iv_rulePower= rulePower EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPowerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePower=rulePower();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePower; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePower"


    // $ANTLR start "rulePower"
    // InternalDialogParser.g:9102:1: rulePower returns [EObject current=null] : (this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )* ) ;
    public final EObject rulePower() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_PropOfSubject_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9108:2: ( (this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )* ) )
            // InternalDialogParser.g:9109:2: (this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )* )
            {
            // InternalDialogParser.g:9109:2: (this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )* )
            // InternalDialogParser.g:9110:3: this_PropOfSubject_0= rulePropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_137);
            this_PropOfSubject_0=rulePropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PropOfSubject_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9118:3: ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )*
            loop214:
            do {
                int alt214=2;
                int LA214_0 = input.LA(1);

                if ( (LA214_0==CircumflexAccent) ) {
                    alt214=1;
                }


                switch (alt214) {
            	case 1 :
            	    // InternalDialogParser.g:9119:4: () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= rulePropOfSubject ) )
            	    {
            	    // InternalDialogParser.g:9119:4: ()
            	    // InternalDialogParser.g:9120:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:9126:4: ( (lv_op_2_0= CircumflexAccent ) )
            	    // InternalDialogParser.g:9127:5: (lv_op_2_0= CircumflexAccent )
            	    {
            	    // InternalDialogParser.g:9127:5: (lv_op_2_0= CircumflexAccent )
            	    // InternalDialogParser.g:9128:6: lv_op_2_0= CircumflexAccent
            	    {
            	    lv_op_2_0=(Token)match(input,CircumflexAccent,FOLLOW_121); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getPowerRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:9140:4: ( (lv_right_3_0= rulePropOfSubject ) )
            	    // InternalDialogParser.g:9141:5: (lv_right_3_0= rulePropOfSubject )
            	    {
            	    // InternalDialogParser.g:9141:5: (lv_right_3_0= rulePropOfSubject )
            	    // InternalDialogParser.g:9142:6: lv_right_3_0= rulePropOfSubject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_right_3_0=rulePropOfSubject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPowerRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.PropOfSubject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop214;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePower"


    // $ANTLR start "norm1_Power"
    // InternalDialogParser.g:9165:1: norm1_Power returns [EObject current=null] : (this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )* ) ;
    public final EObject norm1_Power() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_PropOfSubject_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9171:2: ( (this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )* ) )
            // InternalDialogParser.g:9172:2: (this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )* )
            {
            // InternalDialogParser.g:9172:2: (this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )* )
            // InternalDialogParser.g:9173:3: this_PropOfSubject_0= norm1_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_137);
            this_PropOfSubject_0=norm1_PropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PropOfSubject_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9181:3: ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )*
            loop215:
            do {
                int alt215=2;
                int LA215_0 = input.LA(1);

                if ( (LA215_0==CircumflexAccent) ) {
                    alt215=1;
                }


                switch (alt215) {
            	case 1 :
            	    // InternalDialogParser.g:9182:4: () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm1_PropOfSubject ) )
            	    {
            	    // InternalDialogParser.g:9182:4: ()
            	    // InternalDialogParser.g:9183:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:9189:4: ( (lv_op_2_0= CircumflexAccent ) )
            	    // InternalDialogParser.g:9190:5: (lv_op_2_0= CircumflexAccent )
            	    {
            	    // InternalDialogParser.g:9190:5: (lv_op_2_0= CircumflexAccent )
            	    // InternalDialogParser.g:9191:6: lv_op_2_0= CircumflexAccent
            	    {
            	    lv_op_2_0=(Token)match(input,CircumflexAccent,FOLLOW_121); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getPowerRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:9203:4: ( (lv_right_3_0= norm1_PropOfSubject ) )
            	    // InternalDialogParser.g:9204:5: (lv_right_3_0= norm1_PropOfSubject )
            	    {
            	    // InternalDialogParser.g:9204:5: (lv_right_3_0= norm1_PropOfSubject )
            	    // InternalDialogParser.g:9205:6: lv_right_3_0= norm1_PropOfSubject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_right_3_0=norm1_PropOfSubject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPowerRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.PropOfSubject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop215;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_Power"


    // $ANTLR start "norm2_Power"
    // InternalDialogParser.g:9228:1: norm2_Power returns [EObject current=null] : (this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )* ) ;
    public final EObject norm2_Power() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_PropOfSubject_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9234:2: ( (this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )* ) )
            // InternalDialogParser.g:9235:2: (this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )* )
            {
            // InternalDialogParser.g:9235:2: (this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )* )
            // InternalDialogParser.g:9236:3: this_PropOfSubject_0= norm2_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_137);
            this_PropOfSubject_0=norm2_PropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PropOfSubject_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9244:3: ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )*
            loop216:
            do {
                int alt216=2;
                int LA216_0 = input.LA(1);

                if ( (LA216_0==CircumflexAccent) ) {
                    alt216=1;
                }


                switch (alt216) {
            	case 1 :
            	    // InternalDialogParser.g:9245:4: () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm2_PropOfSubject ) )
            	    {
            	    // InternalDialogParser.g:9245:4: ()
            	    // InternalDialogParser.g:9246:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:9252:4: ( (lv_op_2_0= CircumflexAccent ) )
            	    // InternalDialogParser.g:9253:5: (lv_op_2_0= CircumflexAccent )
            	    {
            	    // InternalDialogParser.g:9253:5: (lv_op_2_0= CircumflexAccent )
            	    // InternalDialogParser.g:9254:6: lv_op_2_0= CircumflexAccent
            	    {
            	    lv_op_2_0=(Token)match(input,CircumflexAccent,FOLLOW_121); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getPowerRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:9266:4: ( (lv_right_3_0= norm2_PropOfSubject ) )
            	    // InternalDialogParser.g:9267:5: (lv_right_3_0= norm2_PropOfSubject )
            	    {
            	    // InternalDialogParser.g:9267:5: (lv_right_3_0= norm2_PropOfSubject )
            	    // InternalDialogParser.g:9268:6: lv_right_3_0= norm2_PropOfSubject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_right_3_0=norm2_PropOfSubject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPowerRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.PropOfSubject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop216;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_Power"


    // $ANTLR start "norm3_Power"
    // InternalDialogParser.g:9291:1: norm3_Power returns [EObject current=null] : (this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )* ) ;
    public final EObject norm3_Power() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_PropOfSubject_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9297:2: ( (this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )* ) )
            // InternalDialogParser.g:9298:2: (this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )* )
            {
            // InternalDialogParser.g:9298:2: (this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )* )
            // InternalDialogParser.g:9299:3: this_PropOfSubject_0= norm3_PropOfSubject ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPowerAccess().getPropOfSubjectParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_137);
            this_PropOfSubject_0=norm3_PropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_PropOfSubject_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9307:3: ( () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )*
            loop217:
            do {
                int alt217=2;
                int LA217_0 = input.LA(1);

                if ( (LA217_0==CircumflexAccent) ) {
                    alt217=1;
                }


                switch (alt217) {
            	case 1 :
            	    // InternalDialogParser.g:9308:4: () ( (lv_op_2_0= CircumflexAccent ) ) ( (lv_right_3_0= norm3_PropOfSubject ) )
            	    {
            	    // InternalDialogParser.g:9308:4: ()
            	    // InternalDialogParser.g:9309:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getPowerAccess().getBinaryOperationLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalDialogParser.g:9315:4: ( (lv_op_2_0= CircumflexAccent ) )
            	    // InternalDialogParser.g:9316:5: (lv_op_2_0= CircumflexAccent )
            	    {
            	    // InternalDialogParser.g:9316:5: (lv_op_2_0= CircumflexAccent )
            	    // InternalDialogParser.g:9317:6: lv_op_2_0= CircumflexAccent
            	    {
            	    lv_op_2_0=(Token)match(input,CircumflexAccent,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getPowerAccess().getOpCircumflexAccentKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getPowerRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      					
            	    }

            	    }


            	    }

            	    // InternalDialogParser.g:9329:4: ( (lv_right_3_0= norm3_PropOfSubject ) )
            	    // InternalDialogParser.g:9330:5: (lv_right_3_0= norm3_PropOfSubject )
            	    {
            	    // InternalDialogParser.g:9330:5: (lv_right_3_0= norm3_PropOfSubject )
            	    // InternalDialogParser.g:9331:6: lv_right_3_0= norm3_PropOfSubject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getPowerAccess().getRightPropOfSubjectParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_137);
            	    lv_right_3_0=norm3_PropOfSubject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getPowerRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"com.ge.research.sadl.SADL.PropOfSubject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop217;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_Power"


    // $ANTLR start "entryRulePropOfSubject"
    // InternalDialogParser.g:9353:1: entryRulePropOfSubject returns [EObject current=null] : iv_rulePropOfSubject= rulePropOfSubject EOF ;
    public final EObject entryRulePropOfSubject() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropOfSubject = null;


        try {
            // InternalDialogParser.g:9353:54: (iv_rulePropOfSubject= rulePropOfSubject EOF )
            // InternalDialogParser.g:9354:2: iv_rulePropOfSubject= rulePropOfSubject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropOfSubjectRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropOfSubject=rulePropOfSubject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropOfSubject; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropOfSubject"


    // $ANTLR start "rulePropOfSubject"
    // InternalDialogParser.g:9360:1: rulePropOfSubject returns [EObject current=null] : (this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )? ) ;
    public final EObject rulePropOfSubject() throws RecognitionException {
        EObject current = null;

        Token lv_of_2_1=null;
        Token lv_of_2_2=null;
        Token lv_of_2_3=null;
        Token otherlv_5=null;
        EObject this_ElementInList_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_prop_6_0 = null;

        EObject lv_right_7_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9366:2: ( (this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )? ) )
            // InternalDialogParser.g:9367:2: (this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )? )
            {
            // InternalDialogParser.g:9367:2: (this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )? )
            // InternalDialogParser.g:9368:3: this_ElementInList_0= ruleElementInList ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_138);
            this_ElementInList_0=ruleElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementInList_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9376:3: ( ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ ) )?
            int alt223=2;
            int LA223_0 = input.LA(1);

            if ( (LA223_0==Of) && (synpred19_InternalDialogParser())) {
                alt223=1;
            }
            else if ( (LA223_0==For) && (synpred19_InternalDialogParser())) {
                alt223=1;
            }
            else if ( (LA223_0==In) && (synpred19_InternalDialogParser())) {
                alt223=1;
            }
            else if ( (LA223_0==Has) && (synpred19_InternalDialogParser())) {
                alt223=1;
            }
            else if ( (LA223_0==RULE_QNAME_TERMINAL) && (synpred19_InternalDialogParser())) {
                alt223=1;
            }
            else if ( (LA223_0==RULE_ID) && (synpred19_InternalDialogParser())) {
                alt223=1;
            }
            switch (alt223) {
                case 1 :
                    // InternalDialogParser.g:9377:4: ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ )
                    {
                    // InternalDialogParser.g:9378:4: ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) ) | ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+ )
                    int alt222=2;
                    int LA222_0 = input.LA(1);

                    if ( (LA222_0==For||LA222_0==In||LA222_0==Of) ) {
                        alt222=1;
                    }
                    else if ( (LA222_0==Has||(LA222_0>=RULE_ID && LA222_0<=RULE_QNAME_TERMINAL)) ) {
                        alt222=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 222, 0, input);

                        throw nvae;
                    }
                    switch (alt222) {
                        case 1 :
                            // InternalDialogParser.g:9379:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )
                            {
                            // InternalDialogParser.g:9379:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) ) )
                            // InternalDialogParser.g:9380:6: () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= rulePropOfSubject ) )
                            {
                            // InternalDialogParser.g:9380:6: ()
                            // InternalDialogParser.g:9381:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:9387:6: ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) )
                            // InternalDialogParser.g:9388:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            {
                            // InternalDialogParser.g:9388:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            // InternalDialogParser.g:9389:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            {
                            // InternalDialogParser.g:9389:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            int alt218=3;
                            switch ( input.LA(1) ) {
                            case Of:
                                {
                                alt218=1;
                                }
                                break;
                            case For:
                                {
                                alt218=2;
                                }
                                break;
                            case In:
                                {
                                alt218=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 218, 0, input);

                                throw nvae;
                            }

                            switch (alt218) {
                                case 1 :
                                    // InternalDialogParser.g:9390:9: lv_of_2_1= Of
                                    {
                                    lv_of_2_1=(Token)match(input,Of,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_1, null);
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:9401:9: lv_of_2_2= For
                                    {
                                    lv_of_2_2=(Token)match(input,For,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_2, null);
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalDialogParser.g:9412:9: lv_of_2_3= In
                                    {
                                    lv_of_2_3=(Token)match(input,In,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_3, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalDialogParser.g:9425:6: ( (lv_right_3_0= rulePropOfSubject ) )
                            // InternalDialogParser.g:9426:7: (lv_right_3_0= rulePropOfSubject )
                            {
                            // InternalDialogParser.g:9426:7: (lv_right_3_0= rulePropOfSubject )
                            // InternalDialogParser.g:9427:8: lv_right_3_0= rulePropOfSubject
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_3_0=rulePropOfSubject();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_3_0,
                              									"com.ge.research.sadl.SADL.PropOfSubject");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:9446:5: ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+
                            {
                            // InternalDialogParser.g:9446:5: ( ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? ) )+
                            int cnt221=0;
                            loop221:
                            do {
                                int alt221=2;
                                int LA221_0 = input.LA(1);

                                if ( (LA221_0==Has) && (synpred20_InternalDialogParser())) {
                                    alt221=1;
                                }
                                else if ( (LA221_0==RULE_QNAME_TERMINAL) && (synpred20_InternalDialogParser())) {
                                    alt221=1;
                                }
                                else if ( (LA221_0==RULE_ID) && (synpred20_InternalDialogParser())) {
                                    alt221=1;
                                }


                                switch (alt221) {
                            	case 1 :
                            	    // InternalDialogParser.g:9447:6: ( Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? )
                            	    {
                            	    // InternalDialogParser.g:9448:6: ( () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )? )
                            	    // InternalDialogParser.g:9449:7: () (otherlv_5= Has )? ( (lv_prop_6_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )?
                            	    {
                            	    // InternalDialogParser.g:9449:7: ()
                            	    // InternalDialogParser.g:9450:8: 
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								current = forceCreateModelElementAndSet(
                            	      									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
                            	      									current);
                            	      							
                            	    }

                            	    }

                            	    // InternalDialogParser.g:9456:7: (otherlv_5= Has )?
                            	    int alt219=2;
                            	    int LA219_0 = input.LA(1);

                            	    if ( (LA219_0==Has) ) {
                            	        alt219=1;
                            	    }
                            	    switch (alt219) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9457:8: otherlv_5= Has
                            	            {
                            	            otherlv_5=(Token)match(input,Has,FOLLOW_8); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_5, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:9462:7: ( (lv_prop_6_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:9463:8: (lv_prop_6_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:9463:8: (lv_prop_6_0= ruleSadlResource )
                            	    // InternalDialogParser.g:9464:9: lv_prop_6_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_139);
                            	    lv_prop_6_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	      									}
                            	      									set(
                            	      										current,
                            	      										"prop",
                            	      										lv_prop_6_0,
                            	      										"com.ge.research.sadl.SADL.SadlResource");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }

                            	    // InternalDialogParser.g:9481:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )?
                            	    int alt220=2;
                            	    alt220 = dfa220.predict(input);
                            	    switch (alt220) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9482:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList )
                            	            {
                            	            // InternalDialogParser.g:9483:8: (lv_right_7_0= ruleElementInList )
                            	            // InternalDialogParser.g:9484:9: lv_right_7_0= ruleElementInList
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
                            	              								
                            	            }
                            	            pushFollow(FOLLOW_140);
                            	            lv_right_7_0=ruleElementInList();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									set(
                            	              										current,
                            	              										"right",
                            	              										lv_right_7_0,
                            	              										"com.ge.research.sadl.SADL.ElementInList");
                            	              									afterParserOrEnumRuleCall();
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt221 >= 1 ) break loop221;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(221, input);
                                        throw eee;
                                }
                                cnt221++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropOfSubject"


    // $ANTLR start "norm1_PropOfSubject"
    // InternalDialogParser.g:9510:1: norm1_PropOfSubject returns [EObject current=null] : (this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )? ) ;
    public final EObject norm1_PropOfSubject() throws RecognitionException {
        EObject current = null;

        Token lv_of_2_1=null;
        Token lv_of_2_2=null;
        Token lv_of_2_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject this_ElementInList_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_prop_7_0 = null;

        EObject lv_right_8_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9516:2: ( (this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )? ) )
            // InternalDialogParser.g:9517:2: (this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )? )
            {
            // InternalDialogParser.g:9517:2: (this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )? )
            // InternalDialogParser.g:9518:3: this_ElementInList_0= norm1_ElementInList ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_141);
            this_ElementInList_0=norm1_ElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementInList_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9526:3: ( ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ ) )?
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==Of) && (synpred22_InternalDialogParser())) {
                alt229=1;
            }
            else if ( (LA229_0==For) && (synpred22_InternalDialogParser())) {
                alt229=1;
            }
            else if ( (LA229_0==In) && (synpred22_InternalDialogParser())) {
                alt229=1;
            }
            else if ( (LA229_0==With) && (synpred22_InternalDialogParser())) {
                alt229=1;
            }
            else if ( (LA229_0==Has) && (synpred22_InternalDialogParser())) {
                alt229=1;
            }
            else if ( (LA229_0==RULE_QNAME_TERMINAL) && (synpred22_InternalDialogParser())) {
                alt229=1;
            }
            else if ( (LA229_0==RULE_ID) && (synpred22_InternalDialogParser())) {
                alt229=1;
            }
            switch (alt229) {
                case 1 :
                    // InternalDialogParser.g:9527:4: ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ )
                    {
                    // InternalDialogParser.g:9528:4: ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) ) | ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+ )
                    int alt228=2;
                    int LA228_0 = input.LA(1);

                    if ( (LA228_0==For||LA228_0==In||LA228_0==Of) ) {
                        alt228=1;
                    }
                    else if ( (LA228_0==With||LA228_0==Has||(LA228_0>=RULE_ID && LA228_0<=RULE_QNAME_TERMINAL)) ) {
                        alt228=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 228, 0, input);

                        throw nvae;
                    }
                    switch (alt228) {
                        case 1 :
                            // InternalDialogParser.g:9529:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )
                            {
                            // InternalDialogParser.g:9529:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) ) )
                            // InternalDialogParser.g:9530:6: () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm1_PropOfSubject ) )
                            {
                            // InternalDialogParser.g:9530:6: ()
                            // InternalDialogParser.g:9531:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:9537:6: ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) )
                            // InternalDialogParser.g:9538:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            {
                            // InternalDialogParser.g:9538:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            // InternalDialogParser.g:9539:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            {
                            // InternalDialogParser.g:9539:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            int alt224=3;
                            switch ( input.LA(1) ) {
                            case Of:
                                {
                                alt224=1;
                                }
                                break;
                            case For:
                                {
                                alt224=2;
                                }
                                break;
                            case In:
                                {
                                alt224=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 224, 0, input);

                                throw nvae;
                            }

                            switch (alt224) {
                                case 1 :
                                    // InternalDialogParser.g:9540:9: lv_of_2_1= Of
                                    {
                                    lv_of_2_1=(Token)match(input,Of,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_1, null);
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:9551:9: lv_of_2_2= For
                                    {
                                    lv_of_2_2=(Token)match(input,For,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_2, null);
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalDialogParser.g:9562:9: lv_of_2_3= In
                                    {
                                    lv_of_2_3=(Token)match(input,In,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_3, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalDialogParser.g:9575:6: ( (lv_right_3_0= norm1_PropOfSubject ) )
                            // InternalDialogParser.g:9576:7: (lv_right_3_0= norm1_PropOfSubject )
                            {
                            // InternalDialogParser.g:9576:7: (lv_right_3_0= norm1_PropOfSubject )
                            // InternalDialogParser.g:9577:8: lv_right_3_0= norm1_PropOfSubject
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_3_0=norm1_PropOfSubject();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_3_0,
                              									"com.ge.research.sadl.SADL.PropOfSubject");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:9596:5: ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+
                            {
                            // InternalDialogParser.g:9596:5: ( ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? ) )+
                            int cnt227=0;
                            loop227:
                            do {
                                int alt227=2;
                                int LA227_0 = input.LA(1);

                                if ( (LA227_0==With) && (synpred23_InternalDialogParser())) {
                                    alt227=1;
                                }
                                else if ( (LA227_0==Has) && (synpred23_InternalDialogParser())) {
                                    alt227=1;
                                }
                                else if ( (LA227_0==RULE_QNAME_TERMINAL) && (synpred23_InternalDialogParser())) {
                                    alt227=1;
                                }
                                else if ( (LA227_0==RULE_ID) && (synpred23_InternalDialogParser())) {
                                    alt227=1;
                                }


                                switch (alt227) {
                            	case 1 :
                            	    // InternalDialogParser.g:9597:6: ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? )
                            	    {
                            	    // InternalDialogParser.g:9598:6: ( () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )? )
                            	    // InternalDialogParser.g:9599:7: () (otherlv_5= With | otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )?
                            	    {
                            	    // InternalDialogParser.g:9599:7: ()
                            	    // InternalDialogParser.g:9600:8: 
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								current = forceCreateModelElementAndSet(
                            	      									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
                            	      									current);
                            	      							
                            	    }

                            	    }

                            	    // InternalDialogParser.g:9606:7: (otherlv_5= With | otherlv_6= Has )?
                            	    int alt225=3;
                            	    int LA225_0 = input.LA(1);

                            	    if ( (LA225_0==With) ) {
                            	        alt225=1;
                            	    }
                            	    else if ( (LA225_0==Has) ) {
                            	        alt225=2;
                            	    }
                            	    switch (alt225) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9607:8: otherlv_5= With
                            	            {
                            	            otherlv_5=(Token)match(input,With,FOLLOW_8); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_5, grammarAccess.getPropOfSubjectAccess().getWithKeyword_1_0_1_0_2_0_0());
                            	              							
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // InternalDialogParser.g:9612:8: otherlv_6= Has
                            	            {
                            	            otherlv_6=(Token)match(input,Has,FOLLOW_8); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_6, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:9617:7: ( (lv_prop_7_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:9618:8: (lv_prop_7_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:9618:8: (lv_prop_7_0= ruleSadlResource )
                            	    // InternalDialogParser.g:9619:9: lv_prop_7_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_142);
                            	    lv_prop_7_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	      									}
                            	      									set(
                            	      										current,
                            	      										"prop",
                            	      										lv_prop_7_0,
                            	      										"com.ge.research.sadl.SADL.SadlResource");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }

                            	    // InternalDialogParser.g:9636:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )?
                            	    int alt226=2;
                            	    alt226 = dfa226.predict(input);
                            	    switch (alt226) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9637:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList )
                            	            {
                            	            // InternalDialogParser.g:9638:8: (lv_right_8_0= norm1_ElementInList )
                            	            // InternalDialogParser.g:9639:9: lv_right_8_0= norm1_ElementInList
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
                            	              								
                            	            }
                            	            pushFollow(FOLLOW_143);
                            	            lv_right_8_0=norm1_ElementInList();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									set(
                            	              										current,
                            	              										"right",
                            	              										lv_right_8_0,
                            	              										"com.ge.research.sadl.SADL.ElementInList");
                            	              									afterParserOrEnumRuleCall();
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt227 >= 1 ) break loop227;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(227, input);
                                        throw eee;
                                }
                                cnt227++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_PropOfSubject"


    // $ANTLR start "norm2_PropOfSubject"
    // InternalDialogParser.g:9665:1: norm2_PropOfSubject returns [EObject current=null] : (this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )? ) ;
    public final EObject norm2_PropOfSubject() throws RecognitionException {
        EObject current = null;

        Token lv_of_2_1=null;
        Token lv_of_2_2=null;
        Token lv_of_2_3=null;
        Token lv_comma_5_0=null;
        Token otherlv_6=null;
        EObject this_ElementInList_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_prop_7_0 = null;

        EObject lv_right_8_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9671:2: ( (this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )? ) )
            // InternalDialogParser.g:9672:2: (this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )? )
            {
            // InternalDialogParser.g:9672:2: (this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )? )
            // InternalDialogParser.g:9673:3: this_ElementInList_0= norm2_ElementInList ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_144);
            this_ElementInList_0=norm2_ElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementInList_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9681:3: ( ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ ) )?
            int alt236=2;
            int LA236_0 = input.LA(1);

            if ( (LA236_0==Of) && (synpred25_InternalDialogParser())) {
                alt236=1;
            }
            else if ( (LA236_0==For) && (synpred25_InternalDialogParser())) {
                alt236=1;
            }
            else if ( (LA236_0==In) && (synpred25_InternalDialogParser())) {
                alt236=1;
            }
            else if ( (LA236_0==Comma) && (synpred25_InternalDialogParser())) {
                alt236=1;
            }
            else if ( (LA236_0==Has) && (synpred25_InternalDialogParser())) {
                alt236=1;
            }
            else if ( (LA236_0==RULE_QNAME_TERMINAL) && (synpred25_InternalDialogParser())) {
                alt236=1;
            }
            else if ( (LA236_0==RULE_ID) && (synpred25_InternalDialogParser())) {
                alt236=1;
            }
            switch (alt236) {
                case 1 :
                    // InternalDialogParser.g:9682:4: ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ )
                    {
                    // InternalDialogParser.g:9683:4: ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) ) | ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+ )
                    int alt235=2;
                    int LA235_0 = input.LA(1);

                    if ( (LA235_0==For||LA235_0==In||LA235_0==Of) ) {
                        alt235=1;
                    }
                    else if ( (LA235_0==Has||LA235_0==Comma||(LA235_0>=RULE_ID && LA235_0<=RULE_QNAME_TERMINAL)) ) {
                        alt235=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 235, 0, input);

                        throw nvae;
                    }
                    switch (alt235) {
                        case 1 :
                            // InternalDialogParser.g:9684:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )
                            {
                            // InternalDialogParser.g:9684:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) ) )
                            // InternalDialogParser.g:9685:6: () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm2_PropOfSubject ) )
                            {
                            // InternalDialogParser.g:9685:6: ()
                            // InternalDialogParser.g:9686:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:9692:6: ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) )
                            // InternalDialogParser.g:9693:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            {
                            // InternalDialogParser.g:9693:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            // InternalDialogParser.g:9694:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            {
                            // InternalDialogParser.g:9694:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            int alt230=3;
                            switch ( input.LA(1) ) {
                            case Of:
                                {
                                alt230=1;
                                }
                                break;
                            case For:
                                {
                                alt230=2;
                                }
                                break;
                            case In:
                                {
                                alt230=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 230, 0, input);

                                throw nvae;
                            }

                            switch (alt230) {
                                case 1 :
                                    // InternalDialogParser.g:9695:9: lv_of_2_1= Of
                                    {
                                    lv_of_2_1=(Token)match(input,Of,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_1, null);
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:9706:9: lv_of_2_2= For
                                    {
                                    lv_of_2_2=(Token)match(input,For,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_2, null);
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalDialogParser.g:9717:9: lv_of_2_3= In
                                    {
                                    lv_of_2_3=(Token)match(input,In,FOLLOW_121); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_3, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalDialogParser.g:9730:6: ( (lv_right_3_0= norm2_PropOfSubject ) )
                            // InternalDialogParser.g:9731:7: (lv_right_3_0= norm2_PropOfSubject )
                            {
                            // InternalDialogParser.g:9731:7: (lv_right_3_0= norm2_PropOfSubject )
                            // InternalDialogParser.g:9732:8: lv_right_3_0= norm2_PropOfSubject
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_3_0=norm2_PropOfSubject();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_3_0,
                              									"com.ge.research.sadl.SADL.PropOfSubject");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:9751:5: ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+
                            {
                            // InternalDialogParser.g:9751:5: ( ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? ) )+
                            int cnt234=0;
                            loop234:
                            do {
                                int alt234=2;
                                int LA234_0 = input.LA(1);

                                if ( (LA234_0==Comma) && (synpred26_InternalDialogParser())) {
                                    alt234=1;
                                }
                                else if ( (LA234_0==Has) && (synpred26_InternalDialogParser())) {
                                    alt234=1;
                                }
                                else if ( (LA234_0==RULE_QNAME_TERMINAL) && (synpred26_InternalDialogParser())) {
                                    alt234=1;
                                }
                                else if ( (LA234_0==RULE_ID) && (synpred26_InternalDialogParser())) {
                                    alt234=1;
                                }


                                switch (alt234) {
                            	case 1 :
                            	    // InternalDialogParser.g:9752:6: ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? )
                            	    {
                            	    // InternalDialogParser.g:9753:6: ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )? )
                            	    // InternalDialogParser.g:9754:7: () ( (lv_comma_5_0= Comma ) )? (otherlv_6= Has )? ( (lv_prop_7_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )?
                            	    {
                            	    // InternalDialogParser.g:9754:7: ()
                            	    // InternalDialogParser.g:9755:8: 
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								current = forceCreateModelElementAndSet(
                            	      									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
                            	      									current);
                            	      							
                            	    }

                            	    }

                            	    // InternalDialogParser.g:9761:7: ( (lv_comma_5_0= Comma ) )?
                            	    int alt231=2;
                            	    int LA231_0 = input.LA(1);

                            	    if ( (LA231_0==Comma) ) {
                            	        alt231=1;
                            	    }
                            	    switch (alt231) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9762:8: (lv_comma_5_0= Comma )
                            	            {
                            	            // InternalDialogParser.g:9762:8: (lv_comma_5_0= Comma )
                            	            // InternalDialogParser.g:9763:9: lv_comma_5_0= Comma
                            	            {
                            	            lv_comma_5_0=(Token)match(input,Comma,FOLLOW_145); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_comma_5_0, grammarAccess.getPropOfSubjectAccess().getCommaCommaKeyword_1_0_1_0_1_0_0());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									setWithLastConsumed(current, "comma", true, ",");
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:9775:7: (otherlv_6= Has )?
                            	    int alt232=2;
                            	    int LA232_0 = input.LA(1);

                            	    if ( (LA232_0==Has) ) {
                            	        alt232=1;
                            	    }
                            	    switch (alt232) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9776:8: otherlv_6= Has
                            	            {
                            	            otherlv_6=(Token)match(input,Has,FOLLOW_8); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_6, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:9781:7: ( (lv_prop_7_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:9782:8: (lv_prop_7_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:9782:8: (lv_prop_7_0= ruleSadlResource )
                            	    // InternalDialogParser.g:9783:9: lv_prop_7_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_146);
                            	    lv_prop_7_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	      									}
                            	      									set(
                            	      										current,
                            	      										"prop",
                            	      										lv_prop_7_0,
                            	      										"com.ge.research.sadl.SADL.SadlResource");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }

                            	    // InternalDialogParser.g:9800:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )?
                            	    int alt233=2;
                            	    alt233 = dfa233.predict(input);
                            	    switch (alt233) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9801:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList )
                            	            {
                            	            // InternalDialogParser.g:9802:8: (lv_right_8_0= norm2_ElementInList )
                            	            // InternalDialogParser.g:9803:9: lv_right_8_0= norm2_ElementInList
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
                            	              								
                            	            }
                            	            pushFollow(FOLLOW_147);
                            	            lv_right_8_0=norm2_ElementInList();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									set(
                            	              										current,
                            	              										"right",
                            	              										lv_right_8_0,
                            	              										"com.ge.research.sadl.SADL.ElementInList");
                            	              									afterParserOrEnumRuleCall();
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt234 >= 1 ) break loop234;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(234, input);
                                        throw eee;
                                }
                                cnt234++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_PropOfSubject"


    // $ANTLR start "norm3_PropOfSubject"
    // InternalDialogParser.g:9829:1: norm3_PropOfSubject returns [EObject current=null] : (this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )? ) ;
    public final EObject norm3_PropOfSubject() throws RecognitionException {
        EObject current = null;

        Token lv_of_2_1=null;
        Token lv_of_2_2=null;
        Token lv_of_2_3=null;
        Token lv_comma_5_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject this_ElementInList_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_prop_8_0 = null;

        EObject lv_right_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:9835:2: ( (this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )? ) )
            // InternalDialogParser.g:9836:2: (this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )? )
            {
            // InternalDialogParser.g:9836:2: (this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )? )
            // InternalDialogParser.g:9837:3: this_ElementInList_0= norm3_ElementInList ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPropOfSubjectAccess().getElementInListParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_148);
            this_ElementInList_0=norm3_ElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ElementInList_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:9845:3: ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )?
            int alt243=2;
            alt243 = dfa243.predict(input);
            switch (alt243) {
                case 1 :
                    // InternalDialogParser.g:9846:4: ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ )
                    {
                    // InternalDialogParser.g:9847:4: ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ )
                    int alt242=2;
                    int LA242_0 = input.LA(1);

                    if ( (LA242_0==For||LA242_0==In||LA242_0==Of) ) {
                        alt242=1;
                    }
                    else if ( (LA242_0==With||LA242_0==Has||LA242_0==Comma||(LA242_0>=RULE_ID && LA242_0<=RULE_QNAME_TERMINAL)) ) {
                        alt242=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 242, 0, input);

                        throw nvae;
                    }
                    switch (alt242) {
                        case 1 :
                            // InternalDialogParser.g:9848:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )
                            {
                            // InternalDialogParser.g:9848:5: ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) )
                            // InternalDialogParser.g:9849:6: () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) )
                            {
                            // InternalDialogParser.g:9849:6: ()
                            // InternalDialogParser.g:9850:7: 
                            {
                            if ( state.backtracking==0 ) {

                              							current = forceCreateModelElementAndSet(
                              								grammarAccess.getPropOfSubjectAccess().getPropOfSubjectLeftAction_1_0_0_0(),
                              								current);
                              						
                            }

                            }

                            // InternalDialogParser.g:9856:6: ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) )
                            // InternalDialogParser.g:9857:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            {
                            // InternalDialogParser.g:9857:7: ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) )
                            // InternalDialogParser.g:9858:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            {
                            // InternalDialogParser.g:9858:8: (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In )
                            int alt237=3;
                            switch ( input.LA(1) ) {
                            case Of:
                                {
                                alt237=1;
                                }
                                break;
                            case For:
                                {
                                alt237=2;
                                }
                                break;
                            case In:
                                {
                                alt237=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 237, 0, input);

                                throw nvae;
                            }

                            switch (alt237) {
                                case 1 :
                                    // InternalDialogParser.g:9859:9: lv_of_2_1= Of
                                    {
                                    lv_of_2_1=(Token)match(input,Of,FOLLOW_5); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_1, grammarAccess.getPropOfSubjectAccess().getOfOfKeyword_1_0_0_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_1, null);
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalDialogParser.g:9870:9: lv_of_2_2= For
                                    {
                                    lv_of_2_2=(Token)match(input,For,FOLLOW_5); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_2, grammarAccess.getPropOfSubjectAccess().getOfForKeyword_1_0_0_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_2, null);
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalDialogParser.g:9881:9: lv_of_2_3= In
                                    {
                                    lv_of_2_3=(Token)match(input,In,FOLLOW_5); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_of_2_3, grammarAccess.getPropOfSubjectAccess().getOfInKeyword_1_0_0_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                                      									}
                                      									setWithLastConsumed(current, "of", lv_of_2_3, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalDialogParser.g:9894:6: ( (lv_right_3_0= norm3_PropOfSubject ) )
                            // InternalDialogParser.g:9895:7: (lv_right_3_0= norm3_PropOfSubject )
                            {
                            // InternalDialogParser.g:9895:7: (lv_right_3_0= norm3_PropOfSubject )
                            // InternalDialogParser.g:9896:8: lv_right_3_0= norm3_PropOfSubject
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightPropOfSubjectParserRuleCall_1_0_0_2_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_3_0=norm3_PropOfSubject();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_3_0,
                              									"com.ge.research.sadl.SADL.PropOfSubject");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:9915:5: ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+
                            {
                            // InternalDialogParser.g:9915:5: ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+
                            int cnt241=0;
                            loop241:
                            do {
                                int alt241=2;
                                int LA241_0 = input.LA(1);

                                if ( (LA241_0==Comma) && (synpred29_InternalDialogParser())) {
                                    alt241=1;
                                }
                                else if ( (LA241_0==With) && (synpred29_InternalDialogParser())) {
                                    alt241=1;
                                }
                                else if ( (LA241_0==Has) && (synpred29_InternalDialogParser())) {
                                    alt241=1;
                                }
                                else if ( (LA241_0==RULE_QNAME_TERMINAL) && (synpred29_InternalDialogParser())) {
                                    alt241=1;
                                }
                                else if ( (LA241_0==RULE_ID) && (synpred29_InternalDialogParser())) {
                                    alt241=1;
                                }


                                switch (alt241) {
                            	case 1 :
                            	    // InternalDialogParser.g:9916:6: ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? )
                            	    {
                            	    // InternalDialogParser.g:9917:6: ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? )
                            	    // InternalDialogParser.g:9918:7: () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )?
                            	    {
                            	    // InternalDialogParser.g:9918:7: ()
                            	    // InternalDialogParser.g:9919:8: 
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								current = forceCreateModelElementAndSet(
                            	      									grammarAccess.getPropOfSubjectAccess().getSubjHasPropLeftAction_1_0_1_0_0(),
                            	      									current);
                            	      							
                            	    }

                            	    }

                            	    // InternalDialogParser.g:9925:7: ( (lv_comma_5_0= Comma ) )?
                            	    int alt238=2;
                            	    int LA238_0 = input.LA(1);

                            	    if ( (LA238_0==Comma) ) {
                            	        alt238=1;
                            	    }
                            	    switch (alt238) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9926:8: (lv_comma_5_0= Comma )
                            	            {
                            	            // InternalDialogParser.g:9926:8: (lv_comma_5_0= Comma )
                            	            // InternalDialogParser.g:9927:9: lv_comma_5_0= Comma
                            	            {
                            	            lv_comma_5_0=(Token)match(input,Comma,FOLLOW_71); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_comma_5_0, grammarAccess.getPropOfSubjectAccess().getCommaCommaKeyword_1_0_1_0_1_0_0());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									setWithLastConsumed(current, "comma", true, ",");
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:9939:7: (otherlv_6= With | otherlv_7= Has )?
                            	    int alt239=3;
                            	    int LA239_0 = input.LA(1);

                            	    if ( (LA239_0==With) ) {
                            	        alt239=1;
                            	    }
                            	    else if ( (LA239_0==Has) ) {
                            	        alt239=2;
                            	    }
                            	    switch (alt239) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9940:8: otherlv_6= With
                            	            {
                            	            otherlv_6=(Token)match(input,With,FOLLOW_8); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_6, grammarAccess.getPropOfSubjectAccess().getWithKeyword_1_0_1_0_2_0_0());
                            	              							
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // InternalDialogParser.g:9945:8: otherlv_7= Has
                            	            {
                            	            otherlv_7=(Token)match(input,Has,FOLLOW_8); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              								newLeafNode(otherlv_7, grammarAccess.getPropOfSubjectAccess().getHasKeyword_1_0_1_0_2_1());
                            	              							
                            	            }

                            	            }
                            	            break;

                            	    }

                            	    // InternalDialogParser.g:9950:7: ( (lv_prop_8_0= ruleSadlResource ) )
                            	    // InternalDialogParser.g:9951:8: (lv_prop_8_0= ruleSadlResource )
                            	    {
                            	    // InternalDialogParser.g:9951:8: (lv_prop_8_0= ruleSadlResource )
                            	    // InternalDialogParser.g:9952:9: lv_prop_8_0= ruleSadlResource
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getPropSadlResourceParserRuleCall_1_0_1_0_3_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_149);
                            	    lv_prop_8_0=ruleSadlResource();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	      									}
                            	      									set(
                            	      										current,
                            	      										"prop",
                            	      										lv_prop_8_0,
                            	      										"com.ge.research.sadl.SADL.SadlResource");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }

                            	    // InternalDialogParser.g:9969:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )?
                            	    int alt240=2;
                            	    alt240 = dfa240.predict(input);
                            	    switch (alt240) {
                            	        case 1 :
                            	            // InternalDialogParser.g:9970:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList )
                            	            {
                            	            // InternalDialogParser.g:9971:8: (lv_right_9_0= norm3_ElementInList )
                            	            // InternalDialogParser.g:9972:9: lv_right_9_0= norm3_ElementInList
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              									newCompositeNode(grammarAccess.getPropOfSubjectAccess().getRightElementInListParserRuleCall_1_0_1_0_4_0());
                            	              								
                            	            }
                            	            pushFollow(FOLLOW_150);
                            	            lv_right_9_0=norm3_ElementInList();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElementForParent(grammarAccess.getPropOfSubjectRule());
                            	              									}
                            	              									set(
                            	              										current,
                            	              										"right",
                            	              										lv_right_9_0,
                            	              										"com.ge.research.sadl.SADL.ElementInList");
                            	              									afterParserOrEnumRuleCall();
                            	              								
                            	            }

                            	            }


                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt241 >= 1 ) break loop241;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(241, input);
                                        throw eee;
                                }
                                cnt241++;
                            } while (true);


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_PropOfSubject"


    // $ANTLR start "entryRuleElementInList"
    // InternalDialogParser.g:9997:1: entryRuleElementInList returns [EObject current=null] : iv_ruleElementInList= ruleElementInList EOF ;
    public final EObject entryRuleElementInList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElementInList = null;


        try {
            // InternalDialogParser.g:9997:54: (iv_ruleElementInList= ruleElementInList EOF )
            // InternalDialogParser.g:9998:2: iv_ruleElementInList= ruleElementInList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementInListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementInList=ruleElementInList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementInList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElementInList"


    // $ANTLR start "ruleElementInList"
    // InternalDialogParser.g:10004:1: ruleElementInList returns [EObject current=null] : (this_UnitExpression_0= ruleUnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) ) ) ;
    public final EObject ruleElementInList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_before_3_0=null;
        Token lv_after_4_0=null;
        EObject this_UnitExpression_0 = null;

        EObject lv_element_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10010:2: ( (this_UnitExpression_0= ruleUnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) ) ) )
            // InternalDialogParser.g:10011:2: (this_UnitExpression_0= ruleUnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) ) )
            {
            // InternalDialogParser.g:10011:2: (this_UnitExpression_0= ruleUnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) ) )
            int alt245=2;
            int LA245_0 = input.LA(1);

            if ( (LA245_0==Another||LA245_0==Length||(LA245_0>=Count && LA245_0<=False)||LA245_0==First||(LA245_0>=Index && LA245_0<=Known)||LA245_0==There||LA245_0==Value||LA245_0==None||LA245_0==Last||LA245_0==Only||LA245_0==Some||(LA245_0>=True && LA245_0<=Type)||LA245_0==The||LA245_0==Any||LA245_0==Not||LA245_0==The_1||LA245_0==HyphenMinusHyphenMinus||(LA245_0>=An && LA245_0<=An_1)||LA245_0==ExclamationMark||LA245_0==LeftParenthesis||LA245_0==HyphenMinus||LA245_0==A||LA245_0==LeftSquareBracket||(LA245_0>=A_1 && LA245_0<=LeftCurlyBracket)||LA245_0==RULE_NUMBER||(LA245_0>=RULE_ID && LA245_0<=RULE_STRING)) ) {
                alt245=1;
            }
            else if ( (LA245_0==Element) ) {
                alt245=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 245, 0, input);

                throw nvae;
            }
            switch (alt245) {
                case 1 :
                    // InternalDialogParser.g:10012:3: this_UnitExpression_0= ruleUnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnitExpression_0=ruleUnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnitExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10021:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) )
                    {
                    // InternalDialogParser.g:10021:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) ) )
                    // InternalDialogParser.g:10022:4: () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= ruleUnitExpression ) )
                    {
                    // InternalDialogParser.g:10022:4: ()
                    // InternalDialogParser.g:10023:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,Element,FOLLOW_151); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:10033:4: ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )?
                    int alt244=3;
                    int LA244_0 = input.LA(1);

                    if ( (LA244_0==Before) ) {
                        alt244=1;
                    }
                    else if ( (LA244_0==After) ) {
                        alt244=2;
                    }
                    switch (alt244) {
                        case 1 :
                            // InternalDialogParser.g:10034:5: ( (lv_before_3_0= Before ) )
                            {
                            // InternalDialogParser.g:10034:5: ( (lv_before_3_0= Before ) )
                            // InternalDialogParser.g:10035:6: (lv_before_3_0= Before )
                            {
                            // InternalDialogParser.g:10035:6: (lv_before_3_0= Before )
                            // InternalDialogParser.g:10036:7: lv_before_3_0= Before
                            {
                            lv_before_3_0=(Token)match(input,Before,FOLLOW_152); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "before", true, "before");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10049:5: ( (lv_after_4_0= After ) )
                            {
                            // InternalDialogParser.g:10049:5: ( (lv_after_4_0= After ) )
                            // InternalDialogParser.g:10050:6: (lv_after_4_0= After )
                            {
                            // InternalDialogParser.g:10050:6: (lv_after_4_0= After )
                            // InternalDialogParser.g:10051:7: lv_after_4_0= After
                            {
                            lv_after_4_0=(Token)match(input,After,FOLLOW_152); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "after", true, "after");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:10064:4: ( (lv_element_5_0= ruleUnitExpression ) )
                    // InternalDialogParser.g:10065:5: (lv_element_5_0= ruleUnitExpression )
                    {
                    // InternalDialogParser.g:10065:5: (lv_element_5_0= ruleUnitExpression )
                    // InternalDialogParser.g:10066:6: lv_element_5_0= ruleUnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_element_5_0=ruleUnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElementInListRule());
                      						}
                      						set(
                      							current,
                      							"element",
                      							lv_element_5_0,
                      							"com.ge.research.sadl.SADL.UnitExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElementInList"


    // $ANTLR start "norm1_ElementInList"
    // InternalDialogParser.g:10089:1: norm1_ElementInList returns [EObject current=null] : (this_UnitExpression_0= norm1_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) ) ) ;
    public final EObject norm1_ElementInList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_before_3_0=null;
        Token lv_after_4_0=null;
        EObject this_UnitExpression_0 = null;

        EObject lv_element_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10095:2: ( (this_UnitExpression_0= norm1_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) ) ) )
            // InternalDialogParser.g:10096:2: (this_UnitExpression_0= norm1_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) ) )
            {
            // InternalDialogParser.g:10096:2: (this_UnitExpression_0= norm1_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) ) )
            int alt247=2;
            int LA247_0 = input.LA(1);

            if ( (LA247_0==Another||LA247_0==Length||(LA247_0>=Count && LA247_0<=False)||LA247_0==First||(LA247_0>=Index && LA247_0<=Known)||LA247_0==There||LA247_0==Value||LA247_0==None||LA247_0==Last||LA247_0==Only||LA247_0==Some||(LA247_0>=True && LA247_0<=Type)||LA247_0==The||LA247_0==Any||LA247_0==Not||LA247_0==The_1||LA247_0==HyphenMinusHyphenMinus||(LA247_0>=An && LA247_0<=An_1)||LA247_0==ExclamationMark||LA247_0==LeftParenthesis||LA247_0==HyphenMinus||LA247_0==A||LA247_0==LeftSquareBracket||(LA247_0>=A_1 && LA247_0<=LeftCurlyBracket)||LA247_0==RULE_NUMBER||(LA247_0>=RULE_ID && LA247_0<=RULE_STRING)) ) {
                alt247=1;
            }
            else if ( (LA247_0==Element) ) {
                alt247=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 247, 0, input);

                throw nvae;
            }
            switch (alt247) {
                case 1 :
                    // InternalDialogParser.g:10097:3: this_UnitExpression_0= norm1_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnitExpression_0=norm1_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnitExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10106:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) )
                    {
                    // InternalDialogParser.g:10106:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) ) )
                    // InternalDialogParser.g:10107:4: () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm1_UnitExpression ) )
                    {
                    // InternalDialogParser.g:10107:4: ()
                    // InternalDialogParser.g:10108:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,Element,FOLLOW_151); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:10118:4: ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )?
                    int alt246=3;
                    int LA246_0 = input.LA(1);

                    if ( (LA246_0==Before) ) {
                        alt246=1;
                    }
                    else if ( (LA246_0==After) ) {
                        alt246=2;
                    }
                    switch (alt246) {
                        case 1 :
                            // InternalDialogParser.g:10119:5: ( (lv_before_3_0= Before ) )
                            {
                            // InternalDialogParser.g:10119:5: ( (lv_before_3_0= Before ) )
                            // InternalDialogParser.g:10120:6: (lv_before_3_0= Before )
                            {
                            // InternalDialogParser.g:10120:6: (lv_before_3_0= Before )
                            // InternalDialogParser.g:10121:7: lv_before_3_0= Before
                            {
                            lv_before_3_0=(Token)match(input,Before,FOLLOW_152); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "before", true, "before");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10134:5: ( (lv_after_4_0= After ) )
                            {
                            // InternalDialogParser.g:10134:5: ( (lv_after_4_0= After ) )
                            // InternalDialogParser.g:10135:6: (lv_after_4_0= After )
                            {
                            // InternalDialogParser.g:10135:6: (lv_after_4_0= After )
                            // InternalDialogParser.g:10136:7: lv_after_4_0= After
                            {
                            lv_after_4_0=(Token)match(input,After,FOLLOW_152); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "after", true, "after");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:10149:4: ( (lv_element_5_0= norm1_UnitExpression ) )
                    // InternalDialogParser.g:10150:5: (lv_element_5_0= norm1_UnitExpression )
                    {
                    // InternalDialogParser.g:10150:5: (lv_element_5_0= norm1_UnitExpression )
                    // InternalDialogParser.g:10151:6: lv_element_5_0= norm1_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_element_5_0=norm1_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElementInListRule());
                      						}
                      						set(
                      							current,
                      							"element",
                      							lv_element_5_0,
                      							"com.ge.research.sadl.SADL.UnitExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_ElementInList"


    // $ANTLR start "norm2_ElementInList"
    // InternalDialogParser.g:10174:1: norm2_ElementInList returns [EObject current=null] : (this_UnitExpression_0= norm2_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) ) ) ;
    public final EObject norm2_ElementInList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_before_3_0=null;
        Token lv_after_4_0=null;
        EObject this_UnitExpression_0 = null;

        EObject lv_element_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10180:2: ( (this_UnitExpression_0= norm2_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) ) ) )
            // InternalDialogParser.g:10181:2: (this_UnitExpression_0= norm2_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) ) )
            {
            // InternalDialogParser.g:10181:2: (this_UnitExpression_0= norm2_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) ) )
            int alt249=2;
            int LA249_0 = input.LA(1);

            if ( (LA249_0==Another||LA249_0==Length||(LA249_0>=Count && LA249_0<=False)||LA249_0==First||(LA249_0>=Index && LA249_0<=Known)||LA249_0==There||LA249_0==Value||LA249_0==None||LA249_0==Last||LA249_0==Only||LA249_0==Some||(LA249_0>=True && LA249_0<=Type)||LA249_0==The||LA249_0==Any||LA249_0==Not||LA249_0==The_1||LA249_0==HyphenMinusHyphenMinus||(LA249_0>=An && LA249_0<=An_1)||LA249_0==ExclamationMark||LA249_0==LeftParenthesis||LA249_0==HyphenMinus||LA249_0==A||LA249_0==LeftSquareBracket||(LA249_0>=A_1 && LA249_0<=LeftCurlyBracket)||LA249_0==RULE_NUMBER||(LA249_0>=RULE_ID && LA249_0<=RULE_STRING)) ) {
                alt249=1;
            }
            else if ( (LA249_0==Element) ) {
                alt249=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 249, 0, input);

                throw nvae;
            }
            switch (alt249) {
                case 1 :
                    // InternalDialogParser.g:10182:3: this_UnitExpression_0= norm2_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnitExpression_0=norm2_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnitExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10191:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) )
                    {
                    // InternalDialogParser.g:10191:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) ) )
                    // InternalDialogParser.g:10192:4: () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm2_UnitExpression ) )
                    {
                    // InternalDialogParser.g:10192:4: ()
                    // InternalDialogParser.g:10193:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,Element,FOLLOW_151); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:10203:4: ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )?
                    int alt248=3;
                    int LA248_0 = input.LA(1);

                    if ( (LA248_0==Before) ) {
                        alt248=1;
                    }
                    else if ( (LA248_0==After) ) {
                        alt248=2;
                    }
                    switch (alt248) {
                        case 1 :
                            // InternalDialogParser.g:10204:5: ( (lv_before_3_0= Before ) )
                            {
                            // InternalDialogParser.g:10204:5: ( (lv_before_3_0= Before ) )
                            // InternalDialogParser.g:10205:6: (lv_before_3_0= Before )
                            {
                            // InternalDialogParser.g:10205:6: (lv_before_3_0= Before )
                            // InternalDialogParser.g:10206:7: lv_before_3_0= Before
                            {
                            lv_before_3_0=(Token)match(input,Before,FOLLOW_152); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "before", true, "before");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10219:5: ( (lv_after_4_0= After ) )
                            {
                            // InternalDialogParser.g:10219:5: ( (lv_after_4_0= After ) )
                            // InternalDialogParser.g:10220:6: (lv_after_4_0= After )
                            {
                            // InternalDialogParser.g:10220:6: (lv_after_4_0= After )
                            // InternalDialogParser.g:10221:7: lv_after_4_0= After
                            {
                            lv_after_4_0=(Token)match(input,After,FOLLOW_152); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "after", true, "after");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:10234:4: ( (lv_element_5_0= norm2_UnitExpression ) )
                    // InternalDialogParser.g:10235:5: (lv_element_5_0= norm2_UnitExpression )
                    {
                    // InternalDialogParser.g:10235:5: (lv_element_5_0= norm2_UnitExpression )
                    // InternalDialogParser.g:10236:6: lv_element_5_0= norm2_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_element_5_0=norm2_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElementInListRule());
                      						}
                      						set(
                      							current,
                      							"element",
                      							lv_element_5_0,
                      							"com.ge.research.sadl.SADL.UnitExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_ElementInList"


    // $ANTLR start "norm3_ElementInList"
    // InternalDialogParser.g:10259:1: norm3_ElementInList returns [EObject current=null] : (this_UnitExpression_0= norm3_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) ) ) ;
    public final EObject norm3_ElementInList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_before_3_0=null;
        Token lv_after_4_0=null;
        EObject this_UnitExpression_0 = null;

        EObject lv_element_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10265:2: ( (this_UnitExpression_0= norm3_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) ) ) )
            // InternalDialogParser.g:10266:2: (this_UnitExpression_0= norm3_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) ) )
            {
            // InternalDialogParser.g:10266:2: (this_UnitExpression_0= norm3_UnitExpression | ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) ) )
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( (LA251_0==Another||LA251_0==Length||(LA251_0>=Count && LA251_0<=False)||LA251_0==First||(LA251_0>=Index && LA251_0<=Known)||LA251_0==There||LA251_0==Value||LA251_0==None||LA251_0==Last||LA251_0==Only||LA251_0==Some||(LA251_0>=True && LA251_0<=Type)||LA251_0==The||LA251_0==Any||LA251_0==Not||LA251_0==The_1||LA251_0==HyphenMinusHyphenMinus||(LA251_0>=An && LA251_0<=An_1)||LA251_0==ExclamationMark||LA251_0==LeftParenthesis||LA251_0==HyphenMinus||LA251_0==A||LA251_0==LeftSquareBracket||(LA251_0>=A_1 && LA251_0<=LeftCurlyBracket)||LA251_0==RULE_NUMBER||(LA251_0>=RULE_ID && LA251_0<=RULE_STRING)) ) {
                alt251=1;
            }
            else if ( (LA251_0==Element) ) {
                alt251=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 251, 0, input);

                throw nvae;
            }
            switch (alt251) {
                case 1 :
                    // InternalDialogParser.g:10267:3: this_UnitExpression_0= norm3_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getElementInListAccess().getUnitExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_UnitExpression_0=norm3_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_UnitExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10276:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) )
                    {
                    // InternalDialogParser.g:10276:3: ( () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) ) )
                    // InternalDialogParser.g:10277:4: () otherlv_2= Element ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )? ( (lv_element_5_0= norm3_UnitExpression ) )
                    {
                    // InternalDialogParser.g:10277:4: ()
                    // InternalDialogParser.g:10278:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getElementInListAccess().getElementInListAction_1_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_2=(Token)match(input,Element,FOLLOW_151); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getElementInListAccess().getElementKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:10288:4: ( ( (lv_before_3_0= Before ) ) | ( (lv_after_4_0= After ) ) )?
                    int alt250=3;
                    int LA250_0 = input.LA(1);

                    if ( (LA250_0==Before) ) {
                        alt250=1;
                    }
                    else if ( (LA250_0==After) ) {
                        alt250=2;
                    }
                    switch (alt250) {
                        case 1 :
                            // InternalDialogParser.g:10289:5: ( (lv_before_3_0= Before ) )
                            {
                            // InternalDialogParser.g:10289:5: ( (lv_before_3_0= Before ) )
                            // InternalDialogParser.g:10290:6: (lv_before_3_0= Before )
                            {
                            // InternalDialogParser.g:10290:6: (lv_before_3_0= Before )
                            // InternalDialogParser.g:10291:7: lv_before_3_0= Before
                            {
                            lv_before_3_0=(Token)match(input,Before,FOLLOW_152); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_before_3_0, grammarAccess.getElementInListAccess().getBeforeBeforeKeyword_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "before", true, "before");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10304:5: ( (lv_after_4_0= After ) )
                            {
                            // InternalDialogParser.g:10304:5: ( (lv_after_4_0= After ) )
                            // InternalDialogParser.g:10305:6: (lv_after_4_0= After )
                            {
                            // InternalDialogParser.g:10305:6: (lv_after_4_0= After )
                            // InternalDialogParser.g:10306:7: lv_after_4_0= After
                            {
                            lv_after_4_0=(Token)match(input,After,FOLLOW_152); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_after_4_0, grammarAccess.getElementInListAccess().getAfterAfterKeyword_1_2_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getElementInListRule());
                              							}
                              							setWithLastConsumed(current, "after", true, "after");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:10319:4: ( (lv_element_5_0= norm3_UnitExpression ) )
                    // InternalDialogParser.g:10320:5: (lv_element_5_0= norm3_UnitExpression )
                    {
                    // InternalDialogParser.g:10320:5: (lv_element_5_0= norm3_UnitExpression )
                    // InternalDialogParser.g:10321:6: lv_element_5_0= norm3_UnitExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getElementInListAccess().getElementUnitExpressionParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_element_5_0=norm3_UnitExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getElementInListRule());
                      						}
                      						set(
                      							current,
                      							"element",
                      							lv_element_5_0,
                      							"com.ge.research.sadl.SADL.UnitExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_ElementInList"


    // $ANTLR start "entryRuleUnitExpression"
    // InternalDialogParser.g:10343:1: entryRuleUnitExpression returns [EObject current=null] : iv_ruleUnitExpression= ruleUnitExpression EOF ;
    public final EObject entryRuleUnitExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnitExpression = null;


        try {
            // InternalDialogParser.g:10343:55: (iv_ruleUnitExpression= ruleUnitExpression EOF )
            // InternalDialogParser.g:10344:2: iv_ruleUnitExpression= ruleUnitExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnitExpression=ruleUnitExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnitExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnitExpression"


    // $ANTLR start "ruleUnitExpression"
    // InternalDialogParser.g:10350:1: ruleUnitExpression returns [EObject current=null] : (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleUnitExpression() throws RecognitionException {
        EObject current = null;

        Token lv_unit_2_0=null;
        EObject this_UnaryExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10356:2: ( (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) )
            // InternalDialogParser.g:10357:2: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            {
            // InternalDialogParser.g:10357:2: (this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            // InternalDialogParser.g:10358:3: this_UnaryExpression_0= ruleUnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_153);
            this_UnaryExpression_0=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:10366:3: ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            int alt252=2;
            int LA252_0 = input.LA(1);

            if ( (LA252_0==RULE_STRING) ) {
                alt252=1;
            }
            switch (alt252) {
                case 1 :
                    // InternalDialogParser.g:10367:4: () ( (lv_unit_2_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:10367:4: ()
                    // InternalDialogParser.g:10368:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10374:4: ( (lv_unit_2_0= RULE_STRING ) )
                    // InternalDialogParser.g:10375:5: (lv_unit_2_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:10375:5: (lv_unit_2_0= RULE_STRING )
                    // InternalDialogParser.g:10376:6: lv_unit_2_0= RULE_STRING
                    {
                    lv_unit_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnitExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitExpression"


    // $ANTLR start "norm1_UnitExpression"
    // InternalDialogParser.g:10398:1: norm1_UnitExpression returns [EObject current=null] : (this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) ;
    public final EObject norm1_UnitExpression() throws RecognitionException {
        EObject current = null;

        Token lv_unit_2_0=null;
        EObject this_UnaryExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10404:2: ( (this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) )
            // InternalDialogParser.g:10405:2: (this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            {
            // InternalDialogParser.g:10405:2: (this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            // InternalDialogParser.g:10406:3: this_UnaryExpression_0= norm1_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_153);
            this_UnaryExpression_0=norm1_UnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:10414:3: ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==RULE_STRING) ) {
                alt253=1;
            }
            switch (alt253) {
                case 1 :
                    // InternalDialogParser.g:10415:4: () ( (lv_unit_2_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:10415:4: ()
                    // InternalDialogParser.g:10416:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10422:4: ( (lv_unit_2_0= RULE_STRING ) )
                    // InternalDialogParser.g:10423:5: (lv_unit_2_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:10423:5: (lv_unit_2_0= RULE_STRING )
                    // InternalDialogParser.g:10424:6: lv_unit_2_0= RULE_STRING
                    {
                    lv_unit_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnitExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_UnitExpression"


    // $ANTLR start "norm2_UnitExpression"
    // InternalDialogParser.g:10446:1: norm2_UnitExpression returns [EObject current=null] : (this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) ;
    public final EObject norm2_UnitExpression() throws RecognitionException {
        EObject current = null;

        Token lv_unit_2_0=null;
        EObject this_UnaryExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10452:2: ( (this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) )
            // InternalDialogParser.g:10453:2: (this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            {
            // InternalDialogParser.g:10453:2: (this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            // InternalDialogParser.g:10454:3: this_UnaryExpression_0= norm2_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_153);
            this_UnaryExpression_0=norm2_UnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:10462:3: ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            int alt254=2;
            int LA254_0 = input.LA(1);

            if ( (LA254_0==RULE_STRING) ) {
                alt254=1;
            }
            switch (alt254) {
                case 1 :
                    // InternalDialogParser.g:10463:4: () ( (lv_unit_2_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:10463:4: ()
                    // InternalDialogParser.g:10464:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10470:4: ( (lv_unit_2_0= RULE_STRING ) )
                    // InternalDialogParser.g:10471:5: (lv_unit_2_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:10471:5: (lv_unit_2_0= RULE_STRING )
                    // InternalDialogParser.g:10472:6: lv_unit_2_0= RULE_STRING
                    {
                    lv_unit_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnitExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_UnitExpression"


    // $ANTLR start "norm3_UnitExpression"
    // InternalDialogParser.g:10494:1: norm3_UnitExpression returns [EObject current=null] : (this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) ;
    public final EObject norm3_UnitExpression() throws RecognitionException {
        EObject current = null;

        Token lv_unit_2_0=null;
        EObject this_UnaryExpression_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10500:2: ( (this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? ) )
            // InternalDialogParser.g:10501:2: (this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            {
            // InternalDialogParser.g:10501:2: (this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )? )
            // InternalDialogParser.g:10502:3: this_UnaryExpression_0= norm3_UnaryExpression ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUnitExpressionAccess().getUnaryExpressionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_153);
            this_UnaryExpression_0=norm3_UnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_UnaryExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:10510:3: ( () ( (lv_unit_2_0= RULE_STRING ) ) )?
            int alt255=2;
            int LA255_0 = input.LA(1);

            if ( (LA255_0==RULE_STRING) ) {
                alt255=1;
            }
            switch (alt255) {
                case 1 :
                    // InternalDialogParser.g:10511:4: () ( (lv_unit_2_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:10511:4: ()
                    // InternalDialogParser.g:10512:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getUnitExpressionAccess().getUnitExpressionLeftAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10518:4: ( (lv_unit_2_0= RULE_STRING ) )
                    // InternalDialogParser.g:10519:5: (lv_unit_2_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:10519:5: (lv_unit_2_0= RULE_STRING )
                    // InternalDialogParser.g:10520:6: lv_unit_2_0= RULE_STRING
                    {
                    lv_unit_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_unit_2_0, grammarAccess.getUnitExpressionAccess().getUnitSTRINGTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getUnitExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_UnitExpression"


    // $ANTLR start "entryRuleUnaryExpression"
    // InternalDialogParser.g:10541:1: entryRuleUnaryExpression returns [EObject current=null] : iv_ruleUnaryExpression= ruleUnaryExpression EOF ;
    public final EObject entryRuleUnaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnaryExpression = null;


        try {
            // InternalDialogParser.g:10541:56: (iv_ruleUnaryExpression= ruleUnaryExpression EOF )
            // InternalDialogParser.g:10542:2: iv_ruleUnaryExpression= ruleUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpression=ruleUnaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryExpression"


    // $ANTLR start "ruleUnaryExpression"
    // InternalDialogParser.g:10548:1: ruleUnaryExpression returns [EObject current=null] : (this_PrimaryExpression_0= rulePrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) ) ) ;
    public final EObject ruleUnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject this_PrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_5 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10554:2: ( (this_PrimaryExpression_0= rulePrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) ) ) )
            // InternalDialogParser.g:10555:2: (this_PrimaryExpression_0= rulePrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) ) )
            {
            // InternalDialogParser.g:10555:2: (this_PrimaryExpression_0= rulePrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) ) )
            int alt257=2;
            int LA257_0 = input.LA(1);

            if ( (LA257_0==Another||LA257_0==Length||(LA257_0>=Count && LA257_0<=False)||LA257_0==First||(LA257_0>=Index && LA257_0<=Known)||LA257_0==Value||LA257_0==None||LA257_0==Last||LA257_0==Some||(LA257_0>=True && LA257_0<=Type)||LA257_0==The||LA257_0==Any||LA257_0==The_1||LA257_0==HyphenMinusHyphenMinus||(LA257_0>=An && LA257_0<=An_1)||LA257_0==LeftParenthesis||LA257_0==A||LA257_0==LeftSquareBracket||(LA257_0>=A_1 && LA257_0<=LeftCurlyBracket)||LA257_0==RULE_NUMBER||(LA257_0>=RULE_ID && LA257_0<=RULE_STRING)) ) {
                alt257=1;
            }
            else if ( (LA257_0==There||LA257_0==Only||LA257_0==Not||LA257_0==ExclamationMark||LA257_0==HyphenMinus) ) {
                alt257=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 257, 0, input);

                throw nvae;
            }
            switch (alt257) {
                case 1 :
                    // InternalDialogParser.g:10556:3: this_PrimaryExpression_0= rulePrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_0=rulePrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10565:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) )
                    {
                    // InternalDialogParser.g:10565:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) ) )
                    // InternalDialogParser.g:10566:4: () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= rulePrimaryExpression ) )
                    {
                    // InternalDialogParser.g:10566:4: ()
                    // InternalDialogParser.g:10567:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10573:4: ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) )
                    // InternalDialogParser.g:10574:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    {
                    // InternalDialogParser.g:10574:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    // InternalDialogParser.g:10575:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    {
                    // InternalDialogParser.g:10575:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    int alt256=5;
                    switch ( input.LA(1) ) {
                    case Not:
                        {
                        alt256=1;
                        }
                        break;
                    case ExclamationMark:
                        {
                        alt256=2;
                        }
                        break;
                    case Only:
                        {
                        alt256=3;
                        }
                        break;
                    case HyphenMinus:
                        {
                        alt256=4;
                        }
                        break;
                    case There:
                        {
                        alt256=5;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 256, 0, input);

                        throw nvae;
                    }

                    switch (alt256) {
                        case 1 :
                            // InternalDialogParser.g:10576:7: lv_op_2_1= Not
                            {
                            lv_op_2_1=(Token)match(input,Not,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10587:7: lv_op_2_2= ExclamationMark
                            {
                            lv_op_2_2=(Token)match(input,ExclamationMark,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:10598:7: lv_op_2_3= Only
                            {
                            lv_op_2_3=(Token)match(input,Only,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalDialogParser.g:10609:7: lv_op_2_4= HyphenMinus
                            {
                            lv_op_2_4=(Token)match(input,HyphenMinus,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalDialogParser.g:10620:7: lv_op_2_5= ruleThereExists
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
                              						
                            }
                            pushFollow(FOLLOW_154);
                            lv_op_2_5=ruleThereExists();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                              							}
                              							set(
                              								current,
                              								"op",
                              								lv_op_2_5,
                              								"com.ge.research.sadl.SADL.ThereExists");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:10638:4: ( (lv_expr_3_0= rulePrimaryExpression ) )
                    // InternalDialogParser.g:10639:5: (lv_expr_3_0= rulePrimaryExpression )
                    {
                    // InternalDialogParser.g:10639:5: (lv_expr_3_0= rulePrimaryExpression )
                    // InternalDialogParser.g:10640:6: lv_expr_3_0= rulePrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=rulePrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_0,
                      							"com.ge.research.sadl.SADL.PrimaryExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnaryExpression"


    // $ANTLR start "norm1_UnaryExpression"
    // InternalDialogParser.g:10663:1: norm1_UnaryExpression returns [EObject current=null] : (this_PrimaryExpression_0= norm1_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) ) ) ;
    public final EObject norm1_UnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject this_PrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_5 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10669:2: ( (this_PrimaryExpression_0= norm1_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) ) ) )
            // InternalDialogParser.g:10670:2: (this_PrimaryExpression_0= norm1_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) ) )
            {
            // InternalDialogParser.g:10670:2: (this_PrimaryExpression_0= norm1_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) ) )
            int alt259=2;
            int LA259_0 = input.LA(1);

            if ( (LA259_0==Another||LA259_0==Length||(LA259_0>=Count && LA259_0<=False)||LA259_0==First||(LA259_0>=Index && LA259_0<=Known)||LA259_0==Value||LA259_0==None||LA259_0==Last||LA259_0==Some||(LA259_0>=True && LA259_0<=Type)||LA259_0==The||LA259_0==Any||LA259_0==The_1||LA259_0==HyphenMinusHyphenMinus||(LA259_0>=An && LA259_0<=An_1)||LA259_0==LeftParenthesis||LA259_0==A||LA259_0==LeftSquareBracket||(LA259_0>=A_1 && LA259_0<=LeftCurlyBracket)||LA259_0==RULE_NUMBER||(LA259_0>=RULE_ID && LA259_0<=RULE_STRING)) ) {
                alt259=1;
            }
            else if ( (LA259_0==There||LA259_0==Only||LA259_0==Not||LA259_0==ExclamationMark||LA259_0==HyphenMinus) ) {
                alt259=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 259, 0, input);

                throw nvae;
            }
            switch (alt259) {
                case 1 :
                    // InternalDialogParser.g:10671:3: this_PrimaryExpression_0= norm1_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_0=norm1_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10680:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) )
                    {
                    // InternalDialogParser.g:10680:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) ) )
                    // InternalDialogParser.g:10681:4: () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm1_PrimaryExpression ) )
                    {
                    // InternalDialogParser.g:10681:4: ()
                    // InternalDialogParser.g:10682:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10688:4: ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) )
                    // InternalDialogParser.g:10689:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    {
                    // InternalDialogParser.g:10689:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    // InternalDialogParser.g:10690:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    {
                    // InternalDialogParser.g:10690:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    int alt258=5;
                    switch ( input.LA(1) ) {
                    case Not:
                        {
                        alt258=1;
                        }
                        break;
                    case ExclamationMark:
                        {
                        alt258=2;
                        }
                        break;
                    case Only:
                        {
                        alt258=3;
                        }
                        break;
                    case HyphenMinus:
                        {
                        alt258=4;
                        }
                        break;
                    case There:
                        {
                        alt258=5;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 258, 0, input);

                        throw nvae;
                    }

                    switch (alt258) {
                        case 1 :
                            // InternalDialogParser.g:10691:7: lv_op_2_1= Not
                            {
                            lv_op_2_1=(Token)match(input,Not,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10702:7: lv_op_2_2= ExclamationMark
                            {
                            lv_op_2_2=(Token)match(input,ExclamationMark,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:10713:7: lv_op_2_3= Only
                            {
                            lv_op_2_3=(Token)match(input,Only,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalDialogParser.g:10724:7: lv_op_2_4= HyphenMinus
                            {
                            lv_op_2_4=(Token)match(input,HyphenMinus,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalDialogParser.g:10735:7: lv_op_2_5= ruleThereExists
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
                              						
                            }
                            pushFollow(FOLLOW_154);
                            lv_op_2_5=ruleThereExists();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                              							}
                              							set(
                              								current,
                              								"op",
                              								lv_op_2_5,
                              								"com.ge.research.sadl.SADL.ThereExists");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:10753:4: ( (lv_expr_3_0= norm1_PrimaryExpression ) )
                    // InternalDialogParser.g:10754:5: (lv_expr_3_0= norm1_PrimaryExpression )
                    {
                    // InternalDialogParser.g:10754:5: (lv_expr_3_0= norm1_PrimaryExpression )
                    // InternalDialogParser.g:10755:6: lv_expr_3_0= norm1_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=norm1_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_0,
                      							"com.ge.research.sadl.SADL.PrimaryExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_UnaryExpression"


    // $ANTLR start "norm2_UnaryExpression"
    // InternalDialogParser.g:10778:1: norm2_UnaryExpression returns [EObject current=null] : (this_PrimaryExpression_0= norm2_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) ) ) ;
    public final EObject norm2_UnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject this_PrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_5 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10784:2: ( (this_PrimaryExpression_0= norm2_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) ) ) )
            // InternalDialogParser.g:10785:2: (this_PrimaryExpression_0= norm2_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) ) )
            {
            // InternalDialogParser.g:10785:2: (this_PrimaryExpression_0= norm2_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) ) )
            int alt261=2;
            int LA261_0 = input.LA(1);

            if ( (LA261_0==Another||LA261_0==Length||(LA261_0>=Count && LA261_0<=False)||LA261_0==First||(LA261_0>=Index && LA261_0<=Known)||LA261_0==Value||LA261_0==None||LA261_0==Last||LA261_0==Some||(LA261_0>=True && LA261_0<=Type)||LA261_0==The||LA261_0==Any||LA261_0==The_1||LA261_0==HyphenMinusHyphenMinus||(LA261_0>=An && LA261_0<=An_1)||LA261_0==LeftParenthesis||LA261_0==A||LA261_0==LeftSquareBracket||(LA261_0>=A_1 && LA261_0<=LeftCurlyBracket)||LA261_0==RULE_NUMBER||(LA261_0>=RULE_ID && LA261_0<=RULE_STRING)) ) {
                alt261=1;
            }
            else if ( (LA261_0==There||LA261_0==Only||LA261_0==Not||LA261_0==ExclamationMark||LA261_0==HyphenMinus) ) {
                alt261=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 261, 0, input);

                throw nvae;
            }
            switch (alt261) {
                case 1 :
                    // InternalDialogParser.g:10786:3: this_PrimaryExpression_0= norm2_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_0=norm2_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10795:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) )
                    {
                    // InternalDialogParser.g:10795:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) ) )
                    // InternalDialogParser.g:10796:4: () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm2_PrimaryExpression ) )
                    {
                    // InternalDialogParser.g:10796:4: ()
                    // InternalDialogParser.g:10797:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10803:4: ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) )
                    // InternalDialogParser.g:10804:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    {
                    // InternalDialogParser.g:10804:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    // InternalDialogParser.g:10805:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    {
                    // InternalDialogParser.g:10805:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    int alt260=5;
                    switch ( input.LA(1) ) {
                    case Not:
                        {
                        alt260=1;
                        }
                        break;
                    case ExclamationMark:
                        {
                        alt260=2;
                        }
                        break;
                    case Only:
                        {
                        alt260=3;
                        }
                        break;
                    case HyphenMinus:
                        {
                        alt260=4;
                        }
                        break;
                    case There:
                        {
                        alt260=5;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 260, 0, input);

                        throw nvae;
                    }

                    switch (alt260) {
                        case 1 :
                            // InternalDialogParser.g:10806:7: lv_op_2_1= Not
                            {
                            lv_op_2_1=(Token)match(input,Not,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10817:7: lv_op_2_2= ExclamationMark
                            {
                            lv_op_2_2=(Token)match(input,ExclamationMark,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:10828:7: lv_op_2_3= Only
                            {
                            lv_op_2_3=(Token)match(input,Only,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalDialogParser.g:10839:7: lv_op_2_4= HyphenMinus
                            {
                            lv_op_2_4=(Token)match(input,HyphenMinus,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalDialogParser.g:10850:7: lv_op_2_5= ruleThereExists
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
                              						
                            }
                            pushFollow(FOLLOW_154);
                            lv_op_2_5=ruleThereExists();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                              							}
                              							set(
                              								current,
                              								"op",
                              								lv_op_2_5,
                              								"com.ge.research.sadl.SADL.ThereExists");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:10868:4: ( (lv_expr_3_0= norm2_PrimaryExpression ) )
                    // InternalDialogParser.g:10869:5: (lv_expr_3_0= norm2_PrimaryExpression )
                    {
                    // InternalDialogParser.g:10869:5: (lv_expr_3_0= norm2_PrimaryExpression )
                    // InternalDialogParser.g:10870:6: lv_expr_3_0= norm2_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=norm2_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_0,
                      							"com.ge.research.sadl.SADL.PrimaryExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_UnaryExpression"


    // $ANTLR start "norm3_UnaryExpression"
    // InternalDialogParser.g:10893:1: norm3_UnaryExpression returns [EObject current=null] : (this_PrimaryExpression_0= norm3_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) ) ) ;
    public final EObject norm3_UnaryExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        EObject this_PrimaryExpression_0 = null;

        AntlrDatatypeRuleToken lv_op_2_5 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:10899:2: ( (this_PrimaryExpression_0= norm3_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) ) ) )
            // InternalDialogParser.g:10900:2: (this_PrimaryExpression_0= norm3_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) ) )
            {
            // InternalDialogParser.g:10900:2: (this_PrimaryExpression_0= norm3_PrimaryExpression | ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) ) )
            int alt263=2;
            int LA263_0 = input.LA(1);

            if ( (LA263_0==Another||LA263_0==Length||(LA263_0>=Count && LA263_0<=False)||LA263_0==First||(LA263_0>=Index && LA263_0<=Known)||LA263_0==Value||LA263_0==None||LA263_0==Last||LA263_0==Some||(LA263_0>=True && LA263_0<=Type)||LA263_0==The||LA263_0==Any||LA263_0==The_1||LA263_0==HyphenMinusHyphenMinus||(LA263_0>=An && LA263_0<=An_1)||LA263_0==LeftParenthesis||LA263_0==A||LA263_0==LeftSquareBracket||(LA263_0>=A_1 && LA263_0<=LeftCurlyBracket)||LA263_0==RULE_NUMBER||(LA263_0>=RULE_ID && LA263_0<=RULE_STRING)) ) {
                alt263=1;
            }
            else if ( (LA263_0==There||LA263_0==Only||LA263_0==Not||LA263_0==ExclamationMark||LA263_0==HyphenMinus) ) {
                alt263=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 263, 0, input);

                throw nvae;
            }
            switch (alt263) {
                case 1 :
                    // InternalDialogParser.g:10901:3: this_PrimaryExpression_0= norm3_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPrimaryExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_PrimaryExpression_0=norm3_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrimaryExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:10910:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) )
                    {
                    // InternalDialogParser.g:10910:3: ( () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) ) )
                    // InternalDialogParser.g:10911:4: () ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) ) ( (lv_expr_3_0= norm3_PrimaryExpression ) )
                    {
                    // InternalDialogParser.g:10911:4: ()
                    // InternalDialogParser.g:10912:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:10918:4: ( ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) ) )
                    // InternalDialogParser.g:10919:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    {
                    // InternalDialogParser.g:10919:5: ( (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists ) )
                    // InternalDialogParser.g:10920:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    {
                    // InternalDialogParser.g:10920:6: (lv_op_2_1= Not | lv_op_2_2= ExclamationMark | lv_op_2_3= Only | lv_op_2_4= HyphenMinus | lv_op_2_5= ruleThereExists )
                    int alt262=5;
                    switch ( input.LA(1) ) {
                    case Not:
                        {
                        alt262=1;
                        }
                        break;
                    case ExclamationMark:
                        {
                        alt262=2;
                        }
                        break;
                    case Only:
                        {
                        alt262=3;
                        }
                        break;
                    case HyphenMinus:
                        {
                        alt262=4;
                        }
                        break;
                    case There:
                        {
                        alt262=5;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 262, 0, input);

                        throw nvae;
                    }

                    switch (alt262) {
                        case 1 :
                            // InternalDialogParser.g:10921:7: lv_op_2_1= Not
                            {
                            lv_op_2_1=(Token)match(input,Not,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_1, grammarAccess.getUnaryExpressionAccess().getOpNotKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:10932:7: lv_op_2_2= ExclamationMark
                            {
                            lv_op_2_2=(Token)match(input,ExclamationMark,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_2, grammarAccess.getUnaryExpressionAccess().getOpExclamationMarkKeyword_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:10943:7: lv_op_2_3= Only
                            {
                            lv_op_2_3=(Token)match(input,Only,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_3, grammarAccess.getUnaryExpressionAccess().getOpOnlyKeyword_1_1_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalDialogParser.g:10954:7: lv_op_2_4= HyphenMinus
                            {
                            lv_op_2_4=(Token)match(input,HyphenMinus,FOLLOW_154); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_op_2_4, grammarAccess.getUnaryExpressionAccess().getOpHyphenMinusKeyword_1_1_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getUnaryExpressionRule());
                              							}
                              							setWithLastConsumed(current, "op", lv_op_2_4, null);
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalDialogParser.g:10965:7: lv_op_2_5= ruleThereExists
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getUnaryExpressionAccess().getOpThereExistsParserRuleCall_1_1_0_4());
                              						
                            }
                            pushFollow(FOLLOW_154);
                            lv_op_2_5=ruleThereExists();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                              							}
                              							set(
                              								current,
                              								"op",
                              								lv_op_2_5,
                              								"com.ge.research.sadl.SADL.ThereExists");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalDialogParser.g:10983:4: ( (lv_expr_3_0= norm3_PrimaryExpression ) )
                    // InternalDialogParser.g:10984:5: (lv_expr_3_0= norm3_PrimaryExpression )
                    {
                    // InternalDialogParser.g:10984:5: (lv_expr_3_0= norm3_PrimaryExpression )
                    // InternalDialogParser.g:10985:6: lv_expr_3_0= norm3_PrimaryExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnaryExpressionAccess().getExprPrimaryExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_3_0=norm3_PrimaryExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_3_0,
                      							"com.ge.research.sadl.SADL.PrimaryExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_UnaryExpression"


    // $ANTLR start "entryRuleThereExists"
    // InternalDialogParser.g:11007:1: entryRuleThereExists returns [String current=null] : iv_ruleThereExists= ruleThereExists EOF ;
    public final String entryRuleThereExists() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleThereExists = null;


        try {
            // InternalDialogParser.g:11007:51: (iv_ruleThereExists= ruleThereExists EOF )
            // InternalDialogParser.g:11008:2: iv_ruleThereExists= ruleThereExists EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThereExistsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleThereExists=ruleThereExists();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThereExists.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleThereExists"


    // $ANTLR start "ruleThereExists"
    // InternalDialogParser.g:11014:1: ruleThereExists returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= There kw= Exists ) ;
    public final AntlrDatatypeRuleToken ruleThereExists() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:11020:2: ( (kw= There kw= Exists ) )
            // InternalDialogParser.g:11021:2: (kw= There kw= Exists )
            {
            // InternalDialogParser.g:11021:2: (kw= There kw= Exists )
            // InternalDialogParser.g:11022:3: kw= There kw= Exists
            {
            kw=(Token)match(input,There,FOLLOW_155); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getThereExistsAccess().getThereKeyword_0());
              		
            }
            kw=(Token)match(input,Exists,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getThereExistsAccess().getExistsKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleThereExists"


    // $ANTLR start "entryRulePrimaryExpression"
    // InternalDialogParser.g:11036:1: entryRulePrimaryExpression returns [EObject current=null] : iv_rulePrimaryExpression= rulePrimaryExpression EOF ;
    public final EObject entryRulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimaryExpression = null;


        try {
            // InternalDialogParser.g:11036:58: (iv_rulePrimaryExpression= rulePrimaryExpression EOF )
            // InternalDialogParser.g:11037:2: iv_rulePrimaryExpression= rulePrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpression=rulePrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpression"


    // $ANTLR start "rulePrimaryExpression"
    // InternalDialogParser.g:11043:1: rulePrimaryExpression returns [EObject current=null] : ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) ;
    public final EObject rulePrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_maxlen_16_2=null;
        Token lv_value_18_0=null;
        EObject this_SelectExpression_1 = null;

        EObject this_Name_3 = null;

        AntlrDatatypeRuleToken lv_article_5_0 = null;

        AntlrDatatypeRuleToken lv_ordinal_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_arglist_9_0 = null;

        EObject lv_arglist_11_0 = null;

        AntlrDatatypeRuleToken lv_len_14_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_16_1 = null;

        AntlrDatatypeRuleToken lv_value_20_0 = null;

        AntlrDatatypeRuleToken lv_value_22_0 = null;

        AntlrDatatypeRuleToken lv_constant_24_0 = null;

        EObject lv_valueTable_26_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:11049:2: ( ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) )
            // InternalDialogParser.g:11050:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            {
            // InternalDialogParser.g:11050:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            int alt270=8;
            alt270 = dfa270.predict(input);
            switch (alt270) {
                case 1 :
                    // InternalDialogParser.g:11051:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis )
                    {
                    // InternalDialogParser.g:11051:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis )
                    // InternalDialogParser.g:11052:4: otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_73);
                    this_SelectExpression_1=ruleSelectExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SelectExpression_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:11070:3: this_Name_3= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Name_3=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Name_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:11079:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    {
                    // InternalDialogParser.g:11079:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    // InternalDialogParser.g:11080:4: () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    {
                    // InternalDialogParser.g:11080:4: ()
                    // InternalDialogParser.g:11081:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11087:4: ( (lv_article_5_0= ruleAnArticle ) )
                    // InternalDialogParser.g:11088:5: (lv_article_5_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:11088:5: (lv_article_5_0= ruleAnArticle )
                    // InternalDialogParser.g:11089:6: lv_article_5_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_157);
                    lv_article_5_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"article",
                      							lv_article_5_0,
                      							"com.ge.research.sadl.SADL.AnArticle");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:11106:4: ( (lv_ordinal_6_0= ruleOrdinal ) )?
                    int alt264=2;
                    int LA264_0 = input.LA(1);

                    if ( (LA264_0==Seventh||LA264_0==Eighth||LA264_0==Fourth||LA264_0==Second||(LA264_0>=Fifth && LA264_0<=First)||LA264_0==Ninth||(LA264_0>=Other && LA264_0<=Tenth)||LA264_0==Third) ) {
                        alt264=1;
                    }
                    switch (alt264) {
                        case 1 :
                            // InternalDialogParser.g:11107:5: (lv_ordinal_6_0= ruleOrdinal )
                            {
                            // InternalDialogParser.g:11107:5: (lv_ordinal_6_0= ruleOrdinal )
                            // InternalDialogParser.g:11108:6: lv_ordinal_6_0= ruleOrdinal
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FOLLOW_12);
                            lv_ordinal_6_0=ruleOrdinal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              						}
                              						set(
                              							current,
                              							"ordinal",
                              							lv_ordinal_6_0,
                              							"com.ge.research.sadl.SADL.Ordinal");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:11125:4: ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:11126:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:11126:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:11127:6: lv_type_7_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_158);
                    lv_type_7_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_7_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:11144:4: ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    int alt269=3;
                    int LA269_0 = input.LA(1);

                    if ( (LA269_0==LeftSquareBracket) ) {
                        alt269=1;
                    }
                    else if ( (LA269_0==Length) ) {
                        alt269=2;
                    }
                    switch (alt269) {
                        case 1 :
                            // InternalDialogParser.g:11145:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            {
                            // InternalDialogParser.g:11145:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            // InternalDialogParser.g:11146:6: otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket
                            {
                            otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_159); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
                              					
                            }
                            // InternalDialogParser.g:11150:6: ( (lv_arglist_9_0= ruleNestedExpression ) )?
                            int alt265=2;
                            int LA265_0 = input.LA(1);

                            if ( (LA265_0==Another||LA265_0==Element||LA265_0==Sublist||LA265_0==Length||LA265_0==Select||(LA265_0>=Count && LA265_0<=False)||LA265_0==First||(LA265_0>=Index && LA265_0<=Known)||LA265_0==There||LA265_0==Value||LA265_0==None||LA265_0==Last||LA265_0==Only||LA265_0==Some||(LA265_0>=True && LA265_0<=Type)||LA265_0==The||LA265_0==Any||LA265_0==Not||LA265_0==The_1||LA265_0==HyphenMinusHyphenMinus||(LA265_0>=An && LA265_0<=An_1)||LA265_0==ExclamationMark||LA265_0==LeftParenthesis||LA265_0==HyphenMinus||LA265_0==A||LA265_0==LeftSquareBracket||(LA265_0>=A_1 && LA265_0<=LeftCurlyBracket)||LA265_0==RULE_NUMBER||(LA265_0>=RULE_ID && LA265_0<=RULE_STRING)) ) {
                                alt265=1;
                            }
                            switch (alt265) {
                                case 1 :
                                    // InternalDialogParser.g:11151:7: (lv_arglist_9_0= ruleNestedExpression )
                                    {
                                    // InternalDialogParser.g:11151:7: (lv_arglist_9_0= ruleNestedExpression )
                                    // InternalDialogParser.g:11152:8: lv_arglist_9_0= ruleNestedExpression
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_113);
                                    lv_arglist_9_0=ruleNestedExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                      								}
                                      								add(
                                      									current,
                                      									"arglist",
                                      									lv_arglist_9_0,
                                      									"com.ge.research.sadl.SADL.NestedExpression");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:11169:6: (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )*
                            loop266:
                            do {
                                int alt266=2;
                                int LA266_0 = input.LA(1);

                                if ( (LA266_0==Comma) ) {
                                    alt266=1;
                                }


                                switch (alt266) {
                            	case 1 :
                            	    // InternalDialogParser.g:11170:7: otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_156); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:11174:7: ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    // InternalDialogParser.g:11175:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    {
                            	    // InternalDialogParser.g:11175:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    // InternalDialogParser.g:11176:9: lv_arglist_11_0= ruleNestedExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_113);
                            	    lv_arglist_11_0=ruleNestedExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arglist",
                            	      										lv_arglist_11_0,
                            	      										"com.ge.research.sadl.SADL.NestedExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop266;
                                }
                            } while (true);

                            otherlv_12=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:11200:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            {
                            // InternalDialogParser.g:11200:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            // InternalDialogParser.g:11201:6: otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            {
                            otherlv_13=(Token)match(input,Length,FOLLOW_79); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:11205:6: ( (lv_len_14_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:11206:7: (lv_len_14_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:11206:7: (lv_len_14_0= ruleFacetNumber )
                            // InternalDialogParser.g:11207:8: lv_len_14_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_160);
                            lv_len_14_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              								}
                              								set(
                              									current,
                              									"len",
                              									lv_len_14_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:11224:6: ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            int alt268=2;
                            int LA268_0 = input.LA(1);

                            if ( (LA268_0==HyphenMinus) ) {
                                int LA268_1 = input.LA(2);

                                if ( (LA268_1==HyphenMinus) ) {
                                    int LA268_3 = input.LA(3);

                                    if ( (LA268_3==RULE_NUMBER) ) {
                                        int LA268_6 = input.LA(4);

                                        if ( (synpred31_InternalDialogParser()) ) {
                                            alt268=1;
                                        }
                                    }
                                }
                                else if ( (LA268_1==RULE_NUMBER) ) {
                                    int LA268_4 = input.LA(3);

                                    if ( (synpred31_InternalDialogParser()) ) {
                                        alt268=1;
                                    }
                                }
                                else if ( (LA268_1==Asterisk) && (synpred31_InternalDialogParser())) {
                                    alt268=1;
                                }
                            }
                            switch (alt268) {
                                case 1 :
                                    // InternalDialogParser.g:11225:7: ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    {
                                    // InternalDialogParser.g:11226:7: (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    // InternalDialogParser.g:11227:8: otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    {
                                    otherlv_15=(Token)match(input,HyphenMinus,FOLLOW_81); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
                                      							
                                    }
                                    // InternalDialogParser.g:11231:8: ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    // InternalDialogParser.g:11232:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    {
                                    // InternalDialogParser.g:11232:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    // InternalDialogParser.g:11233:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    {
                                    // InternalDialogParser.g:11233:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    int alt267=2;
                                    int LA267_0 = input.LA(1);

                                    if ( (LA267_0==HyphenMinus||LA267_0==RULE_NUMBER) ) {
                                        alt267=1;
                                    }
                                    else if ( (LA267_0==Asterisk) ) {
                                        alt267=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 267, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt267) {
                                        case 1 :
                                            // InternalDialogParser.g:11234:11: lv_maxlen_16_1= ruleFacetNumber
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_2);
                                            lv_maxlen_16_1=ruleFacetNumber();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											set(
                                              												current,
                                              												"maxlen",
                                              												lv_maxlen_16_1,
                                              												"com.ge.research.sadl.SADL.FacetNumber");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalDialogParser.g:11250:11: lv_maxlen_16_2= Asterisk
                                            {
                                            lv_maxlen_16_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											setWithLastConsumed(current, "maxlen", lv_maxlen_16_2, null);
                                              										
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:11269:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:11269:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:11270:4: () ( (lv_value_18_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:11270:4: ()
                    // InternalDialogParser.g:11271:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11277:4: ( (lv_value_18_0= RULE_STRING ) )
                    // InternalDialogParser.g:11278:5: (lv_value_18_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:11278:5: (lv_value_18_0= RULE_STRING )
                    // InternalDialogParser.g:11279:6: lv_value_18_0= RULE_STRING
                    {
                    lv_value_18_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_18_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:11297:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    {
                    // InternalDialogParser.g:11297:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    // InternalDialogParser.g:11298:4: () ( (lv_value_20_0= ruleAnyNumber ) )
                    {
                    // InternalDialogParser.g:11298:4: ()
                    // InternalDialogParser.g:11299:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11305:4: ( (lv_value_20_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:11306:5: (lv_value_20_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:11306:5: (lv_value_20_0= ruleAnyNumber )
                    // InternalDialogParser.g:11307:6: lv_value_20_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_20_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_20_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:11326:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    {
                    // InternalDialogParser.g:11326:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    // InternalDialogParser.g:11327:4: () ( (lv_value_22_0= ruleBooleanValue ) )
                    {
                    // InternalDialogParser.g:11327:4: ()
                    // InternalDialogParser.g:11328:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11334:4: ( (lv_value_22_0= ruleBooleanValue ) )
                    // InternalDialogParser.g:11335:5: (lv_value_22_0= ruleBooleanValue )
                    {
                    // InternalDialogParser.g:11335:5: (lv_value_22_0= ruleBooleanValue )
                    // InternalDialogParser.g:11336:6: lv_value_22_0= ruleBooleanValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_22_0=ruleBooleanValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_22_0,
                      							"com.ge.research.sadl.SADL.BooleanValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:11355:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    {
                    // InternalDialogParser.g:11355:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    // InternalDialogParser.g:11356:4: () ( (lv_constant_24_0= ruleConstants ) )
                    {
                    // InternalDialogParser.g:11356:4: ()
                    // InternalDialogParser.g:11357:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11363:4: ( (lv_constant_24_0= ruleConstants ) )
                    // InternalDialogParser.g:11364:5: (lv_constant_24_0= ruleConstants )
                    {
                    // InternalDialogParser.g:11364:5: (lv_constant_24_0= ruleConstants )
                    // InternalDialogParser.g:11365:6: lv_constant_24_0= ruleConstants
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_24_0=ruleConstants();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"constant",
                      							lv_constant_24_0,
                      							"com.ge.research.sadl.SADL.Constants");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:11384:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    {
                    // InternalDialogParser.g:11384:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    // InternalDialogParser.g:11385:4: () ( (lv_valueTable_26_0= ruleValueTable ) )
                    {
                    // InternalDialogParser.g:11385:4: ()
                    // InternalDialogParser.g:11386:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11392:4: ( (lv_valueTable_26_0= ruleValueTable ) )
                    // InternalDialogParser.g:11393:5: (lv_valueTable_26_0= ruleValueTable )
                    {
                    // InternalDialogParser.g:11393:5: (lv_valueTable_26_0= ruleValueTable )
                    // InternalDialogParser.g:11394:6: lv_valueTable_26_0= ruleValueTable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_valueTable_26_0=ruleValueTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"valueTable",
                      							lv_valueTable_26_0,
                      							"com.ge.research.sadl.SADL.ValueTable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpression"


    // $ANTLR start "norm1_PrimaryExpression"
    // InternalDialogParser.g:11417:1: norm1_PrimaryExpression returns [EObject current=null] : ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) ;
    public final EObject norm1_PrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_maxlen_16_2=null;
        Token lv_value_18_0=null;
        EObject this_SelectExpression_1 = null;

        EObject this_Name_3 = null;

        AntlrDatatypeRuleToken lv_article_5_0 = null;

        AntlrDatatypeRuleToken lv_ordinal_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_arglist_9_0 = null;

        EObject lv_arglist_11_0 = null;

        AntlrDatatypeRuleToken lv_len_14_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_16_1 = null;

        AntlrDatatypeRuleToken lv_value_20_0 = null;

        AntlrDatatypeRuleToken lv_value_22_0 = null;

        AntlrDatatypeRuleToken lv_constant_24_0 = null;

        EObject lv_valueTable_26_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:11423:2: ( ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) )
            // InternalDialogParser.g:11424:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            {
            // InternalDialogParser.g:11424:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            int alt277=8;
            alt277 = dfa277.predict(input);
            switch (alt277) {
                case 1 :
                    // InternalDialogParser.g:11425:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis )
                    {
                    // InternalDialogParser.g:11425:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis )
                    // InternalDialogParser.g:11426:4: otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_73);
                    this_SelectExpression_1=norm1_SelectExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SelectExpression_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:11444:3: this_Name_3= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Name_3=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Name_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:11453:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    {
                    // InternalDialogParser.g:11453:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    // InternalDialogParser.g:11454:4: () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    {
                    // InternalDialogParser.g:11454:4: ()
                    // InternalDialogParser.g:11455:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11461:4: ( (lv_article_5_0= ruleAnArticle ) )
                    // InternalDialogParser.g:11462:5: (lv_article_5_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:11462:5: (lv_article_5_0= ruleAnArticle )
                    // InternalDialogParser.g:11463:6: lv_article_5_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_157);
                    lv_article_5_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"article",
                      							lv_article_5_0,
                      							"com.ge.research.sadl.SADL.AnArticle");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:11480:4: ( (lv_ordinal_6_0= ruleOrdinal ) )?
                    int alt271=2;
                    int LA271_0 = input.LA(1);

                    if ( (LA271_0==Seventh||LA271_0==Eighth||LA271_0==Fourth||LA271_0==Second||(LA271_0>=Fifth && LA271_0<=First)||LA271_0==Ninth||(LA271_0>=Other && LA271_0<=Tenth)||LA271_0==Third) ) {
                        alt271=1;
                    }
                    switch (alt271) {
                        case 1 :
                            // InternalDialogParser.g:11481:5: (lv_ordinal_6_0= ruleOrdinal )
                            {
                            // InternalDialogParser.g:11481:5: (lv_ordinal_6_0= ruleOrdinal )
                            // InternalDialogParser.g:11482:6: lv_ordinal_6_0= ruleOrdinal
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FOLLOW_12);
                            lv_ordinal_6_0=ruleOrdinal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              						}
                              						set(
                              							current,
                              							"ordinal",
                              							lv_ordinal_6_0,
                              							"com.ge.research.sadl.SADL.Ordinal");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:11499:4: ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:11500:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:11500:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:11501:6: lv_type_7_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_158);
                    lv_type_7_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_7_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:11518:4: ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    int alt276=3;
                    int LA276_0 = input.LA(1);

                    if ( (LA276_0==LeftSquareBracket) ) {
                        alt276=1;
                    }
                    else if ( (LA276_0==Length) ) {
                        alt276=2;
                    }
                    switch (alt276) {
                        case 1 :
                            // InternalDialogParser.g:11519:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            {
                            // InternalDialogParser.g:11519:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            // InternalDialogParser.g:11520:6: otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket
                            {
                            otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_159); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
                              					
                            }
                            // InternalDialogParser.g:11524:6: ( (lv_arglist_9_0= ruleNestedExpression ) )?
                            int alt272=2;
                            int LA272_0 = input.LA(1);

                            if ( (LA272_0==Another||LA272_0==Element||LA272_0==Sublist||LA272_0==Length||LA272_0==Select||(LA272_0>=Count && LA272_0<=False)||LA272_0==First||(LA272_0>=Index && LA272_0<=Known)||LA272_0==There||LA272_0==Value||LA272_0==None||LA272_0==Last||LA272_0==Only||LA272_0==Some||(LA272_0>=True && LA272_0<=Type)||LA272_0==The||LA272_0==Any||LA272_0==Not||LA272_0==The_1||LA272_0==HyphenMinusHyphenMinus||(LA272_0>=An && LA272_0<=An_1)||LA272_0==ExclamationMark||LA272_0==LeftParenthesis||LA272_0==HyphenMinus||LA272_0==A||LA272_0==LeftSquareBracket||(LA272_0>=A_1 && LA272_0<=LeftCurlyBracket)||LA272_0==RULE_NUMBER||(LA272_0>=RULE_ID && LA272_0<=RULE_STRING)) ) {
                                alt272=1;
                            }
                            switch (alt272) {
                                case 1 :
                                    // InternalDialogParser.g:11525:7: (lv_arglist_9_0= ruleNestedExpression )
                                    {
                                    // InternalDialogParser.g:11525:7: (lv_arglist_9_0= ruleNestedExpression )
                                    // InternalDialogParser.g:11526:8: lv_arglist_9_0= ruleNestedExpression
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_113);
                                    lv_arglist_9_0=ruleNestedExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                      								}
                                      								add(
                                      									current,
                                      									"arglist",
                                      									lv_arglist_9_0,
                                      									"com.ge.research.sadl.SADL.NestedExpression");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:11543:6: (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )*
                            loop273:
                            do {
                                int alt273=2;
                                int LA273_0 = input.LA(1);

                                if ( (LA273_0==Comma) ) {
                                    alt273=1;
                                }


                                switch (alt273) {
                            	case 1 :
                            	    // InternalDialogParser.g:11544:7: otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_156); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:11548:7: ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    // InternalDialogParser.g:11549:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    {
                            	    // InternalDialogParser.g:11549:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    // InternalDialogParser.g:11550:9: lv_arglist_11_0= ruleNestedExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_113);
                            	    lv_arglist_11_0=ruleNestedExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arglist",
                            	      										lv_arglist_11_0,
                            	      										"com.ge.research.sadl.SADL.NestedExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop273;
                                }
                            } while (true);

                            otherlv_12=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:11574:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            {
                            // InternalDialogParser.g:11574:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            // InternalDialogParser.g:11575:6: otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            {
                            otherlv_13=(Token)match(input,Length,FOLLOW_79); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:11579:6: ( (lv_len_14_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:11580:7: (lv_len_14_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:11580:7: (lv_len_14_0= ruleFacetNumber )
                            // InternalDialogParser.g:11581:8: lv_len_14_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_160);
                            lv_len_14_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              								}
                              								set(
                              									current,
                              									"len",
                              									lv_len_14_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:11598:6: ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            int alt275=2;
                            int LA275_0 = input.LA(1);

                            if ( (LA275_0==HyphenMinus) ) {
                                int LA275_1 = input.LA(2);

                                if ( (LA275_1==HyphenMinus) ) {
                                    int LA275_3 = input.LA(3);

                                    if ( (LA275_3==RULE_NUMBER) ) {
                                        int LA275_6 = input.LA(4);

                                        if ( (synpred32_InternalDialogParser()) ) {
                                            alt275=1;
                                        }
                                    }
                                }
                                else if ( (LA275_1==RULE_NUMBER) ) {
                                    int LA275_4 = input.LA(3);

                                    if ( (synpred32_InternalDialogParser()) ) {
                                        alt275=1;
                                    }
                                }
                                else if ( (LA275_1==Asterisk) && (synpred32_InternalDialogParser())) {
                                    alt275=1;
                                }
                            }
                            switch (alt275) {
                                case 1 :
                                    // InternalDialogParser.g:11599:7: ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    {
                                    // InternalDialogParser.g:11600:7: (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    // InternalDialogParser.g:11601:8: otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    {
                                    otherlv_15=(Token)match(input,HyphenMinus,FOLLOW_81); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
                                      							
                                    }
                                    // InternalDialogParser.g:11605:8: ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    // InternalDialogParser.g:11606:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    {
                                    // InternalDialogParser.g:11606:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    // InternalDialogParser.g:11607:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    {
                                    // InternalDialogParser.g:11607:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    int alt274=2;
                                    int LA274_0 = input.LA(1);

                                    if ( (LA274_0==HyphenMinus||LA274_0==RULE_NUMBER) ) {
                                        alt274=1;
                                    }
                                    else if ( (LA274_0==Asterisk) ) {
                                        alt274=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 274, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt274) {
                                        case 1 :
                                            // InternalDialogParser.g:11608:11: lv_maxlen_16_1= ruleFacetNumber
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_2);
                                            lv_maxlen_16_1=ruleFacetNumber();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											set(
                                              												current,
                                              												"maxlen",
                                              												lv_maxlen_16_1,
                                              												"com.ge.research.sadl.SADL.FacetNumber");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalDialogParser.g:11624:11: lv_maxlen_16_2= Asterisk
                                            {
                                            lv_maxlen_16_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											setWithLastConsumed(current, "maxlen", lv_maxlen_16_2, null);
                                              										
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:11643:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:11643:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:11644:4: () ( (lv_value_18_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:11644:4: ()
                    // InternalDialogParser.g:11645:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11651:4: ( (lv_value_18_0= RULE_STRING ) )
                    // InternalDialogParser.g:11652:5: (lv_value_18_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:11652:5: (lv_value_18_0= RULE_STRING )
                    // InternalDialogParser.g:11653:6: lv_value_18_0= RULE_STRING
                    {
                    lv_value_18_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_18_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:11671:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    {
                    // InternalDialogParser.g:11671:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    // InternalDialogParser.g:11672:4: () ( (lv_value_20_0= ruleAnyNumber ) )
                    {
                    // InternalDialogParser.g:11672:4: ()
                    // InternalDialogParser.g:11673:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11679:4: ( (lv_value_20_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:11680:5: (lv_value_20_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:11680:5: (lv_value_20_0= ruleAnyNumber )
                    // InternalDialogParser.g:11681:6: lv_value_20_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_20_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_20_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:11700:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    {
                    // InternalDialogParser.g:11700:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    // InternalDialogParser.g:11701:4: () ( (lv_value_22_0= ruleBooleanValue ) )
                    {
                    // InternalDialogParser.g:11701:4: ()
                    // InternalDialogParser.g:11702:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11708:4: ( (lv_value_22_0= ruleBooleanValue ) )
                    // InternalDialogParser.g:11709:5: (lv_value_22_0= ruleBooleanValue )
                    {
                    // InternalDialogParser.g:11709:5: (lv_value_22_0= ruleBooleanValue )
                    // InternalDialogParser.g:11710:6: lv_value_22_0= ruleBooleanValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_22_0=ruleBooleanValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_22_0,
                      							"com.ge.research.sadl.SADL.BooleanValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:11729:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    {
                    // InternalDialogParser.g:11729:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    // InternalDialogParser.g:11730:4: () ( (lv_constant_24_0= ruleConstants ) )
                    {
                    // InternalDialogParser.g:11730:4: ()
                    // InternalDialogParser.g:11731:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11737:4: ( (lv_constant_24_0= ruleConstants ) )
                    // InternalDialogParser.g:11738:5: (lv_constant_24_0= ruleConstants )
                    {
                    // InternalDialogParser.g:11738:5: (lv_constant_24_0= ruleConstants )
                    // InternalDialogParser.g:11739:6: lv_constant_24_0= ruleConstants
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_24_0=ruleConstants();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"constant",
                      							lv_constant_24_0,
                      							"com.ge.research.sadl.SADL.Constants");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:11758:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    {
                    // InternalDialogParser.g:11758:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    // InternalDialogParser.g:11759:4: () ( (lv_valueTable_26_0= ruleValueTable ) )
                    {
                    // InternalDialogParser.g:11759:4: ()
                    // InternalDialogParser.g:11760:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11766:4: ( (lv_valueTable_26_0= ruleValueTable ) )
                    // InternalDialogParser.g:11767:5: (lv_valueTable_26_0= ruleValueTable )
                    {
                    // InternalDialogParser.g:11767:5: (lv_valueTable_26_0= ruleValueTable )
                    // InternalDialogParser.g:11768:6: lv_valueTable_26_0= ruleValueTable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_valueTable_26_0=ruleValueTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"valueTable",
                      							lv_valueTable_26_0,
                      							"com.ge.research.sadl.SADL.ValueTable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm1_PrimaryExpression"


    // $ANTLR start "norm2_PrimaryExpression"
    // InternalDialogParser.g:11791:1: norm2_PrimaryExpression returns [EObject current=null] : ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) ;
    public final EObject norm2_PrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_maxlen_16_2=null;
        Token lv_value_18_0=null;
        EObject this_SelectExpression_1 = null;

        EObject this_Name_3 = null;

        AntlrDatatypeRuleToken lv_article_5_0 = null;

        AntlrDatatypeRuleToken lv_ordinal_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_arglist_9_0 = null;

        EObject lv_arglist_11_0 = null;

        AntlrDatatypeRuleToken lv_len_14_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_16_1 = null;

        AntlrDatatypeRuleToken lv_value_20_0 = null;

        AntlrDatatypeRuleToken lv_value_22_0 = null;

        AntlrDatatypeRuleToken lv_constant_24_0 = null;

        EObject lv_valueTable_26_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:11797:2: ( ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) )
            // InternalDialogParser.g:11798:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            {
            // InternalDialogParser.g:11798:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            int alt284=8;
            alt284 = dfa284.predict(input);
            switch (alt284) {
                case 1 :
                    // InternalDialogParser.g:11799:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis )
                    {
                    // InternalDialogParser.g:11799:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis )
                    // InternalDialogParser.g:11800:4: otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_73);
                    this_SelectExpression_1=norm2_SelectExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SelectExpression_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:11818:3: this_Name_3= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Name_3=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Name_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:11827:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    {
                    // InternalDialogParser.g:11827:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    // InternalDialogParser.g:11828:4: () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    {
                    // InternalDialogParser.g:11828:4: ()
                    // InternalDialogParser.g:11829:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:11835:4: ( (lv_article_5_0= ruleAnArticle ) )
                    // InternalDialogParser.g:11836:5: (lv_article_5_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:11836:5: (lv_article_5_0= ruleAnArticle )
                    // InternalDialogParser.g:11837:6: lv_article_5_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_157);
                    lv_article_5_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"article",
                      							lv_article_5_0,
                      							"com.ge.research.sadl.SADL.AnArticle");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:11854:4: ( (lv_ordinal_6_0= ruleOrdinal ) )?
                    int alt278=2;
                    int LA278_0 = input.LA(1);

                    if ( (LA278_0==Seventh||LA278_0==Eighth||LA278_0==Fourth||LA278_0==Second||(LA278_0>=Fifth && LA278_0<=First)||LA278_0==Ninth||(LA278_0>=Other && LA278_0<=Tenth)||LA278_0==Third) ) {
                        alt278=1;
                    }
                    switch (alt278) {
                        case 1 :
                            // InternalDialogParser.g:11855:5: (lv_ordinal_6_0= ruleOrdinal )
                            {
                            // InternalDialogParser.g:11855:5: (lv_ordinal_6_0= ruleOrdinal )
                            // InternalDialogParser.g:11856:6: lv_ordinal_6_0= ruleOrdinal
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FOLLOW_12);
                            lv_ordinal_6_0=ruleOrdinal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              						}
                              						set(
                              							current,
                              							"ordinal",
                              							lv_ordinal_6_0,
                              							"com.ge.research.sadl.SADL.Ordinal");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:11873:4: ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:11874:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:11874:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:11875:6: lv_type_7_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_158);
                    lv_type_7_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_7_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:11892:4: ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    int alt283=3;
                    int LA283_0 = input.LA(1);

                    if ( (LA283_0==LeftSquareBracket) ) {
                        alt283=1;
                    }
                    else if ( (LA283_0==Length) ) {
                        alt283=2;
                    }
                    switch (alt283) {
                        case 1 :
                            // InternalDialogParser.g:11893:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            {
                            // InternalDialogParser.g:11893:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            // InternalDialogParser.g:11894:6: otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket
                            {
                            otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_159); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
                              					
                            }
                            // InternalDialogParser.g:11898:6: ( (lv_arglist_9_0= ruleNestedExpression ) )?
                            int alt279=2;
                            int LA279_0 = input.LA(1);

                            if ( (LA279_0==Another||LA279_0==Element||LA279_0==Sublist||LA279_0==Length||LA279_0==Select||(LA279_0>=Count && LA279_0<=False)||LA279_0==First||(LA279_0>=Index && LA279_0<=Known)||LA279_0==There||LA279_0==Value||LA279_0==None||LA279_0==Last||LA279_0==Only||LA279_0==Some||(LA279_0>=True && LA279_0<=Type)||LA279_0==The||LA279_0==Any||LA279_0==Not||LA279_0==The_1||LA279_0==HyphenMinusHyphenMinus||(LA279_0>=An && LA279_0<=An_1)||LA279_0==ExclamationMark||LA279_0==LeftParenthesis||LA279_0==HyphenMinus||LA279_0==A||LA279_0==LeftSquareBracket||(LA279_0>=A_1 && LA279_0<=LeftCurlyBracket)||LA279_0==RULE_NUMBER||(LA279_0>=RULE_ID && LA279_0<=RULE_STRING)) ) {
                                alt279=1;
                            }
                            switch (alt279) {
                                case 1 :
                                    // InternalDialogParser.g:11899:7: (lv_arglist_9_0= ruleNestedExpression )
                                    {
                                    // InternalDialogParser.g:11899:7: (lv_arglist_9_0= ruleNestedExpression )
                                    // InternalDialogParser.g:11900:8: lv_arglist_9_0= ruleNestedExpression
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_113);
                                    lv_arglist_9_0=ruleNestedExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                      								}
                                      								add(
                                      									current,
                                      									"arglist",
                                      									lv_arglist_9_0,
                                      									"com.ge.research.sadl.SADL.NestedExpression");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:11917:6: (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )*
                            loop280:
                            do {
                                int alt280=2;
                                int LA280_0 = input.LA(1);

                                if ( (LA280_0==Comma) ) {
                                    alt280=1;
                                }


                                switch (alt280) {
                            	case 1 :
                            	    // InternalDialogParser.g:11918:7: otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_156); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:11922:7: ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    // InternalDialogParser.g:11923:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    {
                            	    // InternalDialogParser.g:11923:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    // InternalDialogParser.g:11924:9: lv_arglist_11_0= ruleNestedExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_113);
                            	    lv_arglist_11_0=ruleNestedExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arglist",
                            	      										lv_arglist_11_0,
                            	      										"com.ge.research.sadl.SADL.NestedExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop280;
                                }
                            } while (true);

                            otherlv_12=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:11948:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            {
                            // InternalDialogParser.g:11948:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            // InternalDialogParser.g:11949:6: otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            {
                            otherlv_13=(Token)match(input,Length,FOLLOW_79); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:11953:6: ( (lv_len_14_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:11954:7: (lv_len_14_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:11954:7: (lv_len_14_0= ruleFacetNumber )
                            // InternalDialogParser.g:11955:8: lv_len_14_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_160);
                            lv_len_14_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              								}
                              								set(
                              									current,
                              									"len",
                              									lv_len_14_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:11972:6: ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            int alt282=2;
                            int LA282_0 = input.LA(1);

                            if ( (LA282_0==HyphenMinus) ) {
                                int LA282_1 = input.LA(2);

                                if ( (LA282_1==RULE_NUMBER) ) {
                                    int LA282_3 = input.LA(3);

                                    if ( (synpred33_InternalDialogParser()) ) {
                                        alt282=1;
                                    }
                                }
                                else if ( (LA282_1==HyphenMinus) ) {
                                    int LA282_4 = input.LA(3);

                                    if ( (LA282_4==RULE_NUMBER) ) {
                                        int LA282_6 = input.LA(4);

                                        if ( (synpred33_InternalDialogParser()) ) {
                                            alt282=1;
                                        }
                                    }
                                }
                                else if ( (LA282_1==Asterisk) && (synpred33_InternalDialogParser())) {
                                    alt282=1;
                                }
                            }
                            switch (alt282) {
                                case 1 :
                                    // InternalDialogParser.g:11973:7: ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    {
                                    // InternalDialogParser.g:11974:7: (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    // InternalDialogParser.g:11975:8: otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    {
                                    otherlv_15=(Token)match(input,HyphenMinus,FOLLOW_81); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
                                      							
                                    }
                                    // InternalDialogParser.g:11979:8: ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    // InternalDialogParser.g:11980:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    {
                                    // InternalDialogParser.g:11980:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    // InternalDialogParser.g:11981:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    {
                                    // InternalDialogParser.g:11981:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    int alt281=2;
                                    int LA281_0 = input.LA(1);

                                    if ( (LA281_0==HyphenMinus||LA281_0==RULE_NUMBER) ) {
                                        alt281=1;
                                    }
                                    else if ( (LA281_0==Asterisk) ) {
                                        alt281=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 281, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt281) {
                                        case 1 :
                                            // InternalDialogParser.g:11982:11: lv_maxlen_16_1= ruleFacetNumber
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_2);
                                            lv_maxlen_16_1=ruleFacetNumber();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											set(
                                              												current,
                                              												"maxlen",
                                              												lv_maxlen_16_1,
                                              												"com.ge.research.sadl.SADL.FacetNumber");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalDialogParser.g:11998:11: lv_maxlen_16_2= Asterisk
                                            {
                                            lv_maxlen_16_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											setWithLastConsumed(current, "maxlen", lv_maxlen_16_2, null);
                                              										
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:12017:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:12017:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:12018:4: () ( (lv_value_18_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:12018:4: ()
                    // InternalDialogParser.g:12019:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12025:4: ( (lv_value_18_0= RULE_STRING ) )
                    // InternalDialogParser.g:12026:5: (lv_value_18_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:12026:5: (lv_value_18_0= RULE_STRING )
                    // InternalDialogParser.g:12027:6: lv_value_18_0= RULE_STRING
                    {
                    lv_value_18_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_18_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:12045:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    {
                    // InternalDialogParser.g:12045:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    // InternalDialogParser.g:12046:4: () ( (lv_value_20_0= ruleAnyNumber ) )
                    {
                    // InternalDialogParser.g:12046:4: ()
                    // InternalDialogParser.g:12047:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12053:4: ( (lv_value_20_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:12054:5: (lv_value_20_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:12054:5: (lv_value_20_0= ruleAnyNumber )
                    // InternalDialogParser.g:12055:6: lv_value_20_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_20_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_20_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:12074:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    {
                    // InternalDialogParser.g:12074:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    // InternalDialogParser.g:12075:4: () ( (lv_value_22_0= ruleBooleanValue ) )
                    {
                    // InternalDialogParser.g:12075:4: ()
                    // InternalDialogParser.g:12076:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12082:4: ( (lv_value_22_0= ruleBooleanValue ) )
                    // InternalDialogParser.g:12083:5: (lv_value_22_0= ruleBooleanValue )
                    {
                    // InternalDialogParser.g:12083:5: (lv_value_22_0= ruleBooleanValue )
                    // InternalDialogParser.g:12084:6: lv_value_22_0= ruleBooleanValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_22_0=ruleBooleanValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_22_0,
                      							"com.ge.research.sadl.SADL.BooleanValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:12103:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    {
                    // InternalDialogParser.g:12103:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    // InternalDialogParser.g:12104:4: () ( (lv_constant_24_0= ruleConstants ) )
                    {
                    // InternalDialogParser.g:12104:4: ()
                    // InternalDialogParser.g:12105:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12111:4: ( (lv_constant_24_0= ruleConstants ) )
                    // InternalDialogParser.g:12112:5: (lv_constant_24_0= ruleConstants )
                    {
                    // InternalDialogParser.g:12112:5: (lv_constant_24_0= ruleConstants )
                    // InternalDialogParser.g:12113:6: lv_constant_24_0= ruleConstants
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_24_0=ruleConstants();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"constant",
                      							lv_constant_24_0,
                      							"com.ge.research.sadl.SADL.Constants");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:12132:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    {
                    // InternalDialogParser.g:12132:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    // InternalDialogParser.g:12133:4: () ( (lv_valueTable_26_0= ruleValueTable ) )
                    {
                    // InternalDialogParser.g:12133:4: ()
                    // InternalDialogParser.g:12134:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12140:4: ( (lv_valueTable_26_0= ruleValueTable ) )
                    // InternalDialogParser.g:12141:5: (lv_valueTable_26_0= ruleValueTable )
                    {
                    // InternalDialogParser.g:12141:5: (lv_valueTable_26_0= ruleValueTable )
                    // InternalDialogParser.g:12142:6: lv_valueTable_26_0= ruleValueTable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_valueTable_26_0=ruleValueTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"valueTable",
                      							lv_valueTable_26_0,
                      							"com.ge.research.sadl.SADL.ValueTable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm2_PrimaryExpression"


    // $ANTLR start "norm3_PrimaryExpression"
    // InternalDialogParser.g:12165:1: norm3_PrimaryExpression returns [EObject current=null] : ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) ;
    public final EObject norm3_PrimaryExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_maxlen_16_2=null;
        Token lv_value_18_0=null;
        EObject this_SelectExpression_1 = null;

        EObject this_Name_3 = null;

        AntlrDatatypeRuleToken lv_article_5_0 = null;

        AntlrDatatypeRuleToken lv_ordinal_6_0 = null;

        EObject lv_type_7_0 = null;

        EObject lv_arglist_9_0 = null;

        EObject lv_arglist_11_0 = null;

        AntlrDatatypeRuleToken lv_len_14_0 = null;

        AntlrDatatypeRuleToken lv_maxlen_16_1 = null;

        AntlrDatatypeRuleToken lv_value_20_0 = null;

        AntlrDatatypeRuleToken lv_value_22_0 = null;

        AntlrDatatypeRuleToken lv_constant_24_0 = null;

        EObject lv_valueTable_26_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:12171:2: ( ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) ) )
            // InternalDialogParser.g:12172:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            {
            // InternalDialogParser.g:12172:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )
            int alt291=8;
            alt291 = dfa291.predict(input);
            switch (alt291) {
                case 1 :
                    // InternalDialogParser.g:12173:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis )
                    {
                    // InternalDialogParser.g:12173:3: (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis )
                    // InternalDialogParser.g:12174:4: otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis
                    {
                    otherlv_0=(Token)match(input,LeftParenthesis,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getSelectExpressionParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_73);
                    this_SelectExpression_1=norm3_SelectExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_SelectExpression_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_2=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:12192:3: this_Name_3= ruleName
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Name_3=ruleName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Name_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:12201:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    {
                    // InternalDialogParser.g:12201:3: ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? )
                    // InternalDialogParser.g:12202:4: () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    {
                    // InternalDialogParser.g:12202:4: ()
                    // InternalDialogParser.g:12203:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getDeclarationAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12209:4: ( (lv_article_5_0= ruleAnArticle ) )
                    // InternalDialogParser.g:12210:5: (lv_article_5_0= ruleAnArticle )
                    {
                    // InternalDialogParser.g:12210:5: (lv_article_5_0= ruleAnArticle )
                    // InternalDialogParser.g:12211:6: lv_article_5_0= ruleAnArticle
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArticleAnArticleParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_157);
                    lv_article_5_0=ruleAnArticle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"article",
                      							lv_article_5_0,
                      							"com.ge.research.sadl.SADL.AnArticle");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:12228:4: ( (lv_ordinal_6_0= ruleOrdinal ) )?
                    int alt285=2;
                    int LA285_0 = input.LA(1);

                    if ( (LA285_0==Seventh||LA285_0==Eighth||LA285_0==Fourth||LA285_0==Second||(LA285_0>=Fifth && LA285_0<=First)||LA285_0==Ninth||(LA285_0>=Other && LA285_0<=Tenth)||LA285_0==Third) ) {
                        alt285=1;
                    }
                    switch (alt285) {
                        case 1 :
                            // InternalDialogParser.g:12229:5: (lv_ordinal_6_0= ruleOrdinal )
                            {
                            // InternalDialogParser.g:12229:5: (lv_ordinal_6_0= ruleOrdinal )
                            // InternalDialogParser.g:12230:6: lv_ordinal_6_0= ruleOrdinal
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOrdinalOrdinalParserRuleCall_2_2_0());
                              					
                            }
                            pushFollow(FOLLOW_12);
                            lv_ordinal_6_0=ruleOrdinal();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              						}
                              						set(
                              							current,
                              							"ordinal",
                              							lv_ordinal_6_0,
                              							"com.ge.research.sadl.SADL.Ordinal");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:12247:4: ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) )
                    // InternalDialogParser.g:12248:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    {
                    // InternalDialogParser.g:12248:5: (lv_type_7_0= ruleSadlPrimaryTypeReference )
                    // InternalDialogParser.g:12249:6: lv_type_7_0= ruleSadlPrimaryTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTypeSadlPrimaryTypeReferenceParserRuleCall_2_3_0());
                      					
                    }
                    pushFollow(FOLLOW_158);
                    lv_type_7_0=ruleSadlPrimaryTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"type",
                      							lv_type_7_0,
                      							"com.ge.research.sadl.SADL.SadlPrimaryTypeReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalDialogParser.g:12266:4: ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )?
                    int alt290=3;
                    int LA290_0 = input.LA(1);

                    if ( (LA290_0==LeftSquareBracket) ) {
                        alt290=1;
                    }
                    else if ( (LA290_0==Length) ) {
                        alt290=2;
                    }
                    switch (alt290) {
                        case 1 :
                            // InternalDialogParser.g:12267:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            {
                            // InternalDialogParser.g:12267:5: (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket )
                            // InternalDialogParser.g:12268:6: otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket
                            {
                            otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_159); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getPrimaryExpressionAccess().getLeftSquareBracketKeyword_2_4_0_0());
                              					
                            }
                            // InternalDialogParser.g:12272:6: ( (lv_arglist_9_0= ruleNestedExpression ) )?
                            int alt286=2;
                            int LA286_0 = input.LA(1);

                            if ( (LA286_0==Another||LA286_0==Element||LA286_0==Sublist||LA286_0==Length||LA286_0==Select||(LA286_0>=Count && LA286_0<=False)||LA286_0==First||(LA286_0>=Index && LA286_0<=Known)||LA286_0==There||LA286_0==Value||LA286_0==None||LA286_0==Last||LA286_0==Only||LA286_0==Some||(LA286_0>=True && LA286_0<=Type)||LA286_0==The||LA286_0==Any||LA286_0==Not||LA286_0==The_1||LA286_0==HyphenMinusHyphenMinus||(LA286_0>=An && LA286_0<=An_1)||LA286_0==ExclamationMark||LA286_0==LeftParenthesis||LA286_0==HyphenMinus||LA286_0==A||LA286_0==LeftSquareBracket||(LA286_0>=A_1 && LA286_0<=LeftCurlyBracket)||LA286_0==RULE_NUMBER||(LA286_0>=RULE_ID && LA286_0<=RULE_STRING)) ) {
                                alt286=1;
                            }
                            switch (alt286) {
                                case 1 :
                                    // InternalDialogParser.g:12273:7: (lv_arglist_9_0= ruleNestedExpression )
                                    {
                                    // InternalDialogParser.g:12273:7: (lv_arglist_9_0= ruleNestedExpression )
                                    // InternalDialogParser.g:12274:8: lv_arglist_9_0= ruleNestedExpression
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_113);
                                    lv_arglist_9_0=ruleNestedExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                      								}
                                      								add(
                                      									current,
                                      									"arglist",
                                      									lv_arglist_9_0,
                                      									"com.ge.research.sadl.SADL.NestedExpression");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }

                            // InternalDialogParser.g:12291:6: (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )*
                            loop287:
                            do {
                                int alt287=2;
                                int LA287_0 = input.LA(1);

                                if ( (LA287_0==Comma) ) {
                                    alt287=1;
                                }


                                switch (alt287) {
                            	case 1 :
                            	    // InternalDialogParser.g:12292:7: otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    {
                            	    otherlv_10=(Token)match(input,Comma,FOLLOW_156); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_10, grammarAccess.getPrimaryExpressionAccess().getCommaKeyword_2_4_0_2_0());
                            	      						
                            	    }
                            	    // InternalDialogParser.g:12296:7: ( (lv_arglist_11_0= ruleNestedExpression ) )
                            	    // InternalDialogParser.g:12297:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    {
                            	    // InternalDialogParser.g:12297:8: (lv_arglist_11_0= ruleNestedExpression )
                            	    // InternalDialogParser.g:12298:9: lv_arglist_11_0= ruleNestedExpression
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArglistNestedExpressionParserRuleCall_2_4_0_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_113);
                            	    lv_arglist_11_0=ruleNestedExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"arglist",
                            	      										lv_arglist_11_0,
                            	      										"com.ge.research.sadl.SADL.NestedExpression");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop287;
                                }
                            } while (true);

                            otherlv_12=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_12, grammarAccess.getPrimaryExpressionAccess().getRightSquareBracketKeyword_2_4_0_3());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:12322:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            {
                            // InternalDialogParser.g:12322:5: (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? )
                            // InternalDialogParser.g:12323:6: otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            {
                            otherlv_13=(Token)match(input,Length,FOLLOW_79); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_13, grammarAccess.getPrimaryExpressionAccess().getLengthKeyword_2_4_1_0());
                              					
                            }
                            // InternalDialogParser.g:12327:6: ( (lv_len_14_0= ruleFacetNumber ) )
                            // InternalDialogParser.g:12328:7: (lv_len_14_0= ruleFacetNumber )
                            {
                            // InternalDialogParser.g:12328:7: (lv_len_14_0= ruleFacetNumber )
                            // InternalDialogParser.g:12329:8: lv_len_14_0= ruleFacetNumber
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getLenFacetNumberParserRuleCall_2_4_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_160);
                            lv_len_14_0=ruleFacetNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                              								}
                              								set(
                              									current,
                              									"len",
                              									lv_len_14_0,
                              									"com.ge.research.sadl.SADL.FacetNumber");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalDialogParser.g:12346:6: ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )?
                            int alt289=2;
                            int LA289_0 = input.LA(1);

                            if ( (LA289_0==HyphenMinus) ) {
                                int LA289_1 = input.LA(2);

                                if ( (LA289_1==RULE_NUMBER) ) {
                                    int LA289_3 = input.LA(3);

                                    if ( (synpred34_InternalDialogParser()) ) {
                                        alt289=1;
                                    }
                                }
                                else if ( (LA289_1==HyphenMinus) ) {
                                    int LA289_4 = input.LA(3);

                                    if ( (LA289_4==RULE_NUMBER) ) {
                                        int LA289_6 = input.LA(4);

                                        if ( (synpred34_InternalDialogParser()) ) {
                                            alt289=1;
                                        }
                                    }
                                }
                                else if ( (LA289_1==Asterisk) && (synpred34_InternalDialogParser())) {
                                    alt289=1;
                                }
                            }
                            switch (alt289) {
                                case 1 :
                                    // InternalDialogParser.g:12347:7: ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    {
                                    // InternalDialogParser.g:12348:7: (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) )
                                    // InternalDialogParser.g:12349:8: otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    {
                                    otherlv_15=(Token)match(input,HyphenMinus,FOLLOW_81); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_15, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusKeyword_2_4_1_2_0_0());
                                      							
                                    }
                                    // InternalDialogParser.g:12353:8: ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) )
                                    // InternalDialogParser.g:12354:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    {
                                    // InternalDialogParser.g:12354:9: ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) )
                                    // InternalDialogParser.g:12355:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    {
                                    // InternalDialogParser.g:12355:10: (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk )
                                    int alt288=2;
                                    int LA288_0 = input.LA(1);

                                    if ( (LA288_0==HyphenMinus||LA288_0==RULE_NUMBER) ) {
                                        alt288=1;
                                    }
                                    else if ( (LA288_0==Asterisk) ) {
                                        alt288=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 288, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt288) {
                                        case 1 :
                                            // InternalDialogParser.g:12356:11: lv_maxlen_16_1= ruleFacetNumber
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getMaxlenFacetNumberParserRuleCall_2_4_1_2_0_1_0_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_2);
                                            lv_maxlen_16_1=ruleFacetNumber();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											set(
                                              												current,
                                              												"maxlen",
                                              												lv_maxlen_16_1,
                                              												"com.ge.research.sadl.SADL.FacetNumber");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalDialogParser.g:12372:11: lv_maxlen_16_2= Asterisk
                                            {
                                            lv_maxlen_16_2=(Token)match(input,Asterisk,FOLLOW_2); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_maxlen_16_2, grammarAccess.getPrimaryExpressionAccess().getMaxlenAsteriskKeyword_2_4_1_2_0_1_0_1());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                                              											}
                                              											setWithLastConsumed(current, "maxlen", lv_maxlen_16_2, null);
                                              										
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:12391:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    {
                    // InternalDialogParser.g:12391:3: ( () ( (lv_value_18_0= RULE_STRING ) ) )
                    // InternalDialogParser.g:12392:4: () ( (lv_value_18_0= RULE_STRING ) )
                    {
                    // InternalDialogParser.g:12392:4: ()
                    // InternalDialogParser.g:12393:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getStringLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12399:4: ( (lv_value_18_0= RULE_STRING ) )
                    // InternalDialogParser.g:12400:5: (lv_value_18_0= RULE_STRING )
                    {
                    // InternalDialogParser.g:12400:5: (lv_value_18_0= RULE_STRING )
                    // InternalDialogParser.g:12401:6: lv_value_18_0= RULE_STRING
                    {
                    lv_value_18_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_18_0, grammarAccess.getPrimaryExpressionAccess().getValueSTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"value",
                      							lv_value_18_0,
                      							"com.ge.research.sadl.SADL.STRING");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:12419:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    {
                    // InternalDialogParser.g:12419:3: ( () ( (lv_value_20_0= ruleAnyNumber ) ) )
                    // InternalDialogParser.g:12420:4: () ( (lv_value_20_0= ruleAnyNumber ) )
                    {
                    // InternalDialogParser.g:12420:4: ()
                    // InternalDialogParser.g:12421:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getNumberLiteralAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12427:4: ( (lv_value_20_0= ruleAnyNumber ) )
                    // InternalDialogParser.g:12428:5: (lv_value_20_0= ruleAnyNumber )
                    {
                    // InternalDialogParser.g:12428:5: (lv_value_20_0= ruleAnyNumber )
                    // InternalDialogParser.g:12429:6: lv_value_20_0= ruleAnyNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueAnyNumberParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_20_0=ruleAnyNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_20_0,
                      							"com.ge.research.sadl.SADL.AnyNumber");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:12448:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    {
                    // InternalDialogParser.g:12448:3: ( () ( (lv_value_22_0= ruleBooleanValue ) ) )
                    // InternalDialogParser.g:12449:4: () ( (lv_value_22_0= ruleBooleanValue ) )
                    {
                    // InternalDialogParser.g:12449:4: ()
                    // InternalDialogParser.g:12450:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getBooleanLiteralAction_5_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12456:4: ( (lv_value_22_0= ruleBooleanValue ) )
                    // InternalDialogParser.g:12457:5: (lv_value_22_0= ruleBooleanValue )
                    {
                    // InternalDialogParser.g:12457:5: (lv_value_22_0= ruleBooleanValue )
                    // InternalDialogParser.g:12458:6: lv_value_22_0= ruleBooleanValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueBooleanValueParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_22_0=ruleBooleanValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_22_0,
                      							"com.ge.research.sadl.SADL.BooleanValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:12477:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    {
                    // InternalDialogParser.g:12477:3: ( () ( (lv_constant_24_0= ruleConstants ) ) )
                    // InternalDialogParser.g:12478:4: () ( (lv_constant_24_0= ruleConstants ) )
                    {
                    // InternalDialogParser.g:12478:4: ()
                    // InternalDialogParser.g:12479:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getConstantAction_6_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12485:4: ( (lv_constant_24_0= ruleConstants ) )
                    // InternalDialogParser.g:12486:5: (lv_constant_24_0= ruleConstants )
                    {
                    // InternalDialogParser.g:12486:5: (lv_constant_24_0= ruleConstants )
                    // InternalDialogParser.g:12487:6: lv_constant_24_0= ruleConstants
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getConstantConstantsParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_constant_24_0=ruleConstants();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"constant",
                      							lv_constant_24_0,
                      							"com.ge.research.sadl.SADL.Constants");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:12506:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    {
                    // InternalDialogParser.g:12506:3: ( () ( (lv_valueTable_26_0= ruleValueTable ) ) )
                    // InternalDialogParser.g:12507:4: () ( (lv_valueTable_26_0= ruleValueTable ) )
                    {
                    // InternalDialogParser.g:12507:4: ()
                    // InternalDialogParser.g:12508:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryExpressionAccess().getValueTableAction_7_0(),
                      						current);
                      				
                    }

                    }

                    // InternalDialogParser.g:12514:4: ( (lv_valueTable_26_0= ruleValueTable ) )
                    // InternalDialogParser.g:12515:5: (lv_valueTable_26_0= ruleValueTable )
                    {
                    // InternalDialogParser.g:12515:5: (lv_valueTable_26_0= ruleValueTable )
                    // InternalDialogParser.g:12516:6: lv_valueTable_26_0= ruleValueTable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getValueTableValueTableParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_valueTable_26_0=ruleValueTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
                      						}
                      						set(
                      							current,
                      							"valueTable",
                      							lv_valueTable_26_0,
                      							"com.ge.research.sadl.SADL.ValueTable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "norm3_PrimaryExpression"


    // $ANTLR start "entryRuleName"
    // InternalDialogParser.g:12538:1: entryRuleName returns [EObject current=null] : iv_ruleName= ruleName EOF ;
    public final EObject entryRuleName() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleName = null;


        try {
            // InternalDialogParser.g:12538:45: (iv_ruleName= ruleName EOF )
            // InternalDialogParser.g:12539:2: iv_ruleName= ruleName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleName=ruleName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleName"


    // $ANTLR start "ruleName"
    // InternalDialogParser.g:12545:1: ruleName returns [EObject current=null] : ( () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )? ) ;
    public final EObject ruleName() throws RecognitionException {
        EObject current = null;

        Token lv_function_2_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_arglist_3_0 = null;

        EObject lv_arglist_5_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:12551:2: ( ( () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )? ) )
            // InternalDialogParser.g:12552:2: ( () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )? )
            {
            // InternalDialogParser.g:12552:2: ( () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )? )
            // InternalDialogParser.g:12553:3: () ( ( ruleQNAME ) ) ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )?
            {
            // InternalDialogParser.g:12553:3: ()
            // InternalDialogParser.g:12554:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNameAccess().getNameAction_0(),
              					current);
              			
            }

            }

            // InternalDialogParser.g:12560:3: ( ( ruleQNAME ) )
            // InternalDialogParser.g:12561:4: ( ruleQNAME )
            {
            // InternalDialogParser.g:12561:4: ( ruleQNAME )
            // InternalDialogParser.g:12562:5: ruleQNAME
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNameRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNameAccess().getNameSadlResourceCrossReference_1_0());
              				
            }
            pushFollow(FOLLOW_161);
            ruleQNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:12576:3: ( ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis ) )?
            int alt294=2;
            int LA294_0 = input.LA(1);

            if ( (LA294_0==LeftParenthesis) && (synpred35_InternalDialogParser())) {
                alt294=1;
            }
            switch (alt294) {
                case 1 :
                    // InternalDialogParser.g:12577:4: ( LeftParenthesis )=> ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis )
                    {
                    // InternalDialogParser.g:12578:4: ( ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis )
                    // InternalDialogParser.g:12579:5: ( (lv_function_2_0= LeftParenthesis ) ) ( (lv_arglist_3_0= ruleNestedExpression ) )? (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )* otherlv_6= RightParenthesis
                    {
                    // InternalDialogParser.g:12579:5: ( (lv_function_2_0= LeftParenthesis ) )
                    // InternalDialogParser.g:12580:6: (lv_function_2_0= LeftParenthesis )
                    {
                    // InternalDialogParser.g:12580:6: (lv_function_2_0= LeftParenthesis )
                    // InternalDialogParser.g:12581:7: lv_function_2_0= LeftParenthesis
                    {
                    lv_function_2_0=(Token)match(input,LeftParenthesis,FOLLOW_162); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_function_2_0, grammarAccess.getNameAccess().getFunctionLeftParenthesisKeyword_2_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNameRule());
                      							}
                      							setWithLastConsumed(current, "function", true, "(");
                      						
                    }

                    }


                    }

                    // InternalDialogParser.g:12593:5: ( (lv_arglist_3_0= ruleNestedExpression ) )?
                    int alt292=2;
                    int LA292_0 = input.LA(1);

                    if ( (LA292_0==Another||LA292_0==Element||LA292_0==Sublist||LA292_0==Length||LA292_0==Select||(LA292_0>=Count && LA292_0<=False)||LA292_0==First||(LA292_0>=Index && LA292_0<=Known)||LA292_0==There||LA292_0==Value||LA292_0==None||LA292_0==Last||LA292_0==Only||LA292_0==Some||(LA292_0>=True && LA292_0<=Type)||LA292_0==The||LA292_0==Any||LA292_0==Not||LA292_0==The_1||LA292_0==HyphenMinusHyphenMinus||(LA292_0>=An && LA292_0<=An_1)||LA292_0==ExclamationMark||LA292_0==LeftParenthesis||LA292_0==HyphenMinus||LA292_0==A||LA292_0==LeftSquareBracket||(LA292_0>=A_1 && LA292_0<=LeftCurlyBracket)||LA292_0==RULE_NUMBER||(LA292_0>=RULE_ID && LA292_0<=RULE_STRING)) ) {
                        alt292=1;
                    }
                    switch (alt292) {
                        case 1 :
                            // InternalDialogParser.g:12594:6: (lv_arglist_3_0= ruleNestedExpression )
                            {
                            // InternalDialogParser.g:12594:6: (lv_arglist_3_0= ruleNestedExpression )
                            // InternalDialogParser.g:12595:7: lv_arglist_3_0= ruleNestedExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getNameAccess().getArglistNestedExpressionParserRuleCall_2_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_28);
                            lv_arglist_3_0=ruleNestedExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getNameRule());
                              							}
                              							add(
                              								current,
                              								"arglist",
                              								lv_arglist_3_0,
                              								"com.ge.research.sadl.SADL.NestedExpression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalDialogParser.g:12612:5: (otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) ) )*
                    loop293:
                    do {
                        int alt293=2;
                        int LA293_0 = input.LA(1);

                        if ( (LA293_0==Comma) ) {
                            alt293=1;
                        }


                        switch (alt293) {
                    	case 1 :
                    	    // InternalDialogParser.g:12613:6: otherlv_4= Comma ( (lv_arglist_5_0= ruleNestedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,Comma,FOLLOW_156); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getNameAccess().getCommaKeyword_2_0_2_0());
                    	      					
                    	    }
                    	    // InternalDialogParser.g:12617:6: ( (lv_arglist_5_0= ruleNestedExpression ) )
                    	    // InternalDialogParser.g:12618:7: (lv_arglist_5_0= ruleNestedExpression )
                    	    {
                    	    // InternalDialogParser.g:12618:7: (lv_arglist_5_0= ruleNestedExpression )
                    	    // InternalDialogParser.g:12619:8: lv_arglist_5_0= ruleNestedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getNameAccess().getArglistNestedExpressionParserRuleCall_2_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_28);
                    	    lv_arglist_5_0=ruleNestedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getNameRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"arglist",
                    	      									lv_arglist_5_0,
                    	      									"com.ge.research.sadl.SADL.NestedExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop293;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getNameAccess().getRightParenthesisKeyword_2_0_3());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleName"


    // $ANTLR start "entryRuleValueTable"
    // InternalDialogParser.g:12647:1: entryRuleValueTable returns [EObject current=null] : iv_ruleValueTable= ruleValueTable EOF ;
    public final EObject entryRuleValueTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueTable = null;


        try {
            // InternalDialogParser.g:12647:51: (iv_ruleValueTable= ruleValueTable EOF )
            // InternalDialogParser.g:12648:2: iv_ruleValueTable= ruleValueTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueTable=ruleValueTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueTable"


    // $ANTLR start "ruleValueTable"
    // InternalDialogParser.g:12654:1: ruleValueTable returns [EObject current=null] : ( (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket ) | (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket ) ) ;
    public final EObject ruleValueTable() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_row_1_0 = null;

        EObject lv_rows_5_0 = null;

        EObject lv_rows_9_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:12660:2: ( ( (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket ) | (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket ) ) )
            // InternalDialogParser.g:12661:2: ( (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket ) | (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket ) )
            {
            // InternalDialogParser.g:12661:2: ( (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket ) | (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket ) )
            int alt297=2;
            int LA297_0 = input.LA(1);

            if ( (LA297_0==LeftSquareBracket) ) {
                alt297=1;
            }
            else if ( (LA297_0==LeftCurlyBracket) ) {
                alt297=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 297, 0, input);

                throw nvae;
            }
            switch (alt297) {
                case 1 :
                    // InternalDialogParser.g:12662:3: (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket )
                    {
                    // InternalDialogParser.g:12662:3: (otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket )
                    // InternalDialogParser.g:12663:4: otherlv_0= LeftSquareBracket ( (lv_row_1_0= ruleValueRow ) ) otherlv_2= RightSquareBracket
                    {
                    otherlv_0=(Token)match(input,LeftSquareBracket,FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_0_0());
                      			
                    }
                    // InternalDialogParser.g:12667:4: ( (lv_row_1_0= ruleValueRow ) )
                    // InternalDialogParser.g:12668:5: (lv_row_1_0= ruleValueRow )
                    {
                    // InternalDialogParser.g:12668:5: (lv_row_1_0= ruleValueRow )
                    // InternalDialogParser.g:12669:6: lv_row_1_0= ruleValueRow
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValueTableAccess().getRowValueRowParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_163);
                    lv_row_1_0=ruleValueRow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValueTableRule());
                      						}
                      						set(
                      							current,
                      							"row",
                      							lv_row_1_0,
                      							"com.ge.research.sadl.SADL.ValueRow");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_0_2());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:12692:3: (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket )
                    {
                    // InternalDialogParser.g:12692:3: (otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket )
                    // InternalDialogParser.g:12693:4: otherlv_3= LeftCurlyBracket otherlv_4= LeftSquareBracket ( (lv_rows_5_0= ruleValueRow ) ) otherlv_6= RightSquareBracket ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )* otherlv_11= RightCurlyBracket
                    {
                    otherlv_3=(Token)match(input,LeftCurlyBracket,FOLLOW_164); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getValueTableAccess().getLeftCurlyBracketKeyword_1_0());
                      			
                    }
                    otherlv_4=(Token)match(input,LeftSquareBracket,FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_1_1());
                      			
                    }
                    // InternalDialogParser.g:12701:4: ( (lv_rows_5_0= ruleValueRow ) )
                    // InternalDialogParser.g:12702:5: (lv_rows_5_0= ruleValueRow )
                    {
                    // InternalDialogParser.g:12702:5: (lv_rows_5_0= ruleValueRow )
                    // InternalDialogParser.g:12703:6: lv_rows_5_0= ruleValueRow
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValueTableAccess().getRowsValueRowParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_163);
                    lv_rows_5_0=ruleValueRow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValueTableRule());
                      						}
                      						add(
                      							current,
                      							"rows",
                      							lv_rows_5_0,
                      							"com.ge.research.sadl.SADL.ValueRow");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,RightSquareBracket,FOLLOW_165); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_1_3());
                      			
                    }
                    // InternalDialogParser.g:12724:4: ( (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket )*
                    loop296:
                    do {
                        int alt296=2;
                        int LA296_0 = input.LA(1);

                        if ( (LA296_0==Comma||LA296_0==LeftSquareBracket) ) {
                            alt296=1;
                        }


                        switch (alt296) {
                    	case 1 :
                    	    // InternalDialogParser.g:12725:5: (otherlv_7= Comma )? otherlv_8= LeftSquareBracket ( (lv_rows_9_0= ruleValueRow ) ) otherlv_10= RightSquareBracket
                    	    {
                    	    // InternalDialogParser.g:12725:5: (otherlv_7= Comma )?
                    	    int alt295=2;
                    	    int LA295_0 = input.LA(1);

                    	    if ( (LA295_0==Comma) ) {
                    	        alt295=1;
                    	    }
                    	    switch (alt295) {
                    	        case 1 :
                    	            // InternalDialogParser.g:12726:6: otherlv_7= Comma
                    	            {
                    	            otherlv_7=(Token)match(input,Comma,FOLLOW_164); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_7, grammarAccess.getValueTableAccess().getCommaKeyword_1_4_0());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    otherlv_8=(Token)match(input,LeftSquareBracket,FOLLOW_156); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getValueTableAccess().getLeftSquareBracketKeyword_1_4_1());
                    	      				
                    	    }
                    	    // InternalDialogParser.g:12735:5: ( (lv_rows_9_0= ruleValueRow ) )
                    	    // InternalDialogParser.g:12736:6: (lv_rows_9_0= ruleValueRow )
                    	    {
                    	    // InternalDialogParser.g:12736:6: (lv_rows_9_0= ruleValueRow )
                    	    // InternalDialogParser.g:12737:7: lv_rows_9_0= ruleValueRow
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getValueTableAccess().getRowsValueRowParserRuleCall_1_4_2_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_163);
                    	    lv_rows_9_0=ruleValueRow();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getValueTableRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"rows",
                    	      								lv_rows_9_0,
                    	      								"com.ge.research.sadl.SADL.ValueRow");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_10=(Token)match(input,RightSquareBracket,FOLLOW_165); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getValueTableAccess().getRightSquareBracketKeyword_1_4_3());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop296;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getValueTableAccess().getRightCurlyBracketKeyword_1_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueTable"


    // $ANTLR start "entryRuleBooleanValue"
    // InternalDialogParser.g:12768:1: entryRuleBooleanValue returns [String current=null] : iv_ruleBooleanValue= ruleBooleanValue EOF ;
    public final String entryRuleBooleanValue() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleBooleanValue = null;


        try {
            // InternalDialogParser.g:12768:52: (iv_ruleBooleanValue= ruleBooleanValue EOF )
            // InternalDialogParser.g:12769:2: iv_ruleBooleanValue= ruleBooleanValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanValue=ruleBooleanValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanValue.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanValue"


    // $ANTLR start "ruleBooleanValue"
    // InternalDialogParser.g:12775:1: ruleBooleanValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= True | kw= False ) ;
    public final AntlrDatatypeRuleToken ruleBooleanValue() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:12781:2: ( (kw= True | kw= False ) )
            // InternalDialogParser.g:12782:2: (kw= True | kw= False )
            {
            // InternalDialogParser.g:12782:2: (kw= True | kw= False )
            int alt298=2;
            int LA298_0 = input.LA(1);

            if ( (LA298_0==True) ) {
                alt298=1;
            }
            else if ( (LA298_0==False) ) {
                alt298=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 298, 0, input);

                throw nvae;
            }
            switch (alt298) {
                case 1 :
                    // InternalDialogParser.g:12783:3: kw= True
                    {
                    kw=(Token)match(input,True,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getTrueKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:12789:3: kw= False
                    {
                    kw=(Token)match(input,False,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getBooleanValueAccess().getFalseKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBooleanValue"


    // $ANTLR start "entryRuleConstants"
    // InternalDialogParser.g:12798:1: entryRuleConstants returns [String current=null] : iv_ruleConstants= ruleConstants EOF ;
    public final String entryRuleConstants() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleConstants = null;


        try {
            // InternalDialogParser.g:12798:49: (iv_ruleConstants= ruleConstants EOF )
            // InternalDialogParser.g:12799:2: iv_ruleConstants= ruleConstants EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstantsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstants=ruleConstants();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstants.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConstants"


    // $ANTLR start "ruleConstants"
    // InternalDialogParser.g:12805:1: ruleConstants returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value ) ;
    public final AntlrDatatypeRuleToken ruleConstants() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DefiniteArticle_7 = null;

        AntlrDatatypeRuleToken this_DefiniteArticle_10 = null;

        AntlrDatatypeRuleToken this_AnArticle_14 = null;

        AntlrDatatypeRuleToken this_Ordinal_15 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:12811:2: ( (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value ) )
            // InternalDialogParser.g:12812:2: (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value )
            {
            // InternalDialogParser.g:12812:2: (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value )
            int alt304=11;
            alt304 = dfa304.predict(input);
            switch (alt304) {
                case 1 :
                    // InternalDialogParser.g:12813:3: kw= PI
                    {
                    kw=(Token)match(input,PI,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getPIKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:12819:3: kw= Known
                    {
                    kw=(Token)match(input,Known,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getKnownKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:12825:3: kw= E_1
                    {
                    kw=(Token)match(input,E_1,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getEKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:12831:3: kw= HyphenMinusHyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getHyphenMinusHyphenMinusKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:12837:3: kw= None
                    {
                    kw=(Token)match(input,None,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getNoneKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:12843:3: ( (kw= A_1 )? kw= Type )
                    {
                    // InternalDialogParser.g:12843:3: ( (kw= A_1 )? kw= Type )
                    // InternalDialogParser.g:12844:4: (kw= A_1 )? kw= Type
                    {
                    // InternalDialogParser.g:12844:4: (kw= A_1 )?
                    int alt299=2;
                    int LA299_0 = input.LA(1);

                    if ( (LA299_0==A_1) ) {
                        alt299=1;
                    }
                    switch (alt299) {
                        case 1 :
                            // InternalDialogParser.g:12845:5: kw= A_1
                            {
                            kw=(Token)match(input,A_1,FOLLOW_17); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getConstantsAccess().getAKeyword_5_0());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,Type,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getConstantsAccess().getTypeKeyword_5_1());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:12858:3: ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length )
                    {
                    // InternalDialogParser.g:12858:3: ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length )
                    // InternalDialogParser.g:12859:4: (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length
                    {
                    // InternalDialogParser.g:12859:4: (this_DefiniteArticle_7= ruleDefiniteArticle )?
                    int alt300=2;
                    int LA300_0 = input.LA(1);

                    if ( (LA300_0==The||LA300_0==The_1) ) {
                        alt300=1;
                    }
                    switch (alt300) {
                        case 1 :
                            // InternalDialogParser.g:12860:5: this_DefiniteArticle_7= ruleDefiniteArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getConstantsAccess().getDefiniteArticleParserRuleCall_6_0());
                              				
                            }
                            pushFollow(FOLLOW_166);
                            this_DefiniteArticle_7=ruleDefiniteArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DefiniteArticle_7);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,Length,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getConstantsAccess().getLengthKeyword_6_1());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:12878:3: kw= Count
                    {
                    kw=(Token)match(input,Count,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getCountKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalDialogParser.g:12884:3: ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index )
                    {
                    // InternalDialogParser.g:12884:3: ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index )
                    // InternalDialogParser.g:12885:4: (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index
                    {
                    // InternalDialogParser.g:12885:4: (this_DefiniteArticle_10= ruleDefiniteArticle )?
                    int alt301=2;
                    int LA301_0 = input.LA(1);

                    if ( (LA301_0==The||LA301_0==The_1) ) {
                        alt301=1;
                    }
                    switch (alt301) {
                        case 1 :
                            // InternalDialogParser.g:12886:5: this_DefiniteArticle_10= ruleDefiniteArticle
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getConstantsAccess().getDefiniteArticleParserRuleCall_8_0());
                              				
                            }
                            pushFollow(FOLLOW_167);
                            this_DefiniteArticle_10=ruleDefiniteArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_DefiniteArticle_10);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,Index,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getConstantsAccess().getIndexKeyword_8_1());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalDialogParser.g:12904:3: ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element )
                    {
                    // InternalDialogParser.g:12904:3: ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element )
                    // InternalDialogParser.g:12905:4: (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element
                    {
                    // InternalDialogParser.g:12905:4: (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) )
                    int alt303=3;
                    switch ( input.LA(1) ) {
                    case First:
                        {
                        alt303=1;
                        }
                        break;
                    case Last:
                        {
                        alt303=2;
                        }
                        break;
                    case Another:
                    case Some:
                    case The:
                    case Any:
                    case The_1:
                    case An:
                    case An_1:
                    case A:
                    case A_1:
                        {
                        alt303=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 303, 0, input);

                        throw nvae;
                    }

                    switch (alt303) {
                        case 1 :
                            // InternalDialogParser.g:12906:5: kw= First
                            {
                            kw=(Token)match(input,First,FOLLOW_168); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getConstantsAccess().getFirstKeyword_9_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalDialogParser.g:12912:5: kw= Last
                            {
                            kw=(Token)match(input,Last,FOLLOW_168); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getConstantsAccess().getLastKeyword_9_0_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalDialogParser.g:12918:5: (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? )
                            {
                            // InternalDialogParser.g:12918:5: (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? )
                            // InternalDialogParser.g:12919:6: this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )?
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getConstantsAccess().getAnArticleParserRuleCall_9_0_2_0());
                              					
                            }
                            pushFollow(FOLLOW_169);
                            this_AnArticle_14=ruleAnArticle();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						current.merge(this_AnArticle_14);
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						afterParserOrEnumRuleCall();
                              					
                            }
                            // InternalDialogParser.g:12929:6: (this_Ordinal_15= ruleOrdinal )?
                            int alt302=2;
                            int LA302_0 = input.LA(1);

                            if ( (LA302_0==Seventh||LA302_0==Eighth||LA302_0==Fourth||LA302_0==Second||(LA302_0>=Fifth && LA302_0<=First)||LA302_0==Ninth||(LA302_0>=Other && LA302_0<=Tenth)||LA302_0==Third) ) {
                                alt302=1;
                            }
                            switch (alt302) {
                                case 1 :
                                    // InternalDialogParser.g:12930:7: this_Ordinal_15= ruleOrdinal
                                    {
                                    if ( state.backtracking==0 ) {

                                      							newCompositeNode(grammarAccess.getConstantsAccess().getOrdinalParserRuleCall_9_0_2_1());
                                      						
                                    }
                                    pushFollow(FOLLOW_168);
                                    this_Ordinal_15=ruleOrdinal();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							current.merge(this_Ordinal_15);
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							afterParserOrEnumRuleCall();
                                      						
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    kw=(Token)match(input,Element,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getConstantsAccess().getElementKeyword_9_1());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalDialogParser.g:12950:3: kw= Value
                    {
                    kw=(Token)match(input,Value,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getConstantsAccess().getValueKeyword_10());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConstants"


    // $ANTLR start "entryRuleValueRow"
    // InternalDialogParser.g:12959:1: entryRuleValueRow returns [EObject current=null] : iv_ruleValueRow= ruleValueRow EOF ;
    public final EObject entryRuleValueRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueRow = null;


        try {
            // InternalDialogParser.g:12959:49: (iv_ruleValueRow= ruleValueRow EOF )
            // InternalDialogParser.g:12960:2: iv_ruleValueRow= ruleValueRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueRow=ruleValueRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueRow"


    // $ANTLR start "ruleValueRow"
    // InternalDialogParser.g:12966:1: ruleValueRow returns [EObject current=null] : ( ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )* ) ;
    public final EObject ruleValueRow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_explicitValues_0_0 = null;

        EObject lv_explicitValues_2_0 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:12972:2: ( ( ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )* ) )
            // InternalDialogParser.g:12973:2: ( ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )* )
            {
            // InternalDialogParser.g:12973:2: ( ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )* )
            // InternalDialogParser.g:12974:3: ( (lv_explicitValues_0_0= ruleNestedExpression ) ) (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )*
            {
            // InternalDialogParser.g:12974:3: ( (lv_explicitValues_0_0= ruleNestedExpression ) )
            // InternalDialogParser.g:12975:4: (lv_explicitValues_0_0= ruleNestedExpression )
            {
            // InternalDialogParser.g:12975:4: (lv_explicitValues_0_0= ruleNestedExpression )
            // InternalDialogParser.g:12976:5: lv_explicitValues_0_0= ruleNestedExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueRowAccess().getExplicitValuesNestedExpressionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_170);
            lv_explicitValues_0_0=ruleNestedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueRowRule());
              					}
              					add(
              						current,
              						"explicitValues",
              						lv_explicitValues_0_0,
              						"com.ge.research.sadl.SADL.NestedExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalDialogParser.g:12993:3: (otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) ) )*
            loop305:
            do {
                int alt305=2;
                int LA305_0 = input.LA(1);

                if ( (LA305_0==Comma) ) {
                    alt305=1;
                }


                switch (alt305) {
            	case 1 :
            	    // InternalDialogParser.g:12994:4: otherlv_1= Comma ( (lv_explicitValues_2_0= ruleNestedExpression ) )
            	    {
            	    otherlv_1=(Token)match(input,Comma,FOLLOW_156); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getValueRowAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalDialogParser.g:12998:4: ( (lv_explicitValues_2_0= ruleNestedExpression ) )
            	    // InternalDialogParser.g:12999:5: (lv_explicitValues_2_0= ruleNestedExpression )
            	    {
            	    // InternalDialogParser.g:12999:5: (lv_explicitValues_2_0= ruleNestedExpression )
            	    // InternalDialogParser.g:13000:6: lv_explicitValues_2_0= ruleNestedExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValueRowAccess().getExplicitValuesNestedExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_170);
            	    lv_explicitValues_2_0=ruleNestedExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValueRowRule());
            	      						}
            	      						add(
            	      							current,
            	      							"explicitValues",
            	      							lv_explicitValues_2_0,
            	      							"com.ge.research.sadl.SADL.NestedExpression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop305;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueRow"


    // $ANTLR start "entryRuleAnyNumber"
    // InternalDialogParser.g:13022:1: entryRuleAnyNumber returns [String current=null] : iv_ruleAnyNumber= ruleAnyNumber EOF ;
    public final String entryRuleAnyNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAnyNumber = null;


        try {
            // InternalDialogParser.g:13022:49: (iv_ruleAnyNumber= ruleAnyNumber EOF )
            // InternalDialogParser.g:13023:2: iv_ruleAnyNumber= ruleAnyNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnyNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnyNumber=ruleAnyNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnyNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnyNumber"


    // $ANTLR start "ruleAnyNumber"
    // InternalDialogParser.g:13029:1: ruleAnyNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )? ) ;
    public final AntlrDatatypeRuleToken ruleAnyNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_DecimalNumber_0 = null;

        AntlrDatatypeRuleToken this_EXPONENT_1 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:13035:2: ( (this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )? ) )
            // InternalDialogParser.g:13036:2: (this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )? )
            {
            // InternalDialogParser.g:13036:2: (this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )? )
            // InternalDialogParser.g:13037:3: this_DecimalNumber_0= ruleDecimalNumber (this_EXPONENT_1= ruleEXPONENT )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAnyNumberAccess().getDecimalNumberParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_171);
            this_DecimalNumber_0=ruleDecimalNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_DecimalNumber_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalDialogParser.g:13047:3: (this_EXPONENT_1= ruleEXPONENT )?
            int alt306=2;
            int LA306_0 = input.LA(1);

            if ( (LA306_0==E||LA306_0==E_1) ) {
                alt306=1;
            }
            switch (alt306) {
                case 1 :
                    // InternalDialogParser.g:13048:4: this_EXPONENT_1= ruleEXPONENT
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAnyNumberAccess().getEXPONENTParserRuleCall_1());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_EXPONENT_1=ruleEXPONENT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_EXPONENT_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnyNumber"


    // $ANTLR start "entryRuleDecimalNumber"
    // InternalDialogParser.g:13063:1: entryRuleDecimalNumber returns [String current=null] : iv_ruleDecimalNumber= ruleDecimalNumber EOF ;
    public final String entryRuleDecimalNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDecimalNumber = null;


        try {
            // InternalDialogParser.g:13063:53: (iv_ruleDecimalNumber= ruleDecimalNumber EOF )
            // InternalDialogParser.g:13064:2: iv_ruleDecimalNumber= ruleDecimalNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDecimalNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDecimalNumber=ruleDecimalNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDecimalNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDecimalNumber"


    // $ANTLR start "ruleDecimalNumber"
    // InternalDialogParser.g:13070:1: ruleDecimalNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : this_NUMBER_0= RULE_NUMBER ;
    public final AntlrDatatypeRuleToken ruleDecimalNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_NUMBER_0=null;


        	enterRule();

        try {
            // InternalDialogParser.g:13076:2: (this_NUMBER_0= RULE_NUMBER )
            // InternalDialogParser.g:13077:2: this_NUMBER_0= RULE_NUMBER
            {
            this_NUMBER_0=(Token)match(input,RULE_NUMBER,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(this_NUMBER_0);
              	
            }
            if ( state.backtracking==0 ) {

              		newLeafNode(this_NUMBER_0, grammarAccess.getDecimalNumberAccess().getNUMBERTerminalRuleCall());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDecimalNumber"


    // $ANTLR start "entryRuleEXPONENT"
    // InternalDialogParser.g:13087:1: entryRuleEXPONENT returns [String current=null] : iv_ruleEXPONENT= ruleEXPONENT EOF ;
    public final String entryRuleEXPONENT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEXPONENT = null;


        try {
            // InternalDialogParser.g:13087:48: (iv_ruleEXPONENT= ruleEXPONENT EOF )
            // InternalDialogParser.g:13088:2: iv_ruleEXPONENT= ruleEXPONENT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEXPONENTRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEXPONENT=ruleEXPONENT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEXPONENT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEXPONENT"


    // $ANTLR start "ruleEXPONENT"
    // InternalDialogParser.g:13094:1: ruleEXPONENT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber ) ;
    public final AntlrDatatypeRuleToken ruleEXPONENT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DecimalNumber_4 = null;



        	enterRule();

        try {
            // InternalDialogParser.g:13100:2: ( ( (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber ) )
            // InternalDialogParser.g:13101:2: ( (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber )
            {
            // InternalDialogParser.g:13101:2: ( (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber )
            // InternalDialogParser.g:13102:3: (kw= E_1 | kw= E ) (kw= HyphenMinus | kw= PlusSign )? this_DecimalNumber_4= ruleDecimalNumber
            {
            // InternalDialogParser.g:13102:3: (kw= E_1 | kw= E )
            int alt307=2;
            int LA307_0 = input.LA(1);

            if ( (LA307_0==E_1) ) {
                alt307=1;
            }
            else if ( (LA307_0==E) ) {
                alt307=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 307, 0, input);

                throw nvae;
            }
            switch (alt307) {
                case 1 :
                    // InternalDialogParser.g:13103:4: kw= E_1
                    {
                    kw=(Token)match(input,E_1,FOLLOW_172); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getEKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:13109:4: kw= E
                    {
                    kw=(Token)match(input,E,FOLLOW_172); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getEKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalDialogParser.g:13115:3: (kw= HyphenMinus | kw= PlusSign )?
            int alt308=3;
            int LA308_0 = input.LA(1);

            if ( (LA308_0==HyphenMinus) ) {
                alt308=1;
            }
            else if ( (LA308_0==PlusSign) ) {
                alt308=2;
            }
            switch (alt308) {
                case 1 :
                    // InternalDialogParser.g:13116:4: kw= HyphenMinus
                    {
                    kw=(Token)match(input,HyphenMinus,FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getHyphenMinusKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:13122:4: kw= PlusSign
                    {
                    kw=(Token)match(input,PlusSign,FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getEXPONENTAccess().getPlusSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getEXPONENTAccess().getDecimalNumberParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_2);
            this_DecimalNumber_4=ruleDecimalNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_DecimalNumber_4);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEXPONENT"


    // $ANTLR start "entrySuperEOS"
    // InternalDialogParser.g:13142:1: entrySuperEOS returns [String current=null] : iv_superEOS= superEOS EOF ;
    public final String entrySuperEOS() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_superEOS = null;


        try {
            // InternalDialogParser.g:13142:44: (iv_superEOS= superEOS EOF )
            // InternalDialogParser.g:13143:2: iv_superEOS= superEOS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSADLEOSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_superEOS=superEOS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superEOS.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperEOS"


    // $ANTLR start "superEOS"
    // InternalDialogParser.g:13149:1: superEOS returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= FullStop ;
    public final AntlrDatatypeRuleToken superEOS() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalDialogParser.g:13155:2: (kw= FullStop )
            // InternalDialogParser.g:13156:2: kw= FullStop
            {
            kw=(Token)match(input,FullStop,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getSADLEOSAccess().getFullStopKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superEOS"


    // $ANTLR start "entryRuleQNAME"
    // InternalDialogParser.g:13164:1: entryRuleQNAME returns [String current=null] : iv_ruleQNAME= ruleQNAME EOF ;
    public final String entryRuleQNAME() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQNAME = null;


        try {
            // InternalDialogParser.g:13164:45: (iv_ruleQNAME= ruleQNAME EOF )
            // InternalDialogParser.g:13165:2: iv_ruleQNAME= ruleQNAME EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQNAMERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQNAME=ruleQNAME();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQNAME.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQNAME"


    // $ANTLR start "ruleQNAME"
    // InternalDialogParser.g:13171:1: ruleQNAME returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL | this_ID_1= RULE_ID ) ;
    public final AntlrDatatypeRuleToken ruleQNAME() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_QNAME_TERMINAL_0=null;
        Token this_ID_1=null;


        	enterRule();

        try {
            // InternalDialogParser.g:13177:2: ( (this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL | this_ID_1= RULE_ID ) )
            // InternalDialogParser.g:13178:2: (this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL | this_ID_1= RULE_ID )
            {
            // InternalDialogParser.g:13178:2: (this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL | this_ID_1= RULE_ID )
            int alt309=2;
            int LA309_0 = input.LA(1);

            if ( (LA309_0==RULE_QNAME_TERMINAL) ) {
                alt309=1;
            }
            else if ( (LA309_0==RULE_ID) ) {
                alt309=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 309, 0, input);

                throw nvae;
            }
            switch (alt309) {
                case 1 :
                    // InternalDialogParser.g:13179:3: this_QNAME_TERMINAL_0= RULE_QNAME_TERMINAL
                    {
                    this_QNAME_TERMINAL_0=(Token)match(input,RULE_QNAME_TERMINAL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_QNAME_TERMINAL_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_QNAME_TERMINAL_0, grammarAccess.getQNAMEAccess().getQNAME_TERMINALTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:13187:3: this_ID_1= RULE_ID
                    {
                    this_ID_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_1, grammarAccess.getQNAMEAccess().getIDTerminalRuleCall_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQNAME"


    // $ANTLR start "ruleSadlDataType"
    // InternalDialogParser.g:13198:1: ruleSadlDataType returns [Enumerator current=null] : ( (enumLiteral_0= String ) | (enumLiteral_1= Boolean ) | (enumLiteral_2= Decimal ) | (enumLiteral_3= Int ) | (enumLiteral_4= Long ) | (enumLiteral_5= Float ) | (enumLiteral_6= Double ) | (enumLiteral_7= Duration ) | (enumLiteral_8= DateTime ) | (enumLiteral_9= Time ) | (enumLiteral_10= Date ) | (enumLiteral_11= GYearMonth ) | (enumLiteral_12= GYear ) | (enumLiteral_13= GMonthDay ) | (enumLiteral_14= GDay ) | (enumLiteral_15= GMonth ) | (enumLiteral_16= HexBinary ) | (enumLiteral_17= Base64Binary ) | (enumLiteral_18= AnyURI ) | (enumLiteral_19= Integer ) | (enumLiteral_20= NegativeInteger ) | (enumLiteral_21= NonNegativeInteger ) | (enumLiteral_22= PositiveInteger ) | (enumLiteral_23= NonPositiveInteger ) | (enumLiteral_24= Byte ) | (enumLiteral_25= UnsignedByte ) | (enumLiteral_26= UnsignedInt ) | (enumLiteral_27= AnySimpleType ) ) ;
    public final Enumerator ruleSadlDataType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;
        Token enumLiteral_9=null;
        Token enumLiteral_10=null;
        Token enumLiteral_11=null;
        Token enumLiteral_12=null;
        Token enumLiteral_13=null;
        Token enumLiteral_14=null;
        Token enumLiteral_15=null;
        Token enumLiteral_16=null;
        Token enumLiteral_17=null;
        Token enumLiteral_18=null;
        Token enumLiteral_19=null;
        Token enumLiteral_20=null;
        Token enumLiteral_21=null;
        Token enumLiteral_22=null;
        Token enumLiteral_23=null;
        Token enumLiteral_24=null;
        Token enumLiteral_25=null;
        Token enumLiteral_26=null;
        Token enumLiteral_27=null;


        	enterRule();

        try {
            // InternalDialogParser.g:13204:2: ( ( (enumLiteral_0= String ) | (enumLiteral_1= Boolean ) | (enumLiteral_2= Decimal ) | (enumLiteral_3= Int ) | (enumLiteral_4= Long ) | (enumLiteral_5= Float ) | (enumLiteral_6= Double ) | (enumLiteral_7= Duration ) | (enumLiteral_8= DateTime ) | (enumLiteral_9= Time ) | (enumLiteral_10= Date ) | (enumLiteral_11= GYearMonth ) | (enumLiteral_12= GYear ) | (enumLiteral_13= GMonthDay ) | (enumLiteral_14= GDay ) | (enumLiteral_15= GMonth ) | (enumLiteral_16= HexBinary ) | (enumLiteral_17= Base64Binary ) | (enumLiteral_18= AnyURI ) | (enumLiteral_19= Integer ) | (enumLiteral_20= NegativeInteger ) | (enumLiteral_21= NonNegativeInteger ) | (enumLiteral_22= PositiveInteger ) | (enumLiteral_23= NonPositiveInteger ) | (enumLiteral_24= Byte ) | (enumLiteral_25= UnsignedByte ) | (enumLiteral_26= UnsignedInt ) | (enumLiteral_27= AnySimpleType ) ) )
            // InternalDialogParser.g:13205:2: ( (enumLiteral_0= String ) | (enumLiteral_1= Boolean ) | (enumLiteral_2= Decimal ) | (enumLiteral_3= Int ) | (enumLiteral_4= Long ) | (enumLiteral_5= Float ) | (enumLiteral_6= Double ) | (enumLiteral_7= Duration ) | (enumLiteral_8= DateTime ) | (enumLiteral_9= Time ) | (enumLiteral_10= Date ) | (enumLiteral_11= GYearMonth ) | (enumLiteral_12= GYear ) | (enumLiteral_13= GMonthDay ) | (enumLiteral_14= GDay ) | (enumLiteral_15= GMonth ) | (enumLiteral_16= HexBinary ) | (enumLiteral_17= Base64Binary ) | (enumLiteral_18= AnyURI ) | (enumLiteral_19= Integer ) | (enumLiteral_20= NegativeInteger ) | (enumLiteral_21= NonNegativeInteger ) | (enumLiteral_22= PositiveInteger ) | (enumLiteral_23= NonPositiveInteger ) | (enumLiteral_24= Byte ) | (enumLiteral_25= UnsignedByte ) | (enumLiteral_26= UnsignedInt ) | (enumLiteral_27= AnySimpleType ) )
            {
            // InternalDialogParser.g:13205:2: ( (enumLiteral_0= String ) | (enumLiteral_1= Boolean ) | (enumLiteral_2= Decimal ) | (enumLiteral_3= Int ) | (enumLiteral_4= Long ) | (enumLiteral_5= Float ) | (enumLiteral_6= Double ) | (enumLiteral_7= Duration ) | (enumLiteral_8= DateTime ) | (enumLiteral_9= Time ) | (enumLiteral_10= Date ) | (enumLiteral_11= GYearMonth ) | (enumLiteral_12= GYear ) | (enumLiteral_13= GMonthDay ) | (enumLiteral_14= GDay ) | (enumLiteral_15= GMonth ) | (enumLiteral_16= HexBinary ) | (enumLiteral_17= Base64Binary ) | (enumLiteral_18= AnyURI ) | (enumLiteral_19= Integer ) | (enumLiteral_20= NegativeInteger ) | (enumLiteral_21= NonNegativeInteger ) | (enumLiteral_22= PositiveInteger ) | (enumLiteral_23= NonPositiveInteger ) | (enumLiteral_24= Byte ) | (enumLiteral_25= UnsignedByte ) | (enumLiteral_26= UnsignedInt ) | (enumLiteral_27= AnySimpleType ) )
            int alt310=28;
            switch ( input.LA(1) ) {
            case String:
                {
                alt310=1;
                }
                break;
            case Boolean:
                {
                alt310=2;
                }
                break;
            case Decimal:
                {
                alt310=3;
                }
                break;
            case Int:
                {
                alt310=4;
                }
                break;
            case Long:
                {
                alt310=5;
                }
                break;
            case Float:
                {
                alt310=6;
                }
                break;
            case Double:
                {
                alt310=7;
                }
                break;
            case Duration:
                {
                alt310=8;
                }
                break;
            case DateTime:
                {
                alt310=9;
                }
                break;
            case Time:
                {
                alt310=10;
                }
                break;
            case Date:
                {
                alt310=11;
                }
                break;
            case GYearMonth:
                {
                alt310=12;
                }
                break;
            case GYear:
                {
                alt310=13;
                }
                break;
            case GMonthDay:
                {
                alt310=14;
                }
                break;
            case GDay:
                {
                alt310=15;
                }
                break;
            case GMonth:
                {
                alt310=16;
                }
                break;
            case HexBinary:
                {
                alt310=17;
                }
                break;
            case Base64Binary:
                {
                alt310=18;
                }
                break;
            case AnyURI:
                {
                alt310=19;
                }
                break;
            case Integer:
                {
                alt310=20;
                }
                break;
            case NegativeInteger:
                {
                alt310=21;
                }
                break;
            case NonNegativeInteger:
                {
                alt310=22;
                }
                break;
            case PositiveInteger:
                {
                alt310=23;
                }
                break;
            case NonPositiveInteger:
                {
                alt310=24;
                }
                break;
            case Byte:
                {
                alt310=25;
                }
                break;
            case UnsignedByte:
                {
                alt310=26;
                }
                break;
            case UnsignedInt:
                {
                alt310=27;
                }
                break;
            case AnySimpleType:
                {
                alt310=28;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 310, 0, input);

                throw nvae;
            }

            switch (alt310) {
                case 1 :
                    // InternalDialogParser.g:13206:3: (enumLiteral_0= String )
                    {
                    // InternalDialogParser.g:13206:3: (enumLiteral_0= String )
                    // InternalDialogParser.g:13207:4: enumLiteral_0= String
                    {
                    enumLiteral_0=(Token)match(input,String,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getSadlDataTypeAccess().getStringEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalDialogParser.g:13214:3: (enumLiteral_1= Boolean )
                    {
                    // InternalDialogParser.g:13214:3: (enumLiteral_1= Boolean )
                    // InternalDialogParser.g:13215:4: enumLiteral_1= Boolean
                    {
                    enumLiteral_1=(Token)match(input,Boolean,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getBooleanEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getSadlDataTypeAccess().getBooleanEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalDialogParser.g:13222:3: (enumLiteral_2= Decimal )
                    {
                    // InternalDialogParser.g:13222:3: (enumLiteral_2= Decimal )
                    // InternalDialogParser.g:13223:4: enumLiteral_2= Decimal
                    {
                    enumLiteral_2=(Token)match(input,Decimal,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDecimalEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getSadlDataTypeAccess().getDecimalEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalDialogParser.g:13230:3: (enumLiteral_3= Int )
                    {
                    // InternalDialogParser.g:13230:3: (enumLiteral_3= Int )
                    // InternalDialogParser.g:13231:4: enumLiteral_3= Int
                    {
                    enumLiteral_3=(Token)match(input,Int,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getIntEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getSadlDataTypeAccess().getIntEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalDialogParser.g:13238:3: (enumLiteral_4= Long )
                    {
                    // InternalDialogParser.g:13238:3: (enumLiteral_4= Long )
                    // InternalDialogParser.g:13239:4: enumLiteral_4= Long
                    {
                    enumLiteral_4=(Token)match(input,Long,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getLongEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getSadlDataTypeAccess().getLongEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalDialogParser.g:13246:3: (enumLiteral_5= Float )
                    {
                    // InternalDialogParser.g:13246:3: (enumLiteral_5= Float )
                    // InternalDialogParser.g:13247:4: enumLiteral_5= Float
                    {
                    enumLiteral_5=(Token)match(input,Float,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getFloatEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getSadlDataTypeAccess().getFloatEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalDialogParser.g:13254:3: (enumLiteral_6= Double )
                    {
                    // InternalDialogParser.g:13254:3: (enumLiteral_6= Double )
                    // InternalDialogParser.g:13255:4: enumLiteral_6= Double
                    {
                    enumLiteral_6=(Token)match(input,Double,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDoubleEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getSadlDataTypeAccess().getDoubleEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalDialogParser.g:13262:3: (enumLiteral_7= Duration )
                    {
                    // InternalDialogParser.g:13262:3: (enumLiteral_7= Duration )
                    // InternalDialogParser.g:13263:4: enumLiteral_7= Duration
                    {
                    enumLiteral_7=(Token)match(input,Duration,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDurationEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getSadlDataTypeAccess().getDurationEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalDialogParser.g:13270:3: (enumLiteral_8= DateTime )
                    {
                    // InternalDialogParser.g:13270:3: (enumLiteral_8= DateTime )
                    // InternalDialogParser.g:13271:4: enumLiteral_8= DateTime
                    {
                    enumLiteral_8=(Token)match(input,DateTime,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDateTimeEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_8, grammarAccess.getSadlDataTypeAccess().getDateTimeEnumLiteralDeclaration_8());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalDialogParser.g:13278:3: (enumLiteral_9= Time )
                    {
                    // InternalDialogParser.g:13278:3: (enumLiteral_9= Time )
                    // InternalDialogParser.g:13279:4: enumLiteral_9= Time
                    {
                    enumLiteral_9=(Token)match(input,Time,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getTimeEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_9, grammarAccess.getSadlDataTypeAccess().getTimeEnumLiteralDeclaration_9());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalDialogParser.g:13286:3: (enumLiteral_10= Date )
                    {
                    // InternalDialogParser.g:13286:3: (enumLiteral_10= Date )
                    // InternalDialogParser.g:13287:4: enumLiteral_10= Date
                    {
                    enumLiteral_10=(Token)match(input,Date,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getDateEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_10, grammarAccess.getSadlDataTypeAccess().getDateEnumLiteralDeclaration_10());
                      			
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalDialogParser.g:13294:3: (enumLiteral_11= GYearMonth )
                    {
                    // InternalDialogParser.g:13294:3: (enumLiteral_11= GYearMonth )
                    // InternalDialogParser.g:13295:4: enumLiteral_11= GYearMonth
                    {
                    enumLiteral_11=(Token)match(input,GYearMonth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGYearMonthEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_11, grammarAccess.getSadlDataTypeAccess().getGYearMonthEnumLiteralDeclaration_11());
                      			
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalDialogParser.g:13302:3: (enumLiteral_12= GYear )
                    {
                    // InternalDialogParser.g:13302:3: (enumLiteral_12= GYear )
                    // InternalDialogParser.g:13303:4: enumLiteral_12= GYear
                    {
                    enumLiteral_12=(Token)match(input,GYear,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGYearEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_12, grammarAccess.getSadlDataTypeAccess().getGYearEnumLiteralDeclaration_12());
                      			
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalDialogParser.g:13310:3: (enumLiteral_13= GMonthDay )
                    {
                    // InternalDialogParser.g:13310:3: (enumLiteral_13= GMonthDay )
                    // InternalDialogParser.g:13311:4: enumLiteral_13= GMonthDay
                    {
                    enumLiteral_13=(Token)match(input,GMonthDay,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGMonthDayEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_13, grammarAccess.getSadlDataTypeAccess().getGMonthDayEnumLiteralDeclaration_13());
                      			
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalDialogParser.g:13318:3: (enumLiteral_14= GDay )
                    {
                    // InternalDialogParser.g:13318:3: (enumLiteral_14= GDay )
                    // InternalDialogParser.g:13319:4: enumLiteral_14= GDay
                    {
                    enumLiteral_14=(Token)match(input,GDay,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGDayEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_14, grammarAccess.getSadlDataTypeAccess().getGDayEnumLiteralDeclaration_14());
                      			
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalDialogParser.g:13326:3: (enumLiteral_15= GMonth )
                    {
                    // InternalDialogParser.g:13326:3: (enumLiteral_15= GMonth )
                    // InternalDialogParser.g:13327:4: enumLiteral_15= GMonth
                    {
                    enumLiteral_15=(Token)match(input,GMonth,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getGMonthEnumLiteralDeclaration_15().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_15, grammarAccess.getSadlDataTypeAccess().getGMonthEnumLiteralDeclaration_15());
                      			
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalDialogParser.g:13334:3: (enumLiteral_16= HexBinary )
                    {
                    // InternalDialogParser.g:13334:3: (enumLiteral_16= HexBinary )
                    // InternalDialogParser.g:13335:4: enumLiteral_16= HexBinary
                    {
                    enumLiteral_16=(Token)match(input,HexBinary,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getHexBinaryEnumLiteralDeclaration_16().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_16, grammarAccess.getSadlDataTypeAccess().getHexBinaryEnumLiteralDeclaration_16());
                      			
                    }

                    }


                    }
                    break;
                case 18 :
                    // InternalDialogParser.g:13342:3: (enumLiteral_17= Base64Binary )
                    {
                    // InternalDialogParser.g:13342:3: (enumLiteral_17= Base64Binary )
                    // InternalDialogParser.g:13343:4: enumLiteral_17= Base64Binary
                    {
                    enumLiteral_17=(Token)match(input,Base64Binary,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getBase64BinaryEnumLiteralDeclaration_17().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_17, grammarAccess.getSadlDataTypeAccess().getBase64BinaryEnumLiteralDeclaration_17());
                      			
                    }

                    }


                    }
                    break;
                case 19 :
                    // InternalDialogParser.g:13350:3: (enumLiteral_18= AnyURI )
                    {
                    // InternalDialogParser.g:13350:3: (enumLiteral_18= AnyURI )
                    // InternalDialogParser.g:13351:4: enumLiteral_18= AnyURI
                    {
                    enumLiteral_18=(Token)match(input,AnyURI,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getAnyURIEnumLiteralDeclaration_18().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_18, grammarAccess.getSadlDataTypeAccess().getAnyURIEnumLiteralDeclaration_18());
                      			
                    }

                    }


                    }
                    break;
                case 20 :
                    // InternalDialogParser.g:13358:3: (enumLiteral_19= Integer )
                    {
                    // InternalDialogParser.g:13358:3: (enumLiteral_19= Integer )
                    // InternalDialogParser.g:13359:4: enumLiteral_19= Integer
                    {
                    enumLiteral_19=(Token)match(input,Integer,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getIntegerEnumLiteralDeclaration_19().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_19, grammarAccess.getSadlDataTypeAccess().getIntegerEnumLiteralDeclaration_19());
                      			
                    }

                    }


                    }
                    break;
                case 21 :
                    // InternalDialogParser.g:13366:3: (enumLiteral_20= NegativeInteger )
                    {
                    // InternalDialogParser.g:13366:3: (enumLiteral_20= NegativeInteger )
                    // InternalDialogParser.g:13367:4: enumLiteral_20= NegativeInteger
                    {
                    enumLiteral_20=(Token)match(input,NegativeInteger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getNegativeIntegerEnumLiteralDeclaration_20().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_20, grammarAccess.getSadlDataTypeAccess().getNegativeIntegerEnumLiteralDeclaration_20());
                      			
                    }

                    }


                    }
                    break;
                case 22 :
                    // InternalDialogParser.g:13374:3: (enumLiteral_21= NonNegativeInteger )
                    {
                    // InternalDialogParser.g:13374:3: (enumLiteral_21= NonNegativeInteger )
                    // InternalDialogParser.g:13375:4: enumLiteral_21= NonNegativeInteger
                    {
                    enumLiteral_21=(Token)match(input,NonNegativeInteger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getNonNegativeIntegerEnumLiteralDeclaration_21().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_21, grammarAccess.getSadlDataTypeAccess().getNonNegativeIntegerEnumLiteralDeclaration_21());
                      			
                    }

                    }


                    }
                    break;
                case 23 :
                    // InternalDialogParser.g:13382:3: (enumLiteral_22= PositiveInteger )
                    {
                    // InternalDialogParser.g:13382:3: (enumLiteral_22= PositiveInteger )
                    // InternalDialogParser.g:13383:4: enumLiteral_22= PositiveInteger
                    {
                    enumLiteral_22=(Token)match(input,PositiveInteger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getPositiveIntegerEnumLiteralDeclaration_22().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_22, grammarAccess.getSadlDataTypeAccess().getPositiveIntegerEnumLiteralDeclaration_22());
                      			
                    }

                    }


                    }
                    break;
                case 24 :
                    // InternalDialogParser.g:13390:3: (enumLiteral_23= NonPositiveInteger )
                    {
                    // InternalDialogParser.g:13390:3: (enumLiteral_23= NonPositiveInteger )
                    // InternalDialogParser.g:13391:4: enumLiteral_23= NonPositiveInteger
                    {
                    enumLiteral_23=(Token)match(input,NonPositiveInteger,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getNonPositiveIntegerEnumLiteralDeclaration_23().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_23, grammarAccess.getSadlDataTypeAccess().getNonPositiveIntegerEnumLiteralDeclaration_23());
                      			
                    }

                    }


                    }
                    break;
                case 25 :
                    // InternalDialogParser.g:13398:3: (enumLiteral_24= Byte )
                    {
                    // InternalDialogParser.g:13398:3: (enumLiteral_24= Byte )
                    // InternalDialogParser.g:13399:4: enumLiteral_24= Byte
                    {
                    enumLiteral_24=(Token)match(input,Byte,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getByteEnumLiteralDeclaration_24().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_24, grammarAccess.getSadlDataTypeAccess().getByteEnumLiteralDeclaration_24());
                      			
                    }

                    }


                    }
                    break;
                case 26 :
                    // InternalDialogParser.g:13406:3: (enumLiteral_25= UnsignedByte )
                    {
                    // InternalDialogParser.g:13406:3: (enumLiteral_25= UnsignedByte )
                    // InternalDialogParser.g:13407:4: enumLiteral_25= UnsignedByte
                    {
                    enumLiteral_25=(Token)match(input,UnsignedByte,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getUnsignedByteEnumLiteralDeclaration_25().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_25, grammarAccess.getSadlDataTypeAccess().getUnsignedByteEnumLiteralDeclaration_25());
                      			
                    }

                    }


                    }
                    break;
                case 27 :
                    // InternalDialogParser.g:13414:3: (enumLiteral_26= UnsignedInt )
                    {
                    // InternalDialogParser.g:13414:3: (enumLiteral_26= UnsignedInt )
                    // InternalDialogParser.g:13415:4: enumLiteral_26= UnsignedInt
                    {
                    enumLiteral_26=(Token)match(input,UnsignedInt,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getUnsignedIntEnumLiteralDeclaration_26().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_26, grammarAccess.getSadlDataTypeAccess().getUnsignedIntEnumLiteralDeclaration_26());
                      			
                    }

                    }


                    }
                    break;
                case 28 :
                    // InternalDialogParser.g:13422:3: (enumLiteral_27= AnySimpleType )
                    {
                    // InternalDialogParser.g:13422:3: (enumLiteral_27= AnySimpleType )
                    // InternalDialogParser.g:13423:4: enumLiteral_27= AnySimpleType
                    {
                    enumLiteral_27=(Token)match(input,AnySimpleType,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getSadlDataTypeAccess().getAnySimpleTypeEnumLiteralDeclaration_27().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_27, grammarAccess.getSadlDataTypeAccess().getAnySimpleTypeEnumLiteralDeclaration_27());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSadlDataType"

    // $ANTLR start synpred1_InternalDialogParser
    public final void synpred1_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:4868:4: ( ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) ) )
        // InternalDialogParser.g:4868:5: ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) )
        {
        // InternalDialogParser.g:4868:5: ( () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) ) )
        // InternalDialogParser.g:4869:5: () ( ( ( HyphenMinus | Not ) ) ) ( ( ruleSadlExplicitValueLiteral ) )
        {
        // InternalDialogParser.g:4869:5: ()
        // InternalDialogParser.g:4870:5: 
        {
        }

        // InternalDialogParser.g:4871:5: ( ( ( HyphenMinus | Not ) ) )
        // InternalDialogParser.g:4872:6: ( ( HyphenMinus | Not ) )
        {
        // InternalDialogParser.g:4872:6: ( ( HyphenMinus | Not ) )
        // InternalDialogParser.g:4873:7: ( HyphenMinus | Not )
        {
        if ( input.LA(1)==Not||input.LA(1)==HyphenMinus ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }

        // InternalDialogParser.g:4880:5: ( ( ruleSadlExplicitValueLiteral ) )
        // InternalDialogParser.g:4881:6: ( ruleSadlExplicitValueLiteral )
        {
        // InternalDialogParser.g:4881:6: ( ruleSadlExplicitValueLiteral )
        // InternalDialogParser.g:4882:7: ruleSadlExplicitValueLiteral
        {
        pushFollow(FOLLOW_2);
        ruleSadlExplicitValueLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred1_InternalDialogParser

    // $ANTLR start synpred2_InternalDialogParser
    public final void synpred2_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:4999:5: ( RULE_STRING | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==RULE_ID||input.LA(1)==RULE_STRING ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred2_InternalDialogParser

    // $ANTLR start synpred3_InternalDialogParser
    public final void synpred3_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:5933:4: ( Select )
        // InternalDialogParser.g:5933:5: Select
        {
        match(input,Select,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_InternalDialogParser

    // $ANTLR start synpred4_InternalDialogParser
    public final void synpred4_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6077:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Desc||input.LA(1)==Asc||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred4_InternalDialogParser

    // $ANTLR start synpred5_InternalDialogParser
    public final void synpred5_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6132:4: ( Select )
        // InternalDialogParser.g:6132:5: Select
        {
        match(input,Select,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred5_InternalDialogParser

    // $ANTLR start synpred6_InternalDialogParser
    public final void synpred6_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6276:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Desc||input.LA(1)==Asc||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred6_InternalDialogParser

    // $ANTLR start synpred7_InternalDialogParser
    public final void synpred7_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6331:4: ( Select )
        // InternalDialogParser.g:6331:5: Select
        {
        match(input,Select,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred7_InternalDialogParser

    // $ANTLR start synpred8_InternalDialogParser
    public final void synpred8_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6475:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Desc||input.LA(1)==Asc||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred8_InternalDialogParser

    // $ANTLR start synpred9_InternalDialogParser
    public final void synpred9_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6530:4: ( Select )
        // InternalDialogParser.g:6530:5: Select
        {
        match(input,Select,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred9_InternalDialogParser

    // $ANTLR start synpred10_InternalDialogParser
    public final void synpred10_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:6674:7: ( Comma | Asc | Desc | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Desc||input.LA(1)==Asc||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred10_InternalDialogParser

    // $ANTLR start synpred11_InternalDialogParser
    public final void synpred11_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8149:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==LessThanSignEqualsSign||input.LA(1)==GreaterThanSignEqualsSign||input.LA(1)==LessThanSign||input.LA(1)==GreaterThanSign ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred11_InternalDialogParser

    // $ANTLR start synpred13_InternalDialogParser
    public final void synpred13_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8224:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==LessThanSignEqualsSign||input.LA(1)==GreaterThanSignEqualsSign||input.LA(1)==LessThanSign||input.LA(1)==GreaterThanSign ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred13_InternalDialogParser

    // $ANTLR start synpred15_InternalDialogParser
    public final void synpred15_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8299:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==LessThanSignEqualsSign||input.LA(1)==GreaterThanSignEqualsSign||input.LA(1)==LessThanSign||input.LA(1)==GreaterThanSign ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred15_InternalDialogParser

    // $ANTLR start synpred17_InternalDialogParser
    public final void synpred17_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:8374:4: ( GreaterThanSignEqualsSign | LessThanSignEqualsSign | GreaterThanSign | LessThanSign )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==LessThanSignEqualsSign||input.LA(1)==GreaterThanSignEqualsSign||input.LA(1)==LessThanSign||input.LA(1)==GreaterThanSign ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred17_InternalDialogParser

    // $ANTLR start synpred19_InternalDialogParser
    public final void synpred19_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9377:4: ( Of | For | In | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( (input.LA(1)>=For && input.LA(1)<=Has)||input.LA(1)==In||input.LA(1)==Of||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred19_InternalDialogParser

    // $ANTLR start synpred20_InternalDialogParser
    public final void synpred20_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9447:6: ( Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Has||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred20_InternalDialogParser

    // $ANTLR start synpred21_InternalDialogParser
    public final void synpred21_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9482:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Another||input.LA(1)==Element||input.LA(1)==Length||(input.LA(1)>=Count && input.LA(1)<=False)||input.LA(1)==First||(input.LA(1)>=Index && input.LA(1)<=Known)||input.LA(1)==There||input.LA(1)==Value||input.LA(1)==None||input.LA(1)==Last||input.LA(1)==Only||input.LA(1)==Some||(input.LA(1)>=True && input.LA(1)<=Type)||input.LA(1)==The||input.LA(1)==Any||input.LA(1)==Not||input.LA(1)==The_1||input.LA(1)==HyphenMinusHyphenMinus||(input.LA(1)>=An && input.LA(1)<=An_1)||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==HyphenMinus||input.LA(1)==A||input.LA(1)==LeftSquareBracket||(input.LA(1)>=A_1 && input.LA(1)<=LeftCurlyBracket)||input.LA(1)==RULE_NUMBER||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred21_InternalDialogParser

    // $ANTLR start synpred22_InternalDialogParser
    public final void synpred22_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9527:4: ( Of | For | In | With | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==With||(input.LA(1)>=For && input.LA(1)<=Has)||input.LA(1)==In||input.LA(1)==Of||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred22_InternalDialogParser

    // $ANTLR start synpred23_InternalDialogParser
    public final void synpred23_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9597:6: ( With | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==With||input.LA(1)==Has||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred23_InternalDialogParser

    // $ANTLR start synpred24_InternalDialogParser
    public final void synpred24_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9637:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Another||input.LA(1)==Element||input.LA(1)==Length||(input.LA(1)>=Count && input.LA(1)<=False)||input.LA(1)==First||(input.LA(1)>=Index && input.LA(1)<=Known)||input.LA(1)==There||input.LA(1)==Value||input.LA(1)==None||input.LA(1)==Last||input.LA(1)==Only||input.LA(1)==Some||(input.LA(1)>=True && input.LA(1)<=Type)||input.LA(1)==The||input.LA(1)==Any||input.LA(1)==Not||input.LA(1)==The_1||input.LA(1)==HyphenMinusHyphenMinus||(input.LA(1)>=An && input.LA(1)<=An_1)||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==HyphenMinus||input.LA(1)==A||input.LA(1)==LeftSquareBracket||(input.LA(1)>=A_1 && input.LA(1)<=LeftCurlyBracket)||input.LA(1)==RULE_NUMBER||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred24_InternalDialogParser

    // $ANTLR start synpred25_InternalDialogParser
    public final void synpred25_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9682:4: ( Of | For | In | Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( (input.LA(1)>=For && input.LA(1)<=Has)||input.LA(1)==In||input.LA(1)==Of||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred25_InternalDialogParser

    // $ANTLR start synpred26_InternalDialogParser
    public final void synpred26_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9752:6: ( Comma | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Has||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred26_InternalDialogParser

    // $ANTLR start synpred27_InternalDialogParser
    public final void synpred27_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9801:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Another||input.LA(1)==Element||input.LA(1)==Length||(input.LA(1)>=Count && input.LA(1)<=False)||input.LA(1)==First||(input.LA(1)>=Index && input.LA(1)<=Known)||input.LA(1)==There||input.LA(1)==Value||input.LA(1)==None||input.LA(1)==Last||input.LA(1)==Only||input.LA(1)==Some||(input.LA(1)>=True && input.LA(1)<=Type)||input.LA(1)==The||input.LA(1)==Any||input.LA(1)==Not||input.LA(1)==The_1||input.LA(1)==HyphenMinusHyphenMinus||(input.LA(1)>=An && input.LA(1)<=An_1)||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==HyphenMinus||input.LA(1)==A||input.LA(1)==LeftSquareBracket||(input.LA(1)>=A_1 && input.LA(1)<=LeftCurlyBracket)||input.LA(1)==RULE_NUMBER||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred27_InternalDialogParser

    // $ANTLR start synpred28_InternalDialogParser
    public final void synpred28_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9846:4: ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==With||(input.LA(1)>=For && input.LA(1)<=Has)||input.LA(1)==In||input.LA(1)==Of||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred28_InternalDialogParser

    // $ANTLR start synpred29_InternalDialogParser
    public final void synpred29_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9916:6: ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==With||input.LA(1)==Has||input.LA(1)==Comma||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_QNAME_TERMINAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred29_InternalDialogParser

    // $ANTLR start synpred30_InternalDialogParser
    public final void synpred30_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:9970:8: ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )
        // InternalDialogParser.g:
        {
        if ( input.LA(1)==Another||input.LA(1)==Element||input.LA(1)==Length||(input.LA(1)>=Count && input.LA(1)<=False)||input.LA(1)==First||(input.LA(1)>=Index && input.LA(1)<=Known)||input.LA(1)==There||input.LA(1)==Value||input.LA(1)==None||input.LA(1)==Last||input.LA(1)==Only||input.LA(1)==Some||(input.LA(1)>=True && input.LA(1)<=Type)||input.LA(1)==The||input.LA(1)==Any||input.LA(1)==Not||input.LA(1)==The_1||input.LA(1)==HyphenMinusHyphenMinus||(input.LA(1)>=An && input.LA(1)<=An_1)||input.LA(1)==ExclamationMark||input.LA(1)==LeftParenthesis||input.LA(1)==HyphenMinus||input.LA(1)==A||input.LA(1)==LeftSquareBracket||(input.LA(1)>=A_1 && input.LA(1)<=LeftCurlyBracket)||input.LA(1)==RULE_NUMBER||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_STRING) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred30_InternalDialogParser

    // $ANTLR start synpred31_InternalDialogParser
    public final void synpred31_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:11225:7: ( HyphenMinus )
        // InternalDialogParser.g:11225:8: HyphenMinus
        {
        match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred31_InternalDialogParser

    // $ANTLR start synpred32_InternalDialogParser
    public final void synpred32_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:11599:7: ( HyphenMinus )
        // InternalDialogParser.g:11599:8: HyphenMinus
        {
        match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred32_InternalDialogParser

    // $ANTLR start synpred33_InternalDialogParser
    public final void synpred33_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:11973:7: ( HyphenMinus )
        // InternalDialogParser.g:11973:8: HyphenMinus
        {
        match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred33_InternalDialogParser

    // $ANTLR start synpred34_InternalDialogParser
    public final void synpred34_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:12347:7: ( HyphenMinus )
        // InternalDialogParser.g:12347:8: HyphenMinus
        {
        match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred34_InternalDialogParser

    // $ANTLR start synpred35_InternalDialogParser
    public final void synpred35_InternalDialogParser_fragment() throws RecognitionException {   
        // InternalDialogParser.g:12577:4: ( LeftParenthesis )
        // InternalDialogParser.g:12577:5: LeftParenthesis
        {
        match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred35_InternalDialogParser

    // Delegated rules

    public final boolean synpred20_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_InternalDialogParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_InternalDialogParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA65 dfa65 = new DFA65(this);
    protected DFA52 dfa52 = new DFA52(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA106 dfa106 = new DFA106(this);
    protected DFA121 dfa121 = new DFA121(this);
    protected DFA175 dfa175 = new DFA175(this);
    protected DFA177 dfa177 = new DFA177(this);
    protected DFA179 dfa179 = new DFA179(this);
    protected DFA181 dfa181 = new DFA181(this);
    protected DFA220 dfa220 = new DFA220(this);
    protected DFA226 dfa226 = new DFA226(this);
    protected DFA233 dfa233 = new DFA233(this);
    protected DFA243 dfa243 = new DFA243(this);
    protected DFA240 dfa240 = new DFA240(this);
    protected DFA270 dfa270 = new DFA270(this);
    protected DFA277 dfa277 = new DFA277(this);
    protected DFA284 dfa284 = new DFA284(this);
    protected DFA291 dfa291 = new DFA291(this);
    protected DFA304 dfa304 = new DFA304(this);
    static final String dfa_1s = "\16\uffff";
    static final String dfa_2s = "\1\12\2\uffff\11\4\2\uffff";
    static final String dfa_3s = "\1\u00c7\2\uffff\11\u00c7\2\uffff";
    static final String dfa_4s = "\1\uffff\1\1\1\2\11\uffff\1\3\1\4";
    static final String dfa_5s = "\16\uffff}>";
    static final String[] dfa_6s = {
            "\1\14\30\uffff\1\11\131\uffff\1\10\12\uffff\1\12\1\uffff\1\7\12\uffff\1\13\10\uffff\1\5\1\uffff\1\6\32\uffff\1\3\4\uffff\1\4\1\uffff\1\2\3\uffff\2\1",
            "",
            "",
            "\6\15\1\14\1\15\1\uffff\1\15\2\uffff\1\15\4\uffff\2\15\6\uffff\1\15\2\uffff\1\15\3\uffff\1\15\2\uffff\1\15\3\uffff\1\15\13\uffff\1\15\2\uffff\1\15\3\uffff\1\15\7\uffff\1\15\17\uffff\2\15\25\uffff\1\15\1\uffff\1\15\3\uffff\1\15\2\uffff\1\15\10\uffff\1\15\22\uffff\1\15\33\uffff\1\15\23\uffff\1\15\3\uffff\2\15",
            "\6\15\1\14\1\15\1\uffff\1\15\2\uffff\1\15\4\uffff\2\15\6\uffff\1\15\2\uffff\1\15\3\uffff\1\15\2\uffff\1\15\3\uffff\1\15\13\uffff\1\15\2\uffff\1\15\3\uffff\1\15\7\uffff\1\15\17\uffff\2\15\25\uffff\1\15\1\uffff\1\15\3\uffff\1\15\2\uffff\1\15\10\uffff\1\15\22\uffff\1\15\33\uffff\1\15\23\uffff\1\15\3\uffff\2\15",
            "\6\15\1\14\1\15\1\uffff\1\15\2\uffff\1\15\4\uffff\2\15\6\uffff\1\15\2\uffff\1\15\3\uffff\1\15\2\uffff\1\15\3\uffff\1\15\13\uffff\1\15\2\uffff\1\15\3\uffff\1\15\7\uffff\1\15\17\uffff\2\15\25\uffff\1\15\1\uffff\1\15\3\uffff\1\15\2\uffff\1\15\10\uffff\1\15\22\uffff\1\15\33\uffff\1\15\23\uffff\1\15\3\uffff\2\15",
            "\6\15\1\14\1\15\1\uffff\1\15\2\uffff\1\15\4\uffff\2\15\6\uffff\1\15\2\uffff\1\15\3\uffff\1\15\2\uffff\1\15\3\uffff\1\15\13\uffff\1\15\2\uffff\1\15\3\uffff\1\15\7\uffff\1\15\17\uffff\2\15\25\uffff\1\15\1\uffff\1\15\3\uffff\1\15\2\uffff\1\15\10\uffff\1\15\22\uffff\1\15\33\uffff\1\15\23\uffff\1\15\3\uffff\2\15",
            "\6\15\1\14\1\15\1\uffff\1\15\2\uffff\1\15\4\uffff\2\15\6\uffff\1\15\2\uffff\1\15\3\uffff\1\15\2\uffff\1\15\3\uffff\1\15\13\uffff\1\15\2\uffff\1\15\3\uffff\1\15\7\uffff\1\15\17\uffff\2\15\25\uffff\1\15\1\uffff\1\15\3\uffff\1\15\2\uffff\1\15\10\uffff\1\15\22\uffff\1\15\33\uffff\1\15\23\uffff\1\15\3\uffff\2\15",
            "\6\15\1\14\1\15\1\uffff\1\15\2\uffff\1\15\4\uffff\2\15\6\uffff\1\15\2\uffff\1\15\3\uffff\1\15\2\uffff\1\15\3\uffff\1\15\13\uffff\1\15\2\uffff\1\15\3\uffff\1\15\7\uffff\1\15\17\uffff\2\15\25\uffff\1\15\1\uffff\1\15\3\uffff\1\15\2\uffff\1\15\10\uffff\1\15\22\uffff\1\15\33\uffff\1\15\23\uffff\1\15\3\uffff\2\15",
            "\6\15\1\14\1\15\1\uffff\1\15\2\uffff\1\15\4\uffff\2\15\6\uffff\1\15\2\uffff\1\15\3\uffff\1\15\2\uffff\1\15\3\uffff\1\15\13\uffff\1\15\2\uffff\1\15\3\uffff\1\15\7\uffff\1\15\17\uffff\2\15\25\uffff\1\15\1\uffff\1\15\3\uffff\1\15\2\uffff\1\15\10\uffff\1\15\22\uffff\1\15\33\uffff\1\15\23\uffff\1\15\3\uffff\2\15",
            "\6\15\1\14\1\15\1\uffff\1\15\2\uffff\1\15\4\uffff\2\15\6\uffff\1\15\2\uffff\1\15\3\uffff\1\15\2\uffff\1\15\3\uffff\1\15\13\uffff\1\15\2\uffff\1\15\3\uffff\1\15\7\uffff\1\15\17\uffff\2\15\25\uffff\1\15\1\uffff\1\15\3\uffff\1\15\2\uffff\1\15\10\uffff\1\15\22\uffff\1\15\33\uffff\1\15\23\uffff\1\15\3\uffff\2\15",
            "\6\15\1\14\1\15\1\uffff\1\15\2\uffff\1\15\4\uffff\2\15\6\uffff\1\15\2\uffff\1\15\3\uffff\1\15\2\uffff\1\15\3\uffff\1\15\13\uffff\1\15\2\uffff\1\15\3\uffff\1\15\7\uffff\1\15\17\uffff\2\15\25\uffff\1\15\1\uffff\1\15\3\uffff\1\15\2\uffff\1\15\10\uffff\1\15\22\uffff\1\15\33\uffff\1\15\23\uffff\1\15\3\uffff\2\15",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "1708:2: ( (this_SadlResource_0= ruleSadlResource ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) ) ) | ( () otherlv_48= LeftCurlyBracket ( (lv_classOrProperty_49_0= ruleSadlResource ) ) (otherlv_50= Comma ( (lv_classOrProperty_51_0= ruleSadlResource ) ) )* otherlv_52= RightCurlyBracket otherlv_53= Are ( ( ( ( (otherlv_54= TopLevel )? otherlv_55= Classes ) | ( ( ( (lv_oftype_56_0= Types ) ) | ( (lv_oftype_57_0= Instances ) ) ) otherlv_58= Of ( (lv_superElement_59_0= ruleSadlPrimaryTypeReference ) ) ) ) ( (lv_describedBy_60_0= ruleSadlPropertyDeclarationInClass ) )* ) | ( () otherlv_62= Disjoint ) | ( () ( (lv_complement_64_0= Not ) )? otherlv_65= The_1 otherlv_66= Same ) ) ) | ( () ( ruleAnArticle )? otherlv_69= Relationship otherlv_70= Of ( (lv_from_71_0= ruleSadlTypeReference ) ) otherlv_72= To ( (lv_to_73_0= ruleSadlTypeReference ) ) otherlv_74= Is ( (lv_property_75_0= ruleSadlResource ) ) ) | ( ruleAnArticle this_SadlTypeReference_77= ruleSadlTypeReference ( ( () ( (lv_instance_79_0= ruleSadlResource ) )? ( (lv_propertyInitializers_80_0= ruleSadlPropertyInitializer ) )* ) | ( () otherlv_82= Is ruleAnArticle ( (lv_object_84_0= ruleSadlResource ) ) otherlv_85= Only otherlv_86= If ( (lv_propConditions_87_0= ruleSadlPropertyCondition ) ) (otherlv_88= And ( (lv_propConditions_89_0= ruleSadlPropertyCondition ) ) )* ) ) ) )";
        }
    }
    static final String dfa_7s = "\25\uffff";
    static final String dfa_8s = "\1\7\14\uffff\2\3\6\uffff";
    static final String dfa_9s = "\1\24\1\14\1\24\1\uffff\1\50\1\52\1\4\2\uffff\2\4\1\uffff\1\14\2\24\2\uffff\1\u00a8\1\uffff\1\14\1\4";
    static final String dfa_10s = "\3\u00c7\1\uffff\3\u00c7\2\uffff\2\u00c7\1\uffff\1\u00c7\2\u00ba\2\uffff\1\u00a8\1\uffff\1\u00c8\1\u00c7";
    static final String dfa_11s = "\3\uffff\1\3\3\uffff\1\6\1\7\2\uffff\1\5\3\uffff\1\4\1\1\1\uffff\1\2\2\uffff";
    static final String dfa_12s = "\25\uffff}>";
    static final String[] dfa_13s = {
            "\1\3\41\uffff\1\3\102\uffff\1\3\1\uffff\1\3\7\uffff\1\5\5\uffff\1\10\4\uffff\1\3\1\uffff\1\4\26\uffff\1\1\1\6\11\uffff\1\2\1\uffff\1\7\5\uffff\1\7\2\uffff\1\7\10\uffff\2\7",
            "\1\3\4\uffff\1\3\21\uffff\1\7\131\uffff\1\7\12\uffff\1\7\1\uffff\1\7\10\uffff\1\13\1\uffff\1\11\10\uffff\1\7\1\uffff\1\7\32\uffff\1\7\4\uffff\1\12\5\uffff\2\7",
            "\1\3\41\uffff\1\3\102\uffff\1\3\1\uffff\1\3\7\uffff\1\5\12\uffff\1\3\1\uffff\1\4\26\uffff\1\14\1\6\35\uffff\2\7",
            "",
            "\1\3\1\uffff\1\3\35\uffff\1\3\24\uffff\1\3\66\uffff\1\3\15\uffff\1\3\35\uffff\1\3\3\uffff\1\3\1\uffff\2\7",
            "\1\3\35\uffff\1\3\113\uffff\1\3\15\uffff\1\3\35\uffff\1\3\3\uffff\1\3\1\uffff\2\7",
            "\6\3\1\uffff\1\3\1\uffff\1\3\2\uffff\1\3\4\uffff\2\3\6\uffff\1\3\2\uffff\1\3\3\uffff\1\3\2\uffff\1\3\3\uffff\1\3\13\uffff\1\3\2\uffff\1\3\3\uffff\1\3\7\uffff\1\3\17\uffff\2\3\25\uffff\1\3\1\uffff\1\3\3\uffff\1\3\2\uffff\1\3\10\uffff\1\3\22\uffff\1\3\33\uffff\1\3\23\uffff\1\3\3\uffff\1\16\1\15",
            "",
            "",
            "\6\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\4\uffff\2\7\6\uffff\1\7\2\uffff\1\7\3\uffff\1\7\2\uffff\1\7\3\uffff\1\7\1\3\12\uffff\1\7\2\uffff\1\7\3\uffff\1\7\7\uffff\1\7\17\uffff\2\7\25\uffff\1\7\1\uffff\1\7\3\uffff\1\7\2\uffff\1\7\5\uffff\1\17\2\uffff\1\7\22\uffff\1\7\33\uffff\1\7\23\uffff\1\7\3\uffff\2\7",
            "\6\7\1\uffff\1\7\1\uffff\1\7\2\uffff\1\7\4\uffff\2\7\1\uffff\1\20\4\uffff\1\7\2\uffff\1\7\1\uffff\1\22\1\uffff\1\7\2\uffff\1\7\3\uffff\1\7\13\uffff\1\7\2\uffff\1\7\3\uffff\1\7\7\uffff\1\7\12\uffff\1\20\4\uffff\2\7\25\uffff\1\7\1\uffff\1\7\3\uffff\1\7\2\uffff\1\7\10\uffff\1\7\1\uffff\1\21\20\uffff\1\7\33\uffff\1\7\23\uffff\1\7\3\uffff\2\7",
            "",
            "\1\3\4\uffff\1\3\u0083\uffff\1\3\52\uffff\1\3\5\uffff\2\7",
            "\1\3\41\uffff\1\3\62\uffff\1\3\17\uffff\1\3\1\uffff\1\3\7\uffff\1\3\5\uffff\1\3\4\uffff\1\3\1\uffff\1\3\26\uffff\1\23\2\3\10\uffff\1\3\1\uffff\1\3\5\uffff\1\3",
            "\1\3\41\uffff\1\3\62\uffff\1\3\17\uffff\1\3\1\uffff\1\3\7\uffff\1\3\5\uffff\1\3\4\uffff\1\3\1\uffff\1\3\26\uffff\1\23\2\3\10\uffff\1\3\1\uffff\1\3\5\uffff\1\3",
            "",
            "",
            "\1\24",
            "",
            "\1\3\4\uffff\1\3\101\uffff\1\7\7\uffff\1\7\44\uffff\1\7\22\uffff\1\7\1\uffff\1\3\11\uffff\1\7\16\uffff\1\7\4\uffff\1\7\11\uffff\1\7\2\uffff\1\3\1\7\2\uffff\1\7\1\uffff\3\7",
            "\6\20\1\uffff\1\20\1\uffff\1\20\1\uffff\1\3\1\20\4\uffff\2\20\6\uffff\1\20\2\uffff\1\20\3\uffff\1\20\2\uffff\1\20\3\uffff\1\20\13\uffff\1\20\2\uffff\1\20\3\uffff\1\20\7\uffff\1\20\17\uffff\2\20\25\uffff\1\20\1\uffff\1\20\3\uffff\1\20\2\uffff\1\20\10\uffff\1\20\22\uffff\1\20\33\uffff\1\20\23\uffff\1\20\3\uffff\2\20"
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA52 extends DFA {

        public DFA52(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 52;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "1718:4: ( ( () otherlv_2= Is otherlv_3= A_1 ( ( (otherlv_4= TopLevel )? otherlv_5= Class ) | (otherlv_6= Type otherlv_7= Of ( (lv_superElement_8_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_9_0= ruleSadlDataTypeFacet ) )? ) ) ( ( (lv_describedBy_10_0= ruleSadlPropertyDeclarationInClass ) )+ | ( (otherlv_11= Comma )? ( (lv_restrictions_12_0= ruleSadlPropertyRestriction ) ) )+ )? ) | ( () ( (lv_primaryDeclaration_14_0= Is ) ) otherlv_15= A_1 otherlv_16= Property ( (otherlv_17= Comma )? ( (lv_restrictions_18_0= ruleSadlPropertyRestriction ) ) )* ) | ( () ( (otherlv_20= Comma )? ( (lv_restrictions_21_0= ruleSadlPropertyRestriction ) ) )+ ) | ( () otherlv_23= Is otherlv_24= The_1 otherlv_25= Same otherlv_26= As ( (lv_complement_27_0= Not ) )? ( (lv_sameAs_28_0= ruleSadlTypeReference ) ) ) | ( () otherlv_30= Is otherlv_31= Not otherlv_32= The_1 otherlv_33= Same otherlv_34= As ( (lv_notTheSameAs_35_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_37= Is ruleAnArticle ( (lv_type_39_0= ruleSadlTypeReference ) ) )? ( ( (lv_listInitializer_40_0= ruleSadlValueList ) ) | ( (lv_propertyInitializers_41_0= ruleSadlPropertyInitializer ) )+ )? ) | ( () (otherlv_43= And ( (lv_classes_44_0= ruleSadlResource ) ) )+ otherlv_45= Are otherlv_46= Disjoint ) )";
        }
    }
    static final String dfa_14s = "\14\uffff";
    static final String dfa_15s = "\1\3\2\7\1\uffff\2\3\3\uffff\2\7\1\uffff";
    static final String dfa_16s = "\1\u0083\2\123\1\uffff\2\123\1\43\1\uffff\1\43\2\123\1\43";
    static final String dfa_17s = "\1\u00c7\2\u00c8\1\uffff\2\u00c8\1\u00c7\1\uffff\1\u00c7\2\u00c8\1\u00c7";
    static final String dfa_18s = "\3\uffff\1\2\3\uffff\1\1\4\uffff";
    static final String dfa_19s = "\14\uffff}>";
    static final String[] dfa_20s = {
            "\1\3\14\uffff\1\3\26\uffff\2\3\11\uffff\1\3\1\uffff\1\3\5\uffff\1\3\13\uffff\1\2\1\1",
            "\1\3\7\uffff\1\3\44\uffff\1\3\2\uffff\1\7\14\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\6\3\uffff\1\7\1\3\1\7\5\uffff\1\7\2\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\7\uffff\1\3\44\uffff\1\3\2\uffff\1\7\14\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\6\3\uffff\1\7\1\3\1\7\5\uffff\1\7\2\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "",
            "\1\7\7\uffff\1\7\44\uffff\1\7\2\uffff\1\3\14\uffff\1\3\2\uffff\1\7\13\uffff\1\7\7\uffff\2\3\5\uffff\1\10\3\uffff\1\3\1\7\1\3\5\uffff\1\3\2\uffff\1\7\3\uffff\1\7\2\uffff\1\7\1\uffff\1\12\1\11\1\7",
            "\1\7\7\uffff\1\7\44\uffff\1\7\2\uffff\1\3\14\uffff\1\3\2\uffff\1\7\13\uffff\1\7\7\uffff\2\3\5\uffff\1\10\3\uffff\1\3\1\7\1\3\5\uffff\1\3\2\uffff\1\7\3\uffff\1\7\2\uffff\1\7\1\uffff\1\12\1\11\1\7",
            "\1\3\54\uffff\1\7\51\uffff\1\7\2\uffff\1\3\12\uffff\1\3\1\uffff\1\3\12\uffff\1\3\10\uffff\1\3\1\uffff\1\3\32\uffff\1\3\4\uffff\1\3\5\uffff\2\3",
            "",
            "\1\7\54\uffff\1\3\51\uffff\1\3\2\uffff\1\7\12\uffff\1\7\1\uffff\1\7\12\uffff\1\7\10\uffff\1\7\1\uffff\1\7\32\uffff\1\7\4\uffff\1\7\5\uffff\2\7",
            "\1\3\7\uffff\1\3\44\uffff\1\3\2\uffff\1\7\14\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\13\3\uffff\1\7\1\3\1\7\5\uffff\1\7\2\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\7\uffff\1\3\44\uffff\1\3\2\uffff\1\7\14\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\13\3\uffff\1\7\1\3\1\7\5\uffff\1\7\2\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\54\uffff\1\7\51\uffff\1\7\2\uffff\1\3\12\uffff\1\3\1\uffff\1\3\12\uffff\1\3\10\uffff\1\3\1\uffff\1\3\32\uffff\1\3\4\uffff\1\3\5\uffff\2\3"
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "2504:6: ( (lv_instance_79_0= ruleSadlResource ) )?";
        }
    }
    static final String[] dfa_21s = {
            "\1\3\14\uffff\1\3\26\uffff\2\3\6\uffff\1\3\2\uffff\1\3\23\uffff\1\2\1\1",
            "\1\3\7\uffff\1\3\44\uffff\1\3\2\uffff\1\7\14\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\6\1\7\2\uffff\1\7\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\7\uffff\1\3\44\uffff\1\3\2\uffff\1\7\14\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\6\1\7\2\uffff\1\7\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "",
            "\1\7\7\uffff\1\7\44\uffff\1\7\2\uffff\1\3\14\uffff\1\3\2\uffff\1\7\13\uffff\1\7\7\uffff\2\3\5\uffff\1\10\1\3\2\uffff\1\3\1\7\11\uffff\1\7\3\uffff\1\7\2\uffff\1\7\1\uffff\1\12\1\11\1\7",
            "\1\7\7\uffff\1\7\44\uffff\1\7\2\uffff\1\3\14\uffff\1\3\2\uffff\1\7\13\uffff\1\7\7\uffff\2\3\5\uffff\1\10\1\3\2\uffff\1\3\1\7\11\uffff\1\7\3\uffff\1\7\2\uffff\1\7\1\uffff\1\12\1\11\1\7",
            "\1\3\54\uffff\1\7\51\uffff\1\7\2\uffff\1\3\12\uffff\1\3\1\uffff\1\3\12\uffff\1\3\10\uffff\1\3\1\uffff\1\3\32\uffff\1\3\4\uffff\1\3\5\uffff\2\3",
            "",
            "\1\7\54\uffff\1\3\51\uffff\1\3\2\uffff\1\7\12\uffff\1\7\1\uffff\1\7\12\uffff\1\7\10\uffff\1\7\1\uffff\1\7\32\uffff\1\7\4\uffff\1\7\5\uffff\2\7",
            "\1\3\7\uffff\1\3\44\uffff\1\3\2\uffff\1\7\14\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\13\1\7\2\uffff\1\7\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\7\uffff\1\3\44\uffff\1\3\2\uffff\1\7\14\uffff\1\7\2\uffff\1\3\13\uffff\1\3\7\uffff\2\7\5\uffff\1\13\1\7\2\uffff\1\7\1\3\11\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\54\uffff\1\7\51\uffff\1\7\2\uffff\1\3\12\uffff\1\3\1\uffff\1\3\12\uffff\1\3\10\uffff\1\3\1\uffff\1\3\32\uffff\1\3\4\uffff\1\3\5\uffff\2\3"
    };
    static final short[][] dfa_21 = unpackEncodedStringArray(dfa_21s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "3078:5: ( (lv_instance_8_0= ruleSadlResource ) )?";
        }
    }
    static final String dfa_22s = "\12\uffff";
    static final String dfa_23s = "\2\uffff\1\5\6\uffff\1\5";
    static final String dfa_24s = "\1\u00b3\1\u00c4\1\23\2\u00b1\2\uffff\2\u00c4\1\23";
    static final String dfa_25s = "\2\u00c4\1\u00c1\2\u00c4\2\uffff\2\u00c4\1\u00ba";
    static final String dfa_26s = "\5\uffff\1\1\1\2\3\uffff";
    static final String dfa_27s = "\12\uffff}>";
    static final String[] dfa_28s = {
            "\1\1\20\uffff\1\2",
            "\1\2",
            "\2\5\41\uffff\1\5\102\uffff\1\5\1\uffff\1\5\7\uffff\1\5\5\uffff\1\5\4\uffff\1\5\1\uffff\1\5\26\uffff\2\5\6\uffff\1\5\2\uffff\1\5\1\6\1\5\5\uffff\1\5\1\uffff\1\4\4\uffff\1\3",
            "\1\10\1\uffff\1\7\20\uffff\1\11",
            "\1\10\1\uffff\1\7\20\uffff\1\11",
            "",
            "",
            "\1\11",
            "\1\11",
            "\2\5\41\uffff\1\5\102\uffff\1\5\1\uffff\1\5\7\uffff\1\5\5\uffff\1\5\4\uffff\1\5\1\uffff\1\5\26\uffff\2\5\6\uffff\1\5\2\uffff\1\5\1\6\1\5\5\uffff\1\5"
    };

    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final char[] dfa_25 = DFA.unpackEncodedStringToUnsignedChars(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[][] dfa_28 = unpackEncodedStringArray(dfa_28s);

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = dfa_22;
            this.eof = dfa_23;
            this.min = dfa_24;
            this.max = dfa_25;
            this.accept = dfa_26;
            this.special = dfa_27;
            this.transition = dfa_28;
        }
        public String getDescription() {
            return "3309:4: ( ( (lv_len_10_0= ruleFacetNumber ) ) | ( ( (lv_minlen_11_0= ruleFacetNumber ) ) otherlv_12= HyphenMinus ( ( (lv_maxlen_13_1= ruleFacetNumber | lv_maxlen_13_2= Asterisk ) ) ) ) )";
        }
    }
    static final String dfa_29s = "\23\uffff";
    static final String dfa_30s = "\17\uffff\1\20\1\uffff\1\20\1\uffff";
    static final String dfa_31s = "\1\24\1\uffff\1\50\1\52\1\uffff\1\14\3\uffff\1\105\5\uffff\1\23\1\uffff\1\23\1\4";
    static final String dfa_32s = "\1\u00a8\1\uffff\2\u00c4\1\uffff\1\u00c0\3\uffff\1\105\5\uffff\1\u00ba\1\uffff\1\u00ba\1\u00c7";
    static final String dfa_33s = "\1\uffff\1\1\2\uffff\1\2\1\uffff\1\12\1\13\1\10\1\uffff\1\3\1\4\1\5\1\7\1\6\1\uffff\1\11\2\uffff";
    static final String dfa_34s = "\23\uffff}>";
    static final String[] dfa_35s = {
            "\1\4\41\uffff\1\1\102\uffff\1\6\1\uffff\1\1\7\uffff\1\3\12\uffff\1\7\1\uffff\1\2\26\uffff\1\5\1\4",
            "",
            "\1\10\1\uffff\1\1\35\uffff\1\12\24\uffff\1\10\66\uffff\1\1\15\uffff\1\1\35\uffff\1\11\3\uffff\1\1",
            "\1\1\35\uffff\1\12\113\uffff\1\1\15\uffff\1\1\35\uffff\1\12\3\uffff\1\1",
            "",
            "\1\16\4\uffff\1\14\u0083\uffff\1\13\52\uffff\1\15",
            "",
            "",
            "",
            "\1\17",
            "",
            "",
            "",
            "",
            "",
            "\2\20\33\uffff\1\20\5\uffff\1\20\60\uffff\1\21\21\uffff\1\20\1\uffff\1\20\7\uffff\1\20\12\uffff\1\20\1\uffff\1\20\26\uffff\2\20\11\uffff\1\20\1\uffff\1\20\5\uffff\1\20",
            "",
            "\2\20\41\uffff\1\20\102\uffff\1\20\1\uffff\1\20\7\uffff\1\20\12\uffff\1\20\1\uffff\1\20\26\uffff\1\20\1\22\11\uffff\1\20\1\uffff\1\20\5\uffff\1\20",
            "\6\20\1\uffff\1\20\1\uffff\1\20\2\uffff\1\20\4\uffff\2\20\6\uffff\1\20\2\uffff\1\20\3\uffff\1\20\2\uffff\1\20\3\uffff\1\20\13\uffff\1\20\2\uffff\1\20\3\uffff\1\20\7\uffff\1\20\17\uffff\2\20\25\uffff\1\20\1\uffff\1\20\3\uffff\1\20\2\uffff\1\20\10\uffff\1\20\1\uffff\1\12\20\uffff\1\20\33\uffff\1\20\23\uffff\1\20\3\uffff\2\20"
    };

    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[][] dfa_35 = unpackEncodedStringArray(dfa_35s);

    class DFA106 extends DFA {

        public DFA106(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 106;
            this.eot = dfa_29;
            this.eof = dfa_30;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_34;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "3890:2: (this_SadlCondition_0= ruleSadlCondition | ( () (otherlv_2= Describes | otherlv_3= Of ) ( (lv_domain_4_0= ruleSadlTypeReference ) ) ) | ( () (otherlv_6= Has | otherlv_7= With ) ( (otherlv_8= A_1 ( (lv_singleValued_9_0= Single ) ) otherlv_10= Value ) | otherlv_11= Values ) otherlv_12= Of otherlv_13= Type ( ( ( (lv_typeonly_14_1= Class | lv_typeonly_14_2= Data ) ) ) | ( ( (lv_range_15_0= ruleSadlPrimaryTypeReference ) ) ( (lv_facet_16_0= ruleSadlDataTypeFacet ) )? ) ) ) | ( () otherlv_18= Is otherlv_19= The_1 otherlv_20= Inverse otherlv_21= Of ( ( ruleQNAME ) ) ) | ( () otherlv_24= Is otherlv_25= Transitive ) | ( () otherlv_27= Is otherlv_28= Symmetrical ) | ( () otherlv_30= Is otherlv_31= A_1 otherlv_32= Type otherlv_33= Of otherlv_34= Annotation ) | ( () otherlv_36= Has (otherlv_37= Level ( (lv_level_38_0= RULE_NUMBER ) ) )? otherlv_39= Default ( (lv_defValue_40_0= ruleSadlExplicitValue ) ) ) | ( () otherlv_42= Has otherlv_43= A_1 otherlv_44= Single ( ( (lv_inverse_45_0= Subject ) ) | otherlv_46= Value )? ) | ( () otherlv_48= Must otherlv_49= Be otherlv_50= One otherlv_51= Of otherlv_52= LeftCurlyBracket ( (lv_values_53_0= ruleSadlExplicitValue ) ) (otherlv_54= Comma ( (lv_values_55_0= ruleSadlExplicitValue ) ) )* otherlv_56= RightCurlyBracket ) | ( () otherlv_58= Can otherlv_59= Only otherlv_60= Be otherlv_61= One otherlv_62= Of otherlv_63= LeftCurlyBracket ( (lv_values_64_0= ruleSadlExplicitValue ) ) (otherlv_65= Comma ( (lv_values_66_0= ruleSadlExplicitValue ) ) )* otherlv_67= RightCurlyBracket ) )";
        }
    }
    static final String dfa_36s = "\72\uffff";
    static final String dfa_37s = "\1\3\1\uffff\1\10\1\uffff\2\3\23\uffff\2\63\37\uffff";
    static final String dfa_38s = "\1\23\1\uffff\1\23\1\uffff\2\123\22\uffff\1\43\2\123\25\uffff\1\43\11\uffff";
    static final String dfa_39s = "\1\u00c8\1\uffff\1\u00c8\1\uffff\2\u00c8\22\uffff\1\u00c7\2\u00c8\25\uffff\1\u00c7\11\uffff";
    static final String dfa_40s = "\1\uffff\1\1\1\uffff\1\2\2\uffff\22\1\3\uffff\25\1\1\uffff\11\1";
    static final String dfa_41s = "\1\2\1\uffff\1\0\1\uffff\1\3\1\6\22\uffff\1\4\1\5\1\1\25\uffff\1\7\11\uffff}>";
    static final String[] dfa_42s = {
            "\2\3\41\uffff\1\3\102\uffff\1\3\1\uffff\1\3\7\uffff\1\3\5\uffff\1\3\4\uffff\1\3\1\uffff\1\3\26\uffff\2\3\6\uffff\1\3\2\uffff\1\3\1\uffff\1\3\5\uffff\1\3\3\uffff\1\3\4\uffff\1\3\2\uffff\1\2\1\3\1\1",
            "",
            "\1\24\1\21\41\uffff\1\20\34\uffff\1\3\7\uffff\1\3\35\uffff\1\22\1\uffff\1\17\4\uffff\1\3\2\uffff\1\12\5\uffff\1\26\4\uffff\1\23\1\uffff\1\13\2\uffff\1\3\13\uffff\1\3\7\uffff\1\14\1\15\5\uffff\1\3\1\16\2\uffff\1\11\1\3\1\6\5\uffff\1\7\2\uffff\1\3\1\27\2\uffff\1\3\1\uffff\1\25\1\3\1\uffff\1\5\1\4\1\3",
            "",
            "\1\36\7\uffff\1\42\44\uffff\1\35\2\uffff\1\3\14\uffff\1\3\2\uffff\1\44\13\uffff\1\40\7\uffff\2\3\5\uffff\1\30\1\3\2\uffff\1\3\1\43\1\3\5\uffff\1\3\2\uffff\1\37\3\uffff\1\41\2\uffff\1\33\1\uffff\1\32\1\31\1\34",
            "\1\36\7\uffff\1\42\44\uffff\1\35\2\uffff\1\3\14\uffff\1\3\2\uffff\1\44\13\uffff\1\40\7\uffff\2\3\5\uffff\1\30\1\3\2\uffff\1\3\1\43\1\3\5\uffff\1\3\2\uffff\1\37\3\uffff\1\41\2\uffff\1\33\1\uffff\1\32\1\31\1\34",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\55\54\uffff\1\3\51\uffff\1\3\2\uffff\1\54\12\uffff\1\56\1\uffff\1\53\12\uffff\1\57\10\uffff\1\51\1\uffff\1\52\32\uffff\1\47\4\uffff\1\50\5\uffff\1\46\1\45",
            "\1\3\7\uffff\1\3\44\uffff\1\3\2\uffff\1\64\14\uffff\1\65\2\uffff\1\3\13\uffff\1\3\7\uffff\1\66\1\67\5\uffff\1\60\1\62\2\uffff\1\61\1\3\1\6\5\uffff\1\7\2\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "\1\3\7\uffff\1\3\44\uffff\1\3\2\uffff\1\64\14\uffff\1\65\2\uffff\1\3\13\uffff\1\3\7\uffff\1\66\1\67\5\uffff\1\60\1\62\2\uffff\1\61\1\3\1\6\5\uffff\1\7\2\uffff\1\3\3\uffff\1\3\2\uffff\1\3\1\uffff\1\5\1\4\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\3\54\uffff\1\70\51\uffff\1\71\2\uffff\1\3\12\uffff\1\3\1\uffff\1\3\12\uffff\1\3\10\uffff\1\3\1\uffff\1\3\32\uffff\1\3\4\uffff\1\3\5\uffff\2\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final char[] dfa_38 = DFA.unpackEncodedStringToUnsignedChars(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[][] dfa_42 = unpackEncodedStringArray(dfa_42s);

    class DFA121 extends DFA {

        public DFA121(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 121;
            this.eot = dfa_36;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "4998:4: ( ( RULE_STRING | RULE_ID )=> (lv_unit_3_0= ruleUNIT ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA121_2 = input.LA(1);

                         
                        int index121_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA121_2==RULE_QNAME_TERMINAL) ) {s = 4;}

                        else if ( (LA121_2==RULE_ID) ) {s = 5;}

                        else if ( (LA121_2==False||LA121_2==Known||LA121_2==True||LA121_2==Not||LA121_2==PI||LA121_2==LeftParenthesis||LA121_2==HyphenMinus||LA121_2==LeftSquareBracket||LA121_2==E_1||LA121_2==RULE_NUMBER||LA121_2==RULE_STRING) ) {s = 3;}

                        else if ( (LA121_2==FullStop) && (synpred2_InternalDialogParser())) {s = 6;}

                        else if ( (LA121_2==QuestionMark) && (synpred2_InternalDialogParser())) {s = 7;}

                        else if ( (LA121_2==EOF) && (synpred2_InternalDialogParser())) {s = 8;}

                        else if ( (LA121_2==Comma) && (synpred2_InternalDialogParser())) {s = 9;}

                        else if ( (LA121_2==With) && (synpred2_InternalDialogParser())) {s = 10;}

                        else if ( (LA121_2==Has) && (synpred2_InternalDialogParser())) {s = 11;}

                        else if ( (LA121_2==Is) && (synpred2_InternalDialogParser())) {s = 12;}

                        else if ( (LA121_2==Of) && (synpred2_InternalDialogParser())) {s = 13;}

                        else if ( (LA121_2==RightParenthesis) && (synpred2_InternalDialogParser())) {s = 14;}

                        else if ( (LA121_2==Only) && (synpred2_InternalDialogParser())) {s = 15;}

                        else if ( (LA121_2==Always) && (synpred2_InternalDialogParser())) {s = 16;}

                        else if ( (LA121_2==Describes) && (synpred2_InternalDialogParser())) {s = 17;}

                        else if ( (LA121_2==Must) && (synpred2_InternalDialogParser())) {s = 18;}

                        else if ( (LA121_2==Can) && (synpred2_InternalDialogParser())) {s = 19;}

                        else if ( (LA121_2==Described) && (synpred2_InternalDialogParser())) {s = 20;}

                        else if ( (LA121_2==RightCurlyBracket) && (synpred2_InternalDialogParser())) {s = 21;}

                        else if ( (LA121_2==And) && (synpred2_InternalDialogParser())) {s = 22;}

                        else if ( (LA121_2==RightSquareBracket) && (synpred2_InternalDialogParser())) {s = 23;}

                         
                        input.seek(index121_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA121_26 = input.LA(1);

                         
                        int index121_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA121_26==RULE_QNAME_TERMINAL) ) {s = 4;}

                        else if ( (LA121_26==RULE_ID) ) {s = 5;}

                        else if ( (LA121_26==False||LA121_26==Known||LA121_26==True||LA121_26==Not||LA121_26==PI||LA121_26==HyphenMinus||LA121_26==LeftSquareBracket||LA121_26==E_1||LA121_26==RULE_NUMBER||LA121_26==RULE_STRING) ) {s = 3;}

                        else if ( (LA121_26==LeftParenthesis) ) {s = 48;}

                        else if ( (LA121_26==Comma) && (synpred2_InternalDialogParser())) {s = 49;}

                        else if ( (LA121_26==RightParenthesis) && (synpred2_InternalDialogParser())) {s = 50;}

                        else if ( (LA121_26==EOF) && (synpred2_InternalDialogParser())) {s = 51;}

                        else if ( (LA121_26==With) && (synpred2_InternalDialogParser())) {s = 52;}

                        else if ( (LA121_26==Has) && (synpred2_InternalDialogParser())) {s = 53;}

                        else if ( (LA121_26==Is) && (synpred2_InternalDialogParser())) {s = 54;}

                        else if ( (LA121_26==Of) && (synpred2_InternalDialogParser())) {s = 55;}

                        else if ( (LA121_26==FullStop) && (synpred2_InternalDialogParser())) {s = 6;}

                        else if ( (LA121_26==QuestionMark) && (synpred2_InternalDialogParser())) {s = 7;}

                         
                        input.seek(index121_26);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA121_0 = input.LA(1);

                         
                        int index121_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA121_0==RULE_STRING) && (synpred2_InternalDialogParser())) {s = 1;}

                        else if ( (LA121_0==RULE_ID) ) {s = 2;}

                        else if ( (LA121_0==EOF||(LA121_0>=Described && LA121_0<=Describes)||LA121_0==Always||LA121_0==Must||LA121_0==Only||LA121_0==With||LA121_0==And||LA121_0==Can||LA121_0==Has||(LA121_0>=Is && LA121_0<=Of)||LA121_0==RightParenthesis||LA121_0==Comma||LA121_0==FullStop||LA121_0==QuestionMark||LA121_0==RightSquareBracket||LA121_0==RightCurlyBracket||LA121_0==RULE_QNAME_TERMINAL) ) {s = 3;}

                         
                        input.seek(index121_0);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA121_4 = input.LA(1);

                         
                        int index121_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA121_4==EOF||LA121_4==With||LA121_4==Has||(LA121_4>=Is && LA121_4<=Of)||LA121_4==RightParenthesis||LA121_4==Comma||LA121_4==FullStop||LA121_4==QuestionMark) ) {s = 3;}

                        else if ( (LA121_4==LeftParenthesis) ) {s = 24;}

                        else if ( (LA121_4==RULE_QNAME_TERMINAL) ) {s = 25;}

                        else if ( (LA121_4==RULE_ID) ) {s = 26;}

                        else if ( (LA121_4==RULE_NUMBER) && (synpred2_InternalDialogParser())) {s = 27;}

                        else if ( (LA121_4==RULE_STRING) && (synpred2_InternalDialogParser())) {s = 28;}

                        else if ( (LA121_4==True) && (synpred2_InternalDialogParser())) {s = 29;}

                        else if ( (LA121_4==False) && (synpred2_InternalDialogParser())) {s = 30;}

                        else if ( (LA121_4==LeftSquareBracket) && (synpred2_InternalDialogParser())) {s = 31;}

                        else if ( (LA121_4==PI) && (synpred2_InternalDialogParser())) {s = 32;}

                        else if ( (LA121_4==E_1) && (synpred2_InternalDialogParser())) {s = 33;}

                        else if ( (LA121_4==Known) && (synpred2_InternalDialogParser())) {s = 34;}

                        else if ( (LA121_4==HyphenMinus) && (synpred2_InternalDialogParser())) {s = 35;}

                        else if ( (LA121_4==Not) && (synpred2_InternalDialogParser())) {s = 36;}

                         
                        input.seek(index121_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA121_24 = input.LA(1);

                         
                        int index121_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA121_24==Alias||LA121_24==Note) ) {s = 3;}

                        else if ( (LA121_24==RULE_QNAME_TERMINAL) && (synpred2_InternalDialogParser())) {s = 37;}

                        else if ( (LA121_24==RULE_ID) && (synpred2_InternalDialogParser())) {s = 38;}

                        else if ( (LA121_24==A) && (synpred2_InternalDialogParser())) {s = 39;}

                        else if ( (LA121_24==A_1) && (synpred2_InternalDialogParser())) {s = 40;}

                        else if ( (LA121_24==An) && (synpred2_InternalDialogParser())) {s = 41;}

                        else if ( (LA121_24==An_1) && (synpred2_InternalDialogParser())) {s = 42;}

                        else if ( (LA121_24==Any) && (synpred2_InternalDialogParser())) {s = 43;}

                        else if ( (LA121_24==Some) && (synpred2_InternalDialogParser())) {s = 44;}

                        else if ( (LA121_24==Another) && (synpred2_InternalDialogParser())) {s = 45;}

                        else if ( (LA121_24==The) && (synpred2_InternalDialogParser())) {s = 46;}

                        else if ( (LA121_24==The_1) && (synpred2_InternalDialogParser())) {s = 47;}

                         
                        input.seek(index121_24);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA121_25 = input.LA(1);

                         
                        int index121_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA121_25==RULE_QNAME_TERMINAL) ) {s = 4;}

                        else if ( (LA121_25==RULE_ID) ) {s = 5;}

                        else if ( (LA121_25==False||LA121_25==Known||LA121_25==True||LA121_25==Not||LA121_25==PI||LA121_25==HyphenMinus||LA121_25==LeftSquareBracket||LA121_25==E_1||LA121_25==RULE_NUMBER||LA121_25==RULE_STRING) ) {s = 3;}

                        else if ( (LA121_25==LeftParenthesis) ) {s = 48;}

                        else if ( (LA121_25==Comma) && (synpred2_InternalDialogParser())) {s = 49;}

                        else if ( (LA121_25==RightParenthesis) && (synpred2_InternalDialogParser())) {s = 50;}

                        else if ( (LA121_25==EOF) && (synpred2_InternalDialogParser())) {s = 51;}

                        else if ( (LA121_25==With) && (synpred2_InternalDialogParser())) {s = 52;}

                        else if ( (LA121_25==Has) && (synpred2_InternalDialogParser())) {s = 53;}

                        else if ( (LA121_25==Is) && (synpred2_InternalDialogParser())) {s = 54;}

                        else if ( (LA121_25==Of) && (synpred2_InternalDialogParser())) {s = 55;}

                        else if ( (LA121_25==FullStop) && (synpred2_InternalDialogParser())) {s = 6;}

                        else if ( (LA121_25==QuestionMark) && (synpred2_InternalDialogParser())) {s = 7;}

                         
                        input.seek(index121_25);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA121_5 = input.LA(1);

                         
                        int index121_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA121_5==EOF||LA121_5==With||LA121_5==Has||(LA121_5>=Is && LA121_5<=Of)||LA121_5==RightParenthesis||LA121_5==Comma||LA121_5==FullStop||LA121_5==QuestionMark) ) {s = 3;}

                        else if ( (LA121_5==LeftParenthesis) ) {s = 24;}

                        else if ( (LA121_5==RULE_QNAME_TERMINAL) ) {s = 25;}

                        else if ( (LA121_5==RULE_ID) ) {s = 26;}

                        else if ( (LA121_5==RULE_NUMBER) && (synpred2_InternalDialogParser())) {s = 27;}

                        else if ( (LA121_5==RULE_STRING) && (synpred2_InternalDialogParser())) {s = 28;}

                        else if ( (LA121_5==True) && (synpred2_InternalDialogParser())) {s = 29;}

                        else if ( (LA121_5==False) && (synpred2_InternalDialogParser())) {s = 30;}

                        else if ( (LA121_5==LeftSquareBracket) && (synpred2_InternalDialogParser())) {s = 31;}

                        else if ( (LA121_5==PI) && (synpred2_InternalDialogParser())) {s = 32;}

                        else if ( (LA121_5==E_1) && (synpred2_InternalDialogParser())) {s = 33;}

                        else if ( (LA121_5==Known) && (synpred2_InternalDialogParser())) {s = 34;}

                        else if ( (LA121_5==HyphenMinus) && (synpred2_InternalDialogParser())) {s = 35;}

                        else if ( (LA121_5==Not) && (synpred2_InternalDialogParser())) {s = 36;}

                         
                        input.seek(index121_5);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA121_48 = input.LA(1);

                         
                        int index121_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA121_48==Alias) && (synpred2_InternalDialogParser())) {s = 56;}

                        else if ( (LA121_48==Note) && (synpred2_InternalDialogParser())) {s = 57;}

                        else if ( (LA121_48==Another||LA121_48==Some||LA121_48==The||LA121_48==Any||LA121_48==The_1||LA121_48==An||LA121_48==An_1||LA121_48==A||LA121_48==A_1||(LA121_48>=RULE_ID && LA121_48<=RULE_QNAME_TERMINAL)) ) {s = 3;}

                         
                        input.seek(index121_48);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 121, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_43s = "\1\43\11\4\2\uffff";
    static final String dfa_44s = "\1\u00c8\11\u00c7\2\uffff";
    static final String dfa_45s = "\12\uffff\1\1\1\2";
    static final String[] dfa_46s = {
            "\1\7\5\uffff\1\13\7\uffff\1\12\17\uffff\1\13\20\uffff\2\13\1\uffff\1\13\4\uffff\2\13\7\uffff\1\13\3\uffff\1\13\2\uffff\1\13\12\uffff\1\13\5\uffff\1\13\1\uffff\1\6\2\uffff\2\13\6\uffff\1\10\1\uffff\1\5\10\uffff\1\13\1\uffff\1\11\3\uffff\1\13\4\uffff\1\3\1\13\1\4\13\uffff\1\13\1\uffff\1\13\4\uffff\1\13\7\uffff\1\1\1\uffff\1\13\2\uffff\1\2\2\13\1\uffff\1\13\1\uffff\3\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\6\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\22\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\6\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\1\uffff\1\13\20\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\6\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\22\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\6\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\22\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\6\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\22\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\6\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\22\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\4\uffff\1\13\2\uffff\1\13\15\uffff\4\13\6\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\22\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\2\uffff\1\13\1\uffff\1\13\2\uffff\1\13\15\uffff\4\13\2\uffff\1\13\3\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\22\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "\6\13\1\uffff\1\13\1\uffff\1\13\2\uffff\1\13\4\uffff\2\13\6\uffff\1\13\2\uffff\1\13\3\uffff\1\13\2\uffff\1\13\1\uffff\1\13\1\uffff\1\13\3\uffff\1\13\1\uffff\1\12\5\uffff\1\13\2\uffff\2\13\1\uffff\2\13\2\uffff\1\13\1\uffff\1\13\2\uffff\1\13\15\uffff\4\13\2\uffff\1\13\3\uffff\1\13\1\uffff\3\13\1\uffff\1\13\10\uffff\1\13\1\uffff\1\13\3\uffff\1\13\2\uffff\1\13\10\uffff\1\13\22\uffff\1\13\33\uffff\1\13\23\uffff\1\13\3\uffff\2\13",
            "",
            ""
    };
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[][] dfa_46 = unpackEncodedStringArray(dfa_46s);

    class DFA175 extends DFA {

        public DFA175(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 175;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_43;
            this.max = dfa_44;
            this.accept = dfa_45;
            this.special = dfa_19;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "6792:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= ruleOrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= ruleOrExpression ) ) ) | this_OrExpression_7= ruleOrExpression )";
        }
    }

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_43;
            this.max = dfa_44;
            this.accept = dfa_45;
            this.special = dfa_19;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "6882:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm1_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm1_OrExpression ) ) ) | this_OrExpression_7= norm1_OrExpression )";
        }
    }

    class DFA179 extends DFA {

        public DFA179(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 179;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_43;
            this.max = dfa_44;
            this.accept = dfa_45;
            this.special = dfa_19;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "6972:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm2_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm2_OrExpression ) ) ) | this_OrExpression_7= norm2_OrExpression )";
        }
    }

    class DFA181 extends DFA {

        public DFA181(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 181;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_43;
            this.max = dfa_44;
            this.accept = dfa_45;
            this.special = dfa_19;
            this.transition = dfa_46;
        }
        public String getDescription() {
            return "7062:2: ( ( () ( ruleAnArticle )? otherlv_2= Sublist otherlv_3= Of ( (lv_list_4_0= norm3_OrExpression ) ) otherlv_5= Matching ( (lv_where_6_0= norm3_OrExpression ) ) ) | this_OrExpression_7= norm3_OrExpression )";
        }
    }
    static final String dfa_47s = "\75\uffff";
    static final String dfa_48s = "\1\45\74\uffff";
    static final String dfa_49s = "\1\34\1\uffff\2\0\36\uffff\1\0\32\uffff";
    static final String dfa_50s = "\1\u00c8\1\uffff\2\0\36\uffff\1\0\32\uffff";
    static final String dfa_51s = "\1\uffff\1\1\2\uffff\36\1\1\uffff\2\1\1\2\27\uffff";
    static final String dfa_52s = "\1\0\1\uffff\1\1\1\2\36\uffff\1\3\32\uffff}>";
    static final String[] dfa_53s = {
            "\1\45\4\uffff\1\45\1\uffff\1\12\5\uffff\1\44\27\uffff\1\27\20\uffff\1\30\1\20\1\uffff\1\32\4\uffff\1\31\1\22\3\uffff\1\45\3\uffff\1\43\3\uffff\1\34\2\uffff\1\25\6\uffff\1\45\3\uffff\1\33\5\uffff\1\41\1\uffff\1\11\2\uffff\1\17\1\26\6\uffff\1\13\1\45\1\10\5\uffff\1\45\2\uffff\1\37\1\uffff\1\14\1\uffff\2\45\1\24\2\45\1\uffff\1\45\1\6\1\21\1\7\6\uffff\1\45\1\uffff\1\45\1\uffff\1\45\1\40\1\45\1\1\3\45\1\uffff\1\42\1\uffff\1\45\1\uffff\3\45\1\uffff\1\4\1\uffff\1\35\1\uffff\1\45\1\5\1\23\1\36\1\uffff\1\16\1\uffff\1\3\1\2\1\15",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[][] dfa_53 = unpackEncodedStringArray(dfa_53s);

    class DFA220 extends DFA {

        public DFA220(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 220;
            this.eot = dfa_47;
            this.eof = dfa_48;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_53;
        }
        public String getDescription() {
            return "9481:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_7_0= ruleElementInList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA220_0 = input.LA(1);

                         
                        int index220_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA220_0==LeftParenthesis) && (synpred21_InternalDialogParser())) {s = 1;}

                        else if ( (LA220_0==RULE_QNAME_TERMINAL) ) {s = 2;}

                        else if ( (LA220_0==RULE_ID) ) {s = 3;}

                        else if ( (LA220_0==A) && (synpred21_InternalDialogParser())) {s = 4;}

                        else if ( (LA220_0==A_1) && (synpred21_InternalDialogParser())) {s = 5;}

                        else if ( (LA220_0==An) && (synpred21_InternalDialogParser())) {s = 6;}

                        else if ( (LA220_0==An_1) && (synpred21_InternalDialogParser())) {s = 7;}

                        else if ( (LA220_0==Any) && (synpred21_InternalDialogParser())) {s = 8;}

                        else if ( (LA220_0==Some) && (synpred21_InternalDialogParser())) {s = 9;}

                        else if ( (LA220_0==Another) && (synpred21_InternalDialogParser())) {s = 10;}

                        else if ( (LA220_0==The) && (synpred21_InternalDialogParser())) {s = 11;}

                        else if ( (LA220_0==The_1) && (synpred21_InternalDialogParser())) {s = 12;}

                        else if ( (LA220_0==RULE_STRING) && (synpred21_InternalDialogParser())) {s = 13;}

                        else if ( (LA220_0==RULE_NUMBER) && (synpred21_InternalDialogParser())) {s = 14;}

                        else if ( (LA220_0==True) && (synpred21_InternalDialogParser())) {s = 15;}

                        else if ( (LA220_0==False) && (synpred21_InternalDialogParser())) {s = 16;}

                        else if ( (LA220_0==PI) && (synpred21_InternalDialogParser())) {s = 17;}

                        else if ( (LA220_0==Known) && (synpred21_InternalDialogParser())) {s = 18;}

                        else if ( (LA220_0==E_1) && (synpred21_InternalDialogParser())) {s = 19;}

                        else if ( (LA220_0==HyphenMinusHyphenMinus) && (synpred21_InternalDialogParser())) {s = 20;}

                        else if ( (LA220_0==None) && (synpred21_InternalDialogParser())) {s = 21;}

                        else if ( (LA220_0==Type) && (synpred21_InternalDialogParser())) {s = 22;}

                        else if ( (LA220_0==Length) && (synpred21_InternalDialogParser())) {s = 23;}

                        else if ( (LA220_0==Count) && (synpred21_InternalDialogParser())) {s = 24;}

                        else if ( (LA220_0==Index) && (synpred21_InternalDialogParser())) {s = 25;}

                        else if ( (LA220_0==First) && (synpred21_InternalDialogParser())) {s = 26;}

                        else if ( (LA220_0==Last) && (synpred21_InternalDialogParser())) {s = 27;}

                        else if ( (LA220_0==Value) && (synpred21_InternalDialogParser())) {s = 28;}

                        else if ( (LA220_0==LeftSquareBracket) && (synpred21_InternalDialogParser())) {s = 29;}

                        else if ( (LA220_0==LeftCurlyBracket) && (synpred21_InternalDialogParser())) {s = 30;}

                        else if ( (LA220_0==Not) && (synpred21_InternalDialogParser())) {s = 31;}

                        else if ( (LA220_0==ExclamationMark) && (synpred21_InternalDialogParser())) {s = 32;}

                        else if ( (LA220_0==Only) && (synpred21_InternalDialogParser())) {s = 33;}

                        else if ( (LA220_0==HyphenMinus) ) {s = 34;}

                        else if ( (LA220_0==There) && (synpred21_InternalDialogParser())) {s = 35;}

                        else if ( (LA220_0==Element) && (synpred21_InternalDialogParser())) {s = 36;}

                        else if ( (LA220_0==EOF||LA220_0==Contains||LA220_0==Matching||LA220_0==Order||LA220_0==Does||LA220_0==And||LA220_0==Has||(LA220_0>=ExclamationMarkEqualsSign && LA220_0<=AmpersandAmpersand)||(LA220_0>=LessThanSignEqualsSign && LA220_0<=EqualsSignEqualsSign)||LA220_0==GreaterThanSignEqualsSign||LA220_0==Is||LA220_0==Or||LA220_0==VerticalLineVerticalLine||LA220_0==PercentSign||(LA220_0>=RightParenthesis && LA220_0<=PlusSign)||LA220_0==Solidus||(LA220_0>=LessThanSign && LA220_0<=GreaterThanSign)||LA220_0==CircumflexAccent) ) {s = 37;}

                         
                        input.seek(index220_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA220_2 = input.LA(1);

                         
                        int index220_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index220_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA220_3 = input.LA(1);

                         
                        int index220_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index220_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA220_34 = input.LA(1);

                         
                        int index220_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index220_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 220, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_54s = "\100\uffff";
    static final String dfa_55s = "\1\45\77\uffff";
    static final String dfa_56s = "\1\34\1\uffff\2\0\36\uffff\1\0\35\uffff";
    static final String dfa_57s = "\1\u00c8\1\uffff\2\0\36\uffff\1\0\35\uffff";
    static final String dfa_58s = "\1\uffff\1\1\2\uffff\36\1\1\uffff\2\1\1\2\32\uffff";
    static final String dfa_59s = "\1\0\1\uffff\1\1\1\2\36\uffff\1\3\35\uffff}>";
    static final String[] dfa_60s = {
            "\1\45\4\uffff\1\45\1\uffff\1\12\5\uffff\1\44\27\uffff\1\27\20\uffff\1\30\1\20\1\uffff\1\32\4\uffff\1\31\1\22\3\uffff\1\45\3\uffff\1\43\3\uffff\1\34\2\uffff\1\25\6\uffff\1\45\3\uffff\1\33\5\uffff\1\41\1\uffff\1\11\2\uffff\1\17\1\26\1\uffff\1\45\4\uffff\1\13\1\45\1\10\5\uffff\1\45\2\uffff\1\37\1\uffff\1\14\1\uffff\2\45\1\24\2\45\1\uffff\1\45\1\6\1\21\1\7\6\uffff\1\45\1\uffff\1\45\1\uffff\1\45\1\40\1\45\1\1\4\45\1\42\1\uffff\1\45\1\uffff\3\45\1\uffff\1\4\1\uffff\1\35\2\45\1\5\1\23\1\36\1\uffff\1\16\1\uffff\1\3\1\2\1\15",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[][] dfa_60 = unpackEncodedStringArray(dfa_60s);

    class DFA226 extends DFA {

        public DFA226(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 226;
            this.eot = dfa_54;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_59;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "9636:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm1_ElementInList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA226_0 = input.LA(1);

                         
                        int index226_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA226_0==LeftParenthesis) && (synpred24_InternalDialogParser())) {s = 1;}

                        else if ( (LA226_0==RULE_QNAME_TERMINAL) ) {s = 2;}

                        else if ( (LA226_0==RULE_ID) ) {s = 3;}

                        else if ( (LA226_0==A) && (synpred24_InternalDialogParser())) {s = 4;}

                        else if ( (LA226_0==A_1) && (synpred24_InternalDialogParser())) {s = 5;}

                        else if ( (LA226_0==An) && (synpred24_InternalDialogParser())) {s = 6;}

                        else if ( (LA226_0==An_1) && (synpred24_InternalDialogParser())) {s = 7;}

                        else if ( (LA226_0==Any) && (synpred24_InternalDialogParser())) {s = 8;}

                        else if ( (LA226_0==Some) && (synpred24_InternalDialogParser())) {s = 9;}

                        else if ( (LA226_0==Another) && (synpred24_InternalDialogParser())) {s = 10;}

                        else if ( (LA226_0==The) && (synpred24_InternalDialogParser())) {s = 11;}

                        else if ( (LA226_0==The_1) && (synpred24_InternalDialogParser())) {s = 12;}

                        else if ( (LA226_0==RULE_STRING) && (synpred24_InternalDialogParser())) {s = 13;}

                        else if ( (LA226_0==RULE_NUMBER) && (synpred24_InternalDialogParser())) {s = 14;}

                        else if ( (LA226_0==True) && (synpred24_InternalDialogParser())) {s = 15;}

                        else if ( (LA226_0==False) && (synpred24_InternalDialogParser())) {s = 16;}

                        else if ( (LA226_0==PI) && (synpred24_InternalDialogParser())) {s = 17;}

                        else if ( (LA226_0==Known) && (synpred24_InternalDialogParser())) {s = 18;}

                        else if ( (LA226_0==E_1) && (synpred24_InternalDialogParser())) {s = 19;}

                        else if ( (LA226_0==HyphenMinusHyphenMinus) && (synpred24_InternalDialogParser())) {s = 20;}

                        else if ( (LA226_0==None) && (synpred24_InternalDialogParser())) {s = 21;}

                        else if ( (LA226_0==Type) && (synpred24_InternalDialogParser())) {s = 22;}

                        else if ( (LA226_0==Length) && (synpred24_InternalDialogParser())) {s = 23;}

                        else if ( (LA226_0==Count) && (synpred24_InternalDialogParser())) {s = 24;}

                        else if ( (LA226_0==Index) && (synpred24_InternalDialogParser())) {s = 25;}

                        else if ( (LA226_0==First) && (synpred24_InternalDialogParser())) {s = 26;}

                        else if ( (LA226_0==Last) && (synpred24_InternalDialogParser())) {s = 27;}

                        else if ( (LA226_0==Value) && (synpred24_InternalDialogParser())) {s = 28;}

                        else if ( (LA226_0==LeftSquareBracket) && (synpred24_InternalDialogParser())) {s = 29;}

                        else if ( (LA226_0==LeftCurlyBracket) && (synpred24_InternalDialogParser())) {s = 30;}

                        else if ( (LA226_0==Not) && (synpred24_InternalDialogParser())) {s = 31;}

                        else if ( (LA226_0==ExclamationMark) && (synpred24_InternalDialogParser())) {s = 32;}

                        else if ( (LA226_0==Only) && (synpred24_InternalDialogParser())) {s = 33;}

                        else if ( (LA226_0==HyphenMinus) ) {s = 34;}

                        else if ( (LA226_0==There) && (synpred24_InternalDialogParser())) {s = 35;}

                        else if ( (LA226_0==Element) && (synpred24_InternalDialogParser())) {s = 36;}

                        else if ( (LA226_0==EOF||LA226_0==Contains||LA226_0==Matching||LA226_0==Order||LA226_0==Does||LA226_0==With||LA226_0==And||LA226_0==Has||(LA226_0>=ExclamationMarkEqualsSign && LA226_0<=AmpersandAmpersand)||(LA226_0>=LessThanSignEqualsSign && LA226_0<=EqualsSignEqualsSign)||LA226_0==GreaterThanSignEqualsSign||LA226_0==Is||LA226_0==Or||LA226_0==VerticalLineVerticalLine||LA226_0==PercentSign||(LA226_0>=RightParenthesis && LA226_0<=Comma)||LA226_0==Solidus||(LA226_0>=LessThanSign && LA226_0<=GreaterThanSign)||(LA226_0>=RightSquareBracket && LA226_0<=CircumflexAccent)) ) {s = 37;}

                         
                        input.seek(index226_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA226_2 = input.LA(1);

                         
                        int index226_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index226_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA226_3 = input.LA(1);

                         
                        int index226_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index226_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA226_34 = input.LA(1);

                         
                        int index226_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index226_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 226, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_61s = {
            "\1\45\4\uffff\1\45\1\uffff\1\12\5\uffff\1\44\27\uffff\1\27\20\uffff\1\30\1\20\1\uffff\1\32\4\uffff\1\31\1\22\3\uffff\1\45\3\uffff\1\43\3\uffff\1\34\2\uffff\1\25\6\uffff\1\45\3\uffff\1\33\5\uffff\1\41\1\uffff\1\11\2\uffff\1\17\1\26\6\uffff\1\13\1\45\1\10\5\uffff\1\45\2\uffff\1\37\1\uffff\1\14\1\uffff\2\45\1\24\2\45\1\uffff\1\45\1\6\1\21\1\7\6\uffff\1\45\1\uffff\1\45\1\uffff\1\45\1\40\1\45\1\1\4\45\1\42\1\uffff\1\45\1\uffff\3\45\1\uffff\1\4\1\uffff\1\35\1\uffff\1\45\1\5\1\23\1\36\1\uffff\1\16\1\uffff\1\3\1\2\1\15",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_61 = unpackEncodedStringArray(dfa_61s);

    class DFA233 extends DFA {

        public DFA233(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 233;
            this.eot = dfa_47;
            this.eof = dfa_47;
            this.min = dfa_49;
            this.max = dfa_50;
            this.accept = dfa_51;
            this.special = dfa_52;
            this.transition = dfa_61;
        }
        public String getDescription() {
            return "9800:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_8_0= norm2_ElementInList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA233_0 = input.LA(1);

                         
                        int index233_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA233_0==LeftParenthesis) && (synpred27_InternalDialogParser())) {s = 1;}

                        else if ( (LA233_0==RULE_QNAME_TERMINAL) ) {s = 2;}

                        else if ( (LA233_0==RULE_ID) ) {s = 3;}

                        else if ( (LA233_0==A) && (synpred27_InternalDialogParser())) {s = 4;}

                        else if ( (LA233_0==A_1) && (synpred27_InternalDialogParser())) {s = 5;}

                        else if ( (LA233_0==An) && (synpred27_InternalDialogParser())) {s = 6;}

                        else if ( (LA233_0==An_1) && (synpred27_InternalDialogParser())) {s = 7;}

                        else if ( (LA233_0==Any) && (synpred27_InternalDialogParser())) {s = 8;}

                        else if ( (LA233_0==Some) && (synpred27_InternalDialogParser())) {s = 9;}

                        else if ( (LA233_0==Another) && (synpred27_InternalDialogParser())) {s = 10;}

                        else if ( (LA233_0==The) && (synpred27_InternalDialogParser())) {s = 11;}

                        else if ( (LA233_0==The_1) && (synpred27_InternalDialogParser())) {s = 12;}

                        else if ( (LA233_0==RULE_STRING) && (synpred27_InternalDialogParser())) {s = 13;}

                        else if ( (LA233_0==RULE_NUMBER) && (synpred27_InternalDialogParser())) {s = 14;}

                        else if ( (LA233_0==True) && (synpred27_InternalDialogParser())) {s = 15;}

                        else if ( (LA233_0==False) && (synpred27_InternalDialogParser())) {s = 16;}

                        else if ( (LA233_0==PI) && (synpred27_InternalDialogParser())) {s = 17;}

                        else if ( (LA233_0==Known) && (synpred27_InternalDialogParser())) {s = 18;}

                        else if ( (LA233_0==E_1) && (synpred27_InternalDialogParser())) {s = 19;}

                        else if ( (LA233_0==HyphenMinusHyphenMinus) && (synpred27_InternalDialogParser())) {s = 20;}

                        else if ( (LA233_0==None) && (synpred27_InternalDialogParser())) {s = 21;}

                        else if ( (LA233_0==Type) && (synpred27_InternalDialogParser())) {s = 22;}

                        else if ( (LA233_0==Length) && (synpred27_InternalDialogParser())) {s = 23;}

                        else if ( (LA233_0==Count) && (synpred27_InternalDialogParser())) {s = 24;}

                        else if ( (LA233_0==Index) && (synpred27_InternalDialogParser())) {s = 25;}

                        else if ( (LA233_0==First) && (synpred27_InternalDialogParser())) {s = 26;}

                        else if ( (LA233_0==Last) && (synpred27_InternalDialogParser())) {s = 27;}

                        else if ( (LA233_0==Value) && (synpred27_InternalDialogParser())) {s = 28;}

                        else if ( (LA233_0==LeftSquareBracket) && (synpred27_InternalDialogParser())) {s = 29;}

                        else if ( (LA233_0==LeftCurlyBracket) && (synpred27_InternalDialogParser())) {s = 30;}

                        else if ( (LA233_0==Not) && (synpred27_InternalDialogParser())) {s = 31;}

                        else if ( (LA233_0==ExclamationMark) && (synpred27_InternalDialogParser())) {s = 32;}

                        else if ( (LA233_0==Only) && (synpred27_InternalDialogParser())) {s = 33;}

                        else if ( (LA233_0==HyphenMinus) ) {s = 34;}

                        else if ( (LA233_0==There) && (synpred27_InternalDialogParser())) {s = 35;}

                        else if ( (LA233_0==Element) && (synpred27_InternalDialogParser())) {s = 36;}

                        else if ( (LA233_0==Contains||LA233_0==Matching||LA233_0==Order||LA233_0==Does||LA233_0==And||LA233_0==Has||(LA233_0>=ExclamationMarkEqualsSign && LA233_0<=AmpersandAmpersand)||(LA233_0>=LessThanSignEqualsSign && LA233_0<=EqualsSignEqualsSign)||LA233_0==GreaterThanSignEqualsSign||LA233_0==Is||LA233_0==Or||LA233_0==VerticalLineVerticalLine||LA233_0==PercentSign||(LA233_0>=RightParenthesis && LA233_0<=Comma)||LA233_0==Solidus||(LA233_0>=LessThanSign && LA233_0<=GreaterThanSign)||LA233_0==CircumflexAccent) ) {s = 37;}

                         
                        input.seek(index233_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA233_2 = input.LA(1);

                         
                        int index233_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index233_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA233_3 = input.LA(1);

                         
                        int index233_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index233_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA233_34 = input.LA(1);

                         
                        int index233_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index233_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 233, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_62s = "\1\11\11\uffff";
    static final String dfa_63s = "\1\34\11\uffff";
    static final String dfa_64s = "\1\u00c7\11\uffff";
    static final String dfa_65s = "\1\uffff\10\1\1\2";
    static final String dfa_66s = "\1\0\11\uffff}>";
    static final String[] dfa_67s = {
            "\1\11\4\uffff\1\11\36\uffff\1\11\1\uffff\1\11\34\uffff\1\11\10\uffff\1\11\10\uffff\1\11\21\uffff\1\5\5\uffff\1\11\5\uffff\1\2\1\6\6\uffff\2\11\1\uffff\2\11\1\uffff\1\11\10\uffff\1\3\1\11\1\1\1\11\1\uffff\1\11\1\uffff\1\11\1\uffff\3\11\1\4\3\11\1\uffff\4\11\4\uffff\1\11\6\uffff\1\10\1\7",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final char[] dfa_64 = DFA.unpackEncodedStringToUnsignedChars(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[][] dfa_67 = unpackEncodedStringArray(dfa_67s);

    class DFA243 extends DFA {

        public DFA243(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 243;
            this.eot = dfa_22;
            this.eof = dfa_62;
            this.min = dfa_63;
            this.max = dfa_64;
            this.accept = dfa_65;
            this.special = dfa_66;
            this.transition = dfa_67;
        }
        public String getDescription() {
            return "9845:3: ( ( Of | For | In | Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( ( () ( ( (lv_of_2_1= Of | lv_of_2_2= For | lv_of_2_3= In ) ) ) ( (lv_right_3_0= norm3_PropOfSubject ) ) ) | ( ( Comma | With | Has | RULE_QNAME_TERMINAL | RULE_ID )=> ( () ( (lv_comma_5_0= Comma ) )? (otherlv_6= With | otherlv_7= Has )? ( (lv_prop_8_0= ruleSadlResource ) ) ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )? ) )+ ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA243_0 = input.LA(1);

                         
                        int index243_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA243_0==Of) && (synpred28_InternalDialogParser())) {s = 1;}

                        else if ( (LA243_0==For) && (synpred28_InternalDialogParser())) {s = 2;}

                        else if ( (LA243_0==In) && (synpred28_InternalDialogParser())) {s = 3;}

                        else if ( (LA243_0==Comma) && (synpred28_InternalDialogParser())) {s = 4;}

                        else if ( (LA243_0==With) && (synpred28_InternalDialogParser())) {s = 5;}

                        else if ( (LA243_0==Has) && (synpred28_InternalDialogParser())) {s = 6;}

                        else if ( (LA243_0==RULE_QNAME_TERMINAL) && (synpred28_InternalDialogParser())) {s = 7;}

                        else if ( (LA243_0==RULE_ID) && (synpred28_InternalDialogParser())) {s = 8;}

                        else if ( (LA243_0==EOF||LA243_0==Contains||LA243_0==Matching||LA243_0==Insert||LA243_0==Return||LA243_0==Order||LA243_0==Where||LA243_0==Does||LA243_0==And||(LA243_0>=ExclamationMarkEqualsSign && LA243_0<=AmpersandAmpersand)||(LA243_0>=LessThanSignEqualsSign && LA243_0<=EqualsSignEqualsSign)||LA243_0==GreaterThanSignEqualsSign||LA243_0==Is||LA243_0==Or||LA243_0==VerticalLineVerticalLine||LA243_0==PercentSign||(LA243_0>=RightParenthesis && LA243_0<=PlusSign)||(LA243_0>=HyphenMinus && LA243_0<=Solidus)||(LA243_0>=LessThanSign && LA243_0<=QuestionMark)||LA243_0==CircumflexAccent) ) {s = 9;}

                         
                        input.seek(index243_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 243, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_68s = "\104\uffff";
    static final String dfa_69s = "\1\45\103\uffff";
    static final String dfa_70s = "\1\34\1\uffff\2\0\36\uffff\1\0\41\uffff";
    static final String dfa_71s = "\1\u00c8\1\uffff\2\0\36\uffff\1\0\41\uffff";
    static final String dfa_72s = "\1\uffff\1\1\2\uffff\36\1\1\uffff\2\1\1\2\36\uffff";
    static final String dfa_73s = "\1\0\1\uffff\1\1\1\2\36\uffff\1\3\41\uffff}>";
    static final String[] dfa_74s = {
            "\1\45\4\uffff\1\45\1\uffff\1\12\5\uffff\1\44\26\uffff\1\45\1\27\1\45\17\uffff\1\30\1\20\1\uffff\1\32\4\uffff\1\31\1\22\3\uffff\1\45\3\uffff\1\43\3\uffff\1\34\1\45\1\uffff\1\25\6\uffff\1\45\3\uffff\1\33\5\uffff\1\41\1\uffff\1\11\2\uffff\1\17\1\26\1\uffff\1\45\4\uffff\1\13\1\45\1\10\5\uffff\1\45\2\uffff\1\37\1\uffff\1\14\1\uffff\2\45\1\24\2\45\1\uffff\1\45\1\6\1\21\1\7\6\uffff\1\45\1\uffff\1\45\1\uffff\1\45\1\40\1\45\1\1\4\45\1\42\2\45\1\uffff\4\45\1\4\1\uffff\1\35\1\uffff\1\45\1\5\1\23\1\36\1\uffff\1\16\1\uffff\1\3\1\2\1\15",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[][] dfa_74 = unpackEncodedStringArray(dfa_74s);

    class DFA240 extends DFA {

        public DFA240(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 240;
            this.eot = dfa_68;
            this.eof = dfa_69;
            this.min = dfa_70;
            this.max = dfa_71;
            this.accept = dfa_72;
            this.special = dfa_73;
            this.transition = dfa_74;
        }
        public String getDescription() {
            return "9969:7: ( ( LeftParenthesis | A | A_1 | An | An_1 | Any | Some | Another | The | The_1 | True | False | PI | Known | E_1 | HyphenMinusHyphenMinus | None | Type | Length | Count | Index | First | Last | Value | LeftSquareBracket | LeftCurlyBracket | Not | ExclamationMark | Only | HyphenMinus | There | Element | RULE_QNAME_TERMINAL | RULE_ID | RULE_STRING | RULE_NUMBER )=> (lv_right_9_0= norm3_ElementInList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA240_0 = input.LA(1);

                         
                        int index240_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA240_0==LeftParenthesis) && (synpred30_InternalDialogParser())) {s = 1;}

                        else if ( (LA240_0==RULE_QNAME_TERMINAL) ) {s = 2;}

                        else if ( (LA240_0==RULE_ID) ) {s = 3;}

                        else if ( (LA240_0==A) && (synpred30_InternalDialogParser())) {s = 4;}

                        else if ( (LA240_0==A_1) && (synpred30_InternalDialogParser())) {s = 5;}

                        else if ( (LA240_0==An) && (synpred30_InternalDialogParser())) {s = 6;}

                        else if ( (LA240_0==An_1) && (synpred30_InternalDialogParser())) {s = 7;}

                        else if ( (LA240_0==Any) && (synpred30_InternalDialogParser())) {s = 8;}

                        else if ( (LA240_0==Some) && (synpred30_InternalDialogParser())) {s = 9;}

                        else if ( (LA240_0==Another) && (synpred30_InternalDialogParser())) {s = 10;}

                        else if ( (LA240_0==The) && (synpred30_InternalDialogParser())) {s = 11;}

                        else if ( (LA240_0==The_1) && (synpred30_InternalDialogParser())) {s = 12;}

                        else if ( (LA240_0==RULE_STRING) && (synpred30_InternalDialogParser())) {s = 13;}

                        else if ( (LA240_0==RULE_NUMBER) && (synpred30_InternalDialogParser())) {s = 14;}

                        else if ( (LA240_0==True) && (synpred30_InternalDialogParser())) {s = 15;}

                        else if ( (LA240_0==False) && (synpred30_InternalDialogParser())) {s = 16;}

                        else if ( (LA240_0==PI) && (synpred30_InternalDialogParser())) {s = 17;}

                        else if ( (LA240_0==Known) && (synpred30_InternalDialogParser())) {s = 18;}

                        else if ( (LA240_0==E_1) && (synpred30_InternalDialogParser())) {s = 19;}

                        else if ( (LA240_0==HyphenMinusHyphenMinus) && (synpred30_InternalDialogParser())) {s = 20;}

                        else if ( (LA240_0==None) && (synpred30_InternalDialogParser())) {s = 21;}

                        else if ( (LA240_0==Type) && (synpred30_InternalDialogParser())) {s = 22;}

                        else if ( (LA240_0==Length) && (synpred30_InternalDialogParser())) {s = 23;}

                        else if ( (LA240_0==Count) && (synpred30_InternalDialogParser())) {s = 24;}

                        else if ( (LA240_0==Index) && (synpred30_InternalDialogParser())) {s = 25;}

                        else if ( (LA240_0==First) && (synpred30_InternalDialogParser())) {s = 26;}

                        else if ( (LA240_0==Last) && (synpred30_InternalDialogParser())) {s = 27;}

                        else if ( (LA240_0==Value) && (synpred30_InternalDialogParser())) {s = 28;}

                        else if ( (LA240_0==LeftSquareBracket) && (synpred30_InternalDialogParser())) {s = 29;}

                        else if ( (LA240_0==LeftCurlyBracket) && (synpred30_InternalDialogParser())) {s = 30;}

                        else if ( (LA240_0==Not) && (synpred30_InternalDialogParser())) {s = 31;}

                        else if ( (LA240_0==ExclamationMark) && (synpred30_InternalDialogParser())) {s = 32;}

                        else if ( (LA240_0==Only) && (synpred30_InternalDialogParser())) {s = 33;}

                        else if ( (LA240_0==HyphenMinus) ) {s = 34;}

                        else if ( (LA240_0==There) && (synpred30_InternalDialogParser())) {s = 35;}

                        else if ( (LA240_0==Element) && (synpred30_InternalDialogParser())) {s = 36;}

                        else if ( (LA240_0==EOF||LA240_0==Contains||LA240_0==Matching||LA240_0==Insert||LA240_0==Return||LA240_0==Order||LA240_0==Where||LA240_0==Does||LA240_0==With||LA240_0==And||LA240_0==Has||(LA240_0>=ExclamationMarkEqualsSign && LA240_0<=AmpersandAmpersand)||(LA240_0>=LessThanSignEqualsSign && LA240_0<=EqualsSignEqualsSign)||LA240_0==GreaterThanSignEqualsSign||LA240_0==Is||LA240_0==Or||LA240_0==VerticalLineVerticalLine||LA240_0==PercentSign||(LA240_0>=RightParenthesis && LA240_0<=Comma)||(LA240_0>=FullStop && LA240_0<=Solidus)||(LA240_0>=LessThanSign && LA240_0<=QuestionMark)||LA240_0==CircumflexAccent) ) {s = 37;}

                         
                        input.seek(index240_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA240_2 = input.LA(1);

                         
                        int index240_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index240_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA240_3 = input.LA(1);

                         
                        int index240_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index240_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA240_34 = input.LA(1);

                         
                        int index240_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred30_InternalDialogParser()) ) {s = 36;}

                        else if ( (true) ) {s = 37;}

                         
                        input.seek(index240_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 240, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_75s = "\35\uffff";
    static final String dfa_76s = "\1\43\2\uffff\11\4\5\uffff\13\4\1\uffff";
    static final String dfa_77s = "\1\u00c8\2\uffff\11\u00c7\5\uffff\13\u00c7\1\uffff";
    static final String dfa_78s = "\1\uffff\1\1\1\2\11\uffff\1\4\1\5\1\6\1\7\1\10\13\uffff\1\3";
    static final String dfa_79s = "\35\uffff}>";
    static final String[] dfa_80s = {
            "\1\11\35\uffff\1\17\20\uffff\1\17\1\16\1\uffff\1\17\4\uffff\2\17\13\uffff\1\17\2\uffff\1\17\12\uffff\1\17\7\uffff\1\10\2\uffff\1\16\1\17\6\uffff\1\12\1\uffff\1\7\12\uffff\1\13\3\uffff\1\17\4\uffff\1\5\1\17\1\6\15\uffff\1\1\14\uffff\1\3\1\uffff\1\20\2\uffff\1\4\1\17\1\20\1\uffff\1\15\1\uffff\2\2\1\14",
            "",
            "",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\6\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\6\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\1\uffff\1\17\20\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\6\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\6\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\6\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\6\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\4\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\6\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\2\uffff\1\17\1\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\2\uffff\1\17\3\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\3\uffff\1\30\7\uffff\1\34\2\uffff\1\34\1\31\1\uffff\1\25\1\34\2\uffff\1\17\1\uffff\1\22\2\uffff\1\34\15\uffff\1\26\1\21\2\34\2\uffff\1\17\3\uffff\1\32\1\uffff\1\23\1\27\1\33\1\uffff\1\24\10\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "",
            "",
            "",
            "",
            "",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\25\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\25\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\25\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\25\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\25\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\25\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\25\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\25\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\25\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\25\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            "\6\34\1\uffff\1\34\1\uffff\1\34\2\uffff\1\34\4\uffff\2\34\6\uffff\1\34\2\uffff\1\34\3\uffff\1\34\2\uffff\1\34\1\uffff\1\17\1\uffff\1\34\13\uffff\1\34\2\uffff\1\34\3\uffff\1\34\7\uffff\1\34\17\uffff\2\34\25\uffff\1\34\1\uffff\1\34\3\uffff\1\34\2\uffff\1\34\10\uffff\1\34\22\uffff\1\34\33\uffff\1\34\23\uffff\1\34\3\uffff\2\34",
            ""
    };

    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final char[] dfa_77 = DFA.unpackEncodedStringToUnsignedChars(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final short[][] dfa_80 = unpackEncodedStringArray(dfa_80s);

    class DFA270 extends DFA {

        public DFA270(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 270;
            this.eot = dfa_75;
            this.eof = dfa_75;
            this.min = dfa_76;
            this.max = dfa_77;
            this.accept = dfa_78;
            this.special = dfa_79;
            this.transition = dfa_80;
        }
        public String getDescription() {
            return "11050:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= ruleSelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )";
        }
    }

    class DFA277 extends DFA {

        public DFA277(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 277;
            this.eot = dfa_75;
            this.eof = dfa_75;
            this.min = dfa_76;
            this.max = dfa_77;
            this.accept = dfa_78;
            this.special = dfa_79;
            this.transition = dfa_80;
        }
        public String getDescription() {
            return "11424:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm1_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )";
        }
    }

    class DFA284 extends DFA {

        public DFA284(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 284;
            this.eot = dfa_75;
            this.eof = dfa_75;
            this.min = dfa_76;
            this.max = dfa_77;
            this.accept = dfa_78;
            this.special = dfa_79;
            this.transition = dfa_80;
        }
        public String getDescription() {
            return "11798:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm2_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )";
        }
    }

    class DFA291 extends DFA {

        public DFA291(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 291;
            this.eot = dfa_75;
            this.eof = dfa_75;
            this.min = dfa_76;
            this.max = dfa_77;
            this.accept = dfa_78;
            this.special = dfa_79;
            this.transition = dfa_80;
        }
        public String getDescription() {
            return "12172:2: ( (otherlv_0= LeftParenthesis this_SelectExpression_1= norm3_SelectExpression otherlv_2= RightParenthesis ) | this_Name_3= ruleName | ( () ( (lv_article_5_0= ruleAnArticle ) ) ( (lv_ordinal_6_0= ruleOrdinal ) )? ( (lv_type_7_0= ruleSadlPrimaryTypeReference ) ) ( (otherlv_8= LeftSquareBracket ( (lv_arglist_9_0= ruleNestedExpression ) )? (otherlv_10= Comma ( (lv_arglist_11_0= ruleNestedExpression ) ) )* otherlv_12= RightSquareBracket ) | (otherlv_13= Length ( (lv_len_14_0= ruleFacetNumber ) ) ( ( HyphenMinus )=> (otherlv_15= HyphenMinus ( ( (lv_maxlen_16_1= ruleFacetNumber | lv_maxlen_16_2= Asterisk ) ) ) ) )? ) )? ) | ( () ( (lv_value_18_0= RULE_STRING ) ) ) | ( () ( (lv_value_20_0= ruleAnyNumber ) ) ) | ( () ( (lv_value_22_0= ruleBooleanValue ) ) ) | ( () ( (lv_constant_24_0= ruleConstants ) ) ) | ( () ( (lv_valueTable_26_0= ruleValueTable ) ) ) )";
        }
    }
    static final String dfa_81s = "\17\uffff";
    static final String dfa_82s = "\1\43\5\uffff\1\51\1\uffff\2\51\5\uffff";
    static final String dfa_83s = "\1\u00c1\5\uffff\1\u0081\1\uffff\2\144\5\uffff";
    static final String dfa_84s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\uffff\1\6\2\uffff\1\7\1\10\1\11\1\12\1\13";
    static final String dfa_85s = "\17\uffff}>";
    static final String[] dfa_86s = {
            "\1\15\35\uffff\1\12\20\uffff\1\13\2\uffff\1\15\4\uffff\1\14\1\2\13\uffff\1\16\2\uffff\1\5\12\uffff\1\15\7\uffff\1\15\3\uffff\1\7\6\uffff\1\10\1\uffff\1\15\12\uffff\1\11\3\uffff\1\4\4\uffff\1\15\1\1\1\15\32\uffff\1\15\4\uffff\1\6\1\3",
            "",
            "",
            "",
            "",
            "",
            "\1\15\5\uffff\1\15\13\uffff\1\15\1\uffff\1\15\5\uffff\1\15\20\uffff\2\15\10\uffff\1\15\1\uffff\3\15\1\uffff\1\15\34\uffff\1\7",
            "",
            "\1\15\5\uffff\1\15\13\uffff\1\15\1\uffff\1\15\3\uffff\1\12\1\uffff\1\15\20\uffff\2\15\4\uffff\1\14\3\uffff\1\15\1\uffff\3\15\1\uffff\1\15",
            "\1\15\5\uffff\1\15\13\uffff\1\15\1\uffff\1\15\3\uffff\1\12\1\uffff\1\15\20\uffff\2\15\4\uffff\1\14\3\uffff\1\15\1\uffff\3\15\1\uffff\1\15",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[][] dfa_86 = unpackEncodedStringArray(dfa_86s);

    class DFA304 extends DFA {

        public DFA304(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 304;
            this.eot = dfa_81;
            this.eof = dfa_81;
            this.min = dfa_82;
            this.max = dfa_83;
            this.accept = dfa_84;
            this.special = dfa_85;
            this.transition = dfa_86;
        }
        public String getDescription() {
            return "12812:2: (kw= PI | kw= Known | kw= E_1 | kw= HyphenMinusHyphenMinus | kw= None | ( (kw= A_1 )? kw= Type ) | ( (this_DefiniteArticle_7= ruleDefiniteArticle )? kw= Length ) | kw= Count | ( (this_DefiniteArticle_10= ruleDefiniteArticle )? kw= Index ) | ( (kw= First | kw= Last | (this_AnArticle_14= ruleAnArticle (this_Ordinal_15= ruleOrdinal )? ) ) kw= Element ) | kw= Value )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0410000000000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x000000080A000400L,0x2000000000000000L,0x0800000140200500L,0x00000000000001C5L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0002020800040000L,0x282004880C2C0012L,0x28085001C2282503L,0x00000000000001D7L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000100L,0x0000008000000002L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000800000000L,0x2000000000000000L,0x0800000140200500L,0x00000000000000C1L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000100L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000000L,0x0200000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x4480089920612BF0L,0xA048A00000C00040L,0x0800400140240500L,0x00000000000000C5L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000010000004000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0004000000000000L,0x0000000000010000L,0x0414400000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0004000000000000L,0x0000000000000000L,0x0414400000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0414400000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x8000000000000002L,0x0000100002000400L,0x00000000000220E4L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000002L,0x0000100002000400L,0x00000000000220E4L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0400000000010000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0004800000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0410000200000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0002020800040002L,0x282005880C2C0016L,0x28085001C2282503L,0x00000000000001D7L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000004L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000200000000002L,0x0000010000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x4480089920612BF0L,0xA048A00000C00040L,0x0800C00142240510L,0x00000000000000C5L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x4480089920612BF0L,0xA048A00000C00040L,0x0800400142240510L,0x00000000000000C5L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x4480089920612BF0L,0xA048A40000C00040L,0x0800400142240500L,0x00000000000000C5L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0044000000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0040000000100002L,0x0A00000000000000L,0x2004018000014208L,0x00000000000000C0L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000001000000L,0x0000000000020000L,0x0000000000000002L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0040000000180002L,0x0A00000000000000L,0x0004018000014008L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0040000000180002L,0x0A00000000000002L,0x2004418000014008L,0x0000000000000104L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000080002L,0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0040000000100000L,0x0A00000000000000L,0x0004018000014008L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0040000000100002L,0x0A00000000000000L,0x0004018000014008L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x4480089920612BF0L,0xA048A00000C00040L,0x08004001402C0500L,0x00000000000000C5L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000800000000L,0x2000000000000000L,0x0800000140200500L,0x0000000000000001L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x2004018000010008L,0x00000000000000C0L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0004018000010008L,0x00000000000000C0L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000A00L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000002041800000L,0x0000002000000000L,0x0000000000280000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0040000000000000L,0x0800000000000000L,0x0000000000010008L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000010008L,0x00000000000000C0L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000000008080000L,0x2008400080080001L,0x00000000000001D2L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0004400000000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000C000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x4008800000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x4000800000000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0008000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0009000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0008000000000000L,0x0000000000000110L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000C000000000000L,0x0000000000000118L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x4480089920612BF0L,0xA048E00000C20040L,0x0800400140240500L,0x00000000000000C5L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L,0x2000400000000000L,0x0000000000000104L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000010000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000000L,0x0000000008080000L,0x2008000080080001L,0x00000000000001D2L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0001000000000002L,0x0000008000000000L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000010008L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000040000000000L,0x0000000000000000L,0x0000000400100000L,0x0000000000000010L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000000L,0x0100000010000000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000000L,0x0000000008080000L,0x2000000080000001L,0x00000000000001D2L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000140L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000000L,0x0000000008080000L,0x6008000080080001L,0x00000000000001D2L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x4004000000000000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0002020800040000L,0x282044880C2C0012L,0x28085001C2282503L,0x00000000000001D7L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000001L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000080000000L,0x0000000000000000L,0x0001000000000000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0001000000000000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L,0x0004000000000000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0002020800000000L,0x282004880C2C0002L,0x28085001C2280503L,0x00000000000001D7L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L,0x0000000000001000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000002L,0x0001000000000000L,0x0004000000001000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x00000A0000000000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000001000200L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000010000002L,0x0002000000000000L,0x0100008008800000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L,0x0000000000080000L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0280000024000000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x000A000000000000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0021200000000000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x8000000000000000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000014000018000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0002020800000002L,0x282004880C2C0002L,0x28085001C2290503L,0x00000000000001D7L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000010000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000014000018008L,0x00000000000000C0L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0002020800000002L,0x282004880C2C0002L,0x28085001C229050BL,0x00000000000001D7L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000010008L,0x00000000000000C0L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0004014000018000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000010000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0002020800000002L,0x282004880C2C0002L,0x280C5001C2290503L,0x00000000000001D7L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0004000000010000L,0x00000000000000C0L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0004014000018008L,0x00000000000000C0L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0002020800040002L,0x282004880C2C0012L,0x280C5001C229250BL,0x00000000000001D7L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0004000000010008L,0x00000000000000C0L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0100000800000000L,0x282004880C2C8002L,0x28085001C2280503L,0x00000000000001D7L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000000800000000L,0x282004880C2C0002L,0x28085001C2280503L,0x00000000000001D7L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000000800000000L,0x202004800C2C0002L,0x28004001C2200503L,0x00000000000001D7L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0002020800000000L,0x282004880C2C0012L,0x28085001C2280503L,0x00000000000001D7L});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x6C80889920612BF0L,0xA048A01740F00048L,0x0800400140240500L,0x00000000000000C5L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L,0x2000000000000000L});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0002020800000000L,0x282004880C2C0012L,0x680C5001C2280503L,0x00000000000001D7L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0002020800000000L,0x282004880C2C0012L,0x280CD001C2280503L,0x00000000000001D7L});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x2004000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x2800820000000000L,0x0000001740300008L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x1000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000A000000000000L,0x0000000000000010L});

}
